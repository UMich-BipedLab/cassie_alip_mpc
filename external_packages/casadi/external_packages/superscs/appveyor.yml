clone_depth: 10

clone_folder: c:\projects\scs

environment:
  global:
    CMD_IN_ENV: "cmd /E:ON /V:ON /C .\\appveyor\\run_with_env.cmd"
  matrix:

    # NOTE: The following two environments used to work just fine, but one 
    #       started giving weird errors...

    #- platform: x64
    #  ARCH: 64
    #  PYTHON: "C:\\Python27-x64"
    #  PYTHON_VERSION: "2.7.x"
    #  PYTHON_ARCH: "64"
    #  BINPATH: C:\msys64\mingw64\bin
    #  OPENBLAS: https://3f23b170c54c2533c070-1c8a9b3114517dc5fe17b7c3f8c63a43.ssl.cf2.rackcdn.com/openblas-5f998ef_gcc7_1_0_win64.zip
      
    #- platform: x64
    #  ARCH: 64
    #  PYTHON: "C:\\Python34-x64"
    #  PYTHON_VERSION: "3.4.x"
    #  PYTHON_ARCH: "64"
    #  BINPATH: C:\msys64\mingw64\bin
    #  OPENBLAS: https://3f23b170c54c2533c070-1c8a9b3114517dc5fe17b7c3f8c63a43.ssl.cf2.rackcdn.com/openblas-5f998ef_gcc7_1_0_win64.zip  
      
    - platform: x86
      ARCH: 32
      PYTHON: "C:\\Python27"
      PYTHON_VERSION: "2.7.x"
      PYTHON_ARCH: "32"
      BINPATH: C:\MinGw\bin;C:\msys64\mingw32\bin
      OPENBLAS: https://3f23b170c54c2533c070-1c8a9b3114517dc5fe17b7c3f8c63a43.ssl.cf2.rackcdn.com/openblas-5f998ef_gcc7_1_0_win32.zip
      
install:
  - ps: (new-object System.Net.WebClient).DownloadFile($env:OPENBLAS, 'c:\openblas.zip')
  - ps: Expand-Archive c:\openblas.zip c:\projects\openblas
  - ps: if ($env:APPVEYOR_PULL_REQUEST_NUMBER -and $env:APPVEYOR_BUILD_NUMBER -ne ((Invoke-RestMethod `
        https://ci.appveyor.com/api/projects/$env:APPVEYOR_ACCOUNT_NAME/$env:APPVEYOR_PROJECT_SLUG/history?recordsNumber=50).builds | `
        Where-Object pullRequestId -eq $env:APPVEYOR_PULL_REQUEST_NUMBER)[0].buildNumber) { `
          throw "There are newer queued builds for this pull request, failing early." }
  
  # List files and directories in C:
  - ECHO "Filesystem root:"
  - ps: "ls \"C:/\""
  
  # List installed SDKs
  - ECHO "Installed SDKs:"
  - ps: "ls \"C:/Program Files/Microsoft SDKs/Windows\""
  
  # Install Python (from the official .msi of http://python.org) and pip when
  # not already installed.
  - ps: if (-not(Test-Path($env:PYTHON))) { & appveyor\install.ps1 }

  # Prepend newly installed Python to the PATH of this build (this cannot be
  # done from inside the powershell script as it would require to restart
  # the parent CMD process).
  - "SET PATH=%PYTHON%;%PYTHON%\\Scripts;%PATH%"

  # Check that we have the expected version and architecture for Python
  - "python --version"
  - "python -c \"import struct; print(struct.calcsize('P') * 8)\""
  - set PATH=%PATH%;%BINPATH%;C:\projects\openblas\%ARCH%\bin

  # Upgrade to the latest version of pip to avoid it displaying warnings
  # about it being out of date.
  - "python -m pip install --upgrade pip"

  # Install the build dependencies of the project (numpy and scipy)
  - "pip install numpy"
  - "pip install scipy"
  - "pip install nose"

build_script:
  - cd C:\projects\scs
  - mingw32-make.exe CC="gcc.exe -m%ARCH%" USE_LAPACK=1 BLASLDFLAGS="-LC:\projects\openblas\%ARCH%\bin -lopenblas_5f998ef_gcc7_1_0"
  - cd python
  - python setup.py install
  - ls .
  - cd ..

test_script:  
  # Run SuperSCS in C
  - mingw32-make.exe profile-run CC="gcc.exe -m%ARCH%" PF=1 USE_LAPACK=1 BLASLDFLAGS="-LC:\projects\openblas\%ARCH%\bin -lopenblas_5f998ef_gcc7_1_0"
  - mingw32-make.exe profile-run CC="gcc.exe -m%ARCH%" PF=1 SCS_MEM=10 SCS_DIR=100 USE_LAPACK=1 BLASLDFLAGS="-LC:\projects\openblas\%ARCH%\bin -lopenblas_5f998ef_gcc7_1_0"
  - mingw32-make.exe profile-run CC="gcc.exe -m%ARCH%" PF=1 SCS_MEM=3 SCS_DIR=150 USE_LAPACK=1 BLASLDFLAGS="-LC:\projects\openblas\%ARCH%\bin -lopenblas_5f998ef_gcc7_1_0"
  
  # Run Python tests
#  - cd python
#  - python test_scs_basic.py
#  - python -m unittest -v test_superscs
#  - cd ..
