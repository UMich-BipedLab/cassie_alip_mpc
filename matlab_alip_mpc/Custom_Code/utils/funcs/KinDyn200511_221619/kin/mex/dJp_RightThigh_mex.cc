/*
 * Automatically Generated from Mathematica.
 * Mon 11 May 2020 22:28:21 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t1669;
  double t300;
  double t671;
  double t710;
  double t1084;
  double t1456;
  double t1791;
  double t1830;
  double t1835;
  double t1945;
  double t352;
  double t2197;
  double t2083;
  double t2298;
  double t2306;
  double t2372;
  double t2414;
  double t2502;
  double t2508;
  double t2590;
  double t2660;
  double t2664;
  double t2800;
  double t2953;
  double t2963;
  double t2979;
  double t1953;
  double t3283;
  double t3270;
  double t3335;
  double t3343;
  double t3368;
  double t3392;
  double t3394;
  double t3404;
  double t3466;
  double t3494;
  double t2916;
  double t2923;
  double t2928;
  double t3623;
  double t3643;
  double t3657;
  double t2173;
  double t2522;
  double t2624;
  double t2659;
  double t2230;
  double t2262;
  double t2285;
  double t4074;
  double t4098;
  double t4109;
  double t3979;
  double t3980;
  double t3991;
  double t2127;
  double t2180;
  double t1196;
  double t1549;
  double t1585;
  double t4336;
  double t4348;
  double t4358;
  double t4449;
  double t4477;
  double t4375;
  double t4440;
  double t1858;
  double t2019;
  double t4800;
  double t4806;
  double t4857;
  double t4876;
  double t4877;
  double t4882;
  double t4894;
  double t4914;
  double t4916;
  double t4975;
  double t4982;
  double t5002;
  double t5061;
  double t5065;
  double t5077;
  double t5225;
  double t5235;
  double t5238;
  double t5304;
  double t5324;
  double t5350;
  double t5376;
  double t5385;
  double t5400;
  double t5420;
  double t5421;
  double t5425;
  double t5685;
  double t5693;
  double t5726;
  double t5776;
  double t5803;
  double t5851;
  double t5748;
  double t5771;
  double t3141;
  double t3142;
  double t3150;
  double t3235;
  double t3252;
  double t6003;
  double t6014;
  double t6033;
  double t6061;
  double t6087;
  double t6101;
  double t6148;
  double t6150;
  double t6156;
  double t3793;
  double t3867;
  double t3932;
  double t3961;
  double t3970;
  double t6267;
  double t6269;
  double t6245;
  double t6253;
  double t5176;
  double t5178;
  double t5207;
  double t5219;
  double t5224;
  double t6411;
  double t6419;
  double t6444;
  double t5266;
  double t5270;
  double t5274;
  double t5404;
  double t5407;
  double t5417;
  double t6705;
  double t6714;
  double t6720;
  double t6734;
  double t6740;
  double t6755;
  double t6763;
  double t6764;
  double t6774;
  double t6776;
  double t6779;
  double t6780;
  double t6782;
  double t6793;
  double t6801;
  double t5520;
  double t5583;
  double t5621;
  double t1690;
  double t2100;
  double t2206;
  double t2411;
  double t2815;
  double t2835;
  double t2875;
  double t2876;
  double t2881;
  double t2981;
  double t3005;
  double t3011;
  double t3014;
  double t3052;
  double t3075;
  double t3084;
  double t3127;
  double t3128;
  double t3133;
  double t4794;
  double t5032;
  double t6927;
  double t6932;
  double t6939;
  double t6950;
  double t6954;
  double t6956;
  double t6987;
  double t6988;
  double t7062;
  double t7064;
  double t7067;
  double t7078;
  double t7081;
  double t7084;
  double t7110;
  double t7112;
  double t7113;
  double t7108;
  double t7114;
  double t7118;
  double t7121;
  double t7124;
  double t7128;
  double t7131;
  double t7139;
  double t7142;
  double t7147;
  double t7148;
  double t7153;
  double t5289;
  double t5297;
  double t5298;
  double t5368;
  double t5402;
  double t5418;
  double t5436;
  double t5456;
  double t5468;
  double t5469;
  double t5471;
  double t5636;
  double t5644;
  double t7186;
  double t7188;
  double t7190;
  double t6554;
  double t7234;
  double t7238;
  double t7243;
  double t7249;
  double t7252;
  double t7253;
  double t7269;
  double t7270;
  double t7307;
  double t7308;
  double t7316;
  double t7327;
  double t7332;
  double t7337;
  double t7401;
  double t7402;
  double t7407;
  double t7395;
  double t7397;
  double t7398;
  double t7400;
  double t7411;
  double t7413;
  double t7415;
  double t7416;
  double t7417;
  double t7425;
  double t7429;
  double t7443;
  double t7446;
  double t7462;
  double t7481;
  double t7530;
  double t7531;
  double t7541;
  double t7558;
  double t7563;
  double t7568;
  double t7592;
  double t7594;
  double t7597;
  double t7642;
  double t7643;
  double t7644;
  double t6821;
  double t6825;
  double t6842;
  double t4861;
  double t4884;
  double t4941;
  double t5020;
  double t5133;
  double t5088;
  double t7755;
  double t7756;
  double t5923;
  double t5934;
  double t5948;
  double t4288;
  double t4369;
  double t4445;
  double t4517;
  double t4564;
  double t4593;
  double t4598;
  double t4628;
  double t4643;
  double t4717;
  double t4721;
  double t4728;
  double t4735;
  double t4738;
  double t4768;
  double t7158;
  double t7164;
  double t7170;
  double t7847;
  double t7852;
  double t7854;
  double t7856;
  double t7857;
  double t7861;
  double t5731;
  double t5746;
  double t5774;
  double t5854;
  double t5873;
  double t5884;
  double t5887;
  double t5904;
  double t5911;
  double t5917;
  double t5960;
  double t5979;
  double t7898;
  double t7904;
  double t7908;
  double t7911;
  double t6561;
  double t6572;
  double t6580;
  double t6592;
  double t6604;
  double t8044;
  double t8067;
  double t8068;
  double t7513;
  double t7528;
  double t7551;
  double t7570;
  double t7624;
  double t7606;
  double t8142;
  double t8147;
  double t8150;
  double t8151;
  double t8154;
  double t8156;
  double t8159;
  double t8193;
  double t7493;
  double t7494;
  double t7498;
  double t6703;
  double t6704;
  double t6805;
  double t7747;
  double t7748;
  double t7751;
  double t7752;
  double t7753;
  double t7759;
  double t7761;
  double t7771;
  double t7781;
  double t7782;
  double t7787;
  double t7788;
  double t7790;
  double t7808;
  double t7811;
  double t6361;
  double t6362;
  double t6369;
  double t8367;
  double t8368;
  double t3923;
  double t3977;
  double t4031;
  double t4165;
  double t4167;
  double t4170;
  double t4176;
  double t4188;
  double t4198;
  double t4208;
  double t4224;
  double t4254;
  double t4266;
  double t4278;
  double t4282;
  double t7106;
  double t7107;
  double t7154;
  double t8435;
  double t8436;
  double t6218;
  double t6244;
  double t6261;
  double t6291;
  double t6314;
  double t6320;
  double t6323;
  double t6333;
  double t6343;
  double t6360;
  double t6383;
  double t6388;
  double t7895;
  double t7896;
  double t7905;
  double t7906;
  double t7907;
  double t7915;
  double t7919;
  double t7922;
  double t7927;
  double t7929;
  double t7931;
  double t7935;
  double t7937;
  double t7939;
  double t7940;
  double t8517;
  double t8518;
  double t8315;
  double t8325;
  double t8330;
  double t8600;
  double t8071;
  double t8072;
  double t8074;
  double t8099;
  double t8102;
  double t8105;
  double t8107;
  double t8114;
  double t8115;
  double t8119;
  double t8122;
  double t8124;
  double t8125;
  double t8126;
  double t8127;
  double t8128;
  double t8131;
  double t8138;
  double t8141;
  double t8208;
  double t8213;
  double t8214;
  double t7387;
  double t7392;
  double t7484;
  double t6642;
  double t6646;
  double t6665;
  double t6666;
  double t6673;
  double t6674;
  double t6675;
  double t6678;
  double t6679;
  double t6693;
  double t7680;
  double t7681;
  double t7682;
  double t7683;
  double t7684;
  double t7685;
  double t8248;
  double t8255;
  double t8256;
  double t8258;
  double t8264;
  double t8270;
  double t6178;
  double t6179;
  double t3202;
  double t3501;
  double t3675;
  double t3684;
  double t3690;
  double t3700;
  double t3773;
  double t3778;
  double t3781;
  double t3790;
  double t7061;
  double t7076;
  double t7095;
  double t7098;
  double t7099;
  double t7100;
  double t7101;
  double t7103;
  double t7104;
  double t7864;
  double t7866;
  double t7872;
  double t7882;
  double t7883;
  double t7884;
  double t8437;
  double t8438;
  double t8439;
  double t8442;
  double t8468;
  double t8473;
  double t5998;
  double t6147;
  double t6167;
  double t6171;
  double t6176;
  double t6180;
  double t6188;
  double t8725;
  double t8726;
  double t8727;
  double t8728;
  double t8729;
  double t8696;
  double t8697;
  double t8698;
  double t8746;
  double t8747;
  double t8760;
  double t8761;
  double t8764;
  double t8765;
  double t8766;
  double t8767;
  double t7571;
  double t8782;
  double t8783;
  double t7305;
  double t7318;
  double t7344;
  double t7359;
  double t7365;
  double t7369;
  double t7371;
  double t7373;
  double t7376;
  double t7384;
  double t6853;
  double t6858;
  double t6870;
  double t6874;
  double t6875;
  double t6876;
  double t6890;
  double t6900;
  double t7813;
  double t7814;
  double t7819;
  double t7820;
  double t7821;
  double t7826;
  double t7830;
  double t7831;
  double t8691;
  double t8692;
  double t8693;
  double t8694;
  double t8275;
  double t8277;
  double t8282;
  double t8283;
  double t8284;
  double t8285;
  double t8287;
  double t8289;
  double t6452;
  double t6457;
  double t6462;
  double t5190;
  double t5239;
  double t5249;
  double t5253;
  double t5254;
  double t5258;
  double t5276;
  double t5285;
  double t7183;
  double t7197;
  double t7210;
  double t7212;
  double t7214;
  double t7215;
  double t7216;
  double t7217;
  double t7223;
  double t7224;
  double t7225;
  double t7990;
  double t7992;
  double t7998;
  double t7999;
  double t8000;
  double t8012;
  double t8026;
  double t8027;
  double t8032;
  double t8033;
  double t8034;
  double t8731;
  double t8732;
  double t8733;
  double t8734;
  double t8527;
  double t8528;
  double t8541;
  double t8542;
  double t8546;
  double t8547;
  double t8554;
  double t8559;
  double t8560;
  double t8561;
  double t8562;
  double t6392;
  double t6451;
  double t6465;
  double t6467;
  double t6471;
  double t6476;
  double t6493;
  double t6510;
  double t8808;
  double t8809;
  double t8810;
  double t8829;
  double t8830;
  double t8770;
  double t8771;
  double t8773;
  double t8774;
  double t8853;
  double t8854;
  double t8855;
  double t7640;
  double t7645;
  double t7647;
  double t7648;
  double t7651;
  double t7654;
  double t7658;
  double t7660;
  double t7670;
  double t7672;
  double t7673;
  t1669 = Sin(var1[3]);
  t300 = Cos(var1[4]);
  t671 = Cos(var1[13]);
  t710 = -1.*t671;
  t1084 = 1. + t710;
  t1456 = Sin(var1[13]);
  t1791 = Cos(var1[14]);
  t1830 = -1.*t1791;
  t1835 = 1. + t1830;
  t1945 = Sin(var1[14]);
  t352 = Cos(var1[5]);
  t2197 = Sin(var1[5]);
  t2083 = Sin(var1[4]);
  t2298 = -1.*t300*t352*t1456*t1669;
  t2306 = -1.*t671*t300*t1669*t2197;
  t2372 = t2298 + t2306;
  t2414 = Cos(var1[15]);
  t2502 = -1.*t2414;
  t2508 = 1. + t2502;
  t2590 = Sin(var1[15]);
  t2660 = -1.*t671*t300*t352*t1669;
  t2664 = t300*t1456*t1669*t2197;
  t2800 = t2660 + t2664;
  t2953 = t1791*t1669*t2083;
  t2963 = t1945*t2372;
  t2979 = t2953 + t2963;
  t1953 = -0.135*t1945;
  t3283 = Cos(var1[3]);
  t3270 = -1.*t352*t1669*t2083;
  t3335 = t3283*t2197;
  t3343 = t3270 + t3335;
  t3368 = t1456*t3343;
  t3392 = -1.*t3283*t352;
  t3394 = -1.*t1669*t2083*t2197;
  t3404 = t3392 + t3394;
  t3466 = t671*t3404;
  t3494 = t3368 + t3466;
  t2916 = -0.08055*t2508;
  t2923 = -0.01004*t2590;
  t2928 = 0. + t2916 + t2923;
  t3623 = t300*t1945*t1669;
  t3643 = t1791*t3494;
  t3657 = t3623 + t3643;
  t2173 = 0.07996*t1456;
  t2522 = -0.01004*t2508;
  t2624 = 0.08055*t2590;
  t2659 = 0. + t2522 + t2624;
  t2230 = -0.135*t1835;
  t2262 = 0.08055*t1945;
  t2285 = 0. + t2230 + t2262;
  t4074 = t671*t3343;
  t4098 = -1.*t1456*t3404;
  t4109 = t4074 + t4098;
  t3979 = -1.*t1456*t3343;
  t3980 = -1.*t671*t3404;
  t3991 = t3979 + t3980;
  t2127 = -0.135*t1084;
  t2180 = 0. + t2127 + t2173;
  t1196 = 0.07996*t1084;
  t1549 = 0.135*t1456;
  t1585 = 0. + t1196 + t1549;
  t4336 = t3283*t352;
  t4348 = t1669*t2083*t2197;
  t4358 = t4336 + t4348;
  t4449 = t1456*t4358;
  t4477 = t4074 + t4449;
  t4375 = t671*t4358;
  t4440 = t3979 + t4375;
  t1858 = -0.08055*t1835;
  t2019 = 0. + t1858 + t1953;
  t4800 = -1.*t3283*t352*t2083;
  t4806 = -1.*t1669*t2197;
  t4857 = t4800 + t4806;
  t4876 = t352*t1669;
  t4877 = -1.*t3283*t2083*t2197;
  t4882 = t4876 + t4877;
  t4894 = t1456*t4857;
  t4914 = t671*t4882;
  t4916 = t4894 + t4914;
  t4975 = t671*t4857;
  t4982 = -1.*t1456*t4882;
  t5002 = t4975 + t4982;
  t5061 = -1.*t1791*t3283*t300;
  t5065 = t1945*t4916;
  t5077 = t5061 + t5065;
  t5225 = -1.*t1791*t300*t1669;
  t5235 = t1945*t3494;
  t5238 = t5225 + t5235;
  t5304 = t3283*t300*t352*t1456;
  t5324 = t671*t3283*t300*t2197;
  t5350 = t5304 + t5324;
  t5376 = t671*t3283*t300*t352;
  t5385 = -1.*t3283*t300*t1456*t2197;
  t5400 = t5376 + t5385;
  t5420 = -1.*t1791*t3283*t2083;
  t5421 = t1945*t5350;
  t5425 = t5420 + t5421;
  t5685 = t3283*t352*t2083;
  t5693 = t1669*t2197;
  t5726 = t5685 + t5693;
  t5776 = t671*t5726;
  t5803 = t1456*t4882;
  t5851 = t5776 + t5803;
  t5748 = -1.*t1456*t5726;
  t5771 = t5748 + t4914;
  t3141 = -0.135*t1791;
  t3142 = -0.08055*t1945;
  t3150 = t3141 + t3142;
  t3235 = 0.08055*t1791;
  t3252 = t3235 + t1953;
  t6003 = t1456*t5726;
  t6014 = -1.*t352*t1669;
  t6033 = t3283*t2083*t2197;
  t6061 = t6014 + t6033;
  t6087 = t671*t6061;
  t6101 = t6003 + t6087;
  t6148 = -1.*t3283*t300*t1945;
  t6150 = t1791*t6101;
  t6156 = t6148 + t6150;
  t3793 = 0.135*t671;
  t3867 = t3793 + t2173;
  t3932 = 0.07996*t671;
  t3961 = -0.135*t1456;
  t3970 = t3932 + t3961;
  t6267 = -1.*t1456*t6061;
  t6269 = t5776 + t6267;
  t6245 = -1.*t671*t6061;
  t6253 = t5748 + t6245;
  t5176 = 0.08055*t2414;
  t5178 = t5176 + t2923;
  t5207 = -0.01004*t2414;
  t5219 = -0.08055*t2590;
  t5224 = t5207 + t5219;
  t6411 = t1791*t3283*t300;
  t6419 = t1945*t6101;
  t6444 = t6411 + t6419;
  t5266 = t2414*t4109;
  t5270 = -1.*t2590*t5238;
  t5274 = t5266 + t5270;
  t5404 = t3283*t1945*t2083;
  t5407 = t1791*t5350;
  t5417 = t5404 + t5407;
  t6705 = -1.*t3283*t300*t352*t1456;
  t6714 = -1.*t671*t3283*t300*t2197;
  t6720 = t6705 + t6714;
  t6734 = t2659*t6720;
  t6740 = -0.1708*t1791*t5400;
  t6755 = t2285*t5400;
  t6763 = t1945*t2928*t5400;
  t6764 = t2590*t6720;
  t6774 = t2414*t1945*t5400;
  t6776 = t6764 + t6774;
  t6779 = -0.08045*t6776;
  t6780 = t2414*t6720;
  t6782 = -1.*t1945*t2590*t5400;
  t6793 = t6780 + t6782;
  t6801 = -0.06984*t6793;
  t5520 = t2414*t5400;
  t5583 = -1.*t2590*t5425;
  t5621 = t5520 + t5583;
  t1690 = -1.*t300*t352*t1585*t1669;
  t2100 = t2019*t1669*t2083;
  t2206 = -1.*t300*t2180*t1669*t2197;
  t2411 = t2285*t2372;
  t2815 = t2659*t2800;
  t2835 = -1.*t1945*t1669*t2083;
  t2875 = t1791*t2372;
  t2876 = t2835 + t2875;
  t2881 = -0.1708*t2876;
  t2981 = t2928*t2979;
  t3005 = t2590*t2800;
  t3011 = t2414*t2979;
  t3014 = t3005 + t3011;
  t3052 = -0.08045*t3014;
  t3075 = t2414*t2800;
  t3084 = -1.*t2590*t2979;
  t3127 = t3075 + t3084;
  t3128 = -0.06984*t3127;
  t3133 = t1690 + t2100 + t2206 + t2411 + t2815 + t2881 + t2981 + t3052 + t3128;
  t4794 = -1.*t3283*t300*t2019;
  t5032 = t3283*t300*t1945;
  t6927 = -1.*t3283*t352*t1456*t2083;
  t6932 = -1.*t671*t3283*t2083*t2197;
  t6939 = t6927 + t6932;
  t6950 = -1.*t671*t3283*t352*t2083;
  t6954 = t3283*t1456*t2083*t2197;
  t6956 = t6950 + t6954;
  t6987 = t1945*t6939;
  t6988 = t5061 + t6987;
  t7062 = t300*t352*t1456*t1669;
  t7064 = t671*t300*t1669*t2197;
  t7067 = t7062 + t7064;
  t7078 = t1945*t1669*t2083;
  t7081 = t1791*t7067;
  t7084 = t7078 + t7081;
  t7110 = t671*t300*t352*t1669;
  t7112 = -1.*t300*t1456*t1669*t2197;
  t7113 = t7110 + t7112;
  t7108 = t2659*t2372;
  t7114 = -0.1708*t1791*t7113;
  t7118 = t2285*t7113;
  t7121 = t1945*t2928*t7113;
  t7124 = t2590*t2372;
  t7128 = t2414*t1945*t7113;
  t7131 = t7124 + t7128;
  t7139 = -0.08045*t7131;
  t7142 = t2414*t2372;
  t7147 = -1.*t1945*t2590*t7113;
  t7148 = t7142 + t7147;
  t7153 = -0.06984*t7148;
  t5289 = t3283*t300*t352*t1585;
  t5297 = -1.*t3283*t2019*t2083;
  t5298 = t3283*t300*t2180*t2197;
  t5368 = t2285*t5350;
  t5402 = t2659*t5400;
  t5418 = -0.1708*t5417;
  t5436 = t2928*t5425;
  t5456 = t2590*t5400;
  t5468 = t2414*t5425;
  t5469 = t5456 + t5468;
  t5471 = -0.08045*t5469;
  t5636 = -0.06984*t5621;
  t5644 = t5289 + t5297 + t5298 + t5368 + t5402 + t5418 + t5436 + t5471 + t5636;
  t7186 = -1.*t1791*t1669*t2083;
  t7188 = t1945*t7067;
  t7190 = t7186 + t7188;
  t6554 = -1.*t300*t2019*t1669;
  t7234 = -1.*t352*t1456*t1669*t2083;
  t7238 = -1.*t671*t1669*t2083*t2197;
  t7243 = t7234 + t7238;
  t7249 = -1.*t671*t352*t1669*t2083;
  t7252 = t1456*t1669*t2083*t2197;
  t7253 = t7249 + t7252;
  t7269 = t1945*t7243;
  t7270 = t5225 + t7269;
  t7307 = -1.*t352*t1456*t2083;
  t7308 = -1.*t671*t2083*t2197;
  t7316 = t7307 + t7308;
  t7327 = t300*t1945;
  t7332 = t1791*t7316;
  t7337 = t7327 + t7332;
  t7401 = -1.*t671*t352*t2083;
  t7402 = t1456*t2083*t2197;
  t7407 = t7401 + t7402;
  t7395 = t352*t1456*t2083;
  t7397 = t671*t2083*t2197;
  t7398 = t7395 + t7397;
  t7400 = t2659*t7398;
  t7411 = -0.1708*t1791*t7407;
  t7413 = t2285*t7407;
  t7415 = t1945*t2928*t7407;
  t7416 = t2590*t7398;
  t7417 = t2414*t1945*t7407;
  t7425 = t7416 + t7417;
  t7429 = -0.08045*t7425;
  t7443 = t2414*t7398;
  t7446 = -1.*t1945*t2590*t7407;
  t7462 = t7443 + t7446;
  t7481 = -0.06984*t7462;
  t7530 = -1.*t300*t352*t1456;
  t7531 = -1.*t671*t300*t2197;
  t7541 = t7530 + t7531;
  t7558 = -1.*t671*t300*t352;
  t7563 = t300*t1456*t2197;
  t7568 = t7558 + t7563;
  t7592 = t1791*t2083;
  t7594 = t1945*t7541;
  t7597 = t7592 + t7594;
  t7642 = -1.*t1791*t300;
  t7643 = t1945*t7316;
  t7644 = t7642 + t7643;
  t6821 = t3283*t300*t352*t2180;
  t6825 = -1.*t3283*t300*t1585*t2197;
  t6842 = t6821 + t6825 + t6734 + t6740 + t6755 + t6763 + t6779 + t6801;
  t4861 = t1585*t4857;
  t4884 = t2180*t4882;
  t4941 = t2285*t4916;
  t5020 = t2659*t5002;
  t5133 = t2414*t5002;
  t5088 = t2590*t5002;
  t7755 = -1.*t671*t5726;
  t7756 = t7755 + t4982;
  t5923 = t2414*t5771;
  t5934 = -1.*t1945*t2590*t5851;
  t5948 = t5923 + t5934;
  t4288 = t2180*t3343;
  t4369 = t1585*t4358;
  t4445 = t2659*t4440;
  t4517 = -0.1708*t1791*t4477;
  t4564 = t2285*t4477;
  t4593 = t1945*t2928*t4477;
  t4598 = t2590*t4440;
  t4628 = t2414*t1945*t4477;
  t4643 = t4598 + t4628;
  t4717 = -0.08045*t4643;
  t4721 = t2414*t4440;
  t4728 = -1.*t1945*t2590*t4477;
  t4735 = t4721 + t4728;
  t4738 = -0.06984*t4735;
  t4768 = t4288 + t4369 + t4445 + t4517 + t4564 + t4593 + t4717 + t4738;
  t7158 = t300*t352*t2180*t1669;
  t7164 = -1.*t300*t1585*t1669*t2197;
  t7170 = t7158 + t7164 + t7108 + t7114 + t7118 + t7121 + t7139 + t7153;
  t7847 = t352*t1669*t2083;
  t7852 = -1.*t3283*t2197;
  t7854 = t7847 + t7852;
  t7856 = t671*t7854;
  t7857 = t1456*t3404;
  t7861 = t7856 + t7857;
  t5731 = t2180*t5726;
  t5746 = t1585*t4882;
  t5774 = t2659*t5771;
  t5854 = -0.1708*t1791*t5851;
  t5873 = t2285*t5851;
  t5884 = t1945*t2928*t5851;
  t5887 = t2590*t5771;
  t5904 = t2414*t1945*t5851;
  t5911 = t5887 + t5904;
  t5917 = -0.08045*t5911;
  t5960 = -0.06984*t5948;
  t5979 = t5731 + t5746 + t5774 + t5854 + t5873 + t5884 + t5917 + t5960;
  t7898 = -1.*t1456*t7854;
  t7904 = t7898 + t3466;
  t7908 = -1.*t671*t7854;
  t7911 = t7908 + t4098;
  t6561 = t1585*t3343;
  t6572 = t2180*t3404;
  t6580 = t2285*t3494;
  t6592 = t2659*t4109;
  t6604 = t2590*t4109;
  t8044 = t671*t300*t352;
  t8067 = -1.*t300*t1456*t2197;
  t8068 = t8044 + t8067;
  t7513 = -1.*t300*t352*t1585;
  t7528 = -1.*t300*t2180*t2197;
  t7551 = t2285*t7541;
  t7570 = t2659*t7568;
  t7624 = t2414*t7568;
  t7606 = t2590*t7568;
  t8142 = -0.1708*t1791*t7541;
  t8147 = t1945*t2928*t7541;
  t8150 = -1.*t1945*t2590*t7541;
  t8151 = t8150 + t7624;
  t8154 = -0.06984*t8151;
  t8156 = t2414*t1945*t7541;
  t8159 = t8156 + t7606;
  t8193 = -0.08045*t8159;
  t7493 = -1.*t352*t2180*t2083;
  t7494 = t1585*t2083*t2197;
  t7498 = t7493 + t7494 + t7400 + t7411 + t7413 + t7415 + t7429 + t7481;
  t6703 = t3283*t300*t352*t3867;
  t6704 = t3283*t300*t3970*t2197;
  t6805 = t6703 + t6704 + t6734 + t6740 + t6755 + t6763 + t6779 + t6801;
  t7747 = t3970*t5726;
  t7748 = t3867*t4882;
  t7751 = -0.1708*t1791*t5771;
  t7752 = t2285*t5771;
  t7753 = t1945*t2928*t5771;
  t7759 = t2659*t7756;
  t7761 = -1.*t1945*t2590*t5771;
  t7771 = t2414*t7756;
  t7781 = t7761 + t7771;
  t7782 = -0.06984*t7781;
  t7787 = t2414*t1945*t5771;
  t7788 = t2590*t7756;
  t7790 = t7787 + t7788;
  t7808 = -0.08045*t7790;
  t7811 = t7747 + t7748 + t7751 + t7752 + t7753 + t7759 + t7782 + t7808;
  t6361 = t2414*t6253;
  t6362 = -1.*t1945*t2590*t6269;
  t6369 = t6361 + t6362;
  t8367 = t1456*t6061;
  t8368 = t7755 + t8367;
  t3923 = t3867*t3343;
  t3977 = t3970*t3404;
  t4031 = t2659*t3991;
  t4165 = -0.1708*t1791*t4109;
  t4167 = t2285*t4109;
  t4170 = t1945*t2928*t4109;
  t4176 = t2590*t3991;
  t4188 = t2414*t1945*t4109;
  t4198 = t4176 + t4188;
  t4208 = -0.08045*t4198;
  t4224 = t2414*t3991;
  t4254 = -1.*t1945*t2590*t4109;
  t4266 = t4224 + t4254;
  t4278 = -0.06984*t4266;
  t4282 = t3923 + t3977 + t4031 + t4165 + t4167 + t4170 + t4208 + t4278;
  t7106 = t300*t352*t3867*t1669;
  t7107 = t300*t3970*t1669*t2197;
  t7154 = t7106 + t7107 + t7108 + t7114 + t7118 + t7121 + t7139 + t7153;
  t8435 = -1.*t1456*t4358;
  t8436 = t7856 + t8435;
  t6218 = t3867*t5726;
  t6244 = t3970*t6061;
  t6261 = t2659*t6253;
  t6291 = -0.1708*t1791*t6269;
  t6314 = t2285*t6269;
  t6320 = t1945*t2928*t6269;
  t6323 = t2590*t6253;
  t6333 = t2414*t1945*t6269;
  t6343 = t6323 + t6333;
  t6360 = -0.08045*t6343;
  t6383 = -0.06984*t6369;
  t6388 = t6218 + t6244 + t6261 + t6291 + t6314 + t6320 + t6360 + t6383;
  t7895 = t3970*t7854;
  t7896 = t3867*t3404;
  t7905 = -0.1708*t1791*t7904;
  t7906 = t2285*t7904;
  t7907 = t1945*t2928*t7904;
  t7915 = t2659*t7911;
  t7919 = -1.*t1945*t2590*t7904;
  t7922 = t2414*t7911;
  t7927 = t7919 + t7922;
  t7929 = -0.06984*t7927;
  t7931 = t2414*t1945*t7904;
  t7935 = t2590*t7911;
  t7937 = t7931 + t7935;
  t7939 = -0.08045*t7937;
  t7940 = t7895 + t7896 + t7905 + t7906 + t7907 + t7915 + t7929 + t7939;
  t8517 = -1.*t671*t4358;
  t8518 = t7898 + t8517;
  t8315 = -0.135*t671;
  t8325 = -0.07996*t1456;
  t8330 = t8315 + t8325;
  t8600 = t7908 + t4449;
  t8071 = -0.08045*t1791*t2414*t8068;
  t8072 = t3252*t8068;
  t8074 = 0.1708*t1945*t8068;
  t8099 = t1791*t2928*t8068;
  t8102 = 0.06984*t1791*t2590*t8068;
  t8105 = t8071 + t8072 + t8074 + t8099 + t8102;
  t8107 = var2[14]*t8105;
  t8114 = t5178*t7541;
  t8115 = t1945*t5224*t8068;
  t8119 = -1.*t2590*t7541;
  t8122 = -1.*t2414*t1945*t8068;
  t8124 = t8119 + t8122;
  t8125 = -0.06984*t8124;
  t8126 = t2414*t7541;
  t8127 = -1.*t1945*t2590*t8068;
  t8128 = t8126 + t8127;
  t8131 = -0.08045*t8128;
  t8138 = t8114 + t8115 + t8125 + t8131;
  t8141 = var2[15]*t8138;
  t8208 = t300*t352*t3970;
  t8213 = -1.*t300*t3867*t2197;
  t8214 = t8208 + t8213 + t8142 + t7551 + t8147 + t7570 + t8154 + t8193;
  t7387 = -1.*t352*t3867*t2083;
  t7392 = -1.*t3970*t2083*t2197;
  t7484 = t7387 + t7392 + t7400 + t7411 + t7413 + t7415 + t7429 + t7481;
  t6642 = -1.*t3283*t3150*t2083;
  t6646 = t3252*t5350;
  t6665 = -0.08045*t2414*t5417;
  t6666 = t2928*t5417;
  t6673 = 0.06984*t2590*t5417;
  t6674 = t1791*t3283*t2083;
  t6675 = -1.*t1945*t5350;
  t6678 = t6674 + t6675;
  t6679 = -0.1708*t6678;
  t6693 = t6642 + t6646 + t6665 + t6666 + t6673 + t6679;
  t7680 = -0.08045*t1791*t2414*t5851;
  t7681 = t3252*t5851;
  t7682 = 0.1708*t1945*t5851;
  t7683 = t1791*t2928*t5851;
  t7684 = 0.06984*t1791*t2590*t5851;
  t7685 = t7680 + t7681 + t7682 + t7683 + t7684;
  t8248 = -0.08045*t1791*t2414*t6269;
  t8255 = t3252*t6269;
  t8256 = 0.1708*t1945*t6269;
  t8258 = t1791*t2928*t6269;
  t8264 = 0.06984*t1791*t2590*t6269;
  t8270 = t8248 + t8255 + t8256 + t8258 + t8264;
  t6178 = -1.*t1945*t6101;
  t6179 = t5061 + t6178;
  t3202 = -1.*t300*t3150*t1669;
  t3501 = t3252*t3494;
  t3675 = -0.08045*t2414*t3657;
  t3684 = t2928*t3657;
  t3690 = 0.06984*t2590*t3657;
  t3700 = t1791*t300*t1669;
  t3773 = -1.*t1945*t3494;
  t3778 = t3700 + t3773;
  t3781 = -0.1708*t3778;
  t3790 = t3202 + t3501 + t3675 + t3684 + t3690 + t3781;
  t7061 = -1.*t3150*t1669*t2083;
  t7076 = t3252*t7067;
  t7095 = -0.08045*t2414*t7084;
  t7098 = t2928*t7084;
  t7099 = 0.06984*t2590*t7084;
  t7100 = -1.*t1945*t7067;
  t7101 = t2953 + t7100;
  t7103 = -0.1708*t7101;
  t7104 = t7061 + t7076 + t7095 + t7098 + t7099 + t7103;
  t7864 = -0.08045*t1791*t2414*t7861;
  t7866 = t3252*t7861;
  t7872 = 0.1708*t1945*t7861;
  t7882 = t1791*t2928*t7861;
  t7883 = 0.06984*t1791*t2590*t7861;
  t7884 = t7864 + t7866 + t7872 + t7882 + t7883;
  t8437 = -0.08045*t1791*t2414*t8436;
  t8438 = t3252*t8436;
  t8439 = 0.1708*t1945*t8436;
  t8442 = t1791*t2928*t8436;
  t8468 = 0.06984*t1791*t2590*t8436;
  t8473 = t8437 + t8438 + t8439 + t8442 + t8468;
  t5998 = t3283*t300*t3150;
  t6147 = t3252*t6101;
  t6167 = -0.08045*t2414*t6156;
  t6171 = t2928*t6156;
  t6176 = 0.06984*t2590*t6156;
  t6180 = -0.1708*t6179;
  t6188 = t5998 + t6147 + t6167 + t6171 + t6176 + t6180;
  t8725 = -1.*t300*t1945*t1669;
  t8726 = t1456*t7854;
  t8727 = t8726 + t4375;
  t8728 = t1791*t8727;
  t8729 = t8725 + t8728;
  t8696 = -0.08055*t1791;
  t8697 = 0.135*t1945;
  t8698 = t8696 + t8697;
  t8746 = -1.*t1945*t8727;
  t8747 = t5225 + t8746;
  t8760 = t1945*t2083;
  t8761 = t300*t352*t1456;
  t8764 = t671*t300*t2197;
  t8765 = t8761 + t8764;
  t8766 = t1791*t8765;
  t8767 = t8760 + t8766;
  t7571 = -1.*t1945*t2083;
  t8782 = -1.*t1945*t8765;
  t8783 = t7592 + t8782;
  t7305 = -1.*t300*t3150;
  t7318 = t3252*t7316;
  t7344 = -0.08045*t2414*t7337;
  t7359 = t2928*t7337;
  t7365 = 0.06984*t2590*t7337;
  t7369 = t1791*t300;
  t7371 = -1.*t1945*t7316;
  t7373 = t7369 + t7371;
  t7376 = -0.1708*t7373;
  t7384 = t7305 + t7318 + t7344 + t7359 + t7365 + t7376;
  t6853 = t5178*t5400;
  t6858 = t5224*t5425;
  t6870 = -1.*t2590*t5400;
  t6874 = -1.*t2414*t5425;
  t6875 = t6870 + t6874;
  t6876 = -0.06984*t6875;
  t6890 = -0.08045*t5621;
  t6900 = t6853 + t6858 + t6876 + t6890;
  t7813 = t5178*t5771;
  t7814 = t1945*t5224*t5851;
  t7819 = -1.*t2590*t5771;
  t7820 = -1.*t2414*t1945*t5851;
  t7821 = t7819 + t7820;
  t7826 = -0.06984*t7821;
  t7830 = -0.08045*t5948;
  t7831 = t7813 + t7814 + t7826 + t7830;
  t8691 = 0.06984*t2414*t6156;
  t8692 = t5224*t6156;
  t8693 = 0.08045*t2590*t6156;
  t8694 = t8691 + t8692 + t8693;
  t8275 = t5178*t6253;
  t8277 = t1945*t5224*t6269;
  t8282 = -1.*t2590*t6253;
  t8283 = -1.*t2414*t1945*t6269;
  t8284 = t8282 + t8283;
  t8285 = -0.06984*t8284;
  t8287 = -0.08045*t6369;
  t8289 = t8275 + t8277 + t8285 + t8287;
  t6452 = -1.*t2590*t6269;
  t6457 = -1.*t2414*t6444;
  t6462 = t6452 + t6457;
  t5190 = t5178*t4109;
  t5239 = t5224*t5238;
  t5249 = -1.*t2590*t4109;
  t5253 = -1.*t2414*t5238;
  t5254 = t5249 + t5253;
  t5258 = -0.06984*t5254;
  t5276 = -0.08045*t5274;
  t5285 = t5190 + t5239 + t5258 + t5276;
  t7183 = t5178*t7113;
  t7197 = t5224*t7190;
  t7210 = -1.*t2590*t7113;
  t7212 = -1.*t2414*t7190;
  t7214 = t7210 + t7212;
  t7215 = -0.06984*t7214;
  t7216 = t2414*t7113;
  t7217 = -1.*t2590*t7190;
  t7223 = t7216 + t7217;
  t7224 = -0.08045*t7223;
  t7225 = t7183 + t7197 + t7215 + t7224;
  t7990 = t5178*t7904;
  t7992 = t1945*t5224*t7861;
  t7998 = -1.*t2590*t7904;
  t7999 = -1.*t2414*t1945*t7861;
  t8000 = t7998 + t7999;
  t8012 = -0.06984*t8000;
  t8026 = t2414*t7904;
  t8027 = -1.*t1945*t2590*t7861;
  t8032 = t8026 + t8027;
  t8033 = -0.08045*t8032;
  t8034 = t7990 + t7992 + t8012 + t8033;
  t8731 = 0.06984*t2414*t8729;
  t8732 = t5224*t8729;
  t8733 = 0.08045*t2590*t8729;
  t8734 = t8731 + t8732 + t8733;
  t8527 = t5178*t8518;
  t8528 = t1945*t5224*t8436;
  t8541 = -1.*t2590*t8518;
  t8542 = -1.*t2414*t1945*t8436;
  t8546 = t8541 + t8542;
  t8547 = -0.06984*t8546;
  t8554 = t2414*t8518;
  t8559 = -1.*t1945*t2590*t8436;
  t8560 = t8554 + t8559;
  t8561 = -0.08045*t8560;
  t8562 = t8527 + t8528 + t8547 + t8561;
  t6392 = t5178*t6269;
  t6451 = t5224*t6444;
  t6465 = -0.06984*t6462;
  t6467 = t2414*t6269;
  t6471 = -1.*t2590*t6444;
  t6476 = t6467 + t6471;
  t6493 = -0.08045*t6476;
  t6510 = t6392 + t6451 + t6465 + t6493;
  t8808 = -0.08055*t2414;
  t8809 = 0.01004*t2590;
  t8810 = t8808 + t8809;
  t8829 = t1945*t8727;
  t8830 = t3700 + t8829;
  t8770 = 0.06984*t2414*t8767;
  t8771 = t5224*t8767;
  t8773 = 0.08045*t2590*t8767;
  t8774 = t8770 + t8771 + t8773;
  t8853 = -1.*t1791*t2083;
  t8854 = t1945*t8765;
  t8855 = t8853 + t8854;
  t7640 = t5178*t7407;
  t7645 = t5224*t7644;
  t7647 = -1.*t2590*t7407;
  t7648 = -1.*t2414*t7644;
  t7651 = t7647 + t7648;
  t7654 = -0.06984*t7651;
  t7658 = t2414*t7407;
  t7660 = -1.*t2590*t7644;
  t7670 = t7658 + t7660;
  t7672 = -0.08045*t7670;
  t7673 = t7640 + t7645 + t7654 + t7672;
  p_output1[0]=0;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=0;
  p_output1[4]=0;
  p_output1[5]=0;
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=(t4794 + t4861 + t4884 + t4941 + t5020 - 0.1708*(t1791*t4916 + t5032) + t2928*t5077 - 0.08045*(t2414*t5077 + t5088) - 0.06984*(-1.*t2590*t5077 + t5133))*var2[3] + t3133*var2[4] + t4768*var2[5] + t4282*var2[13] + t3790*var2[14] + t5285*var2[15];
  p_output1[10]=(-0.1708*t3657 + t2928*t5238 - 0.06984*t5274 + t6554 + t6561 + t6572 + t6580 + t6592 - 0.08045*(t2414*t5238 + t6604))*var2[3] + t5644*var2[4] + t5979*var2[5] + t6388*var2[13] + t6188*var2[14] + t6510*var2[15];
  p_output1[11]=0;
  p_output1[12]=t3133*var2[3] + (-1.*t2083*t2180*t2197*t3283 - 1.*t1585*t2083*t3283*t352 + t4794 + t2285*t6939 - 0.1708*(t5032 + t1791*t6939) + t2659*t6956 + t2928*t6988 - 0.08045*(t2590*t6956 + t2414*t6988) - 0.06984*(t2414*t6956 - 1.*t2590*t6988))*var2[4] + t6842*var2[5] + t6805*var2[13] + t6693*var2[14] + t6900*var2[15];
  p_output1[13]=t5644*var2[3] + (-1.*t1669*t2083*t2180*t2197 - 1.*t1585*t1669*t2083*t352 + t6554 + t2285*t7243 - 0.1708*(t3623 + t1791*t7243) + t2659*t7253 + t2928*t7270 - 0.08045*(t2590*t7253 + t2414*t7270) - 0.06984*(t2414*t7253 - 1.*t2590*t7270))*var2[4] + t7170*var2[5] + t7154*var2[13] + t7104*var2[14] + t7225*var2[15];
  p_output1[14]=(t2019*t2083 + t7513 + t7528 + t7551 + t7570 - 0.1708*(t1791*t7541 + t7571) + t2928*t7597 - 0.08045*(t2414*t7597 + t7606) - 0.06984*(-1.*t2590*t7597 + t7624))*var2[4] + t7498*var2[5] + t7484*var2[13] + t7384*var2[14] + t7673*var2[15];
  p_output1[15]=t4768*var2[3] + t6842*var2[4] + (t4861 + t4884 - 0.1708*t1791*t4916 + t1945*t2928*t4916 + t4941 + t5020 - 0.08045*(t1945*t2414*t4916 + t5088) - 0.06984*(-1.*t1945*t2590*t4916 + t5133))*var2[5] + t7811*var2[13] + t7685*var2[14] + t7831*var2[15];
  p_output1[16]=t5979*var2[3] + t7170*var2[4] + (-0.1708*t1791*t3494 + t1945*t2928*t3494 - 0.06984*(-1.*t1945*t2590*t3494 + t5266) + t6561 + t6572 + t6580 + t6592 - 0.08045*(t1945*t2414*t3494 + t6604))*var2[5] + t7940*var2[13] + t7884*var2[14] + t8034*var2[15];
  p_output1[17]=t8107 + t8141 + t7498*var2[4] + (t7513 + t7528 + t7551 + t7570 + t8142 + t8147 + t8154 + t8193)*var2[5] + t8214*var2[13];
  p_output1[18]=0;
  p_output1[19]=0;
  p_output1[20]=0;
  p_output1[21]=0;
  p_output1[22]=0;
  p_output1[23]=0;
  p_output1[24]=0;
  p_output1[25]=0;
  p_output1[26]=0;
  p_output1[27]=0;
  p_output1[28]=0;
  p_output1[29]=0;
  p_output1[30]=0;
  p_output1[31]=0;
  p_output1[32]=0;
  p_output1[33]=0;
  p_output1[34]=0;
  p_output1[35]=0;
  p_output1[36]=0;
  p_output1[37]=0;
  p_output1[38]=0;
  p_output1[39]=t4282*var2[3] + t6805*var2[4] + t7811*var2[5] + (-0.1708*t1791*t6253 + t2285*t6253 + t1945*t2928*t6253 + t7747 + t6061*t8330 + t2659*t8368 - 0.06984*(-1.*t1945*t2590*t6253 + t2414*t8368) - 0.08045*(t1945*t2414*t6253 + t2590*t8368))*var2[13] + t8270*var2[14] + t8289*var2[15];
  p_output1[40]=t6388*var2[3] + t7154*var2[4] + t7940*var2[5] + (t7895 + t4358*t8330 - 0.1708*t1791*t8518 + t2285*t8518 + t1945*t2928*t8518 + t2659*t8600 - 0.06984*(-1.*t1945*t2590*t8518 + t2414*t8600) - 0.08045*(t1945*t2414*t8518 + t2590*t8600))*var2[13] + t8473*var2[14] + t8562*var2[15];
  p_output1[41]=t8107 + t8141 + t7484*var2[4] + t8214*var2[5] + (t7551 + t7570 + t8142 + t8147 + t8154 + t8193 + t8208 + t2197*t300*t8330)*var2[13];
  p_output1[42]=t3790*var2[3] + t6693*var2[4] + t7685*var2[5] + t8270*var2[13] + (t3150*t6101 - 0.1708*(t5032 - 1.*t1791*t6101) - 0.08045*t2414*t6179 + 0.06984*t2590*t6179 + t2928*t6179 + t300*t3283*t8698)*var2[14] + t8694*var2[15];
  p_output1[43]=t6188*var2[3] + t7104*var2[4] + t7884*var2[5] + t8473*var2[13] + (t1669*t300*t8698 + t3150*t8727 - 0.1708*(t3623 - 1.*t1791*t8727) - 0.08045*t2414*t8747 + 0.06984*t2590*t8747 + t2928*t8747)*var2[14] + t8734*var2[15];
  p_output1[44]=t7384*var2[4] + t8105*var2[5] + t8105*var2[13] + (-1.*t2083*t8698 + t3150*t8765 - 0.1708*(t7571 - 1.*t1791*t8765) - 0.08045*t2414*t8783 + 0.06984*t2590*t8783 + t2928*t8783)*var2[14] + t8774*var2[15];
  p_output1[45]=t5285*var2[3] + t6900*var2[4] + t7831*var2[5] + t8289*var2[13] + t8694*var2[14] + (t5224*t6269 - 0.06984*(-1.*t2414*t6269 + t2590*t6444) - 0.08045*t6462 + t6444*t8810)*var2[15];
  p_output1[46]=t6510*var2[3] + t7225*var2[4] + t8034*var2[5] + t8562*var2[13] + t8734*var2[14] + (t5224*t8436 + t8810*t8830 - 0.08045*(-1.*t2590*t8436 - 1.*t2414*t8830) - 0.06984*(-1.*t2414*t8436 + t2590*t8830))*var2[15];
  p_output1[47]=t7673*var2[4] + t8138*var2[5] + t8138*var2[13] + t8774*var2[14] + (t5224*t8068 + t8810*t8855 - 0.08045*(-1.*t2590*t8068 - 1.*t2414*t8855) - 0.06984*(-1.*t2414*t8068 + t2590*t8855))*var2[15];
  p_output1[48]=0;
  p_output1[49]=0;
  p_output1[50]=0;
  p_output1[51]=0;
  p_output1[52]=0;
  p_output1[53]=0;
  p_output1[54]=0;
  p_output1[55]=0;
  p_output1[56]=0;
  p_output1[57]=0;
  p_output1[58]=0;
  p_output1[59]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 20 && ncols == 1) && 
      !(mrows == 1 && ncols == 20))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 20 && ncols == 1) && 
      !(mrows == 1 && ncols == 20))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 3, (mwSize) 20, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "dJp_RightThigh_mex.hh"

namespace SymExpression
{

void dJp_RightThigh_mex_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
