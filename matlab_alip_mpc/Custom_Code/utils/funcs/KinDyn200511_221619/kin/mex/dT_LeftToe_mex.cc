/*
 * Automatically Generated from Mathematica.
 * Mon 11 May 2020 22:27:01 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t667;
  double t520;
  double t668;
  double t564;
  double t695;
  double t498;
  double t502;
  double t645;
  double t718;
  double t783;
  double t799;
  double t807;
  double t836;
  double t841;
  double t858;
  double t883;
  double t907;
  double t922;
  double t952;
  double t955;
  double t963;
  double t979;
  double t1019;
  double t431;
  double t474;
  double t1036;
  double t1097;
  double t988;
  double t1042;
  double t1045;
  double t333;
  double t1109;
  double t1130;
  double t1138;
  double t1172;
  double t1048;
  double t1140;
  double t1146;
  double t161;
  double t1217;
  double t1222;
  double t1276;
  double t74;
  double t1401;
  double t1403;
  double t1407;
  double t1471;
  double t1485;
  double t1490;
  double t1391;
  double t1427;
  double t1429;
  double t1468;
  double t1494;
  double t1509;
  double t1529;
  double t1543;
  double t1560;
  double t1516;
  double t1566;
  double t1577;
  double t1591;
  double t1594;
  double t1626;
  double t1328;
  double t1585;
  double t1629;
  double t1632;
  double t1656;
  double t1662;
  double t1665;
  double t1760;
  double t1768;
  double t1746;
  double t1752;
  double t1759;
  double t1775;
  double t1783;
  double t1812;
  double t1815;
  double t1823;
  double t1810;
  double t1831;
  double t1840;
  double t1851;
  double t1867;
  double t1870;
  double t1842;
  double t1874;
  double t1880;
  double t1916;
  double t1920;
  double t1923;
  double t2042;
  double t2050;
  double t2059;
  double t1975;
  double t1978;
  double t1981;
  double t1984;
  double t1993;
  double t1998;
  double t1999;
  double t2062;
  double t2073;
  double t2083;
  double t2094;
  double t2109;
  double t2078;
  double t2127;
  double t2128;
  double t2132;
  double t2136;
  double t2149;
  double t2130;
  double t2152;
  double t2178;
  double t2183;
  double t2187;
  double t2191;
  double t2296;
  double t2301;
  double t2303;
  double t2272;
  double t2280;
  double t2284;
  double t2328;
  double t2333;
  double t2340;
  double t2268;
  double t2288;
  double t2307;
  double t2308;
  double t2311;
  double t2313;
  double t2327;
  double t2345;
  double t2355;
  double t2368;
  double t2371;
  double t2374;
  double t2357;
  double t2386;
  double t2402;
  double t2405;
  double t2407;
  double t2409;
  double t2403;
  double t2410;
  double t2423;
  double t2445;
  double t2446;
  double t2448;
  double t2490;
  double t2492;
  double t2504;
  double t2507;
  double t2511;
  double t2523;
  double t2539;
  double t2542;
  double t2543;
  double t2526;
  double t2554;
  double t2559;
  double t2569;
  double t2579;
  double t2587;
  double t2561;
  double t2590;
  double t2594;
  double t2606;
  double t2611;
  double t2612;
  double t2679;
  double t2686;
  double t2697;
  double t2708;
  double t2709;
  double t2711;
  double t2718;
  double t2710;
  double t2719;
  double t2738;
  double t2750;
  double t2752;
  double t2753;
  double t2800;
  double t2801;
  double t2809;
  double t2812;
  double t2813;
  double t2830;
  double t2834;
  double t2835;
  double t2884;
  double t2895;
  double t2901;
  double t2862;
  double t2910;
  double t2914;
  double t2916;
  double t2974;
  double t2976;
  double t2978;
  double t2987;
  double t2991;
  double t2998;
  double t3001;
  double t3002;
  double t3007;
  double t3009;
  double t3019;
  double t3032;
  double t3035;
  double t3036;
  double t3037;
  double t3058;
  double t3061;
  double t3070;
  double t3044;
  double t3075;
  double t3083;
  double t3089;
  double t3093;
  double t3094;
  double t3131;
  double t3138;
  double t3123;
  double t3125;
  double t3126;
  double t3130;
  double t3143;
  double t3147;
  double t3166;
  double t3170;
  double t3177;
  double t3149;
  double t3179;
  double t3194;
  double t3196;
  double t3201;
  double t3211;
  double t3195;
  double t3216;
  double t3220;
  double t3226;
  double t3231;
  double t3237;
  double t3300;
  double t3304;
  double t3287;
  double t3291;
  double t3293;
  double t3307;
  double t3310;
  double t3318;
  double t3319;
  double t3328;
  double t3311;
  double t3332;
  double t3334;
  double t3352;
  double t3357;
  double t3363;
  double t3342;
  double t3365;
  double t3370;
  double t3377;
  double t3390;
  double t3395;
  double t3486;
  double t3488;
  double t3493;
  double t3438;
  double t3439;
  double t3440;
  double t3446;
  double t3472;
  double t3473;
  double t3480;
  double t3500;
  double t3504;
  double t3515;
  double t3518;
  double t3524;
  double t3506;
  double t3528;
  double t3529;
  double t3541;
  double t3542;
  double t3546;
  double t3538;
  double t3547;
  double t3549;
  double t3567;
  double t3568;
  double t3574;
  double t3614;
  double t3616;
  double t3618;
  double t3630;
  double t3632;
  double t3639;
  double t3648;
  double t3654;
  double t3655;
  double t3644;
  double t3658;
  double t3669;
  double t3673;
  double t3678;
  double t3703;
  double t3670;
  double t3705;
  double t3706;
  double t3712;
  double t3729;
  double t3730;
  double t3795;
  double t3797;
  double t3804;
  double t3809;
  double t3817;
  double t3828;
  double t3830;
  double t3820;
  double t3834;
  double t3837;
  double t3839;
  double t3841;
  double t3848;
  double t3888;
  double t3891;
  double t3898;
  double t3899;
  double t3902;
  double t3912;
  double t3916;
  double t3922;
  double t3963;
  double t3971;
  double t3982;
  double t3938;
  double t3985;
  double t3987;
  double t3996;
  double t2946;
  double t2947;
  double t2950;
  double t4051;
  double t4056;
  double t4057;
  double t4064;
  double t4066;
  double t4070;
  double t4071;
  double t4088;
  double t4091;
  double t4096;
  double t4100;
  double t4108;
  double t4094;
  double t4113;
  double t4120;
  double t4123;
  double t4127;
  double t4129;
  double t4204;
  double t4205;
  double t4212;
  double t4180;
  double t4187;
  double t4189;
  double t4197;
  double t4215;
  double t4226;
  double t4237;
  double t4248;
  double t4251;
  double t4230;
  double t4254;
  double t4257;
  double t4269;
  double t4277;
  double t4292;
  double t4262;
  double t4293;
  double t4295;
  double t4308;
  double t4317;
  double t4318;
  double t4304;
  double t4320;
  double t4321;
  double t4325;
  double t4330;
  double t4332;
  double t4345;
  double t4353;
  double t4355;
  double t4372;
  double t4375;
  double t4379;
  double t4386;
  double t4390;
  double t4396;
  double t4404;
  double t4409;
  double t4414;
  double t4397;
  double t4415;
  double t4423;
  double t4446;
  double t4447;
  double t4454;
  double t4425;
  double t4457;
  double t4458;
  double t4469;
  double t4481;
  double t4483;
  double t4529;
  double t4530;
  double t4536;
  double t4538;
  double t4539;
  double t4559;
  double t4560;
  double t4548;
  double t4563;
  double t4570;
  double t4576;
  double t4583;
  double t4584;
  double t4632;
  double t4637;
  double t4639;
  double t4640;
  double t4641;
  double t4645;
  double t4647;
  double t4649;
  double t4675;
  double t4682;
  double t4683;
  double t4665;
  double t4686;
  double t4688;
  double t4694;
  double t4786;
  double t4807;
  double t4814;
  double t4747;
  double t4759;
  double t4760;
  double t4765;
  double t4771;
  double t4780;
  double t4782;
  double t4823;
  double t4831;
  double t4836;
  double t4845;
  double t4851;
  double t4833;
  double t4857;
  double t4864;
  double t4867;
  double t4869;
  double t4872;
  double t4866;
  double t4878;
  double t4888;
  double t4893;
  double t4895;
  double t4900;
  double t1165;
  double t1302;
  double t1315;
  double t1337;
  double t1341;
  double t1352;
  double t1635;
  double t1678;
  double t1691;
  double t1700;
  double t1701;
  double t1703;
  double t1886;
  double t1929;
  double t1931;
  double t1942;
  double t1943;
  double t1945;
  double t2180;
  double t2198;
  double t2202;
  double t2232;
  double t2237;
  double t2240;
  double t2429;
  double t2455;
  double t2460;
  double t2468;
  double t2469;
  double t2474;
  double t2596;
  double t2616;
  double t2622;
  double t2635;
  double t2644;
  double t2660;
  double t2745;
  double t2758;
  double t2761;
  double t2765;
  double t2768;
  double t2770;
  double t2820;
  double t2856;
  double t2859;
  double t2869;
  double t2918;
  double t2923;
  double t5109;
  double t3084;
  double t3098;
  double t3102;
  double t3105;
  double t3107;
  double t3114;
  double t3223;
  double t3240;
  double t3246;
  double t3254;
  double t3267;
  double t3268;
  double t3372;
  double t3398;
  double t3405;
  double t3409;
  double t3414;
  double t3419;
  double t3555;
  double t3581;
  double t3583;
  double t3591;
  double t3593;
  double t3594;
  double t3707;
  double t3732;
  double t3737;
  double t3745;
  double t3754;
  double t3755;
  double t3838;
  double t3850;
  double t3852;
  double t3857;
  double t3864;
  double t3868;
  double t3909;
  double t3924;
  double t3936;
  double t3945;
  double t4000;
  double t4003;
  double t5268;
  double t4012;
  double t4020;
  double t4023;
  double t2954;
  double t2961;
  double t4122;
  double t4136;
  double t4138;
  double t4153;
  double t4156;
  double t4171;
  double t5344;
  double t5377;
  double t5378;
  double t4462;
  double t4491;
  double t4493;
  double t4503;
  double t4504;
  double t4507;
  double t4574;
  double t4585;
  double t4589;
  double t4602;
  double t4606;
  double t4609;
  double t4644;
  double t4654;
  double t4662;
  double t4666;
  double t4695;
  double t4701;
  double t5444;
  double t4726;
  double t4727;
  double t4730;
  double t4889;
  double t4906;
  double t4909;
  double t4918;
  double t4927;
  double t4933;
  double t5701;
  double t5703;
  double t5833;
  double t5834;
  double t5875;
  double t5889;
  double t5924;
  double t5936;
  double t4956;
  double t4957;
  double t4967;
  double t6027;
  double t6029;
  double t5781;
  double t5782;
  double t5783;
  double t5786;
  double t5802;
  double t5705;
  double t5719;
  double t5727;
  double t5816;
  double t5823;
  double t5827;
  double t5840;
  double t5847;
  double t5852;
  double t5857;
  double t5858;
  double t5868;
  double t5892;
  double t5895;
  double t5896;
  double t5899;
  double t5906;
  double t5916;
  double t5938;
  double t5944;
  double t5945;
  double t5954;
  double t5964;
  double t5970;
  double t4980;
  double t4983;
  double t4985;
  double t6063;
  double t6078;
  double t6079;
  double t6081;
  double t6082;
  double t6084;
  double t6094;
  double t6103;
  double t6107;
  double t4993;
  double t4994;
  double t5000;
  double t6033;
  double t6047;
  double t6052;
  double t6058;
  double t6067;
  double t5691;
  double t5012;
  double t5015;
  double t5017;
  double t6382;
  double t6393;
  double t5020;
  double t5021;
  double t5024;
  double t5031;
  double t5039;
  double t5056;
  double t5071;
  double t5079;
  double t5083;
  double t5085;
  double t5102;
  double t5105;
  double t5128;
  double t5131;
  double t6908;
  double t5137;
  double t5142;
  double t5670;
  double t5672;
  double t5679;
  double t5688;
  double t5692;
  double t5152;
  double t5154;
  double t5156;
  double t5163;
  double t5165;
  double t5172;
  double t6214;
  double t6221;
  double t6239;
  double t6246;
  double t6252;
  double t5177;
  double t5180;
  double t5185;
  double t5193;
  double t5199;
  double t5201;
  double t6634;
  double t6641;
  double t6645;
  double t6649;
  double t6653;
  double t5216;
  double t5218;
  double t5222;
  double t6731;
  double t6735;
  double t6736;
  double t6740;
  double t6746;
  double t5231;
  double t5241;
  double t5243;
  double t6810;
  double t6811;
  double t6818;
  double t6826;
  double t6827;
  double t5247;
  double t5257;
  double t5260;
  double t6871;
  double t6877;
  double t6884;
  double t6887;
  double t6888;
  double t5269;
  double t5272;
  double t6929;
  double t6933;
  double t6941;
  double t6943;
  double t6944;
  double t7558;
  double t5288;
  double t5291;
  double t5298;
  double t5311;
  double t5313;
  double t7797;
  double t7799;
  double t7800;
  double t7801;
  double t7806;
  double t7809;
  double t7810;
  double t7816;
  double t7817;
  double t7818;
  double t7823;
  double t7824;
  double t7825;
  double t7827;
  double t7832;
  double t7836;
  double t7837;
  double t5404;
  double t5405;
  double t5406;
  double t5412;
  double t5417;
  double t5426;
  double t5429;
  double t5431;
  double t5435;
  double t5447;
  double t5469;
  double t7976;
  double t5478;
  double t5485;
  double t5488;
  double t5496;
  double t5497;
  t667 = Cos(var1[3]);
  t520 = Cos(var1[5]);
  t668 = Sin(var1[4]);
  t564 = Sin(var1[3]);
  t695 = Sin(var1[5]);
  t498 = Cos(var1[7]);
  t502 = Cos(var1[6]);
  t645 = -1.*t520*t564;
  t718 = t667*t668*t695;
  t783 = t645 + t718;
  t799 = t502*t783;
  t807 = t667*t520*t668;
  t836 = t564*t695;
  t841 = t807 + t836;
  t858 = Sin(var1[6]);
  t883 = t841*t858;
  t907 = t799 + t883;
  t922 = t498*t907;
  t952 = Cos(var1[4]);
  t955 = Sin(var1[7]);
  t963 = -1.*t667*t952*t955;
  t979 = t922 + t963;
  t1019 = Cos(var1[9]);
  t431 = Cos(var1[8]);
  t474 = Sin(var1[9]);
  t1036 = Sin(var1[8]);
  t1097 = Cos(var1[10]);
  t988 = -1.*t431*t474*t979;
  t1042 = -1.*t1019*t979*t1036;
  t1045 = t988 + t1042;
  t333 = Sin(var1[10]);
  t1109 = t1019*t431*t979;
  t1130 = -1.*t474*t979*t1036;
  t1138 = t1109 + t1130;
  t1172 = Cos(var1[11]);
  t1048 = t333*t1045;
  t1140 = t1097*t1138;
  t1146 = t1048 + t1140;
  t161 = Sin(var1[11]);
  t1217 = t1097*t1045;
  t1222 = -1.*t333*t1138;
  t1276 = t1217 + t1222;
  t74 = Cos(var1[12]);
  t1401 = t520*t564;
  t1403 = -1.*t667*t668*t695;
  t1407 = t1401 + t1403;
  t1471 = t502*t1407;
  t1485 = -1.*t841*t858;
  t1490 = t1471 + t1485;
  t1391 = t502*t841;
  t1427 = t1407*t858;
  t1429 = t1391 + t1427;
  t1468 = t431*t1429*t955;
  t1494 = t1490*t1036;
  t1509 = t1468 + t1494;
  t1529 = t431*t1490;
  t1543 = -1.*t1429*t955*t1036;
  t1560 = t1529 + t1543;
  t1516 = -1.*t474*t1509;
  t1566 = t1019*t1560;
  t1577 = t1516 + t1566;
  t1591 = t1019*t1509;
  t1594 = t474*t1560;
  t1626 = t1591 + t1594;
  t1328 = Sin(var1[12]);
  t1585 = t333*t1577;
  t1629 = t1097*t1626;
  t1632 = t1585 + t1629;
  t1656 = t1097*t1577;
  t1662 = -1.*t333*t1626;
  t1665 = t1656 + t1662;
  t1760 = -1.*t502*t783;
  t1768 = t1760 + t1485;
  t1746 = -1.*t783*t858;
  t1752 = t1391 + t1746;
  t1759 = t431*t1752*t955;
  t1775 = t1768*t1036;
  t1783 = t1759 + t1775;
  t1812 = t431*t1768;
  t1815 = -1.*t1752*t955*t1036;
  t1823 = t1812 + t1815;
  t1810 = -1.*t474*t1783;
  t1831 = t1019*t1823;
  t1840 = t1810 + t1831;
  t1851 = t1019*t1783;
  t1867 = t474*t1823;
  t1870 = t1851 + t1867;
  t1842 = t333*t1840;
  t1874 = t1097*t1870;
  t1880 = t1842 + t1874;
  t1916 = t1097*t1840;
  t1920 = -1.*t333*t1870;
  t1923 = t1916 + t1920;
  t2042 = t667*t952*t520*t502;
  t2050 = -1.*t667*t952*t695*t858;
  t2059 = t2042 + t2050;
  t1975 = -1.*t667*t498*t668;
  t1978 = t667*t952*t502*t695;
  t1981 = t667*t952*t520*t858;
  t1984 = t1978 + t1981;
  t1993 = t1984*t955;
  t1998 = t1975 + t1993;
  t1999 = t431*t1998;
  t2062 = t2059*t1036;
  t2073 = t1999 + t2062;
  t2083 = t431*t2059;
  t2094 = -1.*t1998*t1036;
  t2109 = t2083 + t2094;
  t2078 = -1.*t474*t2073;
  t2127 = t1019*t2109;
  t2128 = t2078 + t2127;
  t2132 = t1019*t2073;
  t2136 = t474*t2109;
  t2149 = t2132 + t2136;
  t2130 = t333*t2128;
  t2152 = t1097*t2149;
  t2178 = t2130 + t2152;
  t2183 = t1097*t2128;
  t2187 = -1.*t333*t2149;
  t2191 = t2183 + t2187;
  t2296 = -1.*t520*t564*t668;
  t2301 = t667*t695;
  t2303 = t2296 + t2301;
  t2272 = -1.*t667*t520;
  t2280 = -1.*t564*t668*t695;
  t2284 = t2272 + t2280;
  t2328 = t502*t2303;
  t2333 = -1.*t2284*t858;
  t2340 = t2328 + t2333;
  t2268 = -1.*t952*t498*t564;
  t2288 = t502*t2284;
  t2307 = t2303*t858;
  t2308 = t2288 + t2307;
  t2311 = t2308*t955;
  t2313 = t2268 + t2311;
  t2327 = t431*t2313;
  t2345 = t2340*t1036;
  t2355 = t2327 + t2345;
  t2368 = t431*t2340;
  t2371 = -1.*t2313*t1036;
  t2374 = t2368 + t2371;
  t2357 = -1.*t474*t2355;
  t2386 = t1019*t2374;
  t2402 = t2357 + t2386;
  t2405 = t1019*t2355;
  t2407 = t474*t2374;
  t2409 = t2405 + t2407;
  t2403 = t333*t2402;
  t2410 = t1097*t2409;
  t2423 = t2403 + t2410;
  t2445 = t1097*t2402;
  t2446 = -1.*t333*t2409;
  t2448 = t2445 + t2446;
  t2490 = t667*t952*t498;
  t2492 = t907*t955;
  t2504 = t2490 + t2492;
  t2507 = -1.*t431*t2504;
  t2511 = -1.*t1752*t1036;
  t2523 = t2507 + t2511;
  t2539 = t431*t1752;
  t2542 = -1.*t2504*t1036;
  t2543 = t2539 + t2542;
  t2526 = t474*t2523;
  t2554 = t1019*t2543;
  t2559 = t2526 + t2554;
  t2569 = t1019*t2523;
  t2579 = -1.*t474*t2543;
  t2587 = t2569 + t2579;
  t2561 = -1.*t333*t2559;
  t2590 = t1097*t2587;
  t2594 = t2561 + t2590;
  t2606 = t1097*t2559;
  t2611 = t333*t2587;
  t2612 = t2606 + t2611;
  t2679 = t431*t2504;
  t2686 = t1752*t1036;
  t2697 = t2679 + t2686;
  t2708 = -1.*t474*t2697;
  t2709 = t2708 + t2554;
  t2711 = -1.*t1019*t2697;
  t2718 = t2711 + t2579;
  t2710 = -1.*t333*t2709;
  t2719 = t1097*t2718;
  t2738 = t2710 + t2719;
  t2750 = t1097*t2709;
  t2752 = t333*t2718;
  t2753 = t2750 + t2752;
  t2800 = t1019*t2697;
  t2801 = t474*t2543;
  t2809 = t2800 + t2801;
  t2812 = -1.*t1097*t2809;
  t2813 = t2710 + t2812;
  t2830 = -1.*t333*t2809;
  t2834 = t2750 + t2830;
  t2835 = t1172*t2834;
  t2884 = t333*t2709;
  t2895 = t1097*t2809;
  t2901 = t2884 + t2895;
  t2862 = -1.*t161*t2834;
  t2910 = -1.*t161*t2901;
  t2914 = t2910 + t2835;
  t2916 = t1328*t2914;
  t2974 = t667*t520;
  t2976 = t564*t668*t695;
  t2978 = t2974 + t2976;
  t2987 = t502*t2978;
  t2991 = t520*t564*t668;
  t2998 = -1.*t667*t695;
  t3001 = t2991 + t2998;
  t3002 = t3001*t858;
  t3007 = t2987 + t3002;
  t3009 = t498*t3007;
  t3019 = -1.*t952*t564*t955;
  t3032 = t3009 + t3019;
  t3035 = -1.*t431*t474*t3032;
  t3036 = -1.*t1019*t3032*t1036;
  t3037 = t3035 + t3036;
  t3058 = t1019*t431*t3032;
  t3061 = -1.*t474*t3032*t1036;
  t3070 = t3058 + t3061;
  t3044 = t333*t3037;
  t3075 = t1097*t3070;
  t3083 = t3044 + t3075;
  t3089 = t1097*t3037;
  t3093 = -1.*t333*t3070;
  t3094 = t3089 + t3093;
  t3131 = -1.*t3001*t858;
  t3138 = t2288 + t3131;
  t3123 = t502*t3001;
  t3125 = t2284*t858;
  t3126 = t3123 + t3125;
  t3130 = t431*t3126*t955;
  t3143 = t3138*t1036;
  t3147 = t3130 + t3143;
  t3166 = t431*t3138;
  t3170 = -1.*t3126*t955*t1036;
  t3177 = t3166 + t3170;
  t3149 = -1.*t474*t3147;
  t3179 = t1019*t3177;
  t3194 = t3149 + t3179;
  t3196 = t1019*t3147;
  t3201 = t474*t3177;
  t3211 = t3196 + t3201;
  t3195 = t333*t3194;
  t3216 = t1097*t3211;
  t3220 = t3195 + t3216;
  t3226 = t1097*t3194;
  t3231 = -1.*t333*t3211;
  t3237 = t3226 + t3231;
  t3300 = -1.*t502*t2978;
  t3304 = t3300 + t3131;
  t3287 = -1.*t2978*t858;
  t3291 = t3123 + t3287;
  t3293 = t431*t3291*t955;
  t3307 = t3304*t1036;
  t3310 = t3293 + t3307;
  t3318 = t431*t3304;
  t3319 = -1.*t3291*t955*t1036;
  t3328 = t3318 + t3319;
  t3311 = -1.*t474*t3310;
  t3332 = t1019*t3328;
  t3334 = t3311 + t3332;
  t3352 = t1019*t3310;
  t3357 = t474*t3328;
  t3363 = t3352 + t3357;
  t3342 = t333*t3334;
  t3365 = t1097*t3363;
  t3370 = t3342 + t3365;
  t3377 = t1097*t3334;
  t3390 = -1.*t333*t3363;
  t3395 = t3377 + t3390;
  t3486 = t952*t520*t502*t564;
  t3488 = -1.*t952*t564*t695*t858;
  t3493 = t3486 + t3488;
  t3438 = -1.*t498*t564*t668;
  t3439 = t952*t502*t564*t695;
  t3440 = t952*t520*t564*t858;
  t3446 = t3439 + t3440;
  t3472 = t3446*t955;
  t3473 = t3438 + t3472;
  t3480 = t431*t3473;
  t3500 = t3493*t1036;
  t3504 = t3480 + t3500;
  t3515 = t431*t3493;
  t3518 = -1.*t3473*t1036;
  t3524 = t3515 + t3518;
  t3506 = -1.*t474*t3504;
  t3528 = t1019*t3524;
  t3529 = t3506 + t3528;
  t3541 = t1019*t3504;
  t3542 = t474*t3524;
  t3546 = t3541 + t3542;
  t3538 = t333*t3529;
  t3547 = t1097*t3546;
  t3549 = t3538 + t3547;
  t3567 = t1097*t3529;
  t3568 = -1.*t333*t3546;
  t3574 = t3567 + t3568;
  t3614 = t952*t498*t564;
  t3616 = t3007*t955;
  t3618 = t3614 + t3616;
  t3630 = -1.*t431*t3618;
  t3632 = -1.*t3291*t1036;
  t3639 = t3630 + t3632;
  t3648 = t431*t3291;
  t3654 = -1.*t3618*t1036;
  t3655 = t3648 + t3654;
  t3644 = t474*t3639;
  t3658 = t1019*t3655;
  t3669 = t3644 + t3658;
  t3673 = t1019*t3639;
  t3678 = -1.*t474*t3655;
  t3703 = t3673 + t3678;
  t3670 = -1.*t333*t3669;
  t3705 = t1097*t3703;
  t3706 = t3670 + t3705;
  t3712 = t1097*t3669;
  t3729 = t333*t3703;
  t3730 = t3712 + t3729;
  t3795 = t431*t3618;
  t3797 = t3291*t1036;
  t3804 = t3795 + t3797;
  t3809 = -1.*t474*t3804;
  t3817 = t3809 + t3658;
  t3828 = -1.*t1019*t3804;
  t3830 = t3828 + t3678;
  t3820 = -1.*t333*t3817;
  t3834 = t1097*t3830;
  t3837 = t3820 + t3834;
  t3839 = t1097*t3817;
  t3841 = t333*t3830;
  t3848 = t3839 + t3841;
  t3888 = t1019*t3804;
  t3891 = t474*t3655;
  t3898 = t3888 + t3891;
  t3899 = -1.*t1097*t3898;
  t3902 = t3820 + t3899;
  t3912 = -1.*t333*t3898;
  t3916 = t3839 + t3912;
  t3922 = t1172*t3916;
  t3963 = t333*t3817;
  t3971 = t1097*t3898;
  t3982 = t3963 + t3971;
  t3938 = -1.*t161*t3916;
  t3985 = -1.*t161*t3982;
  t3987 = t3985 + t3922;
  t3996 = t1328*t3987;
  t2946 = t1172*t2901;
  t2947 = t161*t2834;
  t2950 = t2946 + t2947;
  t4051 = t952*t502*t695;
  t4056 = t952*t520*t858;
  t4057 = t4051 + t4056;
  t4064 = t498*t4057;
  t4066 = t668*t955;
  t4070 = t4064 + t4066;
  t4071 = -1.*t431*t474*t4070;
  t4088 = -1.*t1019*t4070*t1036;
  t4091 = t4071 + t4088;
  t4096 = t1019*t431*t4070;
  t4100 = -1.*t474*t4070*t1036;
  t4108 = t4096 + t4100;
  t4094 = t333*t4091;
  t4113 = t1097*t4108;
  t4120 = t4094 + t4113;
  t4123 = t1097*t4091;
  t4127 = -1.*t333*t4108;
  t4129 = t4123 + t4127;
  t4204 = -1.*t952*t502*t695;
  t4205 = -1.*t952*t520*t858;
  t4212 = t4204 + t4205;
  t4180 = t952*t520*t502;
  t4187 = -1.*t952*t695*t858;
  t4189 = t4180 + t4187;
  t4197 = t431*t4189*t955;
  t4215 = t4212*t1036;
  t4226 = t4197 + t4215;
  t4237 = t431*t4212;
  t4248 = -1.*t4189*t955*t1036;
  t4251 = t4237 + t4248;
  t4230 = -1.*t474*t4226;
  t4254 = t1019*t4251;
  t4257 = t4230 + t4254;
  t4269 = t1019*t4226;
  t4277 = t474*t4251;
  t4292 = t4269 + t4277;
  t4262 = t333*t4257;
  t4293 = t1097*t4292;
  t4295 = t4262 + t4293;
  t4308 = t1097*t4257;
  t4317 = -1.*t333*t4292;
  t4318 = t4308 + t4317;
  t4304 = -1.*t161*t4295;
  t4320 = t1172*t4318;
  t4321 = t4304 + t4320;
  t4325 = -1.*t74*t4321;
  t4330 = t1172*t4295;
  t4332 = t161*t4318;
  t4345 = t4330 + t4332;
  t4353 = t1328*t4345;
  t4355 = t4325 + t4353;
  t4372 = -1.*t498*t668;
  t4375 = t4057*t955;
  t4379 = t4372 + t4375;
  t4386 = -1.*t431*t4379;
  t4390 = -1.*t4189*t1036;
  t4396 = t4386 + t4390;
  t4404 = t431*t4189;
  t4409 = -1.*t4379*t1036;
  t4414 = t4404 + t4409;
  t4397 = t474*t4396;
  t4415 = t1019*t4414;
  t4423 = t4397 + t4415;
  t4446 = t1019*t4396;
  t4447 = -1.*t474*t4414;
  t4454 = t4446 + t4447;
  t4425 = -1.*t333*t4423;
  t4457 = t1097*t4454;
  t4458 = t4425 + t4457;
  t4469 = t1097*t4423;
  t4481 = t333*t4454;
  t4483 = t4469 + t4481;
  t4529 = t431*t4379;
  t4530 = t4189*t1036;
  t4536 = t4529 + t4530;
  t4538 = -1.*t474*t4536;
  t4539 = t4538 + t4415;
  t4559 = -1.*t1019*t4536;
  t4560 = t4559 + t4447;
  t4548 = -1.*t333*t4539;
  t4563 = t1097*t4560;
  t4570 = t4548 + t4563;
  t4576 = t1097*t4539;
  t4583 = t333*t4560;
  t4584 = t4576 + t4583;
  t4632 = t1019*t4536;
  t4637 = t474*t4414;
  t4639 = t4632 + t4637;
  t4640 = -1.*t1097*t4639;
  t4641 = t4548 + t4640;
  t4645 = -1.*t333*t4639;
  t4647 = t4576 + t4645;
  t4649 = t1172*t4647;
  t4675 = t333*t4539;
  t4682 = t1097*t4639;
  t4683 = t4675 + t4682;
  t4665 = -1.*t161*t4647;
  t4686 = -1.*t161*t4683;
  t4688 = t4686 + t4649;
  t4694 = t1328*t4688;
  t4786 = -1.*t520*t502*t668;
  t4807 = t668*t695*t858;
  t4814 = t4786 + t4807;
  t4747 = -1.*t952*t498;
  t4759 = -1.*t502*t668*t695;
  t4760 = -1.*t520*t668*t858;
  t4765 = t4759 + t4760;
  t4771 = t4765*t955;
  t4780 = t4747 + t4771;
  t4782 = t431*t4780;
  t4823 = t4814*t1036;
  t4831 = t4782 + t4823;
  t4836 = t431*t4814;
  t4845 = -1.*t4780*t1036;
  t4851 = t4836 + t4845;
  t4833 = -1.*t474*t4831;
  t4857 = t1019*t4851;
  t4864 = t4833 + t4857;
  t4867 = t1019*t4831;
  t4869 = t474*t4851;
  t4872 = t4867 + t4869;
  t4866 = t333*t4864;
  t4878 = t1097*t4872;
  t4888 = t4866 + t4878;
  t4893 = t1097*t4864;
  t4895 = -1.*t333*t4872;
  t4900 = t4893 + t4895;
  t1165 = -1.*t161*t1146;
  t1302 = t1172*t1276;
  t1315 = t1165 + t1302;
  t1337 = t1172*t1146;
  t1341 = t161*t1276;
  t1352 = t1337 + t1341;
  t1635 = -1.*t161*t1632;
  t1678 = t1172*t1665;
  t1691 = t1635 + t1678;
  t1700 = t1172*t1632;
  t1701 = t161*t1665;
  t1703 = t1700 + t1701;
  t1886 = -1.*t161*t1880;
  t1929 = t1172*t1923;
  t1931 = t1886 + t1929;
  t1942 = t1172*t1880;
  t1943 = t161*t1923;
  t1945 = t1942 + t1943;
  t2180 = -1.*t161*t2178;
  t2198 = t1172*t2191;
  t2202 = t2180 + t2198;
  t2232 = t1172*t2178;
  t2237 = t161*t2191;
  t2240 = t2232 + t2237;
  t2429 = -1.*t161*t2423;
  t2455 = t1172*t2448;
  t2460 = t2429 + t2455;
  t2468 = t1172*t2423;
  t2469 = t161*t2448;
  t2474 = t2468 + t2469;
  t2596 = t161*t2594;
  t2616 = t1172*t2612;
  t2622 = t2596 + t2616;
  t2635 = t1172*t2594;
  t2644 = -1.*t161*t2612;
  t2660 = t2635 + t2644;
  t2745 = t161*t2738;
  t2758 = t1172*t2753;
  t2761 = t2745 + t2758;
  t2765 = t1172*t2738;
  t2768 = -1.*t161*t2753;
  t2770 = t2765 + t2768;
  t2820 = t161*t2813;
  t2856 = t2820 + t2835;
  t2859 = t1172*t2813;
  t2869 = t2859 + t2862;
  t2918 = -1.*t1172*t2901;
  t2923 = t2918 + t2862;
  t5109 = t74*t2914;
  t3084 = -1.*t161*t3083;
  t3098 = t1172*t3094;
  t3102 = t3084 + t3098;
  t3105 = t1172*t3083;
  t3107 = t161*t3094;
  t3114 = t3105 + t3107;
  t3223 = -1.*t161*t3220;
  t3240 = t1172*t3237;
  t3246 = t3223 + t3240;
  t3254 = t1172*t3220;
  t3267 = t161*t3237;
  t3268 = t3254 + t3267;
  t3372 = -1.*t161*t3370;
  t3398 = t1172*t3395;
  t3405 = t3372 + t3398;
  t3409 = t1172*t3370;
  t3414 = t161*t3395;
  t3419 = t3409 + t3414;
  t3555 = -1.*t161*t3549;
  t3581 = t1172*t3574;
  t3583 = t3555 + t3581;
  t3591 = t1172*t3549;
  t3593 = t161*t3574;
  t3594 = t3591 + t3593;
  t3707 = t161*t3706;
  t3732 = t1172*t3730;
  t3737 = t3707 + t3732;
  t3745 = t1172*t3706;
  t3754 = -1.*t161*t3730;
  t3755 = t3745 + t3754;
  t3838 = t161*t3837;
  t3850 = t1172*t3848;
  t3852 = t3838 + t3850;
  t3857 = t1172*t3837;
  t3864 = -1.*t161*t3848;
  t3868 = t3857 + t3864;
  t3909 = t161*t3902;
  t3924 = t3909 + t3922;
  t3936 = t1172*t3902;
  t3945 = t3936 + t3938;
  t4000 = -1.*t1172*t3982;
  t4003 = t4000 + t3938;
  t5268 = t74*t3987;
  t4012 = t1172*t3982;
  t4020 = t161*t3916;
  t4023 = t4012 + t4020;
  t2954 = t74*t2950;
  t2961 = t2916 + t2954;
  t4122 = -1.*t161*t4120;
  t4136 = t1172*t4129;
  t4138 = t4122 + t4136;
  t4153 = t1172*t4120;
  t4156 = t161*t4129;
  t4171 = t4153 + t4156;
  t5344 = t1328*t4321;
  t5377 = t74*t4345;
  t5378 = t5344 + t5377;
  t4462 = t161*t4458;
  t4491 = t1172*t4483;
  t4493 = t4462 + t4491;
  t4503 = t1172*t4458;
  t4504 = -1.*t161*t4483;
  t4507 = t4503 + t4504;
  t4574 = t161*t4570;
  t4585 = t1172*t4584;
  t4589 = t4574 + t4585;
  t4602 = t1172*t4570;
  t4606 = -1.*t161*t4584;
  t4609 = t4602 + t4606;
  t4644 = t161*t4641;
  t4654 = t4644 + t4649;
  t4662 = t1172*t4641;
  t4666 = t4662 + t4665;
  t4695 = -1.*t1172*t4683;
  t4701 = t4695 + t4665;
  t5444 = t74*t4688;
  t4726 = t1172*t4683;
  t4727 = t161*t4647;
  t4730 = t4726 + t4727;
  t4889 = -1.*t161*t4888;
  t4906 = t1172*t4900;
  t4909 = t4889 + t4906;
  t4918 = t1172*t4888;
  t4927 = t161*t4900;
  t4933 = t4918 + t4927;
  t5701 = -1.*t1019;
  t5703 = 1. + t5701;
  t5833 = -1.*t1097;
  t5834 = 1. + t5833;
  t5875 = -1.*t1172;
  t5889 = 1. + t5875;
  t5924 = -1.*t74;
  t5936 = 1. + t5924;
  t4956 = t1328*t1315;
  t4957 = t74*t1352;
  t4967 = t4956 + t4957;
  t6027 = -1.*t502;
  t6029 = 1. + t6027;
  t5781 = -1.*t431;
  t5782 = 1. + t5781;
  t5783 = -0.08055*t5782;
  t5786 = -0.01004*t1036;
  t5802 = 0. + t5783 + t5786;
  t5705 = -0.08055*t5703;
  t5719 = -0.13004*t474;
  t5727 = 0. + t5705 + t5719;
  t5816 = -0.13004*t5703;
  t5823 = 0.08055*t474;
  t5827 = 0. + t5816 + t5823;
  t5840 = -0.19074*t5834;
  t5847 = 0.03315*t333;
  t5852 = 0. + t5840 + t5847;
  t5857 = -0.03315*t5834;
  t5858 = -0.19074*t333;
  t5868 = 0. + t5857 + t5858;
  t5892 = -0.01315*t5889;
  t5895 = -0.62554*t161;
  t5896 = 0. + t5892 + t5895;
  t5899 = -0.62554*t5889;
  t5906 = 0.01315*t161;
  t5916 = 0. + t5899 + t5906;
  t5938 = -1.03354*t5936;
  t5944 = 0.05315*t1328;
  t5945 = 0. + t5938 + t5944;
  t5954 = -0.05315*t5936;
  t5964 = -1.03354*t1328;
  t5970 = 0. + t5954 + t5964;
  t4980 = t1328*t1691;
  t4983 = t74*t1703;
  t4985 = t4980 + t4983;
  t6063 = 0.07996*t858;
  t6078 = -1.*t498;
  t6079 = 1. + t6078;
  t6081 = 0.135*t6079;
  t6082 = 0.08055*t955;
  t6084 = 0. + t6081 + t6082;
  t6094 = -0.01004*t5782;
  t6103 = 0.08055*t1036;
  t6107 = 0. + t6094 + t6103;
  t4993 = t1328*t1931;
  t4994 = t74*t1945;
  t5000 = t4993 + t4994;
  t6033 = 0.07996*t6029;
  t6047 = -0.135*t858;
  t6052 = 0. + t6033 + t6047;
  t6058 = 0.135*t6029;
  t6067 = 0. + t6058 + t6063;
  t5691 = 0.135*t955;
  t5012 = t1328*t2202;
  t5015 = t74*t2240;
  t5017 = t5012 + t5015;
  t6382 = -0.08055*t6079;
  t6393 = 0. + t6382 + t5691;
  t5020 = t1328*t2460;
  t5021 = t74*t2474;
  t5024 = t5020 + t5021;
  t5031 = t74*t2622;
  t5039 = t1328*t2660;
  t5056 = t5031 + t5039;
  t5071 = t74*t2761;
  t5079 = t1328*t2770;
  t5083 = t5071 + t5079;
  t5085 = t74*t2856;
  t5102 = t1328*t2869;
  t5105 = t5085 + t5102;
  t5128 = t1328*t2923;
  t5131 = t5109 + t5128;
  t6908 = -1.*t1328*t2914;
  t5137 = -1.*t1328*t2950;
  t5142 = t5109 + t5137;
  t5670 = 0.135*t498;
  t5672 = -0.08055*t955;
  t5679 = t5670 + t5672;
  t5688 = 0.08055*t498;
  t5692 = t5688 + t5691;
  t5152 = t1328*t3102;
  t5154 = t74*t3114;
  t5156 = t5152 + t5154;
  t5163 = t1328*t3246;
  t5165 = t74*t3268;
  t5172 = t5163 + t5165;
  t6214 = -0.135*t502;
  t6221 = t6214 + t6063;
  t6239 = 0.07996*t502;
  t6246 = 0.135*t858;
  t6252 = t6239 + t6246;
  t5177 = t1328*t3405;
  t5180 = t74*t3419;
  t5185 = t5177 + t5180;
  t5193 = t1328*t3583;
  t5199 = t74*t3594;
  t5201 = t5193 + t5199;
  t6634 = -0.01004*t431;
  t6641 = -0.08055*t1036;
  t6645 = t6634 + t6641;
  t6649 = 0.08055*t431;
  t6653 = t6649 + t5786;
  t5216 = t74*t3737;
  t5218 = t1328*t3755;
  t5222 = t5216 + t5218;
  t6731 = -0.13004*t1019;
  t6735 = -0.08055*t474;
  t6736 = t6731 + t6735;
  t6740 = 0.08055*t1019;
  t6746 = t6740 + t5719;
  t5231 = t74*t3852;
  t5241 = t1328*t3868;
  t5243 = t5231 + t5241;
  t6810 = 0.03315*t1097;
  t6811 = t6810 + t5858;
  t6818 = -0.19074*t1097;
  t6826 = -0.03315*t333;
  t6827 = t6818 + t6826;
  t5247 = t74*t3924;
  t5257 = t1328*t3945;
  t5260 = t5247 + t5257;
  t6871 = -0.62554*t1172;
  t6877 = -0.01315*t161;
  t6884 = t6871 + t6877;
  t6887 = 0.01315*t1172;
  t6888 = t6887 + t5895;
  t5269 = t1328*t4003;
  t5272 = t5268 + t5269;
  t6929 = 0.05315*t74;
  t6933 = t6929 + t5964;
  t6941 = -1.03354*t74;
  t6943 = -0.05315*t1328;
  t6944 = t6941 + t6943;
  t7558 = -1.*t1328*t3987;
  t5288 = -1.*t1328*t4023;
  t5291 = t5268 + t5288;
  t5298 = t1328*t4138;
  t5311 = t74*t4171;
  t5313 = t5298 + t5311;
  t7797 = 0.1306*t498*t4189;
  t7799 = t4189*t6084;
  t7800 = t4189*t955*t5802;
  t7801 = t4212*t6107;
  t7806 = t5727*t4226;
  t7809 = t5827*t4251;
  t7810 = t5852*t4257;
  t7816 = t5868*t4292;
  t7817 = t5896*t4295;
  t7818 = t5916*t4318;
  t7823 = t5945*t4321;
  t7824 = t5970*t4345;
  t7825 = -0.02565*t5378;
  t7827 = t74*t4321;
  t7832 = -1.*t1328*t4345;
  t7836 = t7827 + t7832;
  t7837 = -1.03824*t7836;
  t5404 = t74*t4493;
  t5405 = t1328*t4507;
  t5406 = t5404 + t5405;
  t5412 = t74*t4589;
  t5417 = t1328*t4609;
  t5426 = t5412 + t5417;
  t5429 = t74*t4654;
  t5431 = t1328*t4666;
  t5435 = t5429 + t5431;
  t5447 = t1328*t4701;
  t5469 = t5444 + t5447;
  t7976 = -1.*t1328*t4688;
  t5478 = -1.*t1328*t4730;
  t5485 = t5444 + t5478;
  t5488 = t1328*t4909;
  t5496 = t74*t4933;
  t5497 = t5488 + t5496;
  p_output1[0]=(t1328*t2474 - 1.*t2460*t74)*var2[3] + (t1328*t2240 - 1.*t2202*t74)*var2[4] + (t1328*t1703 - 1.*t1691*t74)*var2[5] + (t1328*t1945 - 1.*t1931*t74)*var2[6] + (t1328*t1352 - 1.*t1315*t74)*var2[7] + (t1328*t2622 - 1.*t2660*t74)*var2[8] + (t1328*t2761 - 1.*t2770*t74)*var2[9] + (t1328*t2856 - 1.*t2869*t74)*var2[10] + (t2916 - 1.*t2923*t74)*var2[11] + t2961*var2[12];
  p_output1[1]=(t1328*t2950 - 1.*t2914*t74)*var2[3] + (t1328*t3594 - 1.*t3583*t74)*var2[4] + (t1328*t3268 - 1.*t3246*t74)*var2[5] + (t1328*t3419 - 1.*t3405*t74)*var2[6] + (t1328*t3114 - 1.*t3102*t74)*var2[7] + (t1328*t3737 - 1.*t3755*t74)*var2[8] + (t1328*t3852 - 1.*t3868*t74)*var2[9] + (t1328*t3924 - 1.*t3945*t74)*var2[10] + (t3996 - 1.*t4003*t74)*var2[11] + (t3996 + t4023*t74)*var2[12];
  p_output1[2]=(t1328*t4933 - 1.*t4909*t74)*var2[4] + t4355*var2[5] + t4355*var2[6] + (t1328*t4171 - 1.*t4138*t74)*var2[7] + (t1328*t4493 - 1.*t4507*t74)*var2[8] + (t1328*t4589 - 1.*t4609*t74)*var2[9] + (t1328*t4654 - 1.*t4666*t74)*var2[10] + (t4694 - 1.*t4701*t74)*var2[11] + (t4694 + t4730*t74)*var2[12];
  p_output1[3]=0;
  p_output1[4]=t5024*var2[3] + t5017*var2[4] + t4985*var2[5] + t5000*var2[6] + t4967*var2[7] + t5056*var2[8] + t5083*var2[9] + t5105*var2[10] + t5131*var2[11] + t5142*var2[12];
  p_output1[5]=t2961*var2[3] + t5201*var2[4] + t5172*var2[5] + t5185*var2[6] + t5156*var2[7] + t5222*var2[8] + t5243*var2[9] + t5260*var2[10] + t5272*var2[11] + t5291*var2[12];
  p_output1[6]=t5497*var2[4] + t5378*var2[5] + t5378*var2[6] + t5313*var2[7] + t5406*var2[8] + t5426*var2[9] + t5435*var2[10] + t5469*var2[11] + t5485*var2[12];
  p_output1[7]=0;
  p_output1[8]=(t3019 - 1.*t2308*t498)*var2[3] + (-1.*t1984*t498 - 1.*t667*t668*t955)*var2[4] - 1.*t1429*t498*var2[5] - 1.*t1752*t498*var2[6] + t2504*var2[7];
  p_output1[9]=(-1.*t498*t907 + t667*t952*t955)*var2[3] + (-1.*t3446*t498 - 1.*t564*t668*t955)*var2[4] - 1.*t3126*t498*var2[5] - 1.*t3291*t498*var2[6] + t3618*var2[7];
  p_output1[10]=(-1.*t4765*t498 - 1.*t952*t955)*var2[4] - 1.*t4189*t498*var2[5] - 1.*t4189*t498*var2[6] + t4379*var2[7];
  p_output1[11]=0;
  p_output1[12]=var2[0] + (-0.02565*t5024 + t2355*t5727 + t2313*t5802 + t2374*t5827 + t2402*t5852 + t2409*t5868 + t2423*t5896 + t2448*t5916 + t2460*t5945 + t2474*t5970 + t2303*t6052 + t2284*t6067 + t2308*t6084 + t2340*t6107 - 1.03824*(-1.*t1328*t2474 + t2460*t74) - 1.*t564*t6393*t952 + 0.1306*(t2308*t498 + t564*t952*t955))*var2[3] + (-0.02565*t5017 + t2073*t5727 + t1998*t5802 + t2109*t5827 + t2128*t5852 + t2149*t5868 + t2178*t5896 + t2191*t5916 + t2202*t5945 + t2240*t5970 + t1984*t6084 + t2059*t6107 - 1.*t6393*t667*t668 - 1.03824*(-1.*t1328*t2240 + t2202*t74) + t520*t6052*t667*t952 + t6067*t667*t695*t952 + 0.1306*(t1984*t498 + t667*t668*t955))*var2[4] + (0.1306*t1429*t498 - 0.02565*t4985 + t1509*t5727 + t1560*t5827 + t1577*t5852 + t1626*t5868 + t1632*t5896 + t1665*t5916 + t1691*t5945 + t1703*t5970 + t1407*t6052 + t1429*t6084 + t1490*t6107 - 1.03824*(-1.*t1328*t1703 + t1691*t74) + t6067*t841 + t1429*t5802*t955)*var2[5] + (0.1306*t1752*t498 - 0.02565*t5000 + t1783*t5727 + t1823*t5827 + t1840*t5852 + t1870*t5868 + t1880*t5896 + t1923*t5916 + t1931*t5945 + t1945*t5970 + t1752*t6084 + t1768*t6107 - 1.03824*(-1.*t1328*t1945 + t1931*t74) + t6252*t783 + t6221*t841 + t1752*t5802*t955)*var2[6] + (-0.02565*t4967 + t1045*t5852 + t1138*t5868 + t1146*t5896 + t1276*t5916 + t1315*t5945 + t1352*t5970 - 1.03824*(-1.*t1328*t1352 + t1315*t74) + t5692*t907 + t5679*t667*t952 + 0.1306*(-1.*t498*t667*t952 - 1.*t907*t955) + t431*t5727*t979 + t5802*t979 - 1.*t1036*t5827*t979)*var2[7] + (-0.02565*t5056 + t2543*t5727 + t2523*t5827 + t2587*t5852 + t2559*t5868 + t2612*t5896 + t2594*t5916 + t2660*t5945 + t2622*t5970 + t2504*t6645 + t1752*t6653 - 1.03824*(-1.*t1328*t2622 + t2660*t74))*var2[8] + (-0.02565*t5083 + t2718*t5852 + t2709*t5868 + t2753*t5896 + t2738*t5916 + t2770*t5945 + t2761*t5970 + t2697*t6736 + t2543*t6746 - 1.03824*(-1.*t1328*t2761 + t2770*t74))*var2[9] + (-0.02565*t5105 + t2834*t5896 + t2813*t5916 + t2869*t5945 + t2856*t5970 + t2709*t6811 + t2809*t6827 - 1.03824*(-1.*t1328*t2856 + t2869*t74))*var2[10] + (-0.02565*t5131 + t2923*t5945 + t2914*t5970 + t2901*t6884 + t2834*t6888 - 1.03824*(t6908 + t2923*t74))*var2[11] + (-0.02565*t5142 + t2914*t6933 + t2950*t6944 - 1.03824*(t6908 - 1.*t2950*t74))*var2[12];
  p_output1[13]=var2[1] + (-0.02565*t2961 - 1.03824*t5142 + t2697*t5727 + t2504*t5802 + t2543*t5827 + t2709*t5852 + t2809*t5868 + t2901*t5896 + t2834*t5916 + t2914*t5945 + t2950*t5970 + t1752*t6107 + t6067*t783 + t6052*t841 + t6084*t907 + t6393*t667*t952 + 0.1306*t979)*var2[3] + (-0.02565*t5201 + t3504*t5727 + t3473*t5802 + t3524*t5827 + t3529*t5852 + t3546*t5868 + t3549*t5896 + t3574*t5916 + t3583*t5945 + t3594*t5970 + t3446*t6084 + t3493*t6107 - 1.*t564*t6393*t668 - 1.03824*(-1.*t1328*t3594 + t3583*t74) + t520*t564*t6052*t952 + t564*t6067*t695*t952 + 0.1306*(t3446*t498 + t564*t668*t955))*var2[4] + (0.1306*t3126*t498 - 0.02565*t5172 + t3147*t5727 + t3177*t5827 + t3194*t5852 + t3211*t5868 + t3220*t5896 + t3237*t5916 + t3246*t5945 + t3268*t5970 + t2284*t6052 + t3001*t6067 + t3126*t6084 + t3138*t6107 - 1.03824*(-1.*t1328*t3268 + t3246*t74) + t3126*t5802*t955)*var2[5] + (0.1306*t3291*t498 - 0.02565*t5185 + t3310*t5727 + t3328*t5827 + t3334*t5852 + t3363*t5868 + t3370*t5896 + t3395*t5916 + t3405*t5945 + t3419*t5970 + t3291*t6084 + t3304*t6107 + t3001*t6221 + t2978*t6252 - 1.03824*(-1.*t1328*t3419 + t3405*t74) + t3291*t5802*t955)*var2[6] + (-0.02565*t5156 + t3007*t5692 + t3032*t431*t5727 + t3032*t5802 - 1.*t1036*t3032*t5827 + t3037*t5852 + t3070*t5868 + t3083*t5896 + t3094*t5916 + t3102*t5945 + t3114*t5970 - 1.03824*(-1.*t1328*t3114 + t3102*t74) + t564*t5679*t952 + 0.1306*(t2268 - 1.*t3007*t955))*var2[7] + (-0.02565*t5222 + t3655*t5727 + t3639*t5827 + t3703*t5852 + t3669*t5868 + t3730*t5896 + t3706*t5916 + t3755*t5945 + t3737*t5970 + t3618*t6645 + t3291*t6653 - 1.03824*(-1.*t1328*t3737 + t3755*t74))*var2[8] + (-0.02565*t5243 + t3830*t5852 + t3817*t5868 + t3848*t5896 + t3837*t5916 + t3868*t5945 + t3852*t5970 + t3804*t6736 + t3655*t6746 - 1.03824*(-1.*t1328*t3852 + t3868*t74))*var2[9] + (-0.02565*t5260 + t3916*t5896 + t3902*t5916 + t3945*t5945 + t3924*t5970 + t3817*t6811 + t3898*t6827 - 1.03824*(-1.*t1328*t3924 + t3945*t74))*var2[10] + (-0.02565*t5272 + t4003*t5945 + t3987*t5970 + t3982*t6884 + t3916*t6888 - 1.03824*(t4003*t74 + t7558))*var2[11] + (-0.02565*t5291 + t3987*t6933 + t4023*t6944 - 1.03824*(-1.*t4023*t74 + t7558))*var2[12];
  p_output1[14]=var2[2] + (-0.02565*t5497 + t4831*t5727 + t4780*t5802 + t4851*t5827 + t4864*t5852 + t4872*t5868 + t4888*t5896 + t4900*t5916 + t4909*t5945 + t4933*t5970 + t4765*t6084 + t4814*t6107 - 1.*t520*t6052*t668 - 1.*t6067*t668*t695 - 1.03824*(-1.*t1328*t4933 + t4909*t74) - 1.*t6393*t952 + 0.1306*(t4765*t498 + t952*t955))*var2[4] + (t7797 + t7799 + t7800 + t7801 + t7806 + t7809 + t7810 + t7816 + t7817 + t7818 + t7823 + t7824 + t7825 + t7837 + t520*t6067*t952 - 1.*t6052*t695*t952)*var2[5] + (t7797 + t7799 + t7800 + t7801 + t7806 + t7809 + t7810 + t7816 + t7817 + t7818 + t7823 + t7824 + t7825 + t7837 + t520*t6221*t952 + t6252*t695*t952)*var2[6] + (-0.02565*t5313 + t4057*t5692 + t4070*t431*t5727 + t4070*t5802 - 1.*t1036*t4070*t5827 + t4091*t5852 + t4108*t5868 + t4120*t5896 + t4129*t5916 + t4138*t5945 + t4171*t5970 - 1.*t5679*t668 - 1.03824*(-1.*t1328*t4171 + t4138*t74) + 0.1306*(t498*t668 - 1.*t4057*t955))*var2[7] + (-0.02565*t5406 + t4414*t5727 + t4396*t5827 + t4454*t5852 + t4423*t5868 + t4483*t5896 + t4458*t5916 + t4507*t5945 + t4493*t5970 + t4379*t6645 + t4189*t6653 - 1.03824*(-1.*t1328*t4493 + t4507*t74))*var2[8] + (-0.02565*t5426 + t4560*t5852 + t4539*t5868 + t4584*t5896 + t4570*t5916 + t4609*t5945 + t4589*t5970 + t4536*t6736 + t4414*t6746 - 1.03824*(-1.*t1328*t4589 + t4609*t74))*var2[9] + (-0.02565*t5435 + t4647*t5896 + t4641*t5916 + t4666*t5945 + t4654*t5970 + t4539*t6811 + t4639*t6827 - 1.03824*(-1.*t1328*t4654 + t4666*t74))*var2[10] + (-0.02565*t5469 + t4701*t5945 + t4688*t5970 + t4683*t6884 + t4647*t6888 - 1.03824*(t4701*t74 + t7976))*var2[11] + (-0.02565*t5485 + t4688*t6933 + t4730*t6944 - 1.03824*(-1.*t4730*t74 + t7976))*var2[12];
  p_output1[15]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 20 && ncols == 1) && 
      !(mrows == 1 && ncols == 20))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 20 && ncols == 1) && 
      !(mrows == 1 && ncols == 20))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 4, (mwSize) 4, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "dT_LeftToe_mex.hh"

namespace SymExpression
{

void dT_LeftToe_mex_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
