/*
 * Automatically Generated from Mathematica.
 * Mon 11 May 2020 22:34:21 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t996;
  double t1038;
  double t1084;
  double t1189;
  double t881;
  double t1211;
  double t1256;
  double t1140;
  double t1228;
  double t1231;
  double t730;
  double t1260;
  double t1274;
  double t1350;
  double t1360;
  double t1421;
  double t1443;
  double t1509;
  double t1551;
  double t1605;
  double t1639;
  double t1255;
  double t1614;
  double t1619;
  double t703;
  double t1649;
  double t1652;
  double t1660;
  double t1730;
  double t1625;
  double t1692;
  double t1717;
  double t348;
  double t1755;
  double t1770;
  double t1772;
  double t1933;
  double t1719;
  double t1834;
  double t1852;
  double t151;
  double t1948;
  double t2017;
  double t2019;
  double t2061;
  double t1896;
  double t2037;
  double t2039;
  double t138;
  double t2088;
  double t2100;
  double t2139;
  double t2344;
  double t2328;
  double t2362;
  double t2425;
  double t2459;
  double t2465;
  double t2470;
  double t2445;
  double t2483;
  double t2496;
  double t2512;
  double t2522;
  double t2551;
  double t2507;
  double t2593;
  double t2595;
  double t2648;
  double t2652;
  double t2655;
  double t2607;
  double t2658;
  double t2662;
  double t2715;
  double t2718;
  double t2743;
  double t2703;
  double t2751;
  double t2766;
  double t2782;
  double t2796;
  double t2805;
  double t2775;
  double t2814;
  double t2852;
  double t2856;
  double t2870;
  double t2887;
  double t3019;
  double t3025;
  double t3029;
  double t3032;
  double t3045;
  double t3050;
  double t3062;
  double t3064;
  double t3069;
  double t3070;
  double t3079;
  double t3085;
  double t3093;
  double t3111;
  double t3118;
  double t3089;
  double t3121;
  double t3126;
  double t3148;
  double t3162;
  double t3168;
  double t3128;
  double t3169;
  double t3180;
  double t3199;
  double t3213;
  double t3219;
  double t3262;
  double t3272;
  double t3317;
  double t3325;
  double t3283;
  double t3339;
  double t3341;
  double t3353;
  double t3358;
  double t3370;
  double t3350;
  double t3375;
  double t3379;
  double t3383;
  double t3411;
  double t3415;
  double t3382;
  double t3425;
  double t3433;
  double t3439;
  double t3441;
  double t3447;
  double t3435;
  double t3453;
  double t3461;
  double t3481;
  double t3491;
  double t3495;
  double t3599;
  double t3605;
  double t3611;
  double t3593;
  double t3614;
  double t3616;
  double t3618;
  double t3620;
  double t3624;
  double t3617;
  double t3626;
  double t3663;
  double t3682;
  double t3683;
  double t3692;
  double t3676;
  double t3694;
  double t3701;
  double t3715;
  double t3720;
  double t3738;
  double t3706;
  double t3739;
  double t3743;
  double t3750;
  double t3756;
  double t3760;
  double t3807;
  double t3811;
  double t3833;
  double t3843;
  double t3848;
  double t3880;
  double t3887;
  double t3871;
  double t3894;
  double t3902;
  double t3908;
  double t3924;
  double t3933;
  double t3903;
  double t3936;
  double t3962;
  double t3966;
  double t3977;
  double t3979;
  double t4045;
  double t4046;
  double t4049;
  double t4054;
  double t4063;
  double t4071;
  double t4081;
  double t4066;
  double t4085;
  double t4094;
  double t4116;
  double t4135;
  double t4156;
  double t4261;
  double t4265;
  double t4271;
  double t4303;
  double t4310;
  double t4327;
  double t4328;
  double t4318;
  double t4345;
  double t4427;
  double t4447;
  double t4449;
  double t4495;
  double t4508;
  double t4510;
  double t4514;
  double t4516;
  double t4520;
  double t4513;
  double t4521;
  double t4530;
  double t4549;
  double t4574;
  double t4582;
  double t4585;
  double t4612;
  double t4633;
  double t4538;
  double t4640;
  double t4660;
  double t4673;
  double t4689;
  double t4691;
  double t4661;
  double t4702;
  double t4731;
  double t4750;
  double t4752;
  double t4762;
  double t4742;
  double t4765;
  double t4773;
  double t4778;
  double t4782;
  double t4787;
  double t4774;
  double t4794;
  double t4798;
  double t4805;
  double t4806;
  double t4822;
  double t4908;
  double t4909;
  double t4917;
  double t4924;
  double t4948;
  double t4956;
  double t4965;
  double t4968;
  double t4971;
  double t4921;
  double t4979;
  double t4980;
  double t4990;
  double t5000;
  double t5009;
  double t4986;
  double t5018;
  double t5023;
  double t5048;
  double t5056;
  double t5057;
  double t5033;
  double t5070;
  double t5084;
  double t5109;
  double t5113;
  double t5119;
  double t5104;
  double t5120;
  double t5121;
  double t5127;
  double t5134;
  double t5141;
  double t5230;
  double t5232;
  double t5233;
  double t5234;
  double t5243;
  double t5259;
  double t5272;
  double t5293;
  double t5249;
  double t5297;
  double t5300;
  double t5310;
  double t5311;
  double t5315;
  double t5304;
  double t5332;
  double t5335;
  double t5349;
  double t5374;
  double t5381;
  double t5348;
  double t5393;
  double t5399;
  double t5417;
  double t5425;
  double t5437;
  double t5413;
  double t5438;
  double t5455;
  double t5463;
  double t5467;
  double t5471;
  double t5541;
  double t5548;
  double t5568;
  double t5574;
  double t5602;
  double t5604;
  double t5614;
  double t5628;
  double t5638;
  double t5643;
  double t5653;
  double t5654;
  double t5667;
  double t5668;
  double t5671;
  double t5661;
  double t5675;
  double t5678;
  double t5687;
  double t5688;
  double t5712;
  double t5683;
  double t5718;
  double t5719;
  double t5727;
  double t5749;
  double t5750;
  double t5829;
  double t5837;
  double t5848;
  double t5851;
  double t5847;
  double t5853;
  double t5856;
  double t5886;
  double t5889;
  double t5900;
  double t5861;
  double t5930;
  double t5934;
  double t5975;
  double t5995;
  double t5997;
  double t5956;
  double t6000;
  double t6001;
  double t6007;
  double t6011;
  double t6013;
  double t6003;
  double t6018;
  double t6022;
  double t6031;
  double t6035;
  double t6036;
  double t4465;
  double t4466;
  double t6178;
  double t6179;
  double t6181;
  double t6171;
  double t6183;
  double t6186;
  double t6213;
  double t6215;
  double t6232;
  double t6191;
  double t6233;
  double t6236;
  double t6259;
  double t6261;
  double t6262;
  double t6258;
  double t6270;
  double t6279;
  double t6290;
  double t6302;
  double t6306;
  double t6282;
  double t6331;
  double t6335;
  double t6345;
  double t6361;
  double t6379;
  double t6445;
  double t6446;
  double t6447;
  double t6451;
  double t6454;
  double t6468;
  double t6469;
  double t6457;
  double t6485;
  double t6487;
  double t6492;
  double t6525;
  double t6527;
  double t6488;
  double t6530;
  double t6550;
  double t6584;
  double t6591;
  double t6600;
  double t6657;
  double t6660;
  double t6666;
  double t6676;
  double t6679;
  double t6704;
  double t6720;
  double t6687;
  double t6726;
  double t6728;
  double t6730;
  double t6732;
  double t6747;
  double t6805;
  double t6806;
  double t6807;
  double t6810;
  double t6813;
  double t6826;
  double t6828;
  double t6814;
  double t6865;
  double t6887;
  double t6890;
  double t6898;
  double t6975;
  double t6978;
  double t6979;
  double t6985;
  double t6990;
  double t6992;
  double t6997;
  double t7001;
  double t7002;
  double t7005;
  double t7010;
  double t7013;
  double t7004;
  double t7020;
  double t7026;
  double t7033;
  double t7035;
  double t7042;
  double t7030;
  double t7044;
  double t7046;
  double t7057;
  double t7060;
  double t7061;
  double t7108;
  double t7110;
  double t7121;
  double t7127;
  double t7134;
  double t7135;
  double t7122;
  double t7137;
  double t7144;
  double t7149;
  double t7150;
  double t7156;
  double t7145;
  double t7168;
  double t7177;
  double t7189;
  double t7190;
  double t7194;
  double t7185;
  double t7200;
  double t7204;
  double t7213;
  double t7219;
  double t7228;
  double t7205;
  double t7229;
  double t7231;
  double t7243;
  double t7246;
  double t7247;
  double t7242;
  double t7249;
  double t7252;
  double t7254;
  double t7259;
  double t7260;
  double t7263;
  double t7278;
  double t7280;
  double t7306;
  double t7308;
  double t7313;
  double t7293;
  double t7319;
  double t7332;
  double t7336;
  double t7337;
  double t7340;
  double t7334;
  double t7342;
  double t7344;
  double t7353;
  double t7357;
  double t7369;
  double t7346;
  double t7371;
  double t7372;
  double t7376;
  double t7377;
  double t7386;
  double t7374;
  double t7391;
  double t7397;
  double t7403;
  double t7408;
  double t7412;
  double t7449;
  double t7451;
  double t7453;
  double t7455;
  double t7458;
  double t7468;
  double t7470;
  double t7460;
  double t7472;
  double t7475;
  double t7483;
  double t7485;
  double t7494;
  double t7479;
  double t7495;
  double t7498;
  double t7512;
  double t7515;
  double t7520;
  double t7550;
  double t7551;
  double t7552;
  double t7561;
  double t7563;
  double t7567;
  double t7572;
  double t7566;
  double t7574;
  double t7576;
  double t7579;
  double t7585;
  double t7586;
  double t7608;
  double t7609;
  double t7613;
  double t7618;
  double t7621;
  double t7629;
  double t7636;
  double t7626;
  double t7649;
  double t7659;
  double t7660;
  double t7668;
  double t7710;
  double t7718;
  double t7721;
  double t7733;
  double t7736;
  double t7737;
  double t7738;
  double t7741;
  double t7745;
  double t7724;
  double t7746;
  double t7750;
  double t7753;
  double t7757;
  double t7760;
  double t7751;
  double t7761;
  double t7763;
  double t7777;
  double t7780;
  double t7783;
  double t7767;
  double t7784;
  double t7786;
  double t7789;
  double t7794;
  double t7806;
  double t7787;
  double t7807;
  double t7808;
  double t7815;
  double t7816;
  double t7819;
  double t2054;
  double t2152;
  double t2176;
  double t2258;
  double t2297;
  double t2322;
  double t2854;
  double t2902;
  double t2914;
  double t2935;
  double t2941;
  double t2942;
  double t3192;
  double t3220;
  double t3223;
  double t3227;
  double t3240;
  double t3243;
  double t3473;
  double t3510;
  double t3517;
  double t3531;
  double t3545;
  double t3546;
  double t3747;
  double t3763;
  double t3764;
  double t3772;
  double t3774;
  double t3783;
  double t3965;
  double t3981;
  double t3982;
  double t4019;
  double t4020;
  double t4021;
  double t4097;
  double t4170;
  double t4175;
  double t4199;
  double t4200;
  double t4203;
  double t4331;
  double t4332;
  double t4370;
  double t4371;
  double t4451;
  double t4458;
  double t4801;
  double t4840;
  double t4844;
  double t4860;
  double t4861;
  double t4863;
  double t5125;
  double t5145;
  double t5146;
  double t5152;
  double t5154;
  double t5194;
  double t5459;
  double t5477;
  double t5478;
  double t5499;
  double t5503;
  double t5512;
  double t5724;
  double t5761;
  double t5764;
  double t5771;
  double t5795;
  double t5796;
  double t6030;
  double t6048;
  double t6069;
  double t6073;
  double t6074;
  double t6079;
  double t6116;
  double t6119;
  double t6120;
  double t4469;
  double t6336;
  double t6381;
  double t6382;
  double t6388;
  double t6394;
  double t6405;
  double t6569;
  double t6619;
  double t6622;
  double t6634;
  double t6635;
  double t6643;
  double t6729;
  double t6757;
  double t6761;
  double t6770;
  double t6772;
  double t6774;
  double t6830;
  double t6855;
  double t6867;
  double t6869;
  double t6900;
  double t6924;
  double t6945;
  double t6957;
  double t7047;
  double t7062;
  double t7063;
  double t7084;
  double t7086;
  double t7090;
  double t8196;
  double t8197;
  double t8199;
  double t7398;
  double t7416;
  double t7419;
  double t7429;
  double t7432;
  double t7436;
  double t7502;
  double t7521;
  double t7528;
  double t7534;
  double t7535;
  double t7539;
  double t7577;
  double t7588;
  double t7589;
  double t7595;
  double t7599;
  double t7601;
  double t7637;
  double t7638;
  double t7652;
  double t7653;
  double t7675;
  double t7678;
  double t7689;
  double t7692;
  double t7814;
  double t7821;
  double t7827;
  double t7832;
  double t7842;
  double t7848;
  t996 = Cos(var1[3]);
  t1038 = Cos(var1[4]);
  t1084 = Cos(var1[5]);
  t1189 = Sin(var1[13]);
  t881 = Cos(var1[13]);
  t1211 = Sin(var1[5]);
  t1256 = Cos(var1[15]);
  t1140 = t881*t996*t1038*t1084;
  t1228 = -1.*t996*t1038*t1189*t1211;
  t1231 = t1140 + t1228;
  t730 = Sin(var1[15]);
  t1260 = Cos(var1[14]);
  t1274 = Sin(var1[4]);
  t1350 = -1.*t1260*t996*t1274;
  t1360 = Sin(var1[14]);
  t1421 = t996*t1038*t1084*t1189;
  t1443 = t881*t996*t1038*t1211;
  t1509 = t1421 + t1443;
  t1551 = t1360*t1509;
  t1605 = t1350 + t1551;
  t1639 = Cos(var1[16]);
  t1255 = t730*t1231;
  t1614 = t1256*t1605;
  t1619 = t1255 + t1614;
  t703 = Sin(var1[16]);
  t1649 = t1256*t1231;
  t1652 = -1.*t730*t1605;
  t1660 = t1649 + t1652;
  t1730 = Cos(var1[17]);
  t1625 = -1.*t703*t1619;
  t1692 = t1639*t1660;
  t1717 = t1625 + t1692;
  t348 = Sin(var1[17]);
  t1755 = t1639*t1619;
  t1770 = t703*t1660;
  t1772 = t1755 + t1770;
  t1933 = Cos(var1[18]);
  t1719 = t348*t1717;
  t1834 = t1730*t1772;
  t1852 = t1719 + t1834;
  t151 = Sin(var1[18]);
  t1948 = t1730*t1717;
  t2017 = -1.*t348*t1772;
  t2019 = t1948 + t2017;
  t2061 = Cos(var1[19]);
  t1896 = -1.*t151*t1852;
  t2037 = t1933*t2019;
  t2039 = t1896 + t2037;
  t138 = Sin(var1[19]);
  t2088 = t1933*t1852;
  t2100 = t151*t2019;
  t2139 = t2088 + t2100;
  t2344 = Sin(var1[3]);
  t2328 = t996*t1084*t1274;
  t2362 = t2344*t1211;
  t2425 = t2328 + t2362;
  t2459 = t1084*t2344;
  t2465 = -1.*t996*t1274*t1211;
  t2470 = t2459 + t2465;
  t2445 = -1.*t1189*t2425;
  t2483 = t881*t2470;
  t2496 = t2445 + t2483;
  t2512 = t881*t2425;
  t2522 = t1189*t2470;
  t2551 = t2512 + t2522;
  t2507 = t730*t2496;
  t2593 = t1256*t1360*t2551;
  t2595 = t2507 + t2593;
  t2648 = t1256*t2496;
  t2652 = -1.*t1360*t730*t2551;
  t2655 = t2648 + t2652;
  t2607 = -1.*t703*t2595;
  t2658 = t1639*t2655;
  t2662 = t2607 + t2658;
  t2715 = t1639*t2595;
  t2718 = t703*t2655;
  t2743 = t2715 + t2718;
  t2703 = t348*t2662;
  t2751 = t1730*t2743;
  t2766 = t2703 + t2751;
  t2782 = t1730*t2662;
  t2796 = -1.*t348*t2743;
  t2805 = t2782 + t2796;
  t2775 = -1.*t151*t2766;
  t2814 = t1933*t2805;
  t2852 = t2775 + t2814;
  t2856 = t1933*t2766;
  t2870 = t151*t2805;
  t2887 = t2856 + t2870;
  t3019 = -1.*t996*t1038*t1360;
  t3025 = t1189*t2425;
  t3029 = -1.*t1084*t2344;
  t3032 = t996*t1274*t1211;
  t3045 = t3029 + t3032;
  t3050 = t881*t3045;
  t3062 = t3025 + t3050;
  t3064 = t1260*t3062;
  t3069 = t3019 + t3064;
  t3070 = -1.*t1639*t730*t3069;
  t3079 = -1.*t1256*t703*t3069;
  t3085 = t3070 + t3079;
  t3093 = t1256*t1639*t3069;
  t3111 = -1.*t730*t703*t3069;
  t3118 = t3093 + t3111;
  t3089 = t348*t3085;
  t3121 = t1730*t3118;
  t3126 = t3089 + t3121;
  t3148 = t1730*t3085;
  t3162 = -1.*t348*t3118;
  t3168 = t3148 + t3162;
  t3128 = -1.*t151*t3126;
  t3169 = t1933*t3168;
  t3180 = t3128 + t3169;
  t3199 = t1933*t3126;
  t3213 = t151*t3168;
  t3219 = t3199 + t3213;
  t3262 = -1.*t881*t3045;
  t3272 = t2445 + t3262;
  t3317 = -1.*t1189*t3045;
  t3325 = t2512 + t3317;
  t3283 = t730*t3272;
  t3339 = t1256*t1360*t3325;
  t3341 = t3283 + t3339;
  t3353 = t1256*t3272;
  t3358 = -1.*t1360*t730*t3325;
  t3370 = t3353 + t3358;
  t3350 = -1.*t703*t3341;
  t3375 = t1639*t3370;
  t3379 = t3350 + t3375;
  t3383 = t1639*t3341;
  t3411 = t703*t3370;
  t3415 = t3383 + t3411;
  t3382 = t348*t3379;
  t3425 = t1730*t3415;
  t3433 = t3382 + t3425;
  t3439 = t1730*t3379;
  t3441 = -1.*t348*t3415;
  t3447 = t3439 + t3441;
  t3435 = -1.*t151*t3433;
  t3453 = t1933*t3447;
  t3461 = t3435 + t3453;
  t3481 = t1933*t3433;
  t3491 = t151*t3447;
  t3495 = t3481 + t3491;
  t3599 = t1260*t996*t1038;
  t3605 = t1360*t3062;
  t3611 = t3599 + t3605;
  t3593 = -1.*t730*t3325;
  t3614 = -1.*t1256*t3611;
  t3616 = t3593 + t3614;
  t3618 = t1256*t3325;
  t3620 = -1.*t730*t3611;
  t3624 = t3618 + t3620;
  t3617 = t703*t3616;
  t3626 = t1639*t3624;
  t3663 = t3617 + t3626;
  t3682 = t1639*t3616;
  t3683 = -1.*t703*t3624;
  t3692 = t3682 + t3683;
  t3676 = -1.*t348*t3663;
  t3694 = t1730*t3692;
  t3701 = t3676 + t3694;
  t3715 = t1730*t3663;
  t3720 = t348*t3692;
  t3738 = t3715 + t3720;
  t3706 = t151*t3701;
  t3739 = t1933*t3738;
  t3743 = t3706 + t3739;
  t3750 = t1933*t3701;
  t3756 = -1.*t151*t3738;
  t3760 = t3750 + t3756;
  t3807 = t730*t3325;
  t3811 = t1256*t3611;
  t3833 = t3807 + t3811;
  t3843 = -1.*t703*t3833;
  t3848 = t3843 + t3626;
  t3880 = -1.*t1639*t3833;
  t3887 = t3880 + t3683;
  t3871 = -1.*t348*t3848;
  t3894 = t1730*t3887;
  t3902 = t3871 + t3894;
  t3908 = t1730*t3848;
  t3924 = t348*t3887;
  t3933 = t3908 + t3924;
  t3903 = t151*t3902;
  t3936 = t1933*t3933;
  t3962 = t3903 + t3936;
  t3966 = t1933*t3902;
  t3977 = -1.*t151*t3933;
  t3979 = t3966 + t3977;
  t4045 = t1639*t3833;
  t4046 = t703*t3624;
  t4049 = t4045 + t4046;
  t4054 = -1.*t1730*t4049;
  t4063 = t3871 + t4054;
  t4071 = -1.*t348*t4049;
  t4081 = t3908 + t4071;
  t4066 = t151*t4063;
  t4085 = t1933*t4081;
  t4094 = t4066 + t4085;
  t4116 = t1933*t4063;
  t4135 = -1.*t151*t4081;
  t4156 = t4116 + t4135;
  t4261 = t348*t3848;
  t4265 = t1730*t4049;
  t4271 = t4261 + t4265;
  t4303 = -1.*t151*t4271;
  t4310 = t4303 + t4085;
  t4327 = -1.*t1933*t4271;
  t4328 = t4327 + t4135;
  t4318 = -1.*t138*t4310;
  t4345 = t2061*t4310;
  t4427 = t1933*t4271;
  t4447 = t151*t4081;
  t4449 = t4427 + t4447;
  t4495 = -1.*t1084*t2344*t1274;
  t4508 = t996*t1211;
  t4510 = t4495 + t4508;
  t4514 = -1.*t996*t1084;
  t4516 = -1.*t2344*t1274*t1211;
  t4520 = t4514 + t4516;
  t4513 = t881*t4510;
  t4521 = -1.*t1189*t4520;
  t4530 = t4513 + t4521;
  t4549 = -1.*t1260*t1038*t2344;
  t4574 = t1189*t4510;
  t4582 = t881*t4520;
  t4585 = t4574 + t4582;
  t4612 = t1360*t4585;
  t4633 = t4549 + t4612;
  t4538 = t730*t4530;
  t4640 = t1256*t4633;
  t4660 = t4538 + t4640;
  t4673 = t1256*t4530;
  t4689 = -1.*t730*t4633;
  t4691 = t4673 + t4689;
  t4661 = -1.*t703*t4660;
  t4702 = t1639*t4691;
  t4731 = t4661 + t4702;
  t4750 = t1639*t4660;
  t4752 = t703*t4691;
  t4762 = t4750 + t4752;
  t4742 = t348*t4731;
  t4765 = t1730*t4762;
  t4773 = t4742 + t4765;
  t4778 = t1730*t4731;
  t4782 = -1.*t348*t4762;
  t4787 = t4778 + t4782;
  t4774 = -1.*t151*t4773;
  t4794 = t1933*t4787;
  t4798 = t4774 + t4794;
  t4805 = t1933*t4773;
  t4806 = t151*t4787;
  t4822 = t4805 + t4806;
  t4908 = t881*t1038*t1084*t2344;
  t4909 = -1.*t1038*t1189*t2344*t1211;
  t4917 = t4908 + t4909;
  t4924 = -1.*t1260*t2344*t1274;
  t4948 = t1038*t1084*t1189*t2344;
  t4956 = t881*t1038*t2344*t1211;
  t4965 = t4948 + t4956;
  t4968 = t1360*t4965;
  t4971 = t4924 + t4968;
  t4921 = t730*t4917;
  t4979 = t1256*t4971;
  t4980 = t4921 + t4979;
  t4990 = t1256*t4917;
  t5000 = -1.*t730*t4971;
  t5009 = t4990 + t5000;
  t4986 = -1.*t703*t4980;
  t5018 = t1639*t5009;
  t5023 = t4986 + t5018;
  t5048 = t1639*t4980;
  t5056 = t703*t5009;
  t5057 = t5048 + t5056;
  t5033 = t348*t5023;
  t5070 = t1730*t5057;
  t5084 = t5033 + t5070;
  t5109 = t1730*t5023;
  t5113 = -1.*t348*t5057;
  t5119 = t5109 + t5113;
  t5104 = -1.*t151*t5084;
  t5120 = t1933*t5119;
  t5121 = t5104 + t5120;
  t5127 = t1933*t5084;
  t5134 = t151*t5119;
  t5141 = t5127 + t5134;
  t5230 = t1084*t2344*t1274;
  t5232 = -1.*t996*t1211;
  t5233 = t5230 + t5232;
  t5234 = -1.*t1189*t5233;
  t5243 = t5234 + t4582;
  t5259 = t881*t5233;
  t5272 = t1189*t4520;
  t5293 = t5259 + t5272;
  t5249 = t730*t5243;
  t5297 = t1256*t1360*t5293;
  t5300 = t5249 + t5297;
  t5310 = t1256*t5243;
  t5311 = -1.*t1360*t730*t5293;
  t5315 = t5310 + t5311;
  t5304 = -1.*t703*t5300;
  t5332 = t1639*t5315;
  t5335 = t5304 + t5332;
  t5349 = t1639*t5300;
  t5374 = t703*t5315;
  t5381 = t5349 + t5374;
  t5348 = t348*t5335;
  t5393 = t1730*t5381;
  t5399 = t5348 + t5393;
  t5417 = t1730*t5335;
  t5425 = -1.*t348*t5381;
  t5437 = t5417 + t5425;
  t5413 = -1.*t151*t5399;
  t5438 = t1933*t5437;
  t5455 = t5413 + t5438;
  t5463 = t1933*t5399;
  t5467 = t151*t5437;
  t5471 = t5463 + t5467;
  t5541 = -1.*t1038*t1360*t2344;
  t5548 = t1189*t5233;
  t5568 = t996*t1084;
  t5574 = t2344*t1274*t1211;
  t5602 = t5568 + t5574;
  t5604 = t881*t5602;
  t5614 = t5548 + t5604;
  t5628 = t1260*t5614;
  t5638 = t5541 + t5628;
  t5643 = -1.*t1639*t730*t5638;
  t5653 = -1.*t1256*t703*t5638;
  t5654 = t5643 + t5653;
  t5667 = t1256*t1639*t5638;
  t5668 = -1.*t730*t703*t5638;
  t5671 = t5667 + t5668;
  t5661 = t348*t5654;
  t5675 = t1730*t5671;
  t5678 = t5661 + t5675;
  t5687 = t1730*t5654;
  t5688 = -1.*t348*t5671;
  t5712 = t5687 + t5688;
  t5683 = -1.*t151*t5678;
  t5718 = t1933*t5712;
  t5719 = t5683 + t5718;
  t5727 = t1933*t5678;
  t5749 = t151*t5712;
  t5750 = t5727 + t5749;
  t5829 = -1.*t881*t5602;
  t5837 = t5234 + t5829;
  t5848 = -1.*t1189*t5602;
  t5851 = t5259 + t5848;
  t5847 = t730*t5837;
  t5853 = t1256*t1360*t5851;
  t5856 = t5847 + t5853;
  t5886 = t1256*t5837;
  t5889 = -1.*t1360*t730*t5851;
  t5900 = t5886 + t5889;
  t5861 = -1.*t703*t5856;
  t5930 = t1639*t5900;
  t5934 = t5861 + t5930;
  t5975 = t1639*t5856;
  t5995 = t703*t5900;
  t5997 = t5975 + t5995;
  t5956 = t348*t5934;
  t6000 = t1730*t5997;
  t6001 = t5956 + t6000;
  t6007 = t1730*t5934;
  t6011 = -1.*t348*t5997;
  t6013 = t6007 + t6011;
  t6003 = -1.*t151*t6001;
  t6018 = t1933*t6013;
  t6022 = t6003 + t6018;
  t6031 = t1933*t6001;
  t6035 = t151*t6013;
  t6036 = t6031 + t6035;
  t4465 = -1.*t138*t4449;
  t4466 = t4345 + t4465;
  t6178 = t1260*t1038*t2344;
  t6179 = t1360*t5614;
  t6181 = t6178 + t6179;
  t6171 = -1.*t730*t5851;
  t6183 = -1.*t1256*t6181;
  t6186 = t6171 + t6183;
  t6213 = t1256*t5851;
  t6215 = -1.*t730*t6181;
  t6232 = t6213 + t6215;
  t6191 = t703*t6186;
  t6233 = t1639*t6232;
  t6236 = t6191 + t6233;
  t6259 = t1639*t6186;
  t6261 = -1.*t703*t6232;
  t6262 = t6259 + t6261;
  t6258 = -1.*t348*t6236;
  t6270 = t1730*t6262;
  t6279 = t6258 + t6270;
  t6290 = t1730*t6236;
  t6302 = t348*t6262;
  t6306 = t6290 + t6302;
  t6282 = t151*t6279;
  t6331 = t1933*t6306;
  t6335 = t6282 + t6331;
  t6345 = t1933*t6279;
  t6361 = -1.*t151*t6306;
  t6379 = t6345 + t6361;
  t6445 = t730*t5851;
  t6446 = t1256*t6181;
  t6447 = t6445 + t6446;
  t6451 = -1.*t703*t6447;
  t6454 = t6451 + t6233;
  t6468 = -1.*t1639*t6447;
  t6469 = t6468 + t6261;
  t6457 = -1.*t348*t6454;
  t6485 = t1730*t6469;
  t6487 = t6457 + t6485;
  t6492 = t1730*t6454;
  t6525 = t348*t6469;
  t6527 = t6492 + t6525;
  t6488 = t151*t6487;
  t6530 = t1933*t6527;
  t6550 = t6488 + t6530;
  t6584 = t1933*t6487;
  t6591 = -1.*t151*t6527;
  t6600 = t6584 + t6591;
  t6657 = t1639*t6447;
  t6660 = t703*t6232;
  t6666 = t6657 + t6660;
  t6676 = -1.*t1730*t6666;
  t6679 = t6457 + t6676;
  t6704 = -1.*t348*t6666;
  t6720 = t6492 + t6704;
  t6687 = t151*t6679;
  t6726 = t1933*t6720;
  t6728 = t6687 + t6726;
  t6730 = t1933*t6679;
  t6732 = -1.*t151*t6720;
  t6747 = t6730 + t6732;
  t6805 = t348*t6454;
  t6806 = t1730*t6666;
  t6807 = t6805 + t6806;
  t6810 = -1.*t151*t6807;
  t6813 = t6810 + t6726;
  t6826 = -1.*t1933*t6807;
  t6828 = t6826 + t6732;
  t6814 = -1.*t138*t6813;
  t6865 = t2061*t6813;
  t6887 = t1933*t6807;
  t6890 = t151*t6720;
  t6898 = t6887 + t6890;
  t6975 = t1360*t1274;
  t6978 = t1038*t1084*t1189;
  t6979 = t881*t1038*t1211;
  t6985 = t6978 + t6979;
  t6990 = t1260*t6985;
  t6992 = t6975 + t6990;
  t6997 = -1.*t1639*t730*t6992;
  t7001 = -1.*t1256*t703*t6992;
  t7002 = t6997 + t7001;
  t7005 = t1256*t1639*t6992;
  t7010 = -1.*t730*t703*t6992;
  t7013 = t7005 + t7010;
  t7004 = t348*t7002;
  t7020 = t1730*t7013;
  t7026 = t7004 + t7020;
  t7033 = t1730*t7002;
  t7035 = -1.*t348*t7013;
  t7042 = t7033 + t7035;
  t7030 = -1.*t151*t7026;
  t7044 = t1933*t7042;
  t7046 = t7030 + t7044;
  t7057 = t1933*t7026;
  t7060 = t151*t7042;
  t7061 = t7057 + t7060;
  t7108 = -1.*t1038*t1084*t1189;
  t7110 = -1.*t881*t1038*t1211;
  t7121 = t7108 + t7110;
  t7127 = t881*t1038*t1084;
  t7134 = -1.*t1038*t1189*t1211;
  t7135 = t7127 + t7134;
  t7122 = t730*t7121;
  t7137 = t1256*t1360*t7135;
  t7144 = t7122 + t7137;
  t7149 = t1256*t7121;
  t7150 = -1.*t1360*t730*t7135;
  t7156 = t7149 + t7150;
  t7145 = -1.*t703*t7144;
  t7168 = t1639*t7156;
  t7177 = t7145 + t7168;
  t7189 = t1639*t7144;
  t7190 = t703*t7156;
  t7194 = t7189 + t7190;
  t7185 = t348*t7177;
  t7200 = t1730*t7194;
  t7204 = t7185 + t7200;
  t7213 = t1730*t7177;
  t7219 = -1.*t348*t7194;
  t7228 = t7213 + t7219;
  t7205 = -1.*t151*t7204;
  t7229 = t1933*t7228;
  t7231 = t7205 + t7229;
  t7243 = t1933*t7204;
  t7246 = t151*t7228;
  t7247 = t7243 + t7246;
  t7242 = t138*t7231;
  t7249 = t2061*t7247;
  t7252 = t7242 + t7249;
  t7254 = 0.642788*t7252;
  t7259 = t2061*t7231;
  t7260 = -1.*t138*t7247;
  t7263 = t7259 + t7260;
  t7278 = 0.766044*t7263;
  t7280 = t7254 + t7278;
  t7306 = -1.*t1260*t1274;
  t7308 = t1360*t6985;
  t7313 = t7306 + t7308;
  t7293 = -1.*t730*t7135;
  t7319 = -1.*t1256*t7313;
  t7332 = t7293 + t7319;
  t7336 = t1256*t7135;
  t7337 = -1.*t730*t7313;
  t7340 = t7336 + t7337;
  t7334 = t703*t7332;
  t7342 = t1639*t7340;
  t7344 = t7334 + t7342;
  t7353 = t1639*t7332;
  t7357 = -1.*t703*t7340;
  t7369 = t7353 + t7357;
  t7346 = -1.*t348*t7344;
  t7371 = t1730*t7369;
  t7372 = t7346 + t7371;
  t7376 = t1730*t7344;
  t7377 = t348*t7369;
  t7386 = t7376 + t7377;
  t7374 = t151*t7372;
  t7391 = t1933*t7386;
  t7397 = t7374 + t7391;
  t7403 = t1933*t7372;
  t7408 = -1.*t151*t7386;
  t7412 = t7403 + t7408;
  t7449 = t730*t7135;
  t7451 = t1256*t7313;
  t7453 = t7449 + t7451;
  t7455 = -1.*t703*t7453;
  t7458 = t7455 + t7342;
  t7468 = -1.*t1639*t7453;
  t7470 = t7468 + t7357;
  t7460 = -1.*t348*t7458;
  t7472 = t1730*t7470;
  t7475 = t7460 + t7472;
  t7483 = t1730*t7458;
  t7485 = t348*t7470;
  t7494 = t7483 + t7485;
  t7479 = t151*t7475;
  t7495 = t1933*t7494;
  t7498 = t7479 + t7495;
  t7512 = t1933*t7475;
  t7515 = -1.*t151*t7494;
  t7520 = t7512 + t7515;
  t7550 = t1639*t7453;
  t7551 = t703*t7340;
  t7552 = t7550 + t7551;
  t7561 = -1.*t1730*t7552;
  t7563 = t7460 + t7561;
  t7567 = -1.*t348*t7552;
  t7572 = t7483 + t7567;
  t7566 = t151*t7563;
  t7574 = t1933*t7572;
  t7576 = t7566 + t7574;
  t7579 = t1933*t7563;
  t7585 = -1.*t151*t7572;
  t7586 = t7579 + t7585;
  t7608 = t348*t7458;
  t7609 = t1730*t7552;
  t7613 = t7608 + t7609;
  t7618 = -1.*t151*t7613;
  t7621 = t7618 + t7574;
  t7629 = -1.*t1933*t7613;
  t7636 = t7629 + t7585;
  t7626 = -1.*t138*t7621;
  t7649 = t2061*t7621;
  t7659 = t1933*t7613;
  t7660 = t151*t7572;
  t7668 = t7659 + t7660;
  t7710 = -1.*t881*t1084*t1274;
  t7718 = t1189*t1274*t1211;
  t7721 = t7710 + t7718;
  t7733 = -1.*t1260*t1038;
  t7736 = -1.*t1084*t1189*t1274;
  t7737 = -1.*t881*t1274*t1211;
  t7738 = t7736 + t7737;
  t7741 = t1360*t7738;
  t7745 = t7733 + t7741;
  t7724 = t730*t7721;
  t7746 = t1256*t7745;
  t7750 = t7724 + t7746;
  t7753 = t1256*t7721;
  t7757 = -1.*t730*t7745;
  t7760 = t7753 + t7757;
  t7751 = -1.*t703*t7750;
  t7761 = t1639*t7760;
  t7763 = t7751 + t7761;
  t7777 = t1639*t7750;
  t7780 = t703*t7760;
  t7783 = t7777 + t7780;
  t7767 = t348*t7763;
  t7784 = t1730*t7783;
  t7786 = t7767 + t7784;
  t7789 = t1730*t7763;
  t7794 = -1.*t348*t7783;
  t7806 = t7789 + t7794;
  t7787 = -1.*t151*t7786;
  t7807 = t1933*t7806;
  t7808 = t7787 + t7807;
  t7815 = t1933*t7786;
  t7816 = t151*t7806;
  t7819 = t7815 + t7816;
  t2054 = t138*t2039;
  t2152 = t2061*t2139;
  t2176 = t2054 + t2152;
  t2258 = t2061*t2039;
  t2297 = -1.*t138*t2139;
  t2322 = t2258 + t2297;
  t2854 = t138*t2852;
  t2902 = t2061*t2887;
  t2914 = t2854 + t2902;
  t2935 = t2061*t2852;
  t2941 = -1.*t138*t2887;
  t2942 = t2935 + t2941;
  t3192 = t138*t3180;
  t3220 = t2061*t3219;
  t3223 = t3192 + t3220;
  t3227 = t2061*t3180;
  t3240 = -1.*t138*t3219;
  t3243 = t3227 + t3240;
  t3473 = t138*t3461;
  t3510 = t2061*t3495;
  t3517 = t3473 + t3510;
  t3531 = t2061*t3461;
  t3545 = -1.*t138*t3495;
  t3546 = t3531 + t3545;
  t3747 = -1.*t138*t3743;
  t3763 = t2061*t3760;
  t3764 = t3747 + t3763;
  t3772 = t2061*t3743;
  t3774 = t138*t3760;
  t3783 = t3772 + t3774;
  t3965 = -1.*t138*t3962;
  t3981 = t2061*t3979;
  t3982 = t3965 + t3981;
  t4019 = t2061*t3962;
  t4020 = t138*t3979;
  t4021 = t4019 + t4020;
  t4097 = -1.*t138*t4094;
  t4170 = t2061*t4156;
  t4175 = t4097 + t4170;
  t4199 = t2061*t4094;
  t4200 = t138*t4156;
  t4203 = t4199 + t4200;
  t4331 = t2061*t4328;
  t4332 = t4318 + t4331;
  t4370 = t138*t4328;
  t4371 = t4345 + t4370;
  t4451 = -1.*t2061*t4449;
  t4458 = t4318 + t4451;
  t4801 = t138*t4798;
  t4840 = t2061*t4822;
  t4844 = t4801 + t4840;
  t4860 = t2061*t4798;
  t4861 = -1.*t138*t4822;
  t4863 = t4860 + t4861;
  t5125 = t138*t5121;
  t5145 = t2061*t5141;
  t5146 = t5125 + t5145;
  t5152 = t2061*t5121;
  t5154 = -1.*t138*t5141;
  t5194 = t5152 + t5154;
  t5459 = t138*t5455;
  t5477 = t2061*t5471;
  t5478 = t5459 + t5477;
  t5499 = t2061*t5455;
  t5503 = -1.*t138*t5471;
  t5512 = t5499 + t5503;
  t5724 = t138*t5719;
  t5761 = t2061*t5750;
  t5764 = t5724 + t5761;
  t5771 = t2061*t5719;
  t5795 = -1.*t138*t5750;
  t5796 = t5771 + t5795;
  t6030 = t138*t6022;
  t6048 = t2061*t6036;
  t6069 = t6030 + t6048;
  t6073 = t2061*t6022;
  t6074 = -1.*t138*t6036;
  t6079 = t6073 + t6074;
  t6116 = t138*t4310;
  t6119 = t2061*t4449;
  t6120 = t6116 + t6119;
  t4469 = 0.642788*t4466;
  t6336 = -1.*t138*t6335;
  t6381 = t2061*t6379;
  t6382 = t6336 + t6381;
  t6388 = t2061*t6335;
  t6394 = t138*t6379;
  t6405 = t6388 + t6394;
  t6569 = -1.*t138*t6550;
  t6619 = t2061*t6600;
  t6622 = t6569 + t6619;
  t6634 = t2061*t6550;
  t6635 = t138*t6600;
  t6643 = t6634 + t6635;
  t6729 = -1.*t138*t6728;
  t6757 = t2061*t6747;
  t6761 = t6729 + t6757;
  t6770 = t2061*t6728;
  t6772 = t138*t6747;
  t6774 = t6770 + t6772;
  t6830 = t2061*t6828;
  t6855 = t6814 + t6830;
  t6867 = t138*t6828;
  t6869 = t6865 + t6867;
  t6900 = -1.*t2061*t6898;
  t6924 = t6814 + t6900;
  t6945 = -1.*t138*t6898;
  t6957 = t6865 + t6945;
  t7047 = t138*t7046;
  t7062 = t2061*t7061;
  t7063 = t7047 + t7062;
  t7084 = t2061*t7046;
  t7086 = -1.*t138*t7061;
  t7090 = t7084 + t7086;
  t8196 = -0.766044*t7252;
  t8197 = 0.642788*t7263;
  t8199 = t8196 + t8197;
  t7398 = -1.*t138*t7397;
  t7416 = t2061*t7412;
  t7419 = t7398 + t7416;
  t7429 = t2061*t7397;
  t7432 = t138*t7412;
  t7436 = t7429 + t7432;
  t7502 = -1.*t138*t7498;
  t7521 = t2061*t7520;
  t7528 = t7502 + t7521;
  t7534 = t2061*t7498;
  t7535 = t138*t7520;
  t7539 = t7534 + t7535;
  t7577 = -1.*t138*t7576;
  t7588 = t2061*t7586;
  t7589 = t7577 + t7588;
  t7595 = t2061*t7576;
  t7599 = t138*t7586;
  t7601 = t7595 + t7599;
  t7637 = t2061*t7636;
  t7638 = t7626 + t7637;
  t7652 = t138*t7636;
  t7653 = t7649 + t7652;
  t7675 = -1.*t2061*t7668;
  t7678 = t7626 + t7675;
  t7689 = -1.*t138*t7668;
  t7692 = t7649 + t7689;
  t7814 = t138*t7808;
  t7821 = t2061*t7819;
  t7827 = t7814 + t7821;
  t7832 = t2061*t7808;
  t7842 = -1.*t138*t7819;
  t7848 = t7832 + t7842;
  p_output1[0]=(0.642788*t4844 + 0.766044*t4863)*var2[3] + (0.642788*t2176 + 0.766044*t2322)*var2[4] + (0.642788*t2914 + 0.766044*t2942)*var2[5] + (0.642788*t3517 + 0.766044*t3546)*var2[13] + (0.642788*t3223 + 0.766044*t3243)*var2[14] + (0.766044*t3764 + 0.642788*t3783)*var2[15] + (0.766044*t3982 + 0.642788*t4021)*var2[16] + (0.766044*t4175 + 0.642788*t4203)*var2[17] + (0.766044*t4332 + 0.642788*t4371)*var2[18] + (0.766044*t4458 + t4469)*var2[19];
  p_output1[1]=(0.766044*t4466 + 0.642788*t6120)*var2[3] + (0.642788*t5146 + 0.766044*t5194)*var2[4] + (0.642788*t5478 + 0.766044*t5512)*var2[5] + (0.642788*t6069 + 0.766044*t6079)*var2[13] + (0.642788*t5764 + 0.766044*t5796)*var2[14] + (0.766044*t6382 + 0.642788*t6405)*var2[15] + (0.766044*t6622 + 0.642788*t6643)*var2[16] + (0.766044*t6761 + 0.642788*t6774)*var2[17] + (0.766044*t6855 + 0.642788*t6869)*var2[18] + (0.766044*t6924 + 0.642788*t6957)*var2[19];
  p_output1[2]=(0.642788*t7827 + 0.766044*t7848)*var2[4] + t7280*var2[5] + t7280*var2[13] + (0.642788*t7063 + 0.766044*t7090)*var2[14] + (0.766044*t7419 + 0.642788*t7436)*var2[15] + (0.766044*t7528 + 0.642788*t7539)*var2[16] + (0.766044*t7589 + 0.642788*t7601)*var2[17] + (0.766044*t7638 + 0.642788*t7653)*var2[18] + (0.766044*t7678 + 0.642788*t7692)*var2[19];
  p_output1[3]=(t1038*t1360*t2344 + t1260*t4585)*var2[3] + (t1260*t1509 + t1274*t1360*t996)*var2[4] + t1260*t2551*var2[5] + t1260*t3325*var2[13] + (-1.*t1360*t3062 - 1.*t1038*t1260*t996)*var2[14];
  p_output1[4]=t3069*var2[3] + (t1274*t1360*t2344 + t1260*t4965)*var2[4] + t1260*t5293*var2[5] + t1260*t5851*var2[13] + (t4549 - 1.*t1360*t5614)*var2[14];
  p_output1[5]=(t1038*t1360 + t1260*t7738)*var2[4] + t1260*t7135*var2[5] + t1260*t7135*var2[13] + (t1260*t1274 - 1.*t1360*t6985)*var2[14];
  p_output1[6]=(-0.766044*t4844 + 0.642788*t4863)*var2[3] + (-0.766044*t2176 + 0.642788*t2322)*var2[4] + (-0.766044*t2914 + 0.642788*t2942)*var2[5] + (-0.766044*t3517 + 0.642788*t3546)*var2[13] + (-0.766044*t3223 + 0.642788*t3243)*var2[14] + (0.642788*t3764 - 0.766044*t3783)*var2[15] + (0.642788*t3982 - 0.766044*t4021)*var2[16] + (0.642788*t4175 - 0.766044*t4203)*var2[17] + (0.642788*t4332 - 0.766044*t4371)*var2[18] + (0.642788*t4458 - 0.766044*t4466)*var2[19];
  p_output1[7]=(t4469 - 0.766044*t6120)*var2[3] + (-0.766044*t5146 + 0.642788*t5194)*var2[4] + (-0.766044*t5478 + 0.642788*t5512)*var2[5] + (-0.766044*t6069 + 0.642788*t6079)*var2[13] + (-0.766044*t5764 + 0.642788*t5796)*var2[14] + (0.642788*t6382 - 0.766044*t6405)*var2[15] + (0.642788*t6622 - 0.766044*t6643)*var2[16] + (0.642788*t6761 - 0.766044*t6774)*var2[17] + (0.642788*t6855 - 0.766044*t6869)*var2[18] + (0.642788*t6924 - 0.766044*t6957)*var2[19];
  p_output1[8]=(-0.766044*t7827 + 0.642788*t7848)*var2[4] + t8199*var2[5] + t8199*var2[13] + (-0.766044*t7063 + 0.642788*t7090)*var2[14] + (0.642788*t7419 - 0.766044*t7436)*var2[15] + (0.642788*t7528 - 0.766044*t7539)*var2[16] + (0.642788*t7589 - 0.766044*t7601)*var2[17] + (0.642788*t7638 - 0.766044*t7653)*var2[18] + (0.642788*t7678 - 0.766044*t7692)*var2[19];
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 20 && ncols == 1) && 
      !(mrows == 1 && ncols == 20))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 20 && ncols == 1) && 
      !(mrows == 1 && ncols == 20))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 3, (mwSize) 3, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "dR_RightToeBottomFront_mex.hh"

namespace SymExpression
{

void dR_RightToeBottomFront_mex_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
