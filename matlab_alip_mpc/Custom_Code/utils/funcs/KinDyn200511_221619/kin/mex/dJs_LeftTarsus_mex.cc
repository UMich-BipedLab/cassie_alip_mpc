/*
 * Automatically Generated from Mathematica.
 * Mon 11 May 2020 22:26:17 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t124;
  double t176;
  double t532;
  double t570;
  double t568;
  double t580;
  double t601;
  double t608;
  double t1220;
  double t1244;
  double t696;
  double t737;
  double t751;
  double t773;
  double t1297;
  double t1308;
  double t1328;
  double t1560;
  double t1565;
  double t1567;
  double t846;
  double t877;
  double t887;
  double t926;
  double t933;
  double t952;
  double t961;
  double t966;
  double t1112;
  double t1118;
  double t1169;
  double t1183;
  double t1189;
  double t1195;
  double t1205;
  double t1999;
  double t1784;
  double t1787;
  double t1796;
  double t2025;
  double t1699;
  double t1702;
  double t1723;
  double t2209;
  double t2226;
  double t2009;
  double t2040;
  double t2050;
  double t1473;
  double t1503;
  double t1552;
  double t2236;
  double t2241;
  double t2242;
  double t2270;
  double t2285;
  double t2307;
  double t2115;
  double t2137;
  double t2152;
  double t2397;
  double t2405;
  double t2411;
  double t2438;
  double t2340;
  double t2452;
  double t1384;
  double t1410;
  double t1423;
  double t2516;
  double t2521;
  double t2522;
  double t2655;
  double t2674;
  double t2675;
  double t2527;
  double t2531;
  double t2555;
  double t2556;
  double t2607;
  double t2454;
  double t2456;
  double t2838;
  double t2842;
  double t2845;
  double t2853;
  double t2861;
  double t2788;
  double t2796;
  double t2797;
  double t2994;
  double t2995;
  double t2996;
  double t3009;
  double t3010;
  double t3013;
  double t3017;
  double t3111;
  double t3142;
  double t2999;
  double t3004;
  double t3005;
  double t2261;
  double t2323;
  double t2759;
  double t2763;
  double t2764;
  double t3315;
  double t2609;
  double t3274;
  double t3283;
  double t3300;
  double t3310;
  double t3139;
  double t3146;
  double t3085;
  double t3093;
  double t3095;
  double t3360;
  double t2877;
  double t2887;
  double t3199;
  double t3200;
  double t3573;
  double t3600;
  double t3580;
  double t3582;
  double t3583;
  double t3663;
  double t3664;
  double t3158;
  double t3159;
  double t3621;
  double t3636;
  double t3639;
  double t3667;
  double t3680;
  double t3687;
  double t3691;
  double t3697;
  double t3698;
  double t2630;
  double t2632;
  double t2644;
  double t2645;
  double t3593;
  double t3601;
  double t3614;
  double t2575;
  double t2578;
  double t3690;
  double t3702;
  double t3705;
  double t3707;
  double t3711;
  double t3715;
  double t3717;
  double t2893;
  double t2899;
  double t3732;
  double t2844;
  double t2868;
  double t3762;
  double t3766;
  double t3767;
  double t3253;
  double t3257;
  double t3264;
  double t2805;
  double t2806;
  double t2716;
  double t2734;
  double t2952;
  double t2953;
  double t2959;
  double t2709;
  double t2711;
  double t2712;
  double t3067;
  double t3078;
  double t3082;
  double t3987;
  double t3992;
  double t3997;
  double t4013;
  double t4017;
  double t3968;
  double t3971;
  double t3976;
  double t4068;
  double t2349;
  double t2352;
  double t3149;
  double t3151;
  double t3123;
  double t3126;
  double t4200;
  double t4202;
  double t4226;
  double t4233;
  double t4247;
  double t4259;
  double t4266;
  double t3206;
  double t3209;
  double t4275;
  double t3171;
  double t3175;
  double t3855;
  double t3856;
  double t3863;
  double t3021;
  double t3026;
  double t2968;
  double t2980;
  double t4056;
  double t4062;
  double t4064;
  double t2892;
  double t3057;
  double t3058;
  double t4572;
  double t4097;
  double t4099;
  double t3380;
  double t3385;
  double t3403;
  double t3408;
  double t4624;
  double t4625;
  double t4632;
  double t4642;
  double t4657;
  double t4668;
  double t3461;
  double t3469;
  double t3484;
  double t3486;
  double t3438;
  double t3442;
  double t4564;
  double t4573;
  double t3324;
  double t3326;
  double t3336;
  double t3337;
  double t4389;
  double t4390;
  double t4393;
  double t3907;
  double t3912;
  double t3913;
  double t4074;
  double t4075;
  double t4530;
  double t4531;
  double t4539;
  double t4594;
  double t4599;
  double t4600;
  double t4149;
  double t4157;
  double t4163;
  double t3615;
  double t3647;
  double t3650;
  double t3654;
  double t3655;
  double t4036;
  double t4042;
  double t5140;
  double t4006;
  double t4025;
  double t5147;
  double t5152;
  double t5153;
  double t5157;
  double t5158;
  double t5162;
  double t5123;
  double t5125;
  double t5127;
  double t5079;
  double t5086;
  double t5088;
  double t5184;
  double t5186;
  double t5188;
  double t5180;
  double t5191;
  double t5192;
  double t3745;
  double t5196;
  double t5200;
  double t5201;
  double t5219;
  double t5221;
  double t3826;
  double t5313;
  double t3890;
  double t3903;
  double t4407;
  double t4414;
  double t4415;
  double t3868;
  double t3883;
  double t4881;
  double t4892;
  double t4894;
  double t3929;
  double t3932;
  double t3940;
  double t4106;
  double t4111;
  double t5550;
  double t5554;
  double t5555;
  double t5558;
  double t5561;
  double t4172;
  double t4183;
  double t4487;
  double t4496;
  double t4436;
  double t4437;
  double t5663;
  double t5664;
  double t5685;
  double t4281;
  double t5688;
  double t5696;
  double t5698;
  double t5726;
  double t5729;
  double t4330;
  double t5757;
  double t4370;
  double t4376;
  double t4354;
  double t4361;
  double t4579;
  double t5616;
  double t5620;
  double t5622;
  double t4610;
  double t4614;
  double t4616;
  double t4623;
  double t5511;
  double t5512;
  double t4778;
  double t4937;
  double t4940;
  double t4922;
  double t4925;
  double t6066;
  double t6091;
  double t6092;
  double t6097;
  double t4674;
  double t4689;
  double t4726;
  double t4735;
  double t6249;
  double t6250;
  double t6255;
  double t6259;
  double t6261;
  double t6263;
  double t6266;
  double t6267;
  double t4868;
  double t4869;
  double t4826;
  double t4833;
  double t4977;
  double t4978;
  double t5008;
  double t5010;
  double t5014;
  double t5015;
  double t5019;
  double t5027;
  double t5043;
  double t5044;
  double t5050;
  double t5059;
  double t5061;
  double t5067;
  double t5068;
  double t5071;
  double t5072;
  double t5074;
  double t5089;
  double t5095;
  double t5096;
  double t5106;
  double t5107;
  double t5110;
  double t5116;
  double t5117;
  double t5134;
  double t5139;
  double t6475;
  double t6478;
  double t6479;
  double t6482;
  double t5317;
  double t5318;
  double t5327;
  double t5331;
  double t5332;
  double t5334;
  double t5260;
  double t5283;
  double t6481;
  double t6486;
  double t6488;
  double t5762;
  double t5765;
  double t5769;
  double t6499;
  double t6501;
  double t6502;
  double t5773;
  double t5774;
  double t5777;
  double t6387;
  double t6394;
  double t6395;
  double t5962;
  double t5975;
  double t5991;
  double t6489;
  double t6503;
  double t5373;
  double t5375;
  double t5397;
  double t5400;
  double t5401;
  double t5403;
  double t5359;
  double t5361;
  double t5799;
  double t5801;
  double t5810;
  double t5815;
  double t5816;
  double t5820;
  double t6565;
  double t6567;
  double t6568;
  double t6578;
  double t6579;
  double t6580;
  double t6584;
  double t6585;
  double t6589;
  double t6591;
  double t6593;
  double t6598;
  double t6610;
  double t5468;
  double t5469;
  double t5474;
  double t5486;
  double t5487;
  double t5488;
  double t5435;
  double t5437;
  double t5880;
  double t5881;
  double t5887;
  double t5891;
  double t5892;
  double t5896;
  double t5449;
  double t5452;
  double t6449;
  double t6450;
  double t6451;
  double t6454;
  double t6464;
  double t6467;
  double t5164;
  double t5171;
  double t5517;
  double t5520;
  double t5523;
  double t5528;
  double t5529;
  double t5530;
  double t6028;
  double t6033;
  double t6045;
  double t5556;
  double t5564;
  double t6364;
  double t6368;
  double t6369;
  double t5584;
  double t5590;
  double t5942;
  double t5945;
  double t5946;
  double t5600;
  double t5609;
  double t5610;
  double t6887;
  double t6888;
  double t6892;
  double t6894;
  double t6895;
  double t6851;
  double t6864;
  double t5905;
  double t5911;
  double t5935;
  double t5936;
  double t6941;
  double t6950;
  double t5743;
  double t5744;
  double t7005;
  double t7006;
  double t5789;
  double t5791;
  double t7050;
  double t7052;
  double t7055;
  double t7061;
  double t7063;
  double t7064;
  double t7066;
  double t5844;
  double t5848;
  double t5855;
  double t5860;
  double t5636;
  double t5647;
  double t6017;
  double t6023;
  double t6909;
  double t6913;
  double t6325;
  double t6339;
  double t6319;
  double t6321;
  double t7302;
  double t7314;
  double t6222;
  double t6229;
  double t6187;
  double t6196;
  double t6819;
  double t6820;
  double t7389;
  double t7391;
  double t7392;
  double t7394;
  double t7395;
  double t7396;
  double t7398;
  double t7399;
  double t6289;
  double t6291;
  double t6277;
  double t6278;
  double t7423;
  double t7427;
  double t7428;
  double t7434;
  double t6070;
  double t6077;
  double t6428;
  double t6432;
  double t6441;
  double t6443;
  double t6122;
  double t6145;
  double t7635;
  double t7641;
  double t7645;
  double t7656;
  double t6509;
  double t6517;
  double t6523;
  double t6526;
  double t6528;
  double t6533;
  double t6549;
  double t6555;
  double t7653;
  double t7660;
  double t7663;
  double t7021;
  double t7022;
  double t7029;
  double t7670;
  double t7671;
  double t7672;
  double t7034;
  double t7040;
  double t7042;
  double t7352;
  double t7357;
  double t6975;
  double t6977;
  double t7669;
  double t7673;
  double t6620;
  double t6623;
  double t6627;
  double t6634;
  double t6637;
  double t6639;
  double t6646;
  double t6650;
  double t7103;
  double t7104;
  double t7105;
  double t7114;
  double t7115;
  double t7116;
  double t7729;
  double t7730;
  double t7731;
  double t7734;
  double t7735;
  double t7736;
  double t7741;
  double t7744;
  double t7745;
  double t7747;
  double t7752;
  double t7758;
  double t7759;
  double t6664;
  double t6665;
  double t6666;
  double t6672;
  double t6673;
  double t6677;
  double t6687;
  double t6688;
  double t7144;
  double t7146;
  double t7148;
  double t7153;
  double t7154;
  double t7155;
  double t6697;
  double t6700;
  double t7545;
  double t7550;
  double t7559;
  double t7566;
  double t7567;
  double t7569;
  double t6717;
  double t6720;
  double t6721;
  double t6730;
  double t6731;
  double t6734;
  double t6745;
  double t6746;
  double t7196;
  double t7201;
  double t7202;
  double t7204;
  double t7212;
  double t7213;
  double t6768;
  double t6773;
  double t7604;
  double t7605;
  double t7608;
  double t7611;
  double t7614;
  double t7616;
  double t6836;
  double t6837;
  double t7294;
  double t7306;
  double t7308;
  double t7315;
  double t6844;
  double t6846;
  double t6938;
  double t6944;
  double t6948;
  double t6951;
  double t6850;
  double t6852;
  double t6860;
  double t6867;
  double t6893;
  double t6896;
  double t7367;
  double t7369;
  double t6904;
  double t6905;
  double t6982;
  double t6985;
  double t6915;
  double t6917;
  double t6792;
  double t6799;
  double t6800;
  double t6803;
  double t6804;
  double t6813;
  double t7271;
  double t7272;
  double t7278;
  double t8079;
  double t8081;
  double t8084;
  double t8086;
  double t8089;
  double t7987;
  double t8002;
  double t6926;
  double t6927;
  double t6956;
  double t6958;
  double t6970;
  double t6972;
  double t6987;
  double t6990;
  double t7011;
  double t7014;
  double t8202;
  double t8203;
  double t7088;
  double t7091;
  double t8245;
  double t8247;
  double t8253;
  double t8257;
  double t8267;
  double t8270;
  double t8271;
  double t7133;
  double t7135;
  double t7166;
  double t7167;
  double t7184;
  double t7185;
  double t7218;
  double t7220;
  double t8178;
  double t8183;
  double t7253;
  double t7255;
  double t8116;
  double t8117;
  double t7318;
  double t7320;
  double t7328;
  double t7340;
  double t7372;
  double t7375;
  double t7381;
  double t7382;
  double t7404;
  double t7410;
  double t7416;
  double t7417;
  double t8068;
  double t8069;
  double t8621;
  double t8633;
  double t8637;
  double t8641;
  double t8642;
  double t8643;
  double t8644;
  double t8645;
  double t7444;
  double t7446;
  double t7454;
  double t7455;
  double t8668;
  double t8669;
  double t8671;
  double t8673;
  double t7484;
  double t7490;
  double t7516;
  double t7521;
  double t7532;
  double t7537;
  double t7577;
  double t7579;
  double t7587;
  double t7589;
  double t8562;
  double t8581;
  t124 = Cos(var1[3]);
  t176 = Sin(var1[3]);
  t532 = Cos(var1[4]);
  t570 = Sin(var1[4]);
  t568 = -1.*var2[2]*t532*t176;
  t580 = -1.*var2[1]*t570;
  t601 = -1.*var1[1]*t532;
  t608 = var1[2]*t176*t570;
  t1220 = Cos(var1[5]);
  t1244 = Sin(var1[5]);
  t696 = var2[2]*t124*t532;
  t737 = var2[0]*t570;
  t751 = var1[0]*t532;
  t773 = -1.*var1[2]*t124*t570;
  t1297 = t124*t1220*t570;
  t1308 = t176*t1244;
  t1328 = t1297 + t1308;
  t1560 = -1.*t124*t1220;
  t1565 = -1.*t176*t570*t1244;
  t1567 = t1560 + t1565;
  t846 = -1.*var2[1]*t124*t532;
  t877 = var2[0]*t532*t176;
  t887 = var1[0]*t124*t532;
  t926 = var1[1]*t532*t176;
  t933 = t887 + t926;
  t952 = var2[3]*t933;
  t961 = var1[1]*t124*t570;
  t966 = -1.*var1[0]*t176*t570;
  t1112 = -1.*var2[3]*t532*t176;
  t1118 = -1.*var2[4]*t124*t570;
  t1169 = t1112 + t1118;
  t1183 = var2[3]*t124*t532;
  t1189 = -1.*var2[4]*t176*t570;
  t1195 = t1183 + t1189;
  t1205 = -1.*var2[4]*t532;
  t1999 = Cos(var1[6]);
  t1784 = t1220*t176*t570;
  t1787 = -1.*t124*t1244;
  t1796 = t1784 + t1787;
  t2025 = Sin(var1[6]);
  t1699 = -1.*t1220*t176;
  t1702 = t124*t570*t1244;
  t1723 = t1699 + t1702;
  t2209 = -1.*t1999;
  t2226 = 1. + t2209;
  t2009 = t532*t1220*t1999;
  t2040 = -1.*t532*t1244*t2025;
  t2050 = t2009 + t2040;
  t1473 = -1.*t1220*t176*t570;
  t1503 = t124*t1244;
  t1552 = t1473 + t1503;
  t2236 = 0.07996*t2226;
  t2241 = -0.135*t2025;
  t2242 = 0. + t2236 + t2241;
  t2270 = 0.135*t2226;
  t2285 = 0.07996*t2025;
  t2307 = 0. + t2270 + t2285;
  t2115 = t124*t1220;
  t2137 = t176*t570*t1244;
  t2152 = t2115 + t2137;
  t2397 = -1.*var1[2];
  t2405 = -1.*t532*t1220*t2242;
  t2411 = -1.*t532*t1244*t2307;
  t2438 = 0. + t2397 + t2405 + t2411;
  t2340 = t1999*t1567;
  t2452 = t1999*t1328;
  t1384 = t1220*t176;
  t1410 = -1.*t124*t570*t1244;
  t1423 = t1384 + t1410;
  t2516 = t1796*t2242;
  t2521 = t2152*t2307;
  t2522 = 0. + var1[1] + t2516 + t2521;
  t2655 = t1999*t1796;
  t2674 = -1.*t2152*t2025;
  t2675 = t2655 + t2674;
  t2527 = -1.*t532*t1999*t1244;
  t2531 = -1.*t532*t1220*t2025;
  t2555 = t2527 + t2531;
  t2556 = t2522*t2555;
  t2607 = -1.*t1796*t2025;
  t2454 = -1.*t1723*t2025;
  t2456 = t2452 + t2454;
  t2838 = -0.135*t1999;
  t2842 = t2838 + t2285;
  t2845 = 0.07996*t1999;
  t2853 = 0.135*t2025;
  t2861 = t2845 + t2853;
  t2788 = -1.*t1220*t1999*t570;
  t2796 = t570*t1244*t2025;
  t2797 = t2788 + t2796;
  t2994 = t532*t1220*t2242;
  t2995 = t532*t1244*t2307;
  t2996 = 0. + var1[2] + t2994 + t2995;
  t3009 = -1.*var1[0];
  t3010 = -1.*t1328*t2242;
  t3013 = -1.*t1723*t2307;
  t3017 = 0. + t3009 + t3010 + t3013;
  t3111 = t3017*t2555;
  t3142 = -1.*t1328*t2025;
  t2999 = t124*t532*t1220*t1999;
  t3004 = -1.*t124*t532*t1244*t2025;
  t3005 = t2999 + t3004;
  t2261 = t1328*t2242;
  t2323 = t1723*t2307;
  t2759 = t532*t1220*t1999*t176;
  t2763 = -1.*t532*t176*t1244*t2025;
  t2764 = t2759 + t2763;
  t3315 = 0. + var1[0] + t2261 + t2323;
  t2609 = t2340 + t2607;
  t3274 = -1.*var1[1];
  t3283 = -1.*t1796*t2242;
  t3300 = -1.*t2152*t2307;
  t3310 = 0. + t3274 + t3283 + t3300;
  t3139 = t1999*t1423;
  t3146 = t3139 + t3142;
  t3085 = t1999*t1552;
  t3093 = -1.*t1567*t2025;
  t3095 = t3085 + t3093;
  t3360 = 0.08055*t2050;
  t2877 = -1.*t1999*t2152;
  t2887 = t2877 + t2607;
  t3199 = -1.*t1999*t1723;
  t3200 = t3199 + t3142;
  t3573 = Cos(var1[7]);
  t3600 = Sin(var1[7]);
  t3580 = t1999*t2152;
  t3582 = t1796*t2025;
  t3583 = t3580 + t3582;
  t3663 = -1.*t3573;
  t3664 = 1. + t3663;
  t3158 = t1567*t2025;
  t3159 = t2655 + t3158;
  t3621 = t532*t1999*t1244;
  t3636 = t532*t1220*t2025;
  t3639 = t3621 + t3636;
  t3667 = 0.135*t3664;
  t3680 = 0.08055*t3600;
  t3687 = 0. + t3667 + t3680;
  t3691 = -0.08055*t3664;
  t3697 = 0.135*t3600;
  t3698 = 0. + t3691 + t3697;
  t2630 = t1423*t2025;
  t2632 = t2452 + t2630;
  t2644 = t532*t1244*t2242;
  t2645 = -1.*t532*t1220*t2307;
  t3593 = t3573*t3583;
  t3601 = -1.*t532*t176*t3600;
  t3614 = t3593 + t3601;
  t2575 = t1567*t2242;
  t2578 = t1796*t2307;
  t3690 = t3583*t3687;
  t3702 = t532*t176*t3698;
  t3705 = 0. + var1[1] + t2516 + t2521 + t3690 + t3702;
  t3707 = -1.*t3573*t2050*t3705;
  t3711 = -1.*t3639*t3687;
  t3715 = t570*t3698;
  t3717 = 0. + t2397 + t2405 + t2411 + t3711 + t3715;
  t2893 = -1.*t532*t1220*t2842;
  t2899 = -1.*t532*t1244*t2861;
  t3732 = -1.*t2050*t3687;
  t2844 = t1796*t2842;
  t2868 = t2152*t2861;
  t3762 = t3573*t3639;
  t3766 = t570*t3600;
  t3767 = t3762 + t3766;
  t3253 = -1.*t1999*t570*t1244;
  t3257 = -1.*t1220*t570*t2025;
  t3264 = t3253 + t3257;
  t2805 = t1220*t570*t2242;
  t2806 = t570*t1244*t2307;
  t2716 = t532*t1220*t176*t2242;
  t2734 = t532*t176*t1244*t2307;
  t2952 = t532*t1999*t176*t1244;
  t2953 = t532*t1220*t176*t2025;
  t2959 = t2952 + t2953;
  t2709 = t124*t532*t1999*t1244;
  t2711 = t124*t532*t1220*t2025;
  t2712 = t2709 + t2711;
  t3067 = t1999*t1723;
  t3078 = t1328*t2025;
  t3082 = t3067 + t3078;
  t3987 = 0.135*t3573;
  t3992 = -0.08055*t3600;
  t3997 = t3987 + t3992;
  t4013 = 0.08055*t3573;
  t4017 = t4013 + t3697;
  t3968 = t3573*t3082;
  t3971 = -1.*t124*t532*t3600;
  t3976 = t3968 + t3971;
  t4068 = -1.*t532*t3573*t176;
  t2349 = t1552*t2025;
  t2352 = t2340 + t2349;
  t3149 = -1.*t532*t1244*t2242;
  t3151 = t532*t1220*t2307;
  t3123 = -1.*t1423*t2242;
  t3126 = -1.*t1328*t2307;
  t4200 = -1.*t3082*t3687;
  t4202 = -1.*t124*t532*t3698;
  t4226 = 0. + t3009 + t3010 + t3013 + t4200 + t4202;
  t4233 = -1.*t3573*t2050*t4226;
  t4247 = t3639*t3687;
  t4259 = -1.*t570*t3698;
  t4266 = 0. + var1[2] + t2994 + t2995 + t4247 + t4259;
  t3206 = t532*t1220*t2842;
  t3209 = t532*t1244*t2861;
  t4275 = t2050*t3687;
  t3171 = -1.*t1328*t2842;
  t3175 = -1.*t1723*t2861;
  t3855 = t3573*t3264;
  t3856 = t532*t3600;
  t3863 = t3855 + t3856;
  t3021 = -1.*t1220*t570*t2242;
  t3026 = -1.*t570*t1244*t2307;
  t2968 = -1.*t124*t532*t1220*t2242;
  t2980 = -1.*t124*t532*t1244*t2307;
  t4056 = t3573*t570;
  t4062 = -1.*t3639*t3600;
  t4064 = t4056 + t4062;
  t2892 = 0.08055*t2456;
  t3057 = -1.*t1552*t2242;
  t3058 = -1.*t1567*t2307;
  t4572 = t532*t176*t3600;
  t4097 = t3082*t3687;
  t4099 = t124*t532*t3698;
  t3380 = -1.*t1567*t2242;
  t3385 = -1.*t1796*t2307;
  t3403 = t1423*t2242;
  t3408 = t1328*t2307;
  t4624 = 0.08055*t2555;
  t4625 = 0. + var1[0] + t2261 + t2323 + t4097 + t4099;
  t4632 = -1.*t3583*t3687;
  t4642 = -1.*t532*t176*t3698;
  t4657 = 0. + t3274 + t3283 + t3300 + t4632 + t4642;
  t4668 = -0.01004*t2050*t3600;
  t3461 = -1.*t1796*t2842;
  t3469 = -1.*t2152*t2861;
  t3484 = t1328*t2842;
  t3486 = t1723*t2861;
  t3438 = t1552*t2242;
  t3442 = t1567*t2307;
  t4564 = t3573*t2352;
  t4573 = t4564 + t4572;
  t3324 = -1.*t532*t1220*t176*t2242;
  t3326 = -1.*t532*t176*t1244*t2307;
  t3336 = t124*t532*t1220*t2242;
  t3337 = t124*t532*t1244*t2307;
  t4389 = t3573*t2712;
  t4390 = t124*t570*t3600;
  t4393 = t4389 + t4390;
  t3907 = t3573*t2959;
  t3912 = t176*t570*t3600;
  t3913 = t3907 + t3912;
  t4074 = -1.*t3583*t3600;
  t4075 = t4068 + t4074;
  t4530 = -1.*t124*t532*t3573;
  t4531 = -1.*t3082*t3600;
  t4539 = t4530 + t4531;
  t4594 = t124*t532*t3573;
  t4599 = t3082*t3600;
  t4600 = t4594 + t4599;
  t4149 = -1.*t3573*t3082;
  t4157 = t124*t532*t3600;
  t4163 = t4149 + t4157;
  t3615 = var2[2]*t3614;
  t3647 = -1.*t3573*t3639;
  t3650 = -1.*t570*t3600;
  t3654 = t3647 + t3650;
  t3655 = var2[1]*t3654;
  t4036 = t532*t176*t3997;
  t4042 = t3583*t4017;
  t5140 = Cos(var1[8]);
  t4006 = t570*t3997;
  t4025 = -1.*t3639*t4017;
  t5147 = -1.*t5140;
  t5152 = 1. + t5147;
  t5153 = -0.08055*t5152;
  t5157 = Sin(var1[8]);
  t5158 = -0.01004*t5157;
  t5162 = 0. + t5153 + t5158;
  t5123 = -1.*t3573*t570;
  t5125 = t3639*t3600;
  t5127 = t5123 + t5125;
  t5079 = t532*t3573*t176;
  t5086 = t3583*t3600;
  t5088 = t5079 + t5086;
  t5184 = -0.01004*t5152;
  t5186 = 0.08055*t5157;
  t5188 = 0. + t5184 + t5186;
  t5180 = -1.*t5127*t5162;
  t5191 = -1.*t2050*t5188;
  t5192 = 0. + t2397 + t2405 + t2411 + t3711 + t3715 + t5180 + t5191;
  t3745 = t3159*t3687;
  t5196 = t5088*t5162;
  t5200 = t2675*t5188;
  t5201 = 0. + var1[1] + t2516 + t2521 + t3690 + t3702 + t5196 + t5200;
  t5219 = -1.*t2050*t3600*t5162;
  t5221 = -1.*t2555*t5188;
  t3826 = t2675*t3687;
  t5313 = -1.*t3573*t2050*t5201;
  t3890 = t2959*t3687;
  t3903 = -1.*t176*t570*t3698;
  t4407 = -1.*t3573*t176*t570;
  t4414 = t2959*t3600;
  t4415 = t4407 + t4414;
  t3868 = -1.*t3264*t3687;
  t3883 = t532*t3698;
  t4881 = -1.*t532*t3573;
  t4892 = t3264*t3600;
  t4894 = t4881 + t4892;
  t3929 = -1.*t124*t3573*t570;
  t3932 = t2712*t3600;
  t3940 = t3929 + t3932;
  t4106 = t2352*t3600;
  t4111 = t4068 + t4106;
  t5550 = -0.01004*t5140;
  t5554 = -0.08055*t5157;
  t5555 = t5550 + t5554;
  t5558 = 0.08055*t5140;
  t5561 = t5558 + t5158;
  t4172 = var2[2]*t4163;
  t4183 = var2[0]*t3767;
  t4487 = -1.*t124*t532*t3997;
  t4496 = -1.*t3082*t4017;
  t4436 = -1.*t570*t3997;
  t4437 = t3639*t4017;
  t5663 = t5127*t5162;
  t5664 = t2050*t5188;
  t5685 = 0. + var1[2] + t2994 + t2995 + t4247 + t4259 + t5663 + t5664;
  t4281 = -1.*t2632*t3687;
  t5688 = -1.*t4600*t5162;
  t5696 = -1.*t2456*t5188;
  t5698 = 0. + t3009 + t3010 + t3013 + t4200 + t4202 + t5688 + t5696;
  t5726 = t2050*t3600*t5162;
  t5729 = t2555*t5188;
  t4330 = -1.*t2456*t3687;
  t5757 = -1.*t3573*t2050*t5698;
  t4370 = -1.*t2712*t3687;
  t4376 = t124*t570*t3698;
  t4354 = t3264*t3687;
  t4361 = -1.*t532*t3698;
  t4579 = -1.*t2352*t3687;
  t5616 = t5140*t2456;
  t5620 = -1.*t4600*t5157;
  t5622 = t5616 + t5620;
  t4610 = var2[1]*t3976;
  t4614 = -1.*t3573*t3583;
  t4616 = t4614 + t4572;
  t4623 = var2[0]*t4616;
  t5511 = t4600*t5162;
  t5512 = t2456*t5188;
  t4778 = t2352*t3687;
  t4937 = t124*t532*t3997;
  t4940 = t3082*t4017;
  t4922 = -1.*t532*t176*t3997;
  t4925 = -1.*t3583*t4017;
  t6066 = 0. + var1[0] + t2261 + t2323 + t4097 + t4099 + t5511 + t5512;
  t6091 = -1.*t5088*t5162;
  t6092 = -1.*t2675*t5188;
  t6097 = 0. + t3274 + t3283 + t3300 + t4632 + t4642 + t6091 + t6092;
  t4674 = -1.*t3159*t3687;
  t4689 = t2632*t3687;
  t4726 = -1.*t2675*t3687;
  t4735 = t2456*t3687;
  t6249 = t5140*t2050*t3600;
  t6250 = t2555*t5157;
  t6255 = t6249 + t6250;
  t6259 = -0.13004*t6255;
  t6261 = t5140*t2555;
  t6263 = -1.*t2050*t3600*t5157;
  t6266 = t6261 + t6263;
  t6267 = 0.08055*t6266;
  t4868 = t2712*t3687;
  t4869 = -1.*t124*t570*t3698;
  t4826 = -1.*t2959*t3687;
  t4833 = t176*t570*t3698;
  t4977 = -1.*var2[5]*t3573*t2632;
  t4978 = -1.*var2[6]*t3573*t2456;
  t5008 = -1.*t3573*t2352;
  t5010 = t5008 + t3601;
  t5014 = var2[3]*t5010;
  t5015 = -1.*t3573*t2712;
  t5019 = -1.*t124*t570*t3600;
  t5027 = t5015 + t5019;
  t5043 = var2[4]*t5027;
  t5044 = var2[7]*t4600;
  t5050 = t4977 + t4978 + t5014 + t5043 + t5044;
  t5059 = -1.*var2[5]*t3573*t3159;
  t5061 = -1.*var2[6]*t3573*t2675;
  t5067 = var2[3]*t4163;
  t5068 = -1.*t3573*t2959;
  t5071 = -1.*t176*t570*t3600;
  t5072 = t5068 + t5071;
  t5074 = var2[4]*t5072;
  t5089 = var2[7]*t5088;
  t5095 = t5059 + t5061 + t5067 + t5074 + t5089;
  t5096 = -1.*var2[5]*t3573*t2050;
  t5106 = -1.*var2[6]*t3573*t2050;
  t5107 = -1.*t3573*t3264;
  t5110 = -1.*t532*t3600;
  t5116 = t5107 + t5110;
  t5117 = var2[4]*t5116;
  t5134 = var2[7]*t5127;
  t5139 = t5096 + t5106 + t5117 + t5134;
  t6475 = Cos(var1[9]);
  t6478 = -1.*t6475;
  t6479 = 1. + t6478;
  t6482 = Sin(var1[9]);
  t5317 = t5140*t2632*t3600;
  t5318 = t3146*t5157;
  t5327 = t5317 + t5318;
  t5331 = t5140*t3146;
  t5332 = -1.*t2632*t3600*t5157;
  t5334 = t5331 + t5332;
  t5260 = t3159*t3600*t5162;
  t5283 = t2609*t5188;
  t6481 = -0.08055*t6479;
  t6486 = -0.13004*t6482;
  t6488 = 0. + t6481 + t6486;
  t5762 = t5140*t3159*t3600;
  t5765 = t2609*t5157;
  t5769 = t5762 + t5765;
  t6499 = -0.13004*t6479;
  t6501 = 0.08055*t6482;
  t6502 = 0. + t6499 + t6501;
  t5773 = t5140*t2609;
  t5774 = -1.*t3159*t3600*t5157;
  t5777 = t5773 + t5774;
  t6387 = t5140*t2050;
  t6394 = -1.*t5127*t5157;
  t6395 = t6387 + t6394;
  t5962 = t5140*t2675;
  t5975 = -1.*t5088*t5157;
  t5991 = t5962 + t5975;
  t6489 = -1.*t6488*t6255;
  t6503 = -1.*t6502*t6266;
  t5373 = t5140*t2456*t3600;
  t5375 = t3200*t5157;
  t5397 = t5373 + t5375;
  t5400 = t5140*t3200;
  t5401 = -1.*t2456*t3600*t5157;
  t5403 = t5400 + t5401;
  t5359 = t2675*t3600*t5162;
  t5361 = t2887*t5188;
  t5799 = t5140*t2675*t3600;
  t5801 = t2887*t5157;
  t5810 = t5799 + t5801;
  t5815 = t5140*t2887;
  t5816 = -1.*t2675*t3600*t5157;
  t5820 = t5815 + t5816;
  t6565 = t5140*t5127;
  t6567 = t2050*t5157;
  t6568 = t6565 + t6567;
  t6578 = -1.*t6488*t6568;
  t6579 = -1.*t6502*t6395;
  t6580 = 0. + t2397 + t2405 + t2411 + t3711 + t3715 + t5180 + t5191 + t6578 + t6579;
  t6584 = t5140*t5088;
  t6585 = t2675*t5157;
  t6589 = t6584 + t6585;
  t6591 = t6488*t6589;
  t6593 = t6502*t5991;
  t6598 = 0. + var1[1] + t2516 + t2521 + t3690 + t3702 + t5196 + t5200 + t6591 + t6593;
  t6610 = -1.*t3573*t2050*t6598;
  t5468 = t5140*t3940;
  t5469 = t3005*t5157;
  t5474 = t5468 + t5469;
  t5486 = t5140*t3005;
  t5487 = -1.*t3940*t5157;
  t5488 = t5486 + t5487;
  t5435 = t4415*t5162;
  t5437 = t2764*t5188;
  t5880 = t5140*t4415;
  t5881 = t2764*t5157;
  t5887 = t5880 + t5881;
  t5891 = t5140*t2764;
  t5892 = -1.*t4415*t5157;
  t5896 = t5891 + t5892;
  t5449 = -1.*t4894*t5162;
  t5452 = -1.*t2797*t5188;
  t6449 = t5140*t4894;
  t6450 = t2797*t5157;
  t6451 = t6449 + t6450;
  t6454 = t5140*t2797;
  t6464 = -1.*t4894*t5157;
  t6467 = t6454 + t6464;
  t5164 = t3614*t5162;
  t5171 = -1.*t3767*t5162;
  t5517 = t5140*t4111;
  t5520 = t3095*t5157;
  t5523 = t5517 + t5520;
  t5528 = t5140*t3095;
  t5529 = -1.*t4111*t5157;
  t5530 = t5528 + t5529;
  t6028 = t5140*t4600;
  t6033 = t2456*t5157;
  t6045 = t6028 + t6033;
  t5556 = -1.*t5127*t5555;
  t5564 = -1.*t2050*t5561;
  t6364 = -1.*t5140*t5127;
  t6368 = -1.*t2050*t5157;
  t6369 = t6364 + t6368;
  t5584 = t5088*t5555;
  t5590 = t2675*t5561;
  t5942 = -1.*t5140*t5088;
  t5945 = -1.*t2675*t5157;
  t5946 = t5942 + t5945;
  t5600 = -1.*t5140*t4600;
  t5609 = -1.*t2456*t5157;
  t5610 = t5600 + t5609;
  t6887 = -0.13004*t6475;
  t6888 = -0.08055*t6482;
  t6892 = t6887 + t6888;
  t6894 = 0.08055*t6475;
  t6895 = t6894 + t6486;
  t6851 = t6475*t5622;
  t6864 = -1.*t6482*t5622;
  t5905 = t5127*t5555;
  t5911 = t2050*t5561;
  t5935 = -1.*t4600*t5555;
  t5936 = -1.*t2456*t5561;
  t6941 = t6475*t5991;
  t6950 = -1.*t6482*t5991;
  t5743 = -1.*t2632*t3600*t5162;
  t5744 = -1.*t3146*t5188;
  t7005 = t6488*t6255;
  t7006 = t6502*t6266;
  t5789 = -1.*t2456*t3600*t5162;
  t5791 = -1.*t3200*t5188;
  t7050 = t6488*t6568;
  t7052 = t6502*t6395;
  t7055 = 0. + var1[2] + t2994 + t2995 + t4247 + t4259 + t5663 + t5664 + t7050 + t7052;
  t7061 = -1.*t6488*t6045;
  t7063 = -1.*t6502*t5622;
  t7064 = 0. + t3009 + t3010 + t3013 + t4200 + t4202 + t5688 + t5696 + t7061 + t7063;
  t7066 = -1.*t3573*t2050*t7064;
  t5844 = -1.*t3940*t5162;
  t5848 = -1.*t3005*t5188;
  t5855 = t4894*t5162;
  t5860 = t2797*t5188;
  t5636 = -1.*t3976*t5162;
  t5647 = t3767*t5162;
  t6017 = -1.*t4111*t5162;
  t6023 = -1.*t3095*t5188;
  t6909 = -1.*t6482*t6045;
  t6913 = t6909 + t6851;
  t6325 = -1.*t5088*t5555;
  t6339 = -1.*t2675*t5561;
  t6319 = t4600*t5555;
  t6321 = t2456*t5561;
  t7302 = t6475*t6395;
  t7314 = -1.*t6482*t6395;
  t6222 = t2632*t3600*t5162;
  t6229 = t3146*t5188;
  t6187 = -1.*t3159*t3600*t5162;
  t6196 = -1.*t2609*t5188;
  t6819 = t6488*t6045;
  t6820 = t6502*t5622;
  t7389 = -1.*t6482*t6255;
  t7391 = t6475*t6266;
  t7392 = t7389 + t7391;
  t7394 = 0.03315*t7392;
  t7395 = t6475*t6255;
  t7396 = t6482*t6266;
  t7398 = t7395 + t7396;
  t7399 = -0.19074*t7398;
  t6289 = t2456*t3600*t5162;
  t6291 = t3200*t5188;
  t6277 = -1.*t2675*t3600*t5162;
  t6278 = -1.*t2887*t5188;
  t7423 = -1.*t6488*t6589;
  t7427 = -1.*t6502*t5991;
  t7428 = 0. + t3274 + t3283 + t3300 + t4632 + t4642 + t6091 + t6092 + t7423 + t7427;
  t7434 = 0. + var1[0] + t2261 + t2323 + t4097 + t4099 + t5511 + t5512 + t6819 + t6820;
  t6070 = t4111*t5162;
  t6077 = t3095*t5188;
  t6428 = t3940*t5162;
  t6432 = t3005*t5188;
  t6441 = -1.*t4415*t5162;
  t6443 = -1.*t2764*t5188;
  t6122 = t3976*t5162;
  t6145 = -1.*t3614*t5162;
  t7635 = Cos(var1[10]);
  t7641 = -1.*t7635;
  t7645 = 1. + t7641;
  t7656 = Sin(var1[10]);
  t6509 = -1.*t6482*t5327;
  t6517 = t6475*t5334;
  t6523 = t6509 + t6517;
  t6526 = t6475*t5327;
  t6528 = t6482*t5334;
  t6533 = t6526 + t6528;
  t6549 = t6488*t5769;
  t6555 = t6502*t5777;
  t7653 = -0.19074*t7645;
  t7660 = 0.03315*t7656;
  t7663 = 0. + t7653 + t7660;
  t7021 = -1.*t6482*t5769;
  t7022 = t6475*t5777;
  t7029 = t7021 + t7022;
  t7670 = -0.03315*t7645;
  t7671 = -0.19074*t7656;
  t7672 = 0. + t7670 + t7671;
  t7034 = t6475*t5769;
  t7040 = t6482*t5777;
  t7042 = t7034 + t7040;
  t7352 = -1.*t6482*t6568;
  t7357 = t7352 + t7302;
  t6975 = -1.*t6482*t6589;
  t6977 = t6975 + t6941;
  t7669 = -1.*t7663*t7392;
  t7673 = -1.*t7672*t7398;
  t6620 = -1.*t6482*t5397;
  t6623 = t6475*t5403;
  t6627 = t6620 + t6623;
  t6634 = t6475*t5397;
  t6637 = t6482*t5403;
  t6639 = t6634 + t6637;
  t6646 = t6488*t5810;
  t6650 = t6502*t5820;
  t7103 = -1.*t6482*t5810;
  t7104 = t6475*t5820;
  t7105 = t7103 + t7104;
  t7114 = t6475*t5810;
  t7115 = t6482*t5820;
  t7116 = t7114 + t7115;
  t7729 = -1.*t7663*t7357;
  t7730 = t6475*t6568;
  t7731 = t6482*t6395;
  t7734 = t7730 + t7731;
  t7735 = -1.*t7672*t7734;
  t7736 = 0. + t2397 + t2405 + t2411 + t3711 + t3715 + t5180 + t5191 + t6578 + t6579 + t7729 + t7735;
  t7741 = t7663*t6977;
  t7744 = t6475*t6589;
  t7745 = t6482*t5991;
  t7747 = t7744 + t7745;
  t7752 = t7672*t7747;
  t7758 = 0. + var1[1] + t2516 + t2521 + t3690 + t3702 + t5196 + t5200 + t6591 + t6593 + t7741 + t7752;
  t7759 = -1.*t3573*t2050*t7758;
  t6664 = -1.*t6482*t5474;
  t6665 = t6475*t5488;
  t6666 = t6664 + t6665;
  t6672 = t6475*t5474;
  t6673 = t6482*t5488;
  t6677 = t6672 + t6673;
  t6687 = t6488*t5887;
  t6688 = t6502*t5896;
  t7144 = -1.*t6482*t5887;
  t7146 = t6475*t5896;
  t7148 = t7144 + t7146;
  t7153 = t6475*t5887;
  t7154 = t6482*t5896;
  t7155 = t7153 + t7154;
  t6697 = -1.*t6488*t6451;
  t6700 = -1.*t6502*t6467;
  t7545 = -1.*t6482*t6451;
  t7550 = t6475*t6467;
  t7559 = t7545 + t7550;
  t7566 = t6475*t6451;
  t7567 = t6482*t6467;
  t7569 = t7566 + t7567;
  t6717 = -1.*t5140*t6482*t3976;
  t6720 = -1.*t6475*t3976*t5157;
  t6721 = t6717 + t6720;
  t6730 = t6475*t5140*t3976;
  t6731 = -1.*t6482*t3976*t5157;
  t6734 = t6730 + t6731;
  t6745 = t5140*t6488*t3614;
  t6746 = -1.*t6502*t3614*t5157;
  t7196 = -1.*t5140*t6482*t3614;
  t7201 = -1.*t6475*t3614*t5157;
  t7202 = t7196 + t7201;
  t7204 = t6475*t5140*t3614;
  t7212 = -1.*t6482*t3614*t5157;
  t7213 = t7204 + t7212;
  t6768 = -1.*t5140*t6488*t3767;
  t6773 = t6502*t3767*t5157;
  t7604 = -1.*t5140*t6482*t3767;
  t7605 = -1.*t6475*t3767*t5157;
  t7608 = t7604 + t7605;
  t7611 = t6475*t5140*t3767;
  t7614 = -1.*t6482*t3767*t5157;
  t7616 = t7611 + t7614;
  t6836 = -1.*t6502*t6369;
  t6837 = -1.*t6488*t6395;
  t7294 = t6482*t6369;
  t7306 = t7294 + t7302;
  t7308 = t6475*t6369;
  t7315 = t7308 + t7314;
  t6844 = t6502*t5946;
  t6846 = t6488*t5991;
  t6938 = t6482*t5946;
  t6944 = t6938 + t6941;
  t6948 = t6475*t5946;
  t6951 = t6948 + t6950;
  t6850 = t6482*t5610;
  t6852 = t6850 + t6851;
  t6860 = t6475*t5610;
  t6867 = t6860 + t6864;
  t6893 = -1.*t6892*t6568;
  t6896 = -1.*t6895*t6395;
  t7367 = -1.*t6475*t6568;
  t7369 = t7367 + t7314;
  t6904 = t6892*t6589;
  t6905 = t6895*t5991;
  t6982 = -1.*t6475*t6589;
  t6985 = t6982 + t6950;
  t6915 = -1.*t6475*t6045;
  t6917 = t6915 + t6864;
  t6792 = -1.*t6482*t5523;
  t6799 = t6475*t5530;
  t6800 = t6792 + t6799;
  t6803 = t6475*t5523;
  t6804 = t6482*t5530;
  t6813 = t6803 + t6804;
  t7271 = t6475*t6045;
  t7272 = t6482*t5622;
  t7278 = t7271 + t7272;
  t8079 = 0.03315*t7635;
  t8081 = t8079 + t7671;
  t8084 = -0.19074*t7635;
  t8086 = -0.03315*t7656;
  t8089 = t8084 + t8086;
  t7987 = -1.*t7656*t6913;
  t8002 = t7635*t6913;
  t6926 = t6502*t6369;
  t6927 = t6488*t6395;
  t6956 = -1.*t6502*t5610;
  t6958 = -1.*t6488*t5622;
  t6970 = t6892*t6568;
  t6972 = t6895*t6395;
  t6987 = -1.*t6892*t6045;
  t6990 = -1.*t6895*t5622;
  t7011 = -1.*t6488*t5327;
  t7014 = -1.*t6502*t5334;
  t8202 = t7663*t7392;
  t8203 = t7672*t7398;
  t7088 = -1.*t6488*t5397;
  t7091 = -1.*t6502*t5403;
  t8245 = t7663*t7357;
  t8247 = t7672*t7734;
  t8253 = 0. + var1[2] + t2994 + t2995 + t4247 + t4259 + t5663 + t5664 + t7050 + t7052 + t8245 + t8247;
  t8257 = -1.*t7663*t6913;
  t8267 = -1.*t7672*t7278;
  t8270 = 0. + t3009 + t3010 + t3013 + t4200 + t4202 + t5688 + t5696 + t7061 + t7063 + t8257 + t8267;
  t8271 = -1.*t3573*t2050*t8270;
  t7133 = -1.*t6488*t5474;
  t7135 = -1.*t6502*t5488;
  t7166 = t6488*t6451;
  t7167 = t6502*t6467;
  t7184 = -1.*t5140*t6488*t3976;
  t7185 = t6502*t3976*t5157;
  t7218 = t5140*t6488*t3767;
  t7220 = -1.*t6502*t3767*t5157;
  t8178 = -1.*t7656*t6977;
  t8183 = t7635*t6977;
  t7253 = -1.*t6488*t5523;
  t7255 = -1.*t6502*t5530;
  t8116 = -1.*t7656*t7278;
  t8117 = t8002 + t8116;
  t7318 = -1.*t6502*t5946;
  t7320 = -1.*t6488*t5991;
  t7328 = t6502*t5610;
  t7340 = t6488*t5622;
  t7372 = -1.*t6892*t6589;
  t7375 = -1.*t6895*t5991;
  t7381 = t6892*t6045;
  t7382 = t6895*t5622;
  t7404 = t6488*t5327;
  t7410 = t6502*t5334;
  t7416 = -1.*t6488*t5769;
  t7417 = -1.*t6502*t5777;
  t8068 = t7663*t6913;
  t8069 = t7672*t7278;
  t8621 = t7656*t7392;
  t8633 = t7635*t7398;
  t8637 = t8621 + t8633;
  t8641 = -0.62554*t8637;
  t8642 = t7635*t7392;
  t8643 = -1.*t7656*t7398;
  t8644 = t8642 + t8643;
  t8645 = 0.01315*t8644;
  t7444 = t6488*t5397;
  t7446 = t6502*t5403;
  t7454 = -1.*t6488*t5810;
  t7455 = -1.*t6502*t5820;
  t8668 = -1.*t7663*t6977;
  t8669 = -1.*t7672*t7747;
  t8671 = 0. + t3274 + t3283 + t3300 + t4632 + t4642 + t6091 + t6092 + t7423 + t7427 + t8668 + t8669;
  t8673 = 0. + var1[0] + t2261 + t2323 + t4097 + t4099 + t5511 + t5512 + t6819 + t6820 + t8068 + t8069;
  t7484 = t6488*t5523;
  t7490 = t6502*t5530;
  t7516 = t6488*t5474;
  t7521 = t6502*t5488;
  t7532 = -1.*t6488*t5887;
  t7537 = -1.*t6502*t5896;
  t7577 = t5140*t6488*t3976;
  t7579 = -1.*t6502*t3976*t5157;
  t7587 = -1.*t5140*t6488*t3614;
  t7589 = t6502*t3614*t5157;
  t8562 = -1.*t7656*t7357;
  t8581 = t7635*t7357;
  p_output1[0]=0;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=0;
  p_output1[4]=0;
  p_output1[5]=0;
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=0;
  p_output1[10]=0;
  p_output1[11]=0;
  p_output1[12]=0;
  p_output1[13]=0;
  p_output1[14]=0;
  p_output1[15]=0;
  p_output1[16]=0;
  p_output1[17]=0;
  p_output1[18]=var2[1];
  p_output1[19]=-1.*var2[0];
  p_output1[20]=0;
  p_output1[21]=0;
  p_output1[22]=0;
  p_output1[23]=0;
  p_output1[24]=-1.*t124*var2[2] + t176*var1[2]*var2[3];
  p_output1[25]=-1.*t176*var2[2] - 1.*t124*var1[2]*var2[3];
  p_output1[26]=t124*var2[0] + t176*var2[1] + (-1.*t176*var1[0] + t124*var1[1])*var2[3];
  p_output1[27]=-1.*t124*var2[3];
  p_output1[28]=-1.*t176*var2[3];
  p_output1[29]=0;
  p_output1[30]=t568 + t580 - 1.*t124*t532*var1[2]*var2[3] + (t601 + t608)*var2[4];
  p_output1[31]=t696 + t737 - 1.*t176*t532*var1[2]*var2[3] + (t751 + t773)*var2[4];
  p_output1[32]=t846 + t877 + t952 + (t961 + t966)*var2[4];
  p_output1[33]=t1169;
  p_output1[34]=t1195;
  p_output1[35]=t1205;
  p_output1[36]=t568 + t580 + (-0.135*t1552 + 0.07996*t1567 - 1.*t124*t532*var1[2])*var2[3] + (-0.135*t1220*t124*t532 + 0.07996*t124*t1244*t532 + t601 + t608)*var2[4] + (0.07996*t1328 - 0.135*t1423)*var2[5];
  p_output1[37]=t696 + t737 + (-0.135*t1328 + 0.07996*t1723 - 1.*t176*t532*var1[2])*var2[3] + (-0.135*t1220*t176*t532 + 0.07996*t1244*t176*t532 + t751 + t773)*var2[4] + (-0.135*t1567 + 0.07996*t1796)*var2[5];
  p_output1[38]=t846 + t877 + t952 + (0.135*t1220*t570 - 0.07996*t1244*t570 + t961 + t966)*var2[4] + (0.07996*t1220*t532 + 0.135*t1244*t532)*var2[5];
  p_output1[39]=t1169;
  p_output1[40]=t1195;
  p_output1[41]=t1205;
  p_output1[42]=t2050*var2[1] + (-1.*t1796*t1999 + t2025*t2152)*var2[2] + (t2050*(t2261 + t2323) + 0.08055*t2352 + t2438*t2456 - 0.135*t176*t532)*var2[3] + (0.08055*t2712 + t2050*(t2716 + t2734) + t2438*t2764 + t2522*t2797 + t2675*(t2805 + t2806) - 0.135*t124*t570)*var2[4] + (t2556 + t2050*(t2575 + t2578) + t2438*t2609 + 0.08055*t2632 + (t2644 + t2645)*t2675)*var2[5] + (t2556 + t2050*(t2844 + t2868) + t2438*t2887 + t2892 + t2675*(t2893 + t2899))*var2[6];
  p_output1[43]=(-1.*t1220*t1999*t532 + t1244*t2025*t532)*var2[0] + t2456*var2[2] + (t2050*(t3057 + t3058) + 0.08055*t3082 + t2996*t3095 + 0.135*t124*t532)*var2[3] + (0.08055*t2959 + t2050*(t2968 + t2980) + t2996*t3005 + t2797*t3017 + t2456*(t3021 + t3026) - 0.135*t176*t570)*var2[4] + (t3111 + t2050*(t3123 + t3126) + t2996*t3146 + t2456*(t3149 + t3151) + 0.08055*t3159)*var2[5] + (0.08055*t2675 + t3111 + t2050*(t3171 + t3175) + t2996*t3200 + t2456*(t3206 + t3209))*var2[6];
  p_output1[44]=t2675*var2[0] + (-1.*t1328*t1999 + t1723*t2025)*var2[1] + (t2456*(t3010 + t3013) + t3095*t3310 + t2456*t3315 + t2675*(t3438 + t3442))*var2[3] + (0.08055*t3264 + t3005*t3310 + t2764*t3315 + t2456*(t3324 + t3326) + t2675*(t3336 + t3337) - 0.135*t532)*var2[4] + (t3146*t3310 + t2609*t3315 + t3360 + t2456*(t3380 + t3385) + t2675*(t3403 + t3408))*var2[5] + (t3200*t3310 + t2887*t3315 + t3360 + t2456*(t3461 + t3469) + t2675*(t3484 + t3486))*var2[6];
  p_output1[45]=t3095*var2[3] + t3005*var2[4] + t3146*var2[5] + t3200*var2[6];
  p_output1[46]=t2456*var2[3] + t2764*var2[4] + t2609*var2[5] + t2887*var2[6];
  p_output1[47]=t2797*var2[4] + t2555*var2[5] + t2555*var2[6];
  p_output1[48]=t3615 + t3655 + (0.08055*t3095 - 1.*t3717*t3976 - 1.*t3767*(t2261 + t2323 + t4097 + t4099) - 0.01004*t4111)*var2[3] + (0.08055*t3005 - 1.*t3705*t3863 - 1.*t3614*(t2805 + t2806 + t3868 + t3883) - 1.*t3767*(t2716 + t2734 + t3890 + t3903) - 1.*t3717*t3913 - 0.01004*t3940)*var2[4] + (0.08055*t3146 - 0.01004*t2632*t3600 + t3707 - 1.*t3159*t3573*t3717 - 1.*t3614*(t2644 + t2645 + t3732) - 1.*(t2575 + t2578 + t3745)*t3767)*var2[5] + (0.08055*t3200 - 0.01004*t2456*t3600 + t3707 - 1.*t2675*t3573*t3717 - 1.*t3614*(t2893 + t2899 + t3732) - 1.*t3767*(t2844 + t2868 + t3826))*var2[6] + (-0.01004*t3976 - 1.*t3614*(t4006 + t4025) - 1.*t3767*(t4036 + t4042) - 1.*t3705*t4064 - 1.*t3717*t4075)*var2[7];
  p_output1[49]=t4172 + t4183 + (t2892 - 1.*t4266*t4573 - 1.*t3767*(t3057 + t3058 + t3702 + t4579) - 0.01004*t4600)*var2[3] + (0.08055*t2764 - 1.*t3863*t4226 - 1.*t3976*(t3021 + t3026 + t4354 + t4361) - 1.*t3767*(t2968 + t2980 + t4370 + t4376) - 1.*t4266*t4393 - 0.01004*t4415)*var2[4] + (0.08055*t2609 - 0.01004*t3159*t3600 + t4233 - 1.*t2632*t3573*t4266 - 1.*t3976*(t3149 + t3151 + t4275) - 1.*t3767*(t3123 + t3126 + t4281))*var2[5] + (0.08055*t2887 - 0.01004*t2675*t3600 + t4233 - 1.*t2456*t3573*t4266 - 1.*t3976*(t3206 + t3209 + t4275) - 1.*t3767*(t3171 + t3175 + t4330))*var2[6] + (-0.01004*t3614 - 1.*t4064*t4226 - 1.*t3976*(t4436 + t4437) - 1.*t3767*(t4487 + t4496) - 1.*t4266*t4539)*var2[7];
  p_output1[50]=t4610 + t4623 + (-1.*t3976*(t3010 + t3013 + t4200 + t4202) - 1.*t3976*t4625 - 1.*t4573*t4657 - 1.*t3614*(t3438 + t3442 + t4642 + t4778))*var2[3] + (0.08055*t2797 - 1.*t3913*t4625 - 1.*t4393*t4657 - 1.*t3976*(t3324 + t3326 + t4826 + t4833) - 1.*t3614*(t3336 + t3337 + t4868 + t4869) - 0.01004*t4894)*var2[4] + (t4624 - 1.*t3159*t3573*t4625 - 1.*t2632*t3573*t4657 + t4668 - 1.*t3976*(t3380 + t3385 + t4674) - 1.*t3614*(t3403 + t3408 + t4689))*var2[5] + (t4624 - 1.*t2675*t3573*t4625 - 1.*t2456*t3573*t4657 + t4668 - 1.*t3976*(t3461 + t3469 + t4726) - 1.*t3614*(t3484 + t3486 + t4735))*var2[6] + (-0.01004*t3767 - 1.*t4075*t4625 - 1.*t4539*t4657 - 1.*t3976*(t4922 + t4925) - 1.*t3614*(t4937 + t4940))*var2[7];
  p_output1[51]=t5050;
  p_output1[52]=t5095;
  p_output1[53]=t5139;
  p_output1[54]=t3615 + t3655 + (-1.*t3976*t5192 - 1.*t3767*(t2261 + t2323 + t4097 + t4099 + t5511 + t5512) - 0.13004*t5523 + 0.08055*t5530)*var2[3] + (-1.*t3913*t5192 - 1.*t3863*t5201 - 1.*t3767*(t2716 + t2734 + t3890 + t3903 + t5435 + t5437) - 1.*t3614*(t2805 + t2806 + t3868 + t3883 + t5449 + t5452) - 0.13004*t5474 + 0.08055*t5488)*var2[4] + (-1.*t3159*t3573*t5192 - 1.*t3614*(t2644 + t2645 + t3732 + t5219 + t5221) - 1.*t3767*(t2575 + t2578 + t3745 + t5260 + t5283) + t5313 - 0.13004*t5327 + 0.08055*t5334)*var2[5] + (-1.*t2675*t3573*t5192 - 1.*t3614*(t2893 + t2899 + t3732 + t5219 + t5221) + t5313 - 1.*t3767*(t2844 + t2868 + t3826 + t5359 + t5361) - 0.13004*t5397 + 0.08055*t5403)*var2[6] + (-0.13004*t3976*t5140 - 0.08055*t3976*t5157 - 1.*t3767*(t4036 + t4042 + t5164) - 1.*t3614*(t4006 + t4025 + t5171) - 1.*t4075*t5192 - 1.*t4064*t5201)*var2[7] + (-1.*t3614*(t5556 + t5564) - 1.*t3767*(t5584 + t5590) + 0.08055*t5610 - 0.13004*t5622)*var2[8];
  p_output1[55]=t4172 + t4183 + (0.08055*t5622 - 1.*t4573*t5685 - 1.*t3767*(t3057 + t3058 + t3702 + t4579 + t6017 + t6023) - 0.13004*t6045)*var2[3] + (-1.*t4393*t5685 - 1.*t3863*t5698 - 1.*t3767*(t2968 + t2980 + t4370 + t4376 + t5844 + t5848) - 1.*t3976*(t3021 + t3026 + t4354 + t4361 + t5855 + t5860) - 0.13004*t5887 + 0.08055*t5896)*var2[4] + (-1.*t2632*t3573*t5685 - 1.*t3976*(t3149 + t3151 + t4275 + t5726 + t5729) - 1.*t3767*(t3123 + t3126 + t4281 + t5743 + t5744) + t5757 - 0.13004*t5769 + 0.08055*t5777)*var2[5] + (-1.*t2456*t3573*t5685 - 1.*t3976*(t3206 + t3209 + t4275 + t5726 + t5729) + t5757 - 1.*t3767*(t3171 + t3175 + t4330 + t5789 + t5791) - 0.13004*t5810 + 0.08055*t5820)*var2[6] + (-0.13004*t3614*t5140 - 0.08055*t3614*t5157 - 1.*t3767*(t4487 + t4496 + t5636) - 1.*t3976*(t4436 + t4437 + t5647) - 1.*t4539*t5685 - 1.*t4064*t5698)*var2[7] + (-1.*t3976*(t5905 + t5911) - 1.*t3767*(t5935 + t5936) + 0.08055*t5946 - 0.13004*t5991)*var2[8];
  p_output1[56]=t4610 + t4623 + (-1.*t3976*(t3010 + t3013 + t4200 + t4202 + t5688 + t5696) - 1.*t3976*t6066 - 1.*t3614*(t3438 + t3442 + t4642 + t4778 + t6070 + t6077) - 1.*t4573*t6097)*var2[3] + (-1.*t3913*t6066 - 1.*t4393*t6097 - 1.*t3614*(t3336 + t3337 + t4868 + t4869 + t6428 + t6432) - 1.*t3976*(t3324 + t3326 + t4826 + t4833 + t6441 + t6443) - 0.13004*t6451 + 0.08055*t6467)*var2[4] + (-1.*t3159*t3573*t6066 - 1.*t2632*t3573*t6097 - 1.*t3976*(t3380 + t3385 + t4674 + t6187 + t6196) - 1.*t3614*(t3403 + t3408 + t4689 + t6222 + t6229) + t6259 + t6267)*var2[5] + (-1.*t2675*t3573*t6066 - 1.*t2456*t3573*t6097 + t6259 + t6267 - 1.*t3976*(t3461 + t3469 + t4726 + t6277 + t6278) - 1.*t3614*(t3484 + t3486 + t4735 + t6289 + t6291))*var2[6] + (-0.13004*t3767*t5140 - 0.08055*t3767*t5157 - 1.*t4075*t6066 - 1.*t4539*t6097 - 1.*t3614*(t4937 + t4940 + t6122) - 1.*t3976*(t4922 + t4925 + t6145))*var2[7] + (-1.*t3614*(t6319 + t6321) - 1.*t3976*(t6325 + t6339) + 0.08055*t6369 - 0.13004*t6395)*var2[8];
  p_output1[57]=t5050;
  p_output1[58]=t5095;
  p_output1[59]=t5139;
  p_output1[60]=t3615 + t3655 + (-1.*t3976*t6580 + 0.03315*t6800 - 0.19074*t6813 - 1.*t3767*(t2261 + t2323 + t4097 + t4099 + t5511 + t5512 + t6819 + t6820))*var2[3] + (-1.*t3913*t6580 - 1.*t3863*t6598 + 0.03315*t6666 - 0.19074*t6677 - 1.*t3767*(t2716 + t2734 + t3890 + t3903 + t5435 + t5437 + t6687 + t6688) - 1.*t3614*(t2805 + t2806 + t3868 + t3883 + t5449 + t5452 + t6697 + t6700))*var2[4] + (-1.*t3614*(t2644 + t2645 + t3732 + t5219 + t5221 + t6489 + t6503) + 0.03315*t6523 - 0.19074*t6533 - 1.*t3767*(t2575 + t2578 + t3745 + t5260 + t5283 + t6549 + t6555) - 1.*t3159*t3573*t6580 + t6610)*var2[5] + (-1.*t3614*(t2893 + t2899 + t3732 + t5219 + t5221 + t6489 + t6503) - 1.*t2675*t3573*t6580 + t6610 + 0.03315*t6627 - 0.19074*t6639 - 1.*t3767*(t2844 + t2868 + t3826 + t5359 + t5361 + t6646 + t6650))*var2[6] + (-1.*t4075*t6580 - 1.*t4064*t6598 + 0.03315*t6721 - 0.19074*t6734 - 1.*t3767*(t4036 + t4042 + t5164 + t6745 + t6746) - 1.*t3614*(t4006 + t4025 + t5171 + t6768 + t6773))*var2[7] + (-1.*t3614*(t5556 + t5564 + t6836 + t6837) - 1.*t3767*(t5584 + t5590 + t6844 + t6846) - 0.19074*t6852 + 0.03315*t6867)*var2[8] + (-1.*t3614*(t6893 + t6896) - 1.*t3767*(t6904 + t6905) - 0.19074*t6913 + 0.03315*t6917)*var2[9];
  p_output1[61]=t4172 + t4183 + (0.03315*t6913 - 1.*t4573*t7055 - 1.*t3767*(t3057 + t3058 + t3702 + t4579 + t6017 + t6023 + t7253 + t7255) - 0.19074*t7278)*var2[3] + (-1.*t4393*t7055 - 1.*t3863*t7064 - 1.*t3767*(t2968 + t2980 + t4370 + t4376 + t5844 + t5848 + t7133 + t7135) + 0.03315*t7148 - 0.19074*t7155 - 1.*t3976*(t3021 + t3026 + t4354 + t4361 + t5855 + t5860 + t7166 + t7167))*var2[4] + (-1.*t3976*(t3149 + t3151 + t4275 + t5726 + t5729 + t7005 + t7006) - 1.*t3767*(t3123 + t3126 + t4281 + t5743 + t5744 + t7011 + t7014) + 0.03315*t7029 - 0.19074*t7042 - 1.*t2632*t3573*t7055 + t7066)*var2[5] + (-1.*t3976*(t3206 + t3209 + t4275 + t5726 + t5729 + t7005 + t7006) - 1.*t2456*t3573*t7055 + t7066 - 1.*t3767*(t3171 + t3175 + t4330 + t5789 + t5791 + t7088 + t7091) + 0.03315*t7105 - 0.19074*t7116)*var2[6] + (-1.*t4539*t7055 - 1.*t4064*t7064 - 1.*t3767*(t4487 + t4496 + t5636 + t7184 + t7185) + 0.03315*t7202 - 0.19074*t7213 - 1.*t3976*(t4436 + t4437 + t5647 + t7218 + t7220))*var2[7] + (-1.*t3976*(t5905 + t5911 + t6926 + t6927) - 0.19074*t6944 + 0.03315*t6951 - 1.*t3767*(t5935 + t5936 + t6956 + t6958))*var2[8] + (-1.*t3976*(t6970 + t6972) - 0.19074*t6977 + 0.03315*t6985 - 1.*t3767*(t6987 + t6990))*var2[9];
  p_output1[62]=t4610 + t4623 + (-1.*t3976*(t3010 + t3013 + t4200 + t4202 + t5688 + t5696 + t7061 + t7063) - 1.*t4573*t7428 - 1.*t3976*t7434 - 1.*t3614*(t3438 + t3442 + t4642 + t4778 + t6070 + t6077 + t7484 + t7490))*var2[3] + (-1.*t4393*t7428 - 1.*t3913*t7434 - 1.*t3614*(t3336 + t3337 + t4868 + t4869 + t6428 + t6432 + t7516 + t7521) - 1.*t3976*(t3324 + t3326 + t4826 + t4833 + t6441 + t6443 + t7532 + t7537) + 0.03315*t7559 - 0.19074*t7569)*var2[4] + (t7394 + t7399 - 1.*t3614*(t3403 + t3408 + t4689 + t6222 + t6229 + t7404 + t7410) - 1.*t3976*(t3380 + t3385 + t4674 + t6187 + t6196 + t7416 + t7417) - 1.*t2632*t3573*t7428 - 1.*t3159*t3573*t7434)*var2[5] + (t7394 + t7399 - 1.*t2456*t3573*t7428 - 1.*t2675*t3573*t7434 - 1.*t3614*(t3484 + t3486 + t4735 + t6289 + t6291 + t7444 + t7446) - 1.*t3976*(t3461 + t3469 + t4726 + t6277 + t6278 + t7454 + t7455))*var2[6] + (-1.*t4539*t7428 - 1.*t4075*t7434 - 1.*t3614*(t4937 + t4940 + t6122 + t7577 + t7579) - 1.*t3976*(t4922 + t4925 + t6145 + t7587 + t7589) + 0.03315*t7608 - 0.19074*t7616)*var2[7] + (-0.19074*t7306 + 0.03315*t7315 - 1.*t3976*(t6325 + t6339 + t7318 + t7320) - 1.*t3614*(t6319 + t6321 + t7328 + t7340))*var2[8] + (-0.19074*t7357 + 0.03315*t7369 - 1.*t3976*(t7372 + t7375) - 1.*t3614*(t7381 + t7382))*var2[9];
  p_output1[63]=t5050;
  p_output1[64]=t5095;
  p_output1[65]=t5139;
  p_output1[66]=t3615 + t3655 + (-0.62554*(t6813*t7635 + t6800*t7656) + 0.01315*(t6800*t7635 - 1.*t6813*t7656) - 1.*t3976*t7736 - 1.*t3767*(t2261 + t2323 + t4097 + t4099 + t5511 + t5512 + t6819 + t6820 + t8068 + t8069))*var2[3] + (-0.62554*(t6677*t7635 + t6666*t7656) + 0.01315*(t6666*t7635 - 1.*t6677*t7656) - 1.*t3767*(t2716 + t2734 + t3890 + t3903 + t5435 + t5437 + t6687 + t6688 + t7148*t7663 + t7155*t7672) - 1.*t3614*(t2805 + t2806 + t3868 + t3883 + t5449 + t5452 + t6697 + t6700 - 1.*t7559*t7663 - 1.*t7569*t7672) - 1.*t3913*t7736 - 1.*t3863*t7758)*var2[4] + (-0.62554*(t6533*t7635 + t6523*t7656) + 0.01315*(t6523*t7635 - 1.*t6533*t7656) - 1.*t3767*(t2575 + t2578 + t3745 + t5260 + t5283 + t6549 + t6555 + t7029*t7663 + t7042*t7672) - 1.*t3614*(t2644 + t2645 + t3732 + t5219 + t5221 + t6489 + t6503 + t7669 + t7673) - 1.*t3159*t3573*t7736 + t7759)*var2[5] + (-0.62554*(t6639*t7635 + t6627*t7656) + 0.01315*(t6627*t7635 - 1.*t6639*t7656) - 1.*t3767*(t2844 + t2868 + t3826 + t5359 + t5361 + t6646 + t6650 + t7105*t7663 + t7116*t7672) - 1.*t3614*(t2893 + t2899 + t3732 + t5219 + t5221 + t6489 + t6503 + t7669 + t7673) - 1.*t2675*t3573*t7736 + t7759)*var2[6] + (-0.62554*(t6734*t7635 + t6721*t7656) + 0.01315*(t6721*t7635 - 1.*t6734*t7656) - 1.*t3767*(t4036 + t4042 + t5164 + t6745 + t6746 + t7202*t7663 + t7213*t7672) - 1.*t3614*(t4006 + t4025 + t5171 + t6768 + t6773 - 1.*t7608*t7663 - 1.*t7616*t7672) - 1.*t4075*t7736 - 1.*t4064*t7758)*var2[7] + (0.01315*(t6867*t7635 - 1.*t6852*t7656) - 0.62554*(t6852*t7635 + t6867*t7656) - 1.*t3767*(t5584 + t5590 + t6844 + t6846 + t6951*t7663 + t6944*t7672) - 1.*t3614*(t5556 + t5564 + t6836 + t6837 - 1.*t7315*t7663 - 1.*t7306*t7672))*var2[8] + (-1.*t3767*(t6904 + t6905 + t6985*t7663 + t6977*t7672) - 1.*t3614*(t6893 + t6896 - 1.*t7369*t7663 - 1.*t7357*t7672) + 0.01315*(t6917*t7635 + t7987) - 0.62554*(t6917*t7656 + t8002))*var2[9] + (0.01315*(-1.*t7278*t7635 + t7987) - 1.*t3614*(-1.*t7357*t8081 - 1.*t7734*t8089) - 1.*t3767*(t6977*t8081 + t7747*t8089) - 0.62554*t8117)*var2[10];
  p_output1[67]=t4172 + t4183 + (-0.62554*(t7278*t7635 + t6913*t7656) - 1.*t3767*(t3057 + t3058 + t3702 + t4579 + t6017 + t6023 + t7253 + t7255 - 1.*t6800*t7663 - 1.*t6813*t7672) + 0.01315*t8117 - 1.*t4573*t8253)*var2[3] + (-0.62554*(t7155*t7635 + t7148*t7656) + 0.01315*(t7148*t7635 - 1.*t7155*t7656) - 1.*t3767*(t2968 + t2980 + t4370 + t4376 + t5844 + t5848 + t7133 + t7135 - 1.*t6666*t7663 - 1.*t6677*t7672) - 1.*t3976*(t3021 + t3026 + t4354 + t4361 + t5855 + t5860 + t7166 + t7167 + t7559*t7663 + t7569*t7672) - 1.*t4393*t8253 - 1.*t3863*t8270)*var2[4] + (-0.62554*(t7042*t7635 + t7029*t7656) + 0.01315*(t7029*t7635 - 1.*t7042*t7656) - 1.*t3767*(t3123 + t3126 + t4281 + t5743 + t5744 + t7011 + t7014 - 1.*t6523*t7663 - 1.*t6533*t7672) - 1.*t3976*(t3149 + t3151 + t4275 + t5726 + t5729 + t7005 + t7006 + t8202 + t8203) - 1.*t2632*t3573*t8253 + t8271)*var2[5] + (-0.62554*(t7116*t7635 + t7105*t7656) + 0.01315*(t7105*t7635 - 1.*t7116*t7656) - 1.*t3767*(t3171 + t3175 + t4330 + t5789 + t5791 + t7088 + t7091 - 1.*t6627*t7663 - 1.*t6639*t7672) - 1.*t3976*(t3206 + t3209 + t4275 + t5726 + t5729 + t7005 + t7006 + t8202 + t8203) - 1.*t2456*t3573*t8253 + t8271)*var2[6] + (-0.62554*(t7213*t7635 + t7202*t7656) + 0.01315*(t7202*t7635 - 1.*t7213*t7656) - 1.*t3767*(t4487 + t4496 + t5636 + t7184 + t7185 - 1.*t6721*t7663 - 1.*t6734*t7672) - 1.*t3976*(t4436 + t4437 + t5647 + t7218 + t7220 + t7608*t7663 + t7616*t7672) - 1.*t4539*t8253 - 1.*t4064*t8270)*var2[7] + (0.01315*(t6951*t7635 - 1.*t6944*t7656) - 0.62554*(t6944*t7635 + t6951*t7656) - 1.*t3767*(t5935 + t5936 + t6956 + t6958 - 1.*t6867*t7663 - 1.*t6852*t7672) - 1.*t3976*(t5905 + t5911 + t6926 + t6927 + t7315*t7663 + t7306*t7672))*var2[8] + (-1.*t3767*(t6987 + t6990 - 1.*t6917*t7663 - 1.*t6913*t7672) - 1.*t3976*(t6970 + t6972 + t7369*t7663 + t7357*t7672) + 0.01315*(t6985*t7635 + t8178) - 0.62554*(t6985*t7656 + t8183))*var2[9] + (-1.*t3767*(-1.*t6913*t8081 - 1.*t7278*t8089) - 1.*t3976*(t7357*t8081 + t7734*t8089) + 0.01315*(-1.*t7635*t7747 + t8178) - 0.62554*(-1.*t7656*t7747 + t8183))*var2[10];
  p_output1[68]=t4610 + t4623 + (-1.*t3614*(t3438 + t3442 + t4642 + t4778 + t6070 + t6077 + t7484 + t7490 + t6800*t7663 + t6813*t7672) - 1.*t3976*(t3010 + t3013 + t4200 + t4202 + t5688 + t5696 + t7061 + t7063 + t8257 + t8267) - 1.*t4573*t8671 - 1.*t3976*t8673)*var2[3] + (-0.62554*(t7569*t7635 + t7559*t7656) + 0.01315*(t7559*t7635 - 1.*t7569*t7656) - 1.*t3614*(t3336 + t3337 + t4868 + t4869 + t6428 + t6432 + t7516 + t7521 + t6666*t7663 + t6677*t7672) - 1.*t3976*(t3324 + t3326 + t4826 + t4833 + t6441 + t6443 + t7532 + t7537 - 1.*t7148*t7663 - 1.*t7155*t7672) - 1.*t4393*t8671 - 1.*t3913*t8673)*var2[4] + (-1.*t3614*(t3403 + t3408 + t4689 + t6222 + t6229 + t7404 + t7410 + t6523*t7663 + t6533*t7672) - 1.*t3976*(t3380 + t3385 + t4674 + t6187 + t6196 + t7416 + t7417 - 1.*t7029*t7663 - 1.*t7042*t7672) + t8641 + t8645 - 1.*t2632*t3573*t8671 - 1.*t3159*t3573*t8673)*var2[5] + (-1.*t3614*(t3484 + t3486 + t4735 + t6289 + t6291 + t7444 + t7446 + t6627*t7663 + t6639*t7672) - 1.*t3976*(t3461 + t3469 + t4726 + t6277 + t6278 + t7454 + t7455 - 1.*t7105*t7663 - 1.*t7116*t7672) + t8641 + t8645 - 1.*t2456*t3573*t8671 - 1.*t2675*t3573*t8673)*var2[6] + (-0.62554*(t7616*t7635 + t7608*t7656) + 0.01315*(t7608*t7635 - 1.*t7616*t7656) - 1.*t3614*(t4937 + t4940 + t6122 + t7577 + t7579 + t6721*t7663 + t6734*t7672) - 1.*t3976*(t4922 + t4925 + t6145 + t7587 + t7589 - 1.*t7202*t7663 - 1.*t7213*t7672) - 1.*t4539*t8671 - 1.*t4075*t8673)*var2[7] + (0.01315*(t7315*t7635 - 1.*t7306*t7656) - 0.62554*(t7306*t7635 + t7315*t7656) - 1.*t3614*(t6319 + t6321 + t7328 + t7340 + t6867*t7663 + t6852*t7672) - 1.*t3976*(t6325 + t6339 + t7318 + t7320 - 1.*t6951*t7663 - 1.*t6944*t7672))*var2[8] + (-1.*t3614*(t7381 + t7382 + t6917*t7663 + t6913*t7672) - 1.*t3976*(t7372 + t7375 - 1.*t6985*t7663 - 1.*t6977*t7672) + 0.01315*(t7369*t7635 + t8562) - 0.62554*(t7369*t7656 + t8581))*var2[9] + (-1.*t3614*(t6913*t8081 + t7278*t8089) - 1.*t3976*(-1.*t6977*t8081 - 1.*t7747*t8089) + 0.01315*(-1.*t7635*t7734 + t8562) - 0.62554*(-1.*t7656*t7734 + t8581))*var2[10];
  p_output1[69]=t5050;
  p_output1[70]=t5095;
  p_output1[71]=t5139;
  p_output1[72]=0;
  p_output1[73]=0;
  p_output1[74]=0;
  p_output1[75]=0;
  p_output1[76]=0;
  p_output1[77]=0;
  p_output1[78]=0;
  p_output1[79]=0;
  p_output1[80]=0;
  p_output1[81]=0;
  p_output1[82]=0;
  p_output1[83]=0;
  p_output1[84]=0;
  p_output1[85]=0;
  p_output1[86]=0;
  p_output1[87]=0;
  p_output1[88]=0;
  p_output1[89]=0;
  p_output1[90]=0;
  p_output1[91]=0;
  p_output1[92]=0;
  p_output1[93]=0;
  p_output1[94]=0;
  p_output1[95]=0;
  p_output1[96]=0;
  p_output1[97]=0;
  p_output1[98]=0;
  p_output1[99]=0;
  p_output1[100]=0;
  p_output1[101]=0;
  p_output1[102]=0;
  p_output1[103]=0;
  p_output1[104]=0;
  p_output1[105]=0;
  p_output1[106]=0;
  p_output1[107]=0;
  p_output1[108]=0;
  p_output1[109]=0;
  p_output1[110]=0;
  p_output1[111]=0;
  p_output1[112]=0;
  p_output1[113]=0;
  p_output1[114]=0;
  p_output1[115]=0;
  p_output1[116]=0;
  p_output1[117]=0;
  p_output1[118]=0;
  p_output1[119]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 20 && ncols == 1) && 
      !(mrows == 1 && ncols == 20))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 20 && ncols == 1) && 
      !(mrows == 1 && ncols == 20))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 6, (mwSize) 20, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "dJs_LeftTarsus_mex.hh"

namespace SymExpression
{

void dJs_LeftTarsus_mex_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
