/*
 * Automatically Generated from Mathematica.
 * Mon 11 May 2020 22:33:19 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t947;
  double t961;
  double t978;
  double t1132;
  double t941;
  double t1157;
  double t1326;
  double t1123;
  double t1165;
  double t1227;
  double t939;
  double t1328;
  double t1446;
  double t1539;
  double t1575;
  double t1624;
  double t1674;
  double t1680;
  double t1691;
  double t1719;
  double t1780;
  double t1322;
  double t1746;
  double t1749;
  double t717;
  double t1781;
  double t1791;
  double t1829;
  double t1999;
  double t1769;
  double t1849;
  double t1958;
  double t543;
  double t2010;
  double t2082;
  double t2144;
  double t2273;
  double t1961;
  double t2157;
  double t2165;
  double t285;
  double t2290;
  double t2295;
  double t2313;
  double t2405;
  double t2185;
  double t2340;
  double t2390;
  double t81;
  double t2427;
  double t2431;
  double t2437;
  double t2651;
  double t2648;
  double t2654;
  double t2677;
  double t2709;
  double t2722;
  double t2736;
  double t2686;
  double t2745;
  double t2750;
  double t2755;
  double t2779;
  double t2780;
  double t2753;
  double t2827;
  double t2847;
  double t2852;
  double t2857;
  double t2871;
  double t2849;
  double t2876;
  double t2898;
  double t2912;
  double t2913;
  double t2924;
  double t2903;
  double t2929;
  double t2930;
  double t2946;
  double t2984;
  double t3019;
  double t2931;
  double t3041;
  double t3046;
  double t3093;
  double t3096;
  double t3105;
  double t3204;
  double t3205;
  double t3213;
  double t3246;
  double t3253;
  double t3256;
  double t3258;
  double t3259;
  double t3260;
  double t3268;
  double t3276;
  double t3298;
  double t3310;
  double t3320;
  double t3321;
  double t3300;
  double t3322;
  double t3324;
  double t3349;
  double t3352;
  double t3388;
  double t3347;
  double t3396;
  double t3400;
  double t3409;
  double t3415;
  double t3423;
  double t3501;
  double t3503;
  double t3516;
  double t3535;
  double t3506;
  double t3538;
  double t3550;
  double t3564;
  double t3583;
  double t3595;
  double t3553;
  double t3599;
  double t3609;
  double t3613;
  double t3629;
  double t3633;
  double t3610;
  double t3635;
  double t3641;
  double t3652;
  double t3656;
  double t3662;
  double t3646;
  double t3664;
  double t3665;
  double t3668;
  double t3671;
  double t3675;
  double t3775;
  double t3777;
  double t3778;
  double t3769;
  double t3779;
  double t3784;
  double t3805;
  double t3827;
  double t3828;
  double t3796;
  double t3836;
  double t3839;
  double t3845;
  double t3853;
  double t3859;
  double t3841;
  double t3879;
  double t3881;
  double t3908;
  double t3918;
  double t3923;
  double t3885;
  double t3927;
  double t3939;
  double t3957;
  double t3961;
  double t3965;
  double t4057;
  double t4064;
  double t4069;
  double t4088;
  double t4125;
  double t4136;
  double t4137;
  double t4133;
  double t4142;
  double t4153;
  double t4156;
  double t4160;
  double t4162;
  double t4154;
  double t4163;
  double t4168;
  double t4213;
  double t4222;
  double t4234;
  double t4332;
  double t4333;
  double t4354;
  double t4369;
  double t4378;
  double t4394;
  double t4395;
  double t4392;
  double t4407;
  double t4416;
  double t4419;
  double t4421;
  double t4423;
  double t4532;
  double t4542;
  double t4547;
  double t4554;
  double t4568;
  double t4598;
  double t4601;
  double t4572;
  double t4621;
  double t4671;
  double t4680;
  double t4686;
  double t4737;
  double t4749;
  double t4763;
  double t4767;
  double t4770;
  double t4771;
  double t4764;
  double t4776;
  double t4780;
  double t4787;
  double t4801;
  double t4821;
  double t4849;
  double t4858;
  double t4870;
  double t4784;
  double t4874;
  double t4875;
  double t4879;
  double t4882;
  double t4893;
  double t4877;
  double t4916;
  double t4922;
  double t4933;
  double t4935;
  double t4937;
  double t4929;
  double t4941;
  double t4945;
  double t5007;
  double t5015;
  double t5017;
  double t4977;
  double t5024;
  double t5035;
  double t5044;
  double t5061;
  double t5062;
  double t5158;
  double t5173;
  double t5183;
  double t5221;
  double t5224;
  double t5231;
  double t5232;
  double t5234;
  double t5236;
  double t5201;
  double t5260;
  double t5267;
  double t5287;
  double t5299;
  double t5303;
  double t5278;
  double t5312;
  double t5315;
  double t5350;
  double t5351;
  double t5369;
  double t5323;
  double t5371;
  double t5376;
  double t5394;
  double t5396;
  double t5401;
  double t5386;
  double t5404;
  double t5406;
  double t5426;
  double t5428;
  double t5440;
  double t5537;
  double t5539;
  double t5545;
  double t5549;
  double t5551;
  double t5564;
  double t5570;
  double t5574;
  double t5556;
  double t5578;
  double t5581;
  double t5591;
  double t5593;
  double t5596;
  double t5583;
  double t5600;
  double t5601;
  double t5610;
  double t5628;
  double t5629;
  double t5602;
  double t5656;
  double t5658;
  double t5701;
  double t5706;
  double t5707;
  double t5662;
  double t5721;
  double t5725;
  double t5734;
  double t5752;
  double t5761;
  double t5840;
  double t5851;
  double t5853;
  double t5858;
  double t5861;
  double t5862;
  double t5870;
  double t5875;
  double t5881;
  double t5884;
  double t5886;
  double t5913;
  double t5917;
  double t5919;
  double t5927;
  double t5916;
  double t5934;
  double t5935;
  double t5938;
  double t5953;
  double t5958;
  double t5936;
  double t5973;
  double t5975;
  double t5984;
  double t5992;
  double t5997;
  double t6065;
  double t6075;
  double t6081;
  double t6097;
  double t6077;
  double t6101;
  double t6115;
  double t6121;
  double t6124;
  double t6133;
  double t6117;
  double t6148;
  double t6151;
  double t6154;
  double t6157;
  double t6166;
  double t6152;
  double t6167;
  double t6168;
  double t6179;
  double t6186;
  double t6197;
  double t6177;
  double t6207;
  double t6208;
  double t6213;
  double t6222;
  double t6223;
  double t4705;
  double t4718;
  double t6353;
  double t6359;
  double t6367;
  double t6332;
  double t6369;
  double t6378;
  double t6381;
  double t6382;
  double t6383;
  double t6380;
  double t6386;
  double t6409;
  double t6411;
  double t6424;
  double t6425;
  double t6410;
  double t6459;
  double t6470;
  double t6478;
  double t6481;
  double t6501;
  double t6477;
  double t6502;
  double t6507;
  double t6515;
  double t6517;
  double t6519;
  double t6568;
  double t6578;
  double t6580;
  double t6581;
  double t6586;
  double t6589;
  double t6598;
  double t6588;
  double t6604;
  double t6607;
  double t6619;
  double t6626;
  double t6629;
  double t6615;
  double t6630;
  double t6636;
  double t6645;
  double t6659;
  double t6660;
  double t6715;
  double t6720;
  double t6726;
  double t6731;
  double t6739;
  double t6745;
  double t6747;
  double t6743;
  double t6754;
  double t6765;
  double t6771;
  double t6778;
  double t6781;
  double t6827;
  double t6831;
  double t6842;
  double t6846;
  double t6848;
  double t6851;
  double t6856;
  double t6849;
  double t6870;
  double t6888;
  double t6890;
  double t6895;
  double t6941;
  double t6942;
  double t6950;
  double t6951;
  double t6957;
  double t6965;
  double t6967;
  double t6977;
  double t6979;
  double t6988;
  double t6989;
  double t6990;
  double t6985;
  double t6992;
  double t6993;
  double t7017;
  double t7020;
  double t7021;
  double t7002;
  double t7023;
  double t7024;
  double t7027;
  double t7030;
  double t7031;
  double t7086;
  double t7091;
  double t7093;
  double t7108;
  double t7109;
  double t7110;
  double t7105;
  double t7111;
  double t7113;
  double t7117;
  double t7118;
  double t7120;
  double t7116;
  double t7131;
  double t7132;
  double t7138;
  double t7139;
  double t7141;
  double t7137;
  double t7144;
  double t7145;
  double t7151;
  double t7152;
  double t7153;
  double t7148;
  double t7154;
  double t7155;
  double t7160;
  double t7161;
  double t7168;
  double t7159;
  double t7170;
  double t7172;
  double t7176;
  double t7177;
  double t7182;
  double t7192;
  double t7196;
  double t7199;
  double t7208;
  double t7211;
  double t7219;
  double t7206;
  double t7223;
  double t7226;
  double t7240;
  double t7242;
  double t7245;
  double t7233;
  double t7246;
  double t7250;
  double t7258;
  double t7259;
  double t7261;
  double t7252;
  double t7263;
  double t7274;
  double t7277;
  double t7283;
  double t7284;
  double t7276;
  double t7290;
  double t7294;
  double t7302;
  double t7303;
  double t7316;
  double t7349;
  double t7351;
  double t7352;
  double t7356;
  double t7365;
  double t7367;
  double t7369;
  double t7366;
  double t7373;
  double t7376;
  double t7381;
  double t7394;
  double t7395;
  double t7378;
  double t7396;
  double t7398;
  double t7412;
  double t7419;
  double t7428;
  double t7459;
  double t7463;
  double t7467;
  double t7468;
  double t7471;
  double t7488;
  double t7492;
  double t7479;
  double t7494;
  double t7495;
  double t7499;
  double t7513;
  double t7515;
  double t7563;
  double t7568;
  double t7570;
  double t7571;
  double t7573;
  double t7587;
  double t7591;
  double t7580;
  double t7600;
  double t7631;
  double t7638;
  double t7642;
  double t7671;
  double t7681;
  double t7686;
  double t7689;
  double t7692;
  double t7693;
  double t7695;
  double t7700;
  double t7702;
  double t7688;
  double t7705;
  double t7710;
  double t7712;
  double t7716;
  double t7720;
  double t7711;
  double t7722;
  double t7726;
  double t7732;
  double t7738;
  double t7739;
  double t7727;
  double t7742;
  double t7744;
  double t7748;
  double t7750;
  double t7753;
  double t7746;
  double t7757;
  double t7759;
  double t7762;
  double t7765;
  double t7769;
  double t2394;
  double t2451;
  double t2496;
  double t2506;
  double t2513;
  double t2524;
  double t3051;
  double t3132;
  double t3142;
  double t3148;
  double t3149;
  double t3158;
  double t3407;
  double t3438;
  double t3455;
  double t3486;
  double t3488;
  double t3490;
  double t3666;
  double t3691;
  double t3695;
  double t3717;
  double t3718;
  double t3722;
  double t3945;
  double t3972;
  double t3985;
  double t4001;
  double t4013;
  double t4027;
  double t4187;
  double t4257;
  double t4258;
  double t4266;
  double t4275;
  double t4287;
  double t4418;
  double t4441;
  double t4447;
  double t4457;
  double t4469;
  double t4474;
  double t4604;
  double t4608;
  double t4631;
  double t4637;
  double t4690;
  double t4693;
  double t5041;
  double t5077;
  double t5081;
  double t5095;
  double t5099;
  double t5137;
  double t5412;
  double t5441;
  double t5444;
  double t5454;
  double t5470;
  double t5489;
  double t5733;
  double t5762;
  double t5767;
  double t5779;
  double t5785;
  double t5807;
  double t5979;
  double t6002;
  double t6006;
  double t6037;
  double t6044;
  double t6049;
  double t6211;
  double t6232;
  double t6235;
  double t6239;
  double t6254;
  double t6261;
  double t6296;
  double t6297;
  double t6302;
  double t4723;
  double t6509;
  double t6522;
  double t6523;
  double t6543;
  double t6551;
  double t6557;
  double t6639;
  double t6667;
  double t6677;
  double t6699;
  double t6702;
  double t6708;
  double t6768;
  double t6785;
  double t6797;
  double t6804;
  double t6806;
  double t6810;
  double t6859;
  double t6861;
  double t6876;
  double t6880;
  double t6903;
  double t6906;
  double t6910;
  double t6916;
  double t7026;
  double t7033;
  double t7038;
  double t7059;
  double t7060;
  double t7064;
  double t8098;
  double t8100;
  double t8103;
  double t7295;
  double t7317;
  double t7321;
  double t7327;
  double t7330;
  double t7332;
  double t7401;
  double t7432;
  double t7438;
  double t7442;
  double t7446;
  double t7447;
  double t7496;
  double t7518;
  double t7520;
  double t7527;
  double t7541;
  double t7542;
  double t7595;
  double t7596;
  double t7602;
  double t7609;
  double t7650;
  double t7651;
  double t7655;
  double t7656;
  double t7760;
  double t7772;
  double t7777;
  double t7783;
  double t7786;
  double t7790;
  t947 = Cos(var1[3]);
  t961 = Cos(var1[4]);
  t978 = Cos(var1[5]);
  t1132 = Sin(var1[13]);
  t941 = Cos(var1[13]);
  t1157 = Sin(var1[5]);
  t1326 = Cos(var1[15]);
  t1123 = t941*t947*t961*t978;
  t1165 = -1.*t947*t961*t1132*t1157;
  t1227 = t1123 + t1165;
  t939 = Sin(var1[15]);
  t1328 = Cos(var1[14]);
  t1446 = Sin(var1[4]);
  t1539 = -1.*t1328*t947*t1446;
  t1575 = Sin(var1[14]);
  t1624 = t947*t961*t978*t1132;
  t1674 = t941*t947*t961*t1157;
  t1680 = t1624 + t1674;
  t1691 = t1575*t1680;
  t1719 = t1539 + t1691;
  t1780 = Cos(var1[16]);
  t1322 = t939*t1227;
  t1746 = t1326*t1719;
  t1749 = t1322 + t1746;
  t717 = Sin(var1[16]);
  t1781 = t1326*t1227;
  t1791 = -1.*t939*t1719;
  t1829 = t1781 + t1791;
  t1999 = Cos(var1[17]);
  t1769 = -1.*t717*t1749;
  t1849 = t1780*t1829;
  t1958 = t1769 + t1849;
  t543 = Sin(var1[17]);
  t2010 = t1780*t1749;
  t2082 = t717*t1829;
  t2144 = t2010 + t2082;
  t2273 = Cos(var1[18]);
  t1961 = t543*t1958;
  t2157 = t1999*t2144;
  t2165 = t1961 + t2157;
  t285 = Sin(var1[18]);
  t2290 = t1999*t1958;
  t2295 = -1.*t543*t2144;
  t2313 = t2290 + t2295;
  t2405 = Cos(var1[19]);
  t2185 = -1.*t285*t2165;
  t2340 = t2273*t2313;
  t2390 = t2185 + t2340;
  t81 = Sin(var1[19]);
  t2427 = t2273*t2165;
  t2431 = t285*t2313;
  t2437 = t2427 + t2431;
  t2651 = Sin(var1[3]);
  t2648 = t947*t978*t1446;
  t2654 = t2651*t1157;
  t2677 = t2648 + t2654;
  t2709 = t978*t2651;
  t2722 = -1.*t947*t1446*t1157;
  t2736 = t2709 + t2722;
  t2686 = -1.*t1132*t2677;
  t2745 = t941*t2736;
  t2750 = t2686 + t2745;
  t2755 = t941*t2677;
  t2779 = t1132*t2736;
  t2780 = t2755 + t2779;
  t2753 = t939*t2750;
  t2827 = t1326*t1575*t2780;
  t2847 = t2753 + t2827;
  t2852 = t1326*t2750;
  t2857 = -1.*t1575*t939*t2780;
  t2871 = t2852 + t2857;
  t2849 = -1.*t717*t2847;
  t2876 = t1780*t2871;
  t2898 = t2849 + t2876;
  t2912 = t1780*t2847;
  t2913 = t717*t2871;
  t2924 = t2912 + t2913;
  t2903 = t543*t2898;
  t2929 = t1999*t2924;
  t2930 = t2903 + t2929;
  t2946 = t1999*t2898;
  t2984 = -1.*t543*t2924;
  t3019 = t2946 + t2984;
  t2931 = -1.*t285*t2930;
  t3041 = t2273*t3019;
  t3046 = t2931 + t3041;
  t3093 = t2273*t2930;
  t3096 = t285*t3019;
  t3105 = t3093 + t3096;
  t3204 = -1.*t947*t961*t1575;
  t3205 = t1132*t2677;
  t3213 = -1.*t978*t2651;
  t3246 = t947*t1446*t1157;
  t3253 = t3213 + t3246;
  t3256 = t941*t3253;
  t3258 = t3205 + t3256;
  t3259 = t1328*t3258;
  t3260 = t3204 + t3259;
  t3268 = -1.*t1780*t939*t3260;
  t3276 = -1.*t1326*t717*t3260;
  t3298 = t3268 + t3276;
  t3310 = t1326*t1780*t3260;
  t3320 = -1.*t939*t717*t3260;
  t3321 = t3310 + t3320;
  t3300 = t543*t3298;
  t3322 = t1999*t3321;
  t3324 = t3300 + t3322;
  t3349 = t1999*t3298;
  t3352 = -1.*t543*t3321;
  t3388 = t3349 + t3352;
  t3347 = -1.*t285*t3324;
  t3396 = t2273*t3388;
  t3400 = t3347 + t3396;
  t3409 = t2273*t3324;
  t3415 = t285*t3388;
  t3423 = t3409 + t3415;
  t3501 = -1.*t941*t3253;
  t3503 = t2686 + t3501;
  t3516 = -1.*t1132*t3253;
  t3535 = t2755 + t3516;
  t3506 = t939*t3503;
  t3538 = t1326*t1575*t3535;
  t3550 = t3506 + t3538;
  t3564 = t1326*t3503;
  t3583 = -1.*t1575*t939*t3535;
  t3595 = t3564 + t3583;
  t3553 = -1.*t717*t3550;
  t3599 = t1780*t3595;
  t3609 = t3553 + t3599;
  t3613 = t1780*t3550;
  t3629 = t717*t3595;
  t3633 = t3613 + t3629;
  t3610 = t543*t3609;
  t3635 = t1999*t3633;
  t3641 = t3610 + t3635;
  t3652 = t1999*t3609;
  t3656 = -1.*t543*t3633;
  t3662 = t3652 + t3656;
  t3646 = -1.*t285*t3641;
  t3664 = t2273*t3662;
  t3665 = t3646 + t3664;
  t3668 = t2273*t3641;
  t3671 = t285*t3662;
  t3675 = t3668 + t3671;
  t3775 = t1328*t947*t961;
  t3777 = t1575*t3258;
  t3778 = t3775 + t3777;
  t3769 = -1.*t939*t3535;
  t3779 = -1.*t1326*t3778;
  t3784 = t3769 + t3779;
  t3805 = t1326*t3535;
  t3827 = -1.*t939*t3778;
  t3828 = t3805 + t3827;
  t3796 = t717*t3784;
  t3836 = t1780*t3828;
  t3839 = t3796 + t3836;
  t3845 = t1780*t3784;
  t3853 = -1.*t717*t3828;
  t3859 = t3845 + t3853;
  t3841 = -1.*t543*t3839;
  t3879 = t1999*t3859;
  t3881 = t3841 + t3879;
  t3908 = t1999*t3839;
  t3918 = t543*t3859;
  t3923 = t3908 + t3918;
  t3885 = t285*t3881;
  t3927 = t2273*t3923;
  t3939 = t3885 + t3927;
  t3957 = t2273*t3881;
  t3961 = -1.*t285*t3923;
  t3965 = t3957 + t3961;
  t4057 = t939*t3535;
  t4064 = t1326*t3778;
  t4069 = t4057 + t4064;
  t4088 = -1.*t717*t4069;
  t4125 = t4088 + t3836;
  t4136 = -1.*t1780*t4069;
  t4137 = t4136 + t3853;
  t4133 = -1.*t543*t4125;
  t4142 = t1999*t4137;
  t4153 = t4133 + t4142;
  t4156 = t1999*t4125;
  t4160 = t543*t4137;
  t4162 = t4156 + t4160;
  t4154 = t285*t4153;
  t4163 = t2273*t4162;
  t4168 = t4154 + t4163;
  t4213 = t2273*t4153;
  t4222 = -1.*t285*t4162;
  t4234 = t4213 + t4222;
  t4332 = t1780*t4069;
  t4333 = t717*t3828;
  t4354 = t4332 + t4333;
  t4369 = -1.*t1999*t4354;
  t4378 = t4133 + t4369;
  t4394 = -1.*t543*t4354;
  t4395 = t4156 + t4394;
  t4392 = t285*t4378;
  t4407 = t2273*t4395;
  t4416 = t4392 + t4407;
  t4419 = t2273*t4378;
  t4421 = -1.*t285*t4395;
  t4423 = t4419 + t4421;
  t4532 = t543*t4125;
  t4542 = t1999*t4354;
  t4547 = t4532 + t4542;
  t4554 = -1.*t285*t4547;
  t4568 = t4554 + t4407;
  t4598 = -1.*t2273*t4547;
  t4601 = t4598 + t4421;
  t4572 = -1.*t81*t4568;
  t4621 = t2405*t4568;
  t4671 = t2273*t4547;
  t4680 = t285*t4395;
  t4686 = t4671 + t4680;
  t4737 = -1.*t978*t2651*t1446;
  t4749 = t947*t1157;
  t4763 = t4737 + t4749;
  t4767 = -1.*t947*t978;
  t4770 = -1.*t2651*t1446*t1157;
  t4771 = t4767 + t4770;
  t4764 = t941*t4763;
  t4776 = -1.*t1132*t4771;
  t4780 = t4764 + t4776;
  t4787 = -1.*t1328*t961*t2651;
  t4801 = t1132*t4763;
  t4821 = t941*t4771;
  t4849 = t4801 + t4821;
  t4858 = t1575*t4849;
  t4870 = t4787 + t4858;
  t4784 = t939*t4780;
  t4874 = t1326*t4870;
  t4875 = t4784 + t4874;
  t4879 = t1326*t4780;
  t4882 = -1.*t939*t4870;
  t4893 = t4879 + t4882;
  t4877 = -1.*t717*t4875;
  t4916 = t1780*t4893;
  t4922 = t4877 + t4916;
  t4933 = t1780*t4875;
  t4935 = t717*t4893;
  t4937 = t4933 + t4935;
  t4929 = t543*t4922;
  t4941 = t1999*t4937;
  t4945 = t4929 + t4941;
  t5007 = t1999*t4922;
  t5015 = -1.*t543*t4937;
  t5017 = t5007 + t5015;
  t4977 = -1.*t285*t4945;
  t5024 = t2273*t5017;
  t5035 = t4977 + t5024;
  t5044 = t2273*t4945;
  t5061 = t285*t5017;
  t5062 = t5044 + t5061;
  t5158 = t941*t961*t978*t2651;
  t5173 = -1.*t961*t1132*t2651*t1157;
  t5183 = t5158 + t5173;
  t5221 = -1.*t1328*t2651*t1446;
  t5224 = t961*t978*t1132*t2651;
  t5231 = t941*t961*t2651*t1157;
  t5232 = t5224 + t5231;
  t5234 = t1575*t5232;
  t5236 = t5221 + t5234;
  t5201 = t939*t5183;
  t5260 = t1326*t5236;
  t5267 = t5201 + t5260;
  t5287 = t1326*t5183;
  t5299 = -1.*t939*t5236;
  t5303 = t5287 + t5299;
  t5278 = -1.*t717*t5267;
  t5312 = t1780*t5303;
  t5315 = t5278 + t5312;
  t5350 = t1780*t5267;
  t5351 = t717*t5303;
  t5369 = t5350 + t5351;
  t5323 = t543*t5315;
  t5371 = t1999*t5369;
  t5376 = t5323 + t5371;
  t5394 = t1999*t5315;
  t5396 = -1.*t543*t5369;
  t5401 = t5394 + t5396;
  t5386 = -1.*t285*t5376;
  t5404 = t2273*t5401;
  t5406 = t5386 + t5404;
  t5426 = t2273*t5376;
  t5428 = t285*t5401;
  t5440 = t5426 + t5428;
  t5537 = t978*t2651*t1446;
  t5539 = -1.*t947*t1157;
  t5545 = t5537 + t5539;
  t5549 = -1.*t1132*t5545;
  t5551 = t5549 + t4821;
  t5564 = t941*t5545;
  t5570 = t1132*t4771;
  t5574 = t5564 + t5570;
  t5556 = t939*t5551;
  t5578 = t1326*t1575*t5574;
  t5581 = t5556 + t5578;
  t5591 = t1326*t5551;
  t5593 = -1.*t1575*t939*t5574;
  t5596 = t5591 + t5593;
  t5583 = -1.*t717*t5581;
  t5600 = t1780*t5596;
  t5601 = t5583 + t5600;
  t5610 = t1780*t5581;
  t5628 = t717*t5596;
  t5629 = t5610 + t5628;
  t5602 = t543*t5601;
  t5656 = t1999*t5629;
  t5658 = t5602 + t5656;
  t5701 = t1999*t5601;
  t5706 = -1.*t543*t5629;
  t5707 = t5701 + t5706;
  t5662 = -1.*t285*t5658;
  t5721 = t2273*t5707;
  t5725 = t5662 + t5721;
  t5734 = t2273*t5658;
  t5752 = t285*t5707;
  t5761 = t5734 + t5752;
  t5840 = -1.*t961*t1575*t2651;
  t5851 = t1132*t5545;
  t5853 = t947*t978;
  t5858 = t2651*t1446*t1157;
  t5861 = t5853 + t5858;
  t5862 = t941*t5861;
  t5870 = t5851 + t5862;
  t5875 = t1328*t5870;
  t5881 = t5840 + t5875;
  t5884 = -1.*t1780*t939*t5881;
  t5886 = -1.*t1326*t717*t5881;
  t5913 = t5884 + t5886;
  t5917 = t1326*t1780*t5881;
  t5919 = -1.*t939*t717*t5881;
  t5927 = t5917 + t5919;
  t5916 = t543*t5913;
  t5934 = t1999*t5927;
  t5935 = t5916 + t5934;
  t5938 = t1999*t5913;
  t5953 = -1.*t543*t5927;
  t5958 = t5938 + t5953;
  t5936 = -1.*t285*t5935;
  t5973 = t2273*t5958;
  t5975 = t5936 + t5973;
  t5984 = t2273*t5935;
  t5992 = t285*t5958;
  t5997 = t5984 + t5992;
  t6065 = -1.*t941*t5861;
  t6075 = t5549 + t6065;
  t6081 = -1.*t1132*t5861;
  t6097 = t5564 + t6081;
  t6077 = t939*t6075;
  t6101 = t1326*t1575*t6097;
  t6115 = t6077 + t6101;
  t6121 = t1326*t6075;
  t6124 = -1.*t1575*t939*t6097;
  t6133 = t6121 + t6124;
  t6117 = -1.*t717*t6115;
  t6148 = t1780*t6133;
  t6151 = t6117 + t6148;
  t6154 = t1780*t6115;
  t6157 = t717*t6133;
  t6166 = t6154 + t6157;
  t6152 = t543*t6151;
  t6167 = t1999*t6166;
  t6168 = t6152 + t6167;
  t6179 = t1999*t6151;
  t6186 = -1.*t543*t6166;
  t6197 = t6179 + t6186;
  t6177 = -1.*t285*t6168;
  t6207 = t2273*t6197;
  t6208 = t6177 + t6207;
  t6213 = t2273*t6168;
  t6222 = t285*t6197;
  t6223 = t6213 + t6222;
  t4705 = -1.*t81*t4686;
  t4718 = t4621 + t4705;
  t6353 = t1328*t961*t2651;
  t6359 = t1575*t5870;
  t6367 = t6353 + t6359;
  t6332 = -1.*t939*t6097;
  t6369 = -1.*t1326*t6367;
  t6378 = t6332 + t6369;
  t6381 = t1326*t6097;
  t6382 = -1.*t939*t6367;
  t6383 = t6381 + t6382;
  t6380 = t717*t6378;
  t6386 = t1780*t6383;
  t6409 = t6380 + t6386;
  t6411 = t1780*t6378;
  t6424 = -1.*t717*t6383;
  t6425 = t6411 + t6424;
  t6410 = -1.*t543*t6409;
  t6459 = t1999*t6425;
  t6470 = t6410 + t6459;
  t6478 = t1999*t6409;
  t6481 = t543*t6425;
  t6501 = t6478 + t6481;
  t6477 = t285*t6470;
  t6502 = t2273*t6501;
  t6507 = t6477 + t6502;
  t6515 = t2273*t6470;
  t6517 = -1.*t285*t6501;
  t6519 = t6515 + t6517;
  t6568 = t939*t6097;
  t6578 = t1326*t6367;
  t6580 = t6568 + t6578;
  t6581 = -1.*t717*t6580;
  t6586 = t6581 + t6386;
  t6589 = -1.*t1780*t6580;
  t6598 = t6589 + t6424;
  t6588 = -1.*t543*t6586;
  t6604 = t1999*t6598;
  t6607 = t6588 + t6604;
  t6619 = t1999*t6586;
  t6626 = t543*t6598;
  t6629 = t6619 + t6626;
  t6615 = t285*t6607;
  t6630 = t2273*t6629;
  t6636 = t6615 + t6630;
  t6645 = t2273*t6607;
  t6659 = -1.*t285*t6629;
  t6660 = t6645 + t6659;
  t6715 = t1780*t6580;
  t6720 = t717*t6383;
  t6726 = t6715 + t6720;
  t6731 = -1.*t1999*t6726;
  t6739 = t6588 + t6731;
  t6745 = -1.*t543*t6726;
  t6747 = t6619 + t6745;
  t6743 = t285*t6739;
  t6754 = t2273*t6747;
  t6765 = t6743 + t6754;
  t6771 = t2273*t6739;
  t6778 = -1.*t285*t6747;
  t6781 = t6771 + t6778;
  t6827 = t543*t6586;
  t6831 = t1999*t6726;
  t6842 = t6827 + t6831;
  t6846 = -1.*t285*t6842;
  t6848 = t6846 + t6754;
  t6851 = -1.*t2273*t6842;
  t6856 = t6851 + t6778;
  t6849 = -1.*t81*t6848;
  t6870 = t2405*t6848;
  t6888 = t2273*t6842;
  t6890 = t285*t6747;
  t6895 = t6888 + t6890;
  t6941 = t1575*t1446;
  t6942 = t961*t978*t1132;
  t6950 = t941*t961*t1157;
  t6951 = t6942 + t6950;
  t6957 = t1328*t6951;
  t6965 = t6941 + t6957;
  t6967 = -1.*t1780*t939*t6965;
  t6977 = -1.*t1326*t717*t6965;
  t6979 = t6967 + t6977;
  t6988 = t1326*t1780*t6965;
  t6989 = -1.*t939*t717*t6965;
  t6990 = t6988 + t6989;
  t6985 = t543*t6979;
  t6992 = t1999*t6990;
  t6993 = t6985 + t6992;
  t7017 = t1999*t6979;
  t7020 = -1.*t543*t6990;
  t7021 = t7017 + t7020;
  t7002 = -1.*t285*t6993;
  t7023 = t2273*t7021;
  t7024 = t7002 + t7023;
  t7027 = t2273*t6993;
  t7030 = t285*t7021;
  t7031 = t7027 + t7030;
  t7086 = -1.*t961*t978*t1132;
  t7091 = -1.*t941*t961*t1157;
  t7093 = t7086 + t7091;
  t7108 = t941*t961*t978;
  t7109 = -1.*t961*t1132*t1157;
  t7110 = t7108 + t7109;
  t7105 = t939*t7093;
  t7111 = t1326*t1575*t7110;
  t7113 = t7105 + t7111;
  t7117 = t1326*t7093;
  t7118 = -1.*t1575*t939*t7110;
  t7120 = t7117 + t7118;
  t7116 = -1.*t717*t7113;
  t7131 = t1780*t7120;
  t7132 = t7116 + t7131;
  t7138 = t1780*t7113;
  t7139 = t717*t7120;
  t7141 = t7138 + t7139;
  t7137 = t543*t7132;
  t7144 = t1999*t7141;
  t7145 = t7137 + t7144;
  t7151 = t1999*t7132;
  t7152 = -1.*t543*t7141;
  t7153 = t7151 + t7152;
  t7148 = -1.*t285*t7145;
  t7154 = t2273*t7153;
  t7155 = t7148 + t7154;
  t7160 = t2273*t7145;
  t7161 = t285*t7153;
  t7168 = t7160 + t7161;
  t7159 = t81*t7155;
  t7170 = t2405*t7168;
  t7172 = t7159 + t7170;
  t7176 = 0.642788*t7172;
  t7177 = t2405*t7155;
  t7182 = -1.*t81*t7168;
  t7192 = t7177 + t7182;
  t7196 = 0.766044*t7192;
  t7199 = t7176 + t7196;
  t7208 = -1.*t1328*t1446;
  t7211 = t1575*t6951;
  t7219 = t7208 + t7211;
  t7206 = -1.*t939*t7110;
  t7223 = -1.*t1326*t7219;
  t7226 = t7206 + t7223;
  t7240 = t1326*t7110;
  t7242 = -1.*t939*t7219;
  t7245 = t7240 + t7242;
  t7233 = t717*t7226;
  t7246 = t1780*t7245;
  t7250 = t7233 + t7246;
  t7258 = t1780*t7226;
  t7259 = -1.*t717*t7245;
  t7261 = t7258 + t7259;
  t7252 = -1.*t543*t7250;
  t7263 = t1999*t7261;
  t7274 = t7252 + t7263;
  t7277 = t1999*t7250;
  t7283 = t543*t7261;
  t7284 = t7277 + t7283;
  t7276 = t285*t7274;
  t7290 = t2273*t7284;
  t7294 = t7276 + t7290;
  t7302 = t2273*t7274;
  t7303 = -1.*t285*t7284;
  t7316 = t7302 + t7303;
  t7349 = t939*t7110;
  t7351 = t1326*t7219;
  t7352 = t7349 + t7351;
  t7356 = -1.*t717*t7352;
  t7365 = t7356 + t7246;
  t7367 = -1.*t1780*t7352;
  t7369 = t7367 + t7259;
  t7366 = -1.*t543*t7365;
  t7373 = t1999*t7369;
  t7376 = t7366 + t7373;
  t7381 = t1999*t7365;
  t7394 = t543*t7369;
  t7395 = t7381 + t7394;
  t7378 = t285*t7376;
  t7396 = t2273*t7395;
  t7398 = t7378 + t7396;
  t7412 = t2273*t7376;
  t7419 = -1.*t285*t7395;
  t7428 = t7412 + t7419;
  t7459 = t1780*t7352;
  t7463 = t717*t7245;
  t7467 = t7459 + t7463;
  t7468 = -1.*t1999*t7467;
  t7471 = t7366 + t7468;
  t7488 = -1.*t543*t7467;
  t7492 = t7381 + t7488;
  t7479 = t285*t7471;
  t7494 = t2273*t7492;
  t7495 = t7479 + t7494;
  t7499 = t2273*t7471;
  t7513 = -1.*t285*t7492;
  t7515 = t7499 + t7513;
  t7563 = t543*t7365;
  t7568 = t1999*t7467;
  t7570 = t7563 + t7568;
  t7571 = -1.*t285*t7570;
  t7573 = t7571 + t7494;
  t7587 = -1.*t2273*t7570;
  t7591 = t7587 + t7513;
  t7580 = -1.*t81*t7573;
  t7600 = t2405*t7573;
  t7631 = t2273*t7570;
  t7638 = t285*t7492;
  t7642 = t7631 + t7638;
  t7671 = -1.*t941*t978*t1446;
  t7681 = t1132*t1446*t1157;
  t7686 = t7671 + t7681;
  t7689 = -1.*t1328*t961;
  t7692 = -1.*t978*t1132*t1446;
  t7693 = -1.*t941*t1446*t1157;
  t7695 = t7692 + t7693;
  t7700 = t1575*t7695;
  t7702 = t7689 + t7700;
  t7688 = t939*t7686;
  t7705 = t1326*t7702;
  t7710 = t7688 + t7705;
  t7712 = t1326*t7686;
  t7716 = -1.*t939*t7702;
  t7720 = t7712 + t7716;
  t7711 = -1.*t717*t7710;
  t7722 = t1780*t7720;
  t7726 = t7711 + t7722;
  t7732 = t1780*t7710;
  t7738 = t717*t7720;
  t7739 = t7732 + t7738;
  t7727 = t543*t7726;
  t7742 = t1999*t7739;
  t7744 = t7727 + t7742;
  t7748 = t1999*t7726;
  t7750 = -1.*t543*t7739;
  t7753 = t7748 + t7750;
  t7746 = -1.*t285*t7744;
  t7757 = t2273*t7753;
  t7759 = t7746 + t7757;
  t7762 = t2273*t7744;
  t7765 = t285*t7753;
  t7769 = t7762 + t7765;
  t2394 = t81*t2390;
  t2451 = t2405*t2437;
  t2496 = t2394 + t2451;
  t2506 = t2405*t2390;
  t2513 = -1.*t81*t2437;
  t2524 = t2506 + t2513;
  t3051 = t81*t3046;
  t3132 = t2405*t3105;
  t3142 = t3051 + t3132;
  t3148 = t2405*t3046;
  t3149 = -1.*t81*t3105;
  t3158 = t3148 + t3149;
  t3407 = t81*t3400;
  t3438 = t2405*t3423;
  t3455 = t3407 + t3438;
  t3486 = t2405*t3400;
  t3488 = -1.*t81*t3423;
  t3490 = t3486 + t3488;
  t3666 = t81*t3665;
  t3691 = t2405*t3675;
  t3695 = t3666 + t3691;
  t3717 = t2405*t3665;
  t3718 = -1.*t81*t3675;
  t3722 = t3717 + t3718;
  t3945 = -1.*t81*t3939;
  t3972 = t2405*t3965;
  t3985 = t3945 + t3972;
  t4001 = t2405*t3939;
  t4013 = t81*t3965;
  t4027 = t4001 + t4013;
  t4187 = -1.*t81*t4168;
  t4257 = t2405*t4234;
  t4258 = t4187 + t4257;
  t4266 = t2405*t4168;
  t4275 = t81*t4234;
  t4287 = t4266 + t4275;
  t4418 = -1.*t81*t4416;
  t4441 = t2405*t4423;
  t4447 = t4418 + t4441;
  t4457 = t2405*t4416;
  t4469 = t81*t4423;
  t4474 = t4457 + t4469;
  t4604 = t2405*t4601;
  t4608 = t4572 + t4604;
  t4631 = t81*t4601;
  t4637 = t4621 + t4631;
  t4690 = -1.*t2405*t4686;
  t4693 = t4572 + t4690;
  t5041 = t81*t5035;
  t5077 = t2405*t5062;
  t5081 = t5041 + t5077;
  t5095 = t2405*t5035;
  t5099 = -1.*t81*t5062;
  t5137 = t5095 + t5099;
  t5412 = t81*t5406;
  t5441 = t2405*t5440;
  t5444 = t5412 + t5441;
  t5454 = t2405*t5406;
  t5470 = -1.*t81*t5440;
  t5489 = t5454 + t5470;
  t5733 = t81*t5725;
  t5762 = t2405*t5761;
  t5767 = t5733 + t5762;
  t5779 = t2405*t5725;
  t5785 = -1.*t81*t5761;
  t5807 = t5779 + t5785;
  t5979 = t81*t5975;
  t6002 = t2405*t5997;
  t6006 = t5979 + t6002;
  t6037 = t2405*t5975;
  t6044 = -1.*t81*t5997;
  t6049 = t6037 + t6044;
  t6211 = t81*t6208;
  t6232 = t2405*t6223;
  t6235 = t6211 + t6232;
  t6239 = t2405*t6208;
  t6254 = -1.*t81*t6223;
  t6261 = t6239 + t6254;
  t6296 = t81*t4568;
  t6297 = t2405*t4686;
  t6302 = t6296 + t6297;
  t4723 = 0.642788*t4718;
  t6509 = -1.*t81*t6507;
  t6522 = t2405*t6519;
  t6523 = t6509 + t6522;
  t6543 = t2405*t6507;
  t6551 = t81*t6519;
  t6557 = t6543 + t6551;
  t6639 = -1.*t81*t6636;
  t6667 = t2405*t6660;
  t6677 = t6639 + t6667;
  t6699 = t2405*t6636;
  t6702 = t81*t6660;
  t6708 = t6699 + t6702;
  t6768 = -1.*t81*t6765;
  t6785 = t2405*t6781;
  t6797 = t6768 + t6785;
  t6804 = t2405*t6765;
  t6806 = t81*t6781;
  t6810 = t6804 + t6806;
  t6859 = t2405*t6856;
  t6861 = t6849 + t6859;
  t6876 = t81*t6856;
  t6880 = t6870 + t6876;
  t6903 = -1.*t2405*t6895;
  t6906 = t6849 + t6903;
  t6910 = -1.*t81*t6895;
  t6916 = t6870 + t6910;
  t7026 = t81*t7024;
  t7033 = t2405*t7031;
  t7038 = t7026 + t7033;
  t7059 = t2405*t7024;
  t7060 = -1.*t81*t7031;
  t7064 = t7059 + t7060;
  t8098 = -0.766044*t7172;
  t8100 = 0.642788*t7192;
  t8103 = t8098 + t8100;
  t7295 = -1.*t81*t7294;
  t7317 = t2405*t7316;
  t7321 = t7295 + t7317;
  t7327 = t2405*t7294;
  t7330 = t81*t7316;
  t7332 = t7327 + t7330;
  t7401 = -1.*t81*t7398;
  t7432 = t2405*t7428;
  t7438 = t7401 + t7432;
  t7442 = t2405*t7398;
  t7446 = t81*t7428;
  t7447 = t7442 + t7446;
  t7496 = -1.*t81*t7495;
  t7518 = t2405*t7515;
  t7520 = t7496 + t7518;
  t7527 = t2405*t7495;
  t7541 = t81*t7515;
  t7542 = t7527 + t7541;
  t7595 = t2405*t7591;
  t7596 = t7580 + t7595;
  t7602 = t81*t7591;
  t7609 = t7600 + t7602;
  t7650 = -1.*t2405*t7642;
  t7651 = t7580 + t7650;
  t7655 = -1.*t81*t7642;
  t7656 = t7600 + t7655;
  t7760 = t81*t7759;
  t7772 = t2405*t7769;
  t7777 = t7760 + t7772;
  t7783 = t2405*t7759;
  t7786 = -1.*t81*t7769;
  t7790 = t7783 + t7786;
  p_output1[0]=(0.642788*t5081 + 0.766044*t5137)*var2[3] + (0.642788*t2496 + 0.766044*t2524)*var2[4] + (0.642788*t3142 + 0.766044*t3158)*var2[5] + (0.642788*t3695 + 0.766044*t3722)*var2[13] + (0.642788*t3455 + 0.766044*t3490)*var2[14] + (0.766044*t3985 + 0.642788*t4027)*var2[15] + (0.766044*t4258 + 0.642788*t4287)*var2[16] + (0.766044*t4447 + 0.642788*t4474)*var2[17] + (0.766044*t4608 + 0.642788*t4637)*var2[18] + (0.766044*t4693 + t4723)*var2[19];
  p_output1[1]=(0.766044*t4718 + 0.642788*t6302)*var2[3] + (0.642788*t5444 + 0.766044*t5489)*var2[4] + (0.642788*t5767 + 0.766044*t5807)*var2[5] + (0.642788*t6235 + 0.766044*t6261)*var2[13] + (0.642788*t6006 + 0.766044*t6049)*var2[14] + (0.766044*t6523 + 0.642788*t6557)*var2[15] + (0.766044*t6677 + 0.642788*t6708)*var2[16] + (0.766044*t6797 + 0.642788*t6810)*var2[17] + (0.766044*t6861 + 0.642788*t6880)*var2[18] + (0.766044*t6906 + 0.642788*t6916)*var2[19];
  p_output1[2]=(0.642788*t7777 + 0.766044*t7790)*var2[4] + t7199*var2[5] + t7199*var2[13] + (0.642788*t7038 + 0.766044*t7064)*var2[14] + (0.766044*t7321 + 0.642788*t7332)*var2[15] + (0.766044*t7438 + 0.642788*t7447)*var2[16] + (0.766044*t7520 + 0.642788*t7542)*var2[17] + (0.766044*t7596 + 0.642788*t7609)*var2[18] + (0.766044*t7651 + 0.642788*t7656)*var2[19];
  p_output1[3]=(t1328*t4849 + t1575*t2651*t961)*var2[3] + (t1328*t1680 + t1446*t1575*t947)*var2[4] + t1328*t2780*var2[5] + t1328*t3535*var2[13] + (-1.*t1575*t3258 - 1.*t1328*t947*t961)*var2[14];
  p_output1[4]=t3260*var2[3] + (t1446*t1575*t2651 + t1328*t5232)*var2[4] + t1328*t5574*var2[5] + t1328*t6097*var2[13] + (t4787 - 1.*t1575*t5870)*var2[14];
  p_output1[5]=(t1328*t7695 + t1575*t961)*var2[4] + t1328*t7110*var2[5] + t1328*t7110*var2[13] + (t1328*t1446 - 1.*t1575*t6951)*var2[14];
  p_output1[6]=(-0.766044*t5081 + 0.642788*t5137)*var2[3] + (-0.766044*t2496 + 0.642788*t2524)*var2[4] + (-0.766044*t3142 + 0.642788*t3158)*var2[5] + (-0.766044*t3695 + 0.642788*t3722)*var2[13] + (-0.766044*t3455 + 0.642788*t3490)*var2[14] + (0.642788*t3985 - 0.766044*t4027)*var2[15] + (0.642788*t4258 - 0.766044*t4287)*var2[16] + (0.642788*t4447 - 0.766044*t4474)*var2[17] + (0.642788*t4608 - 0.766044*t4637)*var2[18] + (0.642788*t4693 - 0.766044*t4718)*var2[19];
  p_output1[7]=(t4723 - 0.766044*t6302)*var2[3] + (-0.766044*t5444 + 0.642788*t5489)*var2[4] + (-0.766044*t5767 + 0.642788*t5807)*var2[5] + (-0.766044*t6235 + 0.642788*t6261)*var2[13] + (-0.766044*t6006 + 0.642788*t6049)*var2[14] + (0.642788*t6523 - 0.766044*t6557)*var2[15] + (0.642788*t6677 - 0.766044*t6708)*var2[16] + (0.642788*t6797 - 0.766044*t6810)*var2[17] + (0.642788*t6861 - 0.766044*t6880)*var2[18] + (0.642788*t6906 - 0.766044*t6916)*var2[19];
  p_output1[8]=(-0.766044*t7777 + 0.642788*t7790)*var2[4] + t8103*var2[5] + t8103*var2[13] + (-0.766044*t7038 + 0.642788*t7064)*var2[14] + (0.642788*t7321 - 0.766044*t7332)*var2[15] + (0.642788*t7438 - 0.766044*t7447)*var2[16] + (0.642788*t7520 - 0.766044*t7542)*var2[17] + (0.642788*t7596 - 0.766044*t7609)*var2[18] + (0.642788*t7651 - 0.766044*t7656)*var2[19];
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 20 && ncols == 1) && 
      !(mrows == 1 && ncols == 20))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 20 && ncols == 1) && 
      !(mrows == 1 && ncols == 20))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 3, (mwSize) 3, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "dR_RightToeBottom_mex.hh"

namespace SymExpression
{

void dR_RightToeBottom_mex_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
