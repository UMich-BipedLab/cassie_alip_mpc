/*
 * Automatically Generated from Mathematica.
 * Mon 11 May 2020 22:26:46 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t848;
  double t54;
  double t381;
  double t621;
  double t851;
  double t1198;
  double t1549;
  double t1629;
  double t1757;
  double t1916;
  double t1948;
  double t2014;
  double t803;
  double t880;
  double t1180;
  double t2769;
  double t2773;
  double t2800;
  double t3200;
  double t2383;
  double t2616;
  double t2704;
  double t3272;
  double t4006;
  double t4018;
  double t4031;
  double t4159;
  double t3925;
  double t3956;
  double t3985;
  double t4208;
  double t4259;
  double t4271;
  double t4300;
  double t4317;
  double t4321;
  double t4341;
  double t4359;
  double t4397;
  double t4401;
  double t4506;
  double t4510;
  double t4523;
  double t4532;
  double t4553;
  double t4555;
  double t4601;
  double t4615;
  double t4631;
  double t4635;
  double t4670;
  double t4680;
  double t4694;
  double t4751;
  double t4760;
  double t4771;
  double t4773;
  double t4791;
  double t4809;
  double t4812;
  double t4850;
  double t4854;
  double t4864;
  double t4885;
  double t4898;
  double t4899;
  double t4901;
  double t4907;
  double t4911;
  double t4917;
  double t4967;
  double t4979;
  double t4993;
  double t1711;
  double t1805;
  double t1835;
  double t2024;
  double t2150;
  double t2220;
  double t5118;
  double t5125;
  double t5131;
  double t5084;
  double t5095;
  double t5097;
  double t2894;
  double t3257;
  double t3268;
  double t3305;
  double t3311;
  double t3312;
  double t5145;
  double t5154;
  double t5156;
  double t4107;
  double t4174;
  double t4181;
  double t4284;
  double t4289;
  double t4291;
  double t4325;
  double t4350;
  double t4351;
  double t5213;
  double t5214;
  double t5216;
  double t5224;
  double t5228;
  double t5232;
  double t4433;
  double t4455;
  double t4476;
  double t4597;
  double t4606;
  double t4613;
  double t5266;
  double t5273;
  double t5275;
  double t5289;
  double t5290;
  double t5291;
  double t4651;
  double t4661;
  double t4669;
  double t4772;
  double t4784;
  double t4787;
  double t5303;
  double t5304;
  double t5324;
  double t5352;
  double t5362;
  double t5365;
  double t4842;
  double t4844;
  double t4849;
  double t4900;
  double t4902;
  double t4904;
  double t5380;
  double t5383;
  double t5386;
  double t5399;
  double t5404;
  double t5406;
  double t4936;
  double t4945;
  double t4947;
  double t5434;
  double t5436;
  double t5458;
  double t5475;
  double t5491;
  double t5499;
  double t5591;
  double t5592;
  double t5593;
  double t5633;
  double t5638;
  double t5639;
  double t5650;
  double t5654;
  double t5655;
  double t5662;
  double t5669;
  double t5686;
  double t5699;
  double t5700;
  double t5703;
  double t5708;
  double t5710;
  double t5711;
  double t5714;
  double t5715;
  double t5716;
  double t5725;
  double t5727;
  double t5730;
  double t5735;
  double t5738;
  double t5751;
  double t5760;
  double t5763;
  double t5764;
  double t5780;
  double t5790;
  double t5797;
  double t5854;
  double t5856;
  double t5870;
  double t5931;
  double t5934;
  double t5937;
  double t5939;
  double t5942;
  double t5950;
  double t5958;
  double t5965;
  double t5969;
  double t5978;
  double t5980;
  double t5985;
  double t6006;
  double t6009;
  double t6014;
  double t6033;
  double t6044;
  double t6075;
  double t6169;
  double t6193;
  double t6254;
  double t6298;
  double t6339;
  double t6457;
  double t6473;
  double t6509;
  double t6562;
  double t6646;
  double t6651;
  double t6672;
  double t6930;
  double t6931;
  double t6970;
  double t7218;
  double t7234;
  double t7235;
  double t7269;
  double t7284;
  double t7295;
  double t7324;
  double t7332;
  double t7344;
  double t7377;
  double t7392;
  double t7424;
  double t7453;
  double t7473;
  double t7501;
  double t7548;
  double t7588;
  double t7627;
  double t7658;
  double t7665;
  double t7685;
  double t7753;
  double t7757;
  double t7811;
  double t7890;
  double t7939;
  double t8007;
  double t8036;
  double t8056;
  double t8065;
  double t8239;
  double t8245;
  double t8255;
  double t8271;
  double t8287;
  double t8340;
  double t8346;
  double t8354;
  double t8382;
  double t8398;
  double t8404;
  double t8418;
  double t8427;
  double t8430;
  double t8437;
  double t8444;
  double t8449;
  double t8452;
  double t8458;
  double t8460;
  double t8466;
  double t8471;
  double t8472;
  double t8474;
  double t8479;
  double t8480;
  double t8503;
  double t8510;
  double t8515;
  double t8529;
  double t8541;
  double t8550;
  double t8652;
  double t8655;
  double t8656;
  double t8666;
  double t8676;
  double t8677;
  double t8701;
  double t8704;
  double t8710;
  double t8728;
  double t8734;
  double t8741;
  double t8743;
  double t8748;
  double t8773;
  double t8776;
  double t8777;
  double t8786;
  double t8787;
  double t8795;
  double t8799;
  double t8800;
  double t8803;
  double t8806;
  double t8807;
  double t8809;
  double t8819;
  double t8821;
  double t8823;
  double t8827;
  double t8832;
  double t8833;
  double t8872;
  double t8878;
  double t8880;
  double t8894;
  double t8902;
  double t8905;
  double t8911;
  double t8917;
  double t8919;
  double t8928;
  double t8930;
  double t8931;
  double t8943;
  double t8947;
  double t8949;
  double t8959;
  double t8962;
  double t8964;
  double t8973;
  double t8977;
  double t8979;
  double t8981;
  double t8982;
  double t8983;
  double t8986;
  double t8988;
  double t8990;
  double t8997;
  double t8998;
  double t9005;
  double t9075;
  double t9076;
  double t9082;
  double t9086;
  double t9088;
  double t9101;
  double t9105;
  double t9107;
  double t9114;
  double t9117;
  double t9126;
  double t9131;
  double t9135;
  double t9140;
  double t9142;
  double t9149;
  double t9151;
  double t9163;
  double t9164;
  double t9170;
  double t9180;
  double t9183;
  double t9184;
  double t9186;
  double t9194;
  double t9196;
  double t9051;
  double t9052;
  double t9054;
  double t9055;
  double t9057;
  double t9226;
  double t9227;
  double t9228;
  double t9230;
  double t9231;
  double t9245;
  double t9247;
  double t9249;
  double t9251;
  double t9252;
  double t9254;
  double t9256;
  double t9258;
  double t9264;
  double t9271;
  double t9278;
  double t9281;
  double t9283;
  double t9285;
  double t9290;
  double t9294;
  double t9298;
  double t9302;
  double t9309;
  double t9310;
  double t9314;
  double t9317;
  double t9318;
  double t9322;
  double t9323;
  double t9325;
  double t8883;
  double t8885;
  double t8891;
  double t8908;
  double t8927;
  double t8935;
  double t8957;
  double t8966;
  double t8980;
  double t8984;
  double t8991;
  double t9010;
  double t9012;
  double t9013;
  double t9015;
  double t9016;
  double t9019;
  double t9029;
  double t9037;
  double t9040;
  double t5202;
  double t5205;
  double t5209;
  double t9389;
  double t9390;
  double t9391;
  double t9393;
  double t9396;
  double t9397;
  double t9405;
  double t9410;
  double t9412;
  double t9414;
  double t9416;
  double t9419;
  double t9426;
  double t9428;
  double t9430;
  double t9439;
  double t9442;
  double t9448;
  double t9360;
  double t9361;
  double t9367;
  double t9369;
  double t9374;
  double t9473;
  double t9475;
  double t9476;
  double t9481;
  double t9484;
  double t9489;
  double t9502;
  double t9503;
  double t9504;
  double t9508;
  double t9510;
  double t9513;
  double t9523;
  double t9526;
  double t9527;
  double t9548;
  double t9552;
  double t9554;
  double t9559;
  double t9561;
  double t9568;
  double t9576;
  double t9579;
  double t9582;
  double t9612;
  double t9613;
  double t9615;
  double t9624;
  double t9625;
  double t9632;
  double t9647;
  double t9649;
  double t9650;
  double t9656;
  double t9662;
  double t9670;
  double t9674;
  double t9675;
  double t9685;
  double t9690;
  double t9693;
  double t9694;
  double t9696;
  double t9699;
  double t9709;
  double t9717;
  double t9719;
  double t9722;
  double t9778;
  double t9780;
  double t9781;
  double t9787;
  double t9792;
  double t9798;
  double t9805;
  double t9816;
  double t9828;
  double t9830;
  double t9834;
  double t9852;
  double t9853;
  double t9854;
  double t9868;
  double t9869;
  double t9870;
  double t9873;
  double t9875;
  double t9876;
  double t9761;
  double t9763;
  double t9764;
  double t9773;
  double t9775;
  double t9912;
  double t9913;
  double t9914;
  double t9919;
  double t9920;
  double t9922;
  double t9925;
  double t9927;
  double t9931;
  double t9935;
  double t9940;
  double t9941;
  double t9948;
  double t9949;
  double t9951;
  double t9956;
  double t9957;
  double t9962;
  double t9966;
  double t9967;
  double t9968;
  double t9970;
  double t9971;
  double t9972;
  double t9974;
  double t9975;
  double t9980;
  double t10011;
  double t10014;
  double t10015;
  double t10021;
  double t10025;
  double t10028;
  double t10040;
  double t10041;
  double t10042;
  double t10046;
  double t10047;
  double t10048;
  double t10056;
  double t10059;
  double t10061;
  double t10069;
  double t10071;
  double t10072;
  double t10076;
  double t10078;
  double t10079;
  double t10082;
  double t10086;
  double t10088;
  double t10091;
  double t10094;
  double t10095;
  double t10150;
  double t10154;
  double t10160;
  double t10161;
  double t10163;
  double t10168;
  double t10170;
  double t10173;
  double t10174;
  double t10175;
  double t10179;
  double t10180;
  double t10181;
  double t10121;
  double t10123;
  double t10137;
  double t10142;
  double t10143;
  double t10199;
  double t10200;
  double t10201;
  double t10204;
  double t10205;
  double t10207;
  double t10211;
  double t10216;
  double t10218;
  double t10224;
  double t10228;
  double t10229;
  double t10230;
  double t10232;
  double t10233;
  double t10234;
  double t10239;
  double t10240;
  double t10243;
  double t10261;
  double t10263;
  double t10265;
  double t10269;
  double t10271;
  double t10273;
  double t10274;
  double t10276;
  double t10277;
  double t10278;
  double t10281;
  double t10282;
  double t10283;
  double t10289;
  double t10290;
  double t10292;
  double t10296;
  double t10300;
  double t10301;
  double t10333;
  double t10335;
  double t10342;
  double t10344;
  double t10346;
  double t10350;
  double t10355;
  double t10321;
  double t10322;
  double t10326;
  double t10327;
  double t10328;
  double t10375;
  double t10376;
  double t10377;
  double t10385;
  double t10386;
  double t10390;
  double t10391;
  double t10393;
  double t10394;
  double t10395;
  double t10397;
  double t10398;
  double t10399;
  double t10414;
  double t10415;
  double t10416;
  double t10419;
  double t10420;
  double t10422;
  double t10423;
  double t10426;
  double t10427;
  double t10428;
  double t10430;
  double t10431;
  double t10432;
  double t10453;
  double t10455;
  double t5548;
  double t10443;
  double t10444;
  double t10445;
  double t10448;
  double t10449;
  double t10466;
  double t10467;
  double t10468;
  double t10472;
  double t10473;
  double t10476;
  double t10477;
  double t10494;
  double t10495;
  double t10497;
  double t10501;
  double t10502;
  double t10504;
  double t10505;
  double t10457;
  double t5549;
  double t5558;
  double t10518;
  double t10520;
  double t10523;
  double t10525;
  double t10526;
  double t10479;
  double t10537;
  double t10538;
  double t10540;
  double t10484;
  double t10507;
  double t10552;
  double t10553;
  double t10554;
  double t10512;
  t848 = Cos(var1[3]);
  t54 = Cos(var1[5]);
  t381 = Sin(var1[3]);
  t621 = Sin(var1[4]);
  t851 = Sin(var1[5]);
  t1198 = Cos(var1[6]);
  t1549 = -1.*t1198;
  t1629 = 1. + t1549;
  t1757 = Sin(var1[6]);
  t1916 = -1.*t848*t54;
  t1948 = -1.*t381*t621*t851;
  t2014 = t1916 + t1948;
  t803 = -1.*t54*t381*t621;
  t880 = t848*t851;
  t1180 = t803 + t880;
  t2769 = Cos(var1[7]);
  t2773 = -1.*t2769;
  t2800 = 1. + t2773;
  t3200 = Sin(var1[7]);
  t2383 = t1198*t2014;
  t2616 = t1180*t1757;
  t2704 = t2383 + t2616;
  t3272 = Cos(var1[4]);
  t4006 = Cos(var1[8]);
  t4018 = -1.*t4006;
  t4031 = 1. + t4018;
  t4159 = Sin(var1[8]);
  t3925 = -1.*t3272*t2769*t381;
  t3956 = t2704*t3200;
  t3985 = t3925 + t3956;
  t4208 = t1198*t1180;
  t4259 = -1.*t2014*t1757;
  t4271 = t4208 + t4259;
  t4300 = Cos(var1[9]);
  t4317 = -1.*t4300;
  t4321 = 1. + t4317;
  t4341 = Sin(var1[9]);
  t4359 = t4006*t3985;
  t4397 = t4271*t4159;
  t4401 = t4359 + t4397;
  t4506 = t4006*t4271;
  t4510 = -1.*t3985*t4159;
  t4523 = t4506 + t4510;
  t4532 = Cos(var1[10]);
  t4553 = -1.*t4532;
  t4555 = 1. + t4553;
  t4601 = Sin(var1[10]);
  t4615 = -1.*t4341*t4401;
  t4631 = t4300*t4523;
  t4635 = t4615 + t4631;
  t4670 = t4300*t4401;
  t4680 = t4341*t4523;
  t4694 = t4670 + t4680;
  t4751 = Cos(var1[11]);
  t4760 = -1.*t4751;
  t4771 = 1. + t4760;
  t4773 = Sin(var1[11]);
  t4791 = t4601*t4635;
  t4809 = t4532*t4694;
  t4812 = t4791 + t4809;
  t4850 = t4532*t4635;
  t4854 = -1.*t4601*t4694;
  t4864 = t4850 + t4854;
  t4885 = Cos(var1[12]);
  t4898 = -1.*t4885;
  t4899 = 1. + t4898;
  t4901 = Sin(var1[12]);
  t4907 = -1.*t4773*t4812;
  t4911 = t4751*t4864;
  t4917 = t4907 + t4911;
  t4967 = t4751*t4812;
  t4979 = t4773*t4864;
  t4993 = t4967 + t4979;
  t1711 = 0.07996*t1629;
  t1805 = -0.135*t1757;
  t1835 = 0. + t1711 + t1805;
  t2024 = 0.135*t1629;
  t2150 = 0.07996*t1757;
  t2220 = 0. + t2024 + t2150;
  t5118 = -1.*t54*t381;
  t5125 = t848*t621*t851;
  t5131 = t5118 + t5125;
  t5084 = t848*t54*t621;
  t5095 = t381*t851;
  t5097 = t5084 + t5095;
  t2894 = 0.135*t2800;
  t3257 = 0.08055*t3200;
  t3268 = 0. + t2894 + t3257;
  t3305 = -0.08055*t2800;
  t3311 = 0.135*t3200;
  t3312 = 0. + t3305 + t3311;
  t5145 = t1198*t5131;
  t5154 = t5097*t1757;
  t5156 = t5145 + t5154;
  t4107 = -0.08055*t4031;
  t4174 = -0.01004*t4159;
  t4181 = 0. + t4107 + t4174;
  t4284 = -0.01004*t4031;
  t4289 = 0.08055*t4159;
  t4291 = 0. + t4284 + t4289;
  t4325 = -0.08055*t4321;
  t4350 = -0.13004*t4341;
  t4351 = 0. + t4325 + t4350;
  t5213 = t848*t3272*t2769;
  t5214 = t5156*t3200;
  t5216 = t5213 + t5214;
  t5224 = t1198*t5097;
  t5228 = -1.*t5131*t1757;
  t5232 = t5224 + t5228;
  t4433 = -0.13004*t4321;
  t4455 = 0.08055*t4341;
  t4476 = 0. + t4433 + t4455;
  t4597 = -0.19074*t4555;
  t4606 = 0.03315*t4601;
  t4613 = 0. + t4597 + t4606;
  t5266 = t4006*t5216;
  t5273 = t5232*t4159;
  t5275 = t5266 + t5273;
  t5289 = t4006*t5232;
  t5290 = -1.*t5216*t4159;
  t5291 = t5289 + t5290;
  t4651 = -0.03315*t4555;
  t4661 = -0.19074*t4601;
  t4669 = 0. + t4651 + t4661;
  t4772 = -0.01315*t4771;
  t4784 = -0.62554*t4773;
  t4787 = 0. + t4772 + t4784;
  t5303 = -1.*t4341*t5275;
  t5304 = t4300*t5291;
  t5324 = t5303 + t5304;
  t5352 = t4300*t5275;
  t5362 = t4341*t5291;
  t5365 = t5352 + t5362;
  t4842 = -0.62554*t4771;
  t4844 = 0.01315*t4773;
  t4849 = 0. + t4842 + t4844;
  t4900 = -1.03354*t4899;
  t4902 = 0.05315*t4901;
  t4904 = 0. + t4900 + t4902;
  t5380 = t4601*t5324;
  t5383 = t4532*t5365;
  t5386 = t5380 + t5383;
  t5399 = t4532*t5324;
  t5404 = -1.*t4601*t5365;
  t5406 = t5399 + t5404;
  t4936 = -0.05315*t4899;
  t4945 = -1.03354*t4901;
  t4947 = 0. + t4936 + t4945;
  t5434 = -1.*t4773*t5386;
  t5436 = t4751*t5406;
  t5458 = t5434 + t5436;
  t5475 = t4751*t5386;
  t5491 = t4773*t5406;
  t5499 = t5475 + t5491;
  t5591 = t848*t3272*t1198*t851;
  t5592 = t848*t3272*t54*t1757;
  t5593 = t5591 + t5592;
  t5633 = -1.*t848*t2769*t621;
  t5638 = t5593*t3200;
  t5639 = t5633 + t5638;
  t5650 = t848*t3272*t54*t1198;
  t5654 = -1.*t848*t3272*t851*t1757;
  t5655 = t5650 + t5654;
  t5662 = t4006*t5639;
  t5669 = t5655*t4159;
  t5686 = t5662 + t5669;
  t5699 = t4006*t5655;
  t5700 = -1.*t5639*t4159;
  t5703 = t5699 + t5700;
  t5708 = -1.*t4341*t5686;
  t5710 = t4300*t5703;
  t5711 = t5708 + t5710;
  t5714 = t4300*t5686;
  t5715 = t4341*t5703;
  t5716 = t5714 + t5715;
  t5725 = t4601*t5711;
  t5727 = t4532*t5716;
  t5730 = t5725 + t5727;
  t5735 = t4532*t5711;
  t5738 = -1.*t4601*t5716;
  t5751 = t5735 + t5738;
  t5760 = -1.*t4773*t5730;
  t5763 = t4751*t5751;
  t5764 = t5760 + t5763;
  t5780 = t4751*t5730;
  t5790 = t4773*t5751;
  t5797 = t5780 + t5790;
  t5854 = t3272*t1198*t381*t851;
  t5856 = t3272*t54*t381*t1757;
  t5870 = t5854 + t5856;
  t5931 = -1.*t2769*t381*t621;
  t5934 = t5870*t3200;
  t5937 = t5931 + t5934;
  t5939 = t3272*t54*t1198*t381;
  t5942 = -1.*t3272*t381*t851*t1757;
  t5950 = t5939 + t5942;
  t5958 = t4006*t5937;
  t5965 = t5950*t4159;
  t5969 = t5958 + t5965;
  t5978 = t4006*t5950;
  t5980 = -1.*t5937*t4159;
  t5985 = t5978 + t5980;
  t6006 = -1.*t4341*t5969;
  t6009 = t4300*t5985;
  t6014 = t6006 + t6009;
  t6033 = t4300*t5969;
  t6044 = t4341*t5985;
  t6075 = t6033 + t6044;
  t6169 = t4601*t6014;
  t6193 = t4532*t6075;
  t6254 = t6169 + t6193;
  t6298 = t4532*t6014;
  t6339 = -1.*t4601*t6075;
  t6457 = t6298 + t6339;
  t6473 = -1.*t4773*t6254;
  t6509 = t4751*t6457;
  t6562 = t6473 + t6509;
  t6646 = t4751*t6254;
  t6651 = t4773*t6457;
  t6672 = t6646 + t6651;
  t6930 = -1.*t1198*t621*t851;
  t6931 = -1.*t54*t621*t1757;
  t6970 = t6930 + t6931;
  t7218 = -1.*t3272*t2769;
  t7234 = t6970*t3200;
  t7235 = t7218 + t7234;
  t7269 = -1.*t54*t1198*t621;
  t7284 = t621*t851*t1757;
  t7295 = t7269 + t7284;
  t7324 = t4006*t7235;
  t7332 = t7295*t4159;
  t7344 = t7324 + t7332;
  t7377 = t4006*t7295;
  t7392 = -1.*t7235*t4159;
  t7424 = t7377 + t7392;
  t7453 = -1.*t4341*t7344;
  t7473 = t4300*t7424;
  t7501 = t7453 + t7473;
  t7548 = t4300*t7344;
  t7588 = t4341*t7424;
  t7627 = t7548 + t7588;
  t7658 = t4601*t7501;
  t7665 = t4532*t7627;
  t7685 = t7658 + t7665;
  t7753 = t4532*t7501;
  t7757 = -1.*t4601*t7627;
  t7811 = t7753 + t7757;
  t7890 = -1.*t4773*t7685;
  t7939 = t4751*t7811;
  t8007 = t7890 + t7939;
  t8036 = t4751*t7685;
  t8056 = t4773*t7811;
  t8065 = t8036 + t8056;
  t8239 = t54*t381;
  t8245 = -1.*t848*t621*t851;
  t8255 = t8239 + t8245;
  t8271 = t8255*t1757;
  t8287 = t5224 + t8271;
  t8340 = t1198*t8255;
  t8346 = -1.*t5097*t1757;
  t8354 = t8340 + t8346;
  t8382 = t4006*t8287*t3200;
  t8398 = t8354*t4159;
  t8404 = t8382 + t8398;
  t8418 = t4006*t8354;
  t8427 = -1.*t8287*t3200*t4159;
  t8430 = t8418 + t8427;
  t8437 = -1.*t4341*t8404;
  t8444 = t4300*t8430;
  t8449 = t8437 + t8444;
  t8452 = t4300*t8404;
  t8458 = t4341*t8430;
  t8460 = t8452 + t8458;
  t8466 = t4601*t8449;
  t8471 = t4532*t8460;
  t8472 = t8466 + t8471;
  t8474 = t4532*t8449;
  t8479 = -1.*t4601*t8460;
  t8480 = t8474 + t8479;
  t8503 = -1.*t4773*t8472;
  t8510 = t4751*t8480;
  t8515 = t8503 + t8510;
  t8529 = t4751*t8472;
  t8541 = t4773*t8480;
  t8550 = t8529 + t8541;
  t8652 = t54*t381*t621;
  t8655 = -1.*t848*t851;
  t8656 = t8652 + t8655;
  t8666 = t1198*t8656;
  t8676 = t2014*t1757;
  t8677 = t8666 + t8676;
  t8701 = -1.*t8656*t1757;
  t8704 = t2383 + t8701;
  t8710 = t4006*t8677*t3200;
  t8728 = t8704*t4159;
  t8734 = t8710 + t8728;
  t8741 = t4006*t8704;
  t8743 = -1.*t8677*t3200*t4159;
  t8748 = t8741 + t8743;
  t8773 = -1.*t4341*t8734;
  t8776 = t4300*t8748;
  t8777 = t8773 + t8776;
  t8786 = t4300*t8734;
  t8787 = t4341*t8748;
  t8795 = t8786 + t8787;
  t8799 = t4601*t8777;
  t8800 = t4532*t8795;
  t8803 = t8799 + t8800;
  t8806 = t4532*t8777;
  t8807 = -1.*t4601*t8795;
  t8809 = t8806 + t8807;
  t8819 = -1.*t4773*t8803;
  t8821 = t4751*t8809;
  t8823 = t8819 + t8821;
  t8827 = t4751*t8803;
  t8832 = t4773*t8809;
  t8833 = t8827 + t8832;
  t8872 = t3272*t54*t1198;
  t8878 = -1.*t3272*t851*t1757;
  t8880 = t8872 + t8878;
  t8894 = -1.*t3272*t1198*t851;
  t8902 = -1.*t3272*t54*t1757;
  t8905 = t8894 + t8902;
  t8911 = t4006*t8880*t3200;
  t8917 = t8905*t4159;
  t8919 = t8911 + t8917;
  t8928 = t4006*t8905;
  t8930 = -1.*t8880*t3200*t4159;
  t8931 = t8928 + t8930;
  t8943 = -1.*t4341*t8919;
  t8947 = t4300*t8931;
  t8949 = t8943 + t8947;
  t8959 = t4300*t8919;
  t8962 = t4341*t8931;
  t8964 = t8959 + t8962;
  t8973 = t4601*t8949;
  t8977 = t4532*t8964;
  t8979 = t8973 + t8977;
  t8981 = t4532*t8949;
  t8982 = -1.*t4601*t8964;
  t8983 = t8981 + t8982;
  t8986 = -1.*t4773*t8979;
  t8988 = t4751*t8983;
  t8990 = t8986 + t8988;
  t8997 = t4751*t8979;
  t8998 = t4773*t8983;
  t9005 = t8997 + t8998;
  t9075 = -1.*t1198*t5131;
  t9076 = t9075 + t8346;
  t9082 = t4006*t5232*t3200;
  t9086 = t9076*t4159;
  t9088 = t9082 + t9086;
  t9101 = t4006*t9076;
  t9105 = -1.*t5232*t3200*t4159;
  t9107 = t9101 + t9105;
  t9114 = -1.*t4341*t9088;
  t9117 = t4300*t9107;
  t9126 = t9114 + t9117;
  t9131 = t4300*t9088;
  t9135 = t4341*t9107;
  t9140 = t9131 + t9135;
  t9142 = t4601*t9126;
  t9149 = t4532*t9140;
  t9151 = t9142 + t9149;
  t9163 = t4532*t9126;
  t9164 = -1.*t4601*t9140;
  t9170 = t9163 + t9164;
  t9180 = -1.*t4773*t9151;
  t9183 = t4751*t9170;
  t9184 = t9180 + t9183;
  t9186 = t4751*t9151;
  t9194 = t4773*t9170;
  t9196 = t9186 + t9194;
  t9051 = -0.135*t1198;
  t9052 = t9051 + t2150;
  t9054 = 0.07996*t1198;
  t9055 = 0.135*t1757;
  t9057 = t9054 + t9055;
  t9226 = t848*t54;
  t9227 = t381*t621*t851;
  t9228 = t9226 + t9227;
  t9230 = -1.*t9228*t1757;
  t9231 = t8666 + t9230;
  t9245 = -1.*t1198*t9228;
  t9247 = t9245 + t8701;
  t9249 = t4006*t9231*t3200;
  t9251 = t9247*t4159;
  t9252 = t9249 + t9251;
  t9254 = t4006*t9247;
  t9256 = -1.*t9231*t3200*t4159;
  t9258 = t9254 + t9256;
  t9264 = -1.*t4341*t9252;
  t9271 = t4300*t9258;
  t9278 = t9264 + t9271;
  t9281 = t4300*t9252;
  t9283 = t4341*t9258;
  t9285 = t9281 + t9283;
  t9290 = t4601*t9278;
  t9294 = t4532*t9285;
  t9298 = t9290 + t9294;
  t9302 = t4532*t9278;
  t9309 = -1.*t4601*t9285;
  t9310 = t9302 + t9309;
  t9314 = -1.*t4773*t9298;
  t9317 = t4751*t9310;
  t9318 = t9314 + t9317;
  t9322 = t4751*t9298;
  t9323 = t4773*t9310;
  t9325 = t9322 + t9323;
  t8883 = 0.1306*t2769*t8880;
  t8885 = t8880*t3268;
  t8891 = t8880*t3200*t4181;
  t8908 = t8905*t4291;
  t8927 = t4351*t8919;
  t8935 = t4476*t8931;
  t8957 = t4613*t8949;
  t8966 = t4669*t8964;
  t8980 = t4787*t8979;
  t8984 = t4849*t8983;
  t8991 = t4904*t8990;
  t9010 = t4947*t9005;
  t9012 = t4901*t8990;
  t9013 = t4885*t9005;
  t9015 = t9012 + t9013;
  t9016 = -0.02565*t9015;
  t9019 = t4885*t8990;
  t9029 = -1.*t4901*t9005;
  t9037 = t9019 + t9029;
  t9040 = -1.03824*t9037;
  t5202 = t2769*t5156;
  t5205 = -1.*t848*t3272*t3200;
  t5209 = t5202 + t5205;
  t9389 = -1.*t4006*t4341*t5209;
  t9390 = -1.*t4300*t5209*t4159;
  t9391 = t9389 + t9390;
  t9393 = t4300*t4006*t5209;
  t9396 = -1.*t4341*t5209*t4159;
  t9397 = t9393 + t9396;
  t9405 = t4601*t9391;
  t9410 = t4532*t9397;
  t9412 = t9405 + t9410;
  t9414 = t4532*t9391;
  t9416 = -1.*t4601*t9397;
  t9419 = t9414 + t9416;
  t9426 = -1.*t4773*t9412;
  t9428 = t4751*t9419;
  t9430 = t9426 + t9428;
  t9439 = t4751*t9412;
  t9442 = t4773*t9419;
  t9448 = t9439 + t9442;
  t9360 = 0.135*t2769;
  t9361 = -0.08055*t3200;
  t9367 = t9360 + t9361;
  t9369 = 0.08055*t2769;
  t9374 = t9369 + t3311;
  t9473 = t1198*t9228;
  t9475 = t8656*t1757;
  t9476 = t9473 + t9475;
  t9481 = t2769*t9476;
  t9484 = -1.*t3272*t381*t3200;
  t9489 = t9481 + t9484;
  t9502 = -1.*t4006*t4341*t9489;
  t9503 = -1.*t4300*t9489*t4159;
  t9504 = t9502 + t9503;
  t9508 = t4300*t4006*t9489;
  t9510 = -1.*t4341*t9489*t4159;
  t9513 = t9508 + t9510;
  t9523 = t4601*t9504;
  t9526 = t4532*t9513;
  t9527 = t9523 + t9526;
  t9548 = t4532*t9504;
  t9552 = -1.*t4601*t9513;
  t9554 = t9548 + t9552;
  t9559 = -1.*t4773*t9527;
  t9561 = t4751*t9554;
  t9568 = t9559 + t9561;
  t9576 = t4751*t9527;
  t9579 = t4773*t9554;
  t9582 = t9576 + t9579;
  t9612 = t3272*t1198*t851;
  t9613 = t3272*t54*t1757;
  t9615 = t9612 + t9613;
  t9624 = t2769*t9615;
  t9625 = t621*t3200;
  t9632 = t9624 + t9625;
  t9647 = -1.*t4006*t4341*t9632;
  t9649 = -1.*t4300*t9632*t4159;
  t9650 = t9647 + t9649;
  t9656 = t4300*t4006*t9632;
  t9662 = -1.*t4341*t9632*t4159;
  t9670 = t9656 + t9662;
  t9674 = t4601*t9650;
  t9675 = t4532*t9670;
  t9685 = t9674 + t9675;
  t9690 = t4532*t9650;
  t9693 = -1.*t4601*t9670;
  t9694 = t9690 + t9693;
  t9696 = -1.*t4773*t9685;
  t9699 = t4751*t9694;
  t9709 = t9696 + t9699;
  t9717 = t4751*t9685;
  t9719 = t4773*t9694;
  t9722 = t9717 + t9719;
  t9778 = -1.*t4006*t5216;
  t9780 = -1.*t5232*t4159;
  t9781 = t9778 + t9780;
  t9787 = t4341*t9781;
  t9792 = t9787 + t5304;
  t9798 = t4300*t9781;
  t9805 = -1.*t4341*t5291;
  t9816 = t9798 + t9805;
  t9828 = -1.*t4601*t9792;
  t9830 = t4532*t9816;
  t9834 = t9828 + t9830;
  t9852 = t4532*t9792;
  t9853 = t4601*t9816;
  t9854 = t9852 + t9853;
  t9868 = t4773*t9834;
  t9869 = t4751*t9854;
  t9870 = t9868 + t9869;
  t9873 = t4751*t9834;
  t9875 = -1.*t4773*t9854;
  t9876 = t9873 + t9875;
  t9761 = -0.01004*t4006;
  t9763 = -0.08055*t4159;
  t9764 = t9761 + t9763;
  t9773 = 0.08055*t4006;
  t9775 = t9773 + t4174;
  t9912 = t3272*t2769*t381;
  t9913 = t9476*t3200;
  t9914 = t9912 + t9913;
  t9919 = -1.*t4006*t9914;
  t9920 = -1.*t9231*t4159;
  t9922 = t9919 + t9920;
  t9925 = t4006*t9231;
  t9927 = -1.*t9914*t4159;
  t9931 = t9925 + t9927;
  t9935 = t4341*t9922;
  t9940 = t4300*t9931;
  t9941 = t9935 + t9940;
  t9948 = t4300*t9922;
  t9949 = -1.*t4341*t9931;
  t9951 = t9948 + t9949;
  t9956 = -1.*t4601*t9941;
  t9957 = t4532*t9951;
  t9962 = t9956 + t9957;
  t9966 = t4532*t9941;
  t9967 = t4601*t9951;
  t9968 = t9966 + t9967;
  t9970 = t4773*t9962;
  t9971 = t4751*t9968;
  t9972 = t9970 + t9971;
  t9974 = t4751*t9962;
  t9975 = -1.*t4773*t9968;
  t9980 = t9974 + t9975;
  t10011 = -1.*t2769*t621;
  t10014 = t9615*t3200;
  t10015 = t10011 + t10014;
  t10021 = -1.*t4006*t10015;
  t10025 = -1.*t8880*t4159;
  t10028 = t10021 + t10025;
  t10040 = t4006*t8880;
  t10041 = -1.*t10015*t4159;
  t10042 = t10040 + t10041;
  t10046 = t4341*t10028;
  t10047 = t4300*t10042;
  t10048 = t10046 + t10047;
  t10056 = t4300*t10028;
  t10059 = -1.*t4341*t10042;
  t10061 = t10056 + t10059;
  t10069 = -1.*t4601*t10048;
  t10071 = t4532*t10061;
  t10072 = t10069 + t10071;
  t10076 = t4532*t10048;
  t10078 = t4601*t10061;
  t10079 = t10076 + t10078;
  t10082 = t4773*t10072;
  t10086 = t4751*t10079;
  t10088 = t10082 + t10086;
  t10091 = t4751*t10072;
  t10094 = -1.*t4773*t10079;
  t10095 = t10091 + t10094;
  t10150 = -1.*t4300*t5275;
  t10154 = t10150 + t9805;
  t10160 = -1.*t4601*t5324;
  t10161 = t4532*t10154;
  t10163 = t10160 + t10161;
  t10168 = t4601*t10154;
  t10170 = t5399 + t10168;
  t10173 = t4773*t10163;
  t10174 = t4751*t10170;
  t10175 = t10173 + t10174;
  t10179 = t4751*t10163;
  t10180 = -1.*t4773*t10170;
  t10181 = t10179 + t10180;
  t10121 = -0.13004*t4300;
  t10123 = -0.08055*t4341;
  t10137 = t10121 + t10123;
  t10142 = 0.08055*t4300;
  t10143 = t10142 + t4350;
  t10199 = t4006*t9914;
  t10200 = t9231*t4159;
  t10201 = t10199 + t10200;
  t10204 = -1.*t4341*t10201;
  t10205 = t10204 + t9940;
  t10207 = -1.*t4300*t10201;
  t10211 = t10207 + t9949;
  t10216 = -1.*t4601*t10205;
  t10218 = t4532*t10211;
  t10224 = t10216 + t10218;
  t10228 = t4532*t10205;
  t10229 = t4601*t10211;
  t10230 = t10228 + t10229;
  t10232 = t4773*t10224;
  t10233 = t4751*t10230;
  t10234 = t10232 + t10233;
  t10239 = t4751*t10224;
  t10240 = -1.*t4773*t10230;
  t10243 = t10239 + t10240;
  t10261 = t4006*t10015;
  t10263 = t8880*t4159;
  t10265 = t10261 + t10263;
  t10269 = -1.*t4341*t10265;
  t10271 = t10269 + t10047;
  t10273 = -1.*t4300*t10265;
  t10274 = t10273 + t10059;
  t10276 = -1.*t4601*t10271;
  t10277 = t4532*t10274;
  t10278 = t10276 + t10277;
  t10281 = t4532*t10271;
  t10282 = t4601*t10274;
  t10283 = t10281 + t10282;
  t10289 = t4773*t10278;
  t10290 = t4751*t10283;
  t10292 = t10289 + t10290;
  t10296 = t4751*t10278;
  t10300 = -1.*t4773*t10283;
  t10301 = t10296 + t10300;
  t10333 = -1.*t4532*t5365;
  t10335 = t10160 + t10333;
  t10342 = t4773*t10335;
  t10344 = t10342 + t5436;
  t10346 = t4751*t10335;
  t10350 = -1.*t4773*t5406;
  t10355 = t10346 + t10350;
  t10321 = 0.03315*t4532;
  t10322 = t10321 + t4661;
  t10326 = -0.19074*t4532;
  t10327 = -0.03315*t4601;
  t10328 = t10326 + t10327;
  t10375 = t4300*t10201;
  t10376 = t4341*t9931;
  t10377 = t10375 + t10376;
  t10385 = -1.*t4532*t10377;
  t10386 = t10216 + t10385;
  t10390 = -1.*t4601*t10377;
  t10391 = t10228 + t10390;
  t10393 = t4773*t10386;
  t10394 = t4751*t10391;
  t10395 = t10393 + t10394;
  t10397 = t4751*t10386;
  t10398 = -1.*t4773*t10391;
  t10399 = t10397 + t10398;
  t10414 = t4300*t10265;
  t10415 = t4341*t10042;
  t10416 = t10414 + t10415;
  t10419 = -1.*t4532*t10416;
  t10420 = t10276 + t10419;
  t10422 = -1.*t4601*t10416;
  t10423 = t10281 + t10422;
  t10426 = t4773*t10420;
  t10427 = t4751*t10423;
  t10428 = t10426 + t10427;
  t10430 = t4751*t10420;
  t10431 = -1.*t4773*t10423;
  t10432 = t10430 + t10431;
  t10453 = -1.*t4751*t5386;
  t10455 = t10453 + t10350;
  t5548 = t4885*t5458;
  t10443 = -0.62554*t4751;
  t10444 = -0.01315*t4773;
  t10445 = t10443 + t10444;
  t10448 = 0.01315*t4751;
  t10449 = t10448 + t4784;
  t10466 = t4601*t10205;
  t10467 = t4532*t10377;
  t10468 = t10466 + t10467;
  t10472 = -1.*t4773*t10468;
  t10473 = t10472 + t10394;
  t10476 = -1.*t4751*t10468;
  t10477 = t10476 + t10398;
  t10494 = t4601*t10271;
  t10495 = t4532*t10416;
  t10497 = t10494 + t10495;
  t10501 = -1.*t4773*t10497;
  t10502 = t10501 + t10427;
  t10504 = -1.*t4751*t10497;
  t10505 = t10504 + t10431;
  t10457 = -1.*t4901*t5458;
  t5549 = -1.*t4901*t5499;
  t5558 = t5548 + t5549;
  t10518 = 0.05315*t4885;
  t10520 = t10518 + t4945;
  t10523 = -1.03354*t4885;
  t10525 = -0.05315*t4901;
  t10526 = t10523 + t10525;
  t10479 = -1.*t4901*t10473;
  t10537 = t4751*t10468;
  t10538 = t4773*t10391;
  t10540 = t10537 + t10538;
  t10484 = t4885*t10473;
  t10507 = -1.*t4901*t10502;
  t10552 = t4751*t10497;
  t10553 = t4773*t10423;
  t10554 = t10552 + t10553;
  t10512 = t4885*t10502;
  p_output1[0]=1.;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=0;
  p_output1[4]=1.;
  p_output1[5]=0;
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=1.;
  p_output1[9]=t1180*t1835 + t2014*t2220 + t2704*t3268 - 1.*t3272*t3312*t381 + 0.1306*(t2704*t2769 + t3200*t3272*t381) + t3985*t4181 + t4271*t4291 + t4351*t4401 + t4476*t4523 + t4613*t4635 + t4669*t4694 + t4787*t4812 + t4849*t4864 + t4904*t4917 + t4947*t4993 - 0.02565*(t4901*t4917 + t4885*t4993) - 1.03824*(t4885*t4917 - 1.*t4901*t4993);
  p_output1[10]=t1835*t5097 + t2220*t5131 + t3268*t5156 + 0.1306*t5209 + t4181*t5216 + t4291*t5232 + t4351*t5275 + t4476*t5291 + t4613*t5324 + t4669*t5365 + t4787*t5386 + t4849*t5406 + t4904*t5458 + t4947*t5499 - 0.02565*(t4901*t5458 + t4885*t5499) - 1.03824*t5558 + t3272*t3312*t848;
  p_output1[11]=0;
  p_output1[12]=t3268*t5593 + t4181*t5639 + t4291*t5655 + t4351*t5686 + t4476*t5703 + t4613*t5711 + t4669*t5716 + t4787*t5730 + t4849*t5751 + t4904*t5764 + t4947*t5797 - 0.02565*(t4901*t5764 + t4885*t5797) - 1.03824*(t4885*t5764 - 1.*t4901*t5797) + t1835*t3272*t54*t848 - 1.*t3312*t621*t848 + 0.1306*(t2769*t5593 + t3200*t621*t848) + t2220*t3272*t848*t851;
  p_output1[13]=t1835*t3272*t381*t54 + t3268*t5870 + t4181*t5937 + t4291*t5950 + t4351*t5969 + t4476*t5985 + t4613*t6014 + t4669*t6075 - 1.*t3312*t381*t621 + 0.1306*(t2769*t5870 + t3200*t381*t621) + t4787*t6254 + t4849*t6457 + t4904*t6562 + t4947*t6672 - 0.02565*(t4901*t6562 + t4885*t6672) - 1.03824*(t4885*t6562 - 1.*t4901*t6672) + t2220*t3272*t381*t851;
  p_output1[14]=-1.*t3272*t3312 - 1.*t1835*t54*t621 + t3268*t6970 + 0.1306*(t3200*t3272 + t2769*t6970) + t4181*t7235 + t4291*t7295 + t4351*t7344 + t4476*t7424 + t4613*t7501 + t4669*t7627 + t4787*t7685 + t4849*t7811 + t4904*t8007 + t4947*t8065 - 0.02565*(t4901*t8007 + t4885*t8065) - 1.03824*(t4885*t8007 - 1.*t4901*t8065) - 1.*t2220*t621*t851;
  p_output1[15]=t2220*t5097 + t1835*t8255 + 0.1306*t2769*t8287 + t3268*t8287 + t3200*t4181*t8287 + t4291*t8354 + t4351*t8404 + t4476*t8430 + t4613*t8449 + t4669*t8460 + t4787*t8472 + t4849*t8480 + t4904*t8515 + t4947*t8550 - 0.02565*(t4901*t8515 + t4885*t8550) - 1.03824*(t4885*t8515 - 1.*t4901*t8550);
  p_output1[16]=t1835*t2014 + t2220*t8656 + 0.1306*t2769*t8677 + t3268*t8677 + t3200*t4181*t8677 + t4291*t8704 + t4351*t8734 + t4476*t8748 + t4613*t8777 + t4669*t8795 + t4787*t8803 + t4849*t8809 + t4904*t8823 + t4947*t8833 - 0.02565*(t4901*t8823 + t4885*t8833) - 1.03824*(t4885*t8823 - 1.*t4901*t8833);
  p_output1[17]=t2220*t3272*t54 - 1.*t1835*t3272*t851 + t8883 + t8885 + t8891 + t8908 + t8927 + t8935 + t8957 + t8966 + t8980 + t8984 + t8991 + t9010 + t9016 + t9040;
  p_output1[18]=0.1306*t2769*t5232 + t3268*t5232 + t3200*t4181*t5232 + t5097*t9052 + t5131*t9057 + t4291*t9076 + t4351*t9088 + t4476*t9107 + t4613*t9126 + t4669*t9140 + t4787*t9151 + t4849*t9170 + t4904*t9184 + t4947*t9196 - 0.02565*(t4901*t9184 + t4885*t9196) - 1.03824*(t4885*t9184 - 1.*t4901*t9196);
  p_output1[19]=t8656*t9052 + t9057*t9228 + 0.1306*t2769*t9231 + t3268*t9231 + t3200*t4181*t9231 + t4291*t9247 + t4351*t9252 + t4476*t9258 + t4613*t9278 + t4669*t9285 + t4787*t9298 + t4849*t9310 + t4904*t9318 + t4947*t9325 - 0.02565*(t4901*t9318 + t4885*t9325) - 1.03824*(t4885*t9318 - 1.*t4901*t9325);
  p_output1[20]=t8883 + t8885 + t8891 + t8908 + t8927 + t8935 + t8957 + t8966 + t8980 + t8984 + t8991 + t9010 + t9016 + t9040 + t3272*t54*t9052 + t3272*t851*t9057;
  p_output1[21]=t4181*t5209 + t4006*t4351*t5209 - 1.*t4159*t4476*t5209 + 0.1306*(-1.*t3200*t5156 - 1.*t2769*t3272*t848) + t3272*t848*t9367 + t5156*t9374 + t4613*t9391 + t4669*t9397 + t4787*t9412 + t4849*t9419 + t4904*t9430 + t4947*t9448 - 0.02565*(t4901*t9430 + t4885*t9448) - 1.03824*(t4885*t9430 - 1.*t4901*t9448);
  p_output1[22]=t3272*t381*t9367 + t9374*t9476 + 0.1306*(t3925 - 1.*t3200*t9476) + t4181*t9489 + t4006*t4351*t9489 - 1.*t4159*t4476*t9489 + t4613*t9504 + t4669*t9513 + t4787*t9527 + t4849*t9554 + t4904*t9568 + t4947*t9582 - 0.02565*(t4901*t9568 + t4885*t9582) - 1.03824*(t4885*t9568 - 1.*t4901*t9582);
  p_output1[23]=-1.*t621*t9367 + t9374*t9615 + 0.1306*(t2769*t621 - 1.*t3200*t9615) + t4181*t9632 + t4006*t4351*t9632 - 1.*t4159*t4476*t9632 + t4613*t9650 + t4669*t9670 + t4787*t9685 + t4849*t9694 + t4904*t9709 + t4947*t9722 - 0.02565*(t4901*t9709 + t4885*t9722) - 1.03824*(t4885*t9709 - 1.*t4901*t9722);
  p_output1[24]=t4351*t5291 + t5216*t9764 + t5232*t9775 + t4476*t9781 + t4669*t9792 + t4613*t9816 + t4849*t9834 + t4787*t9854 + t4947*t9870 + t4904*t9876 - 1.03824*(-1.*t4901*t9870 + t4885*t9876) - 0.02565*(t4885*t9870 + t4901*t9876);
  p_output1[25]=t9231*t9775 + t9764*t9914 + t4476*t9922 + t4351*t9931 + t4669*t9941 + t4613*t9951 + t4849*t9962 + t4787*t9968 + t4947*t9972 + t4904*t9980 - 1.03824*(-1.*t4901*t9972 + t4885*t9980) - 0.02565*(t4885*t9972 + t4901*t9980);
  p_output1[26]=t10042*t4351 + t10028*t4476 + t10061*t4613 + t10048*t4669 + t10079*t4787 + t10072*t4849 - 1.03824*(t10095*t4885 - 1.*t10088*t4901) - 0.02565*(t10088*t4885 + t10095*t4901) + t10095*t4904 + t10088*t4947 + t10015*t9764 + t8880*t9775;
  p_output1[27]=t10154*t4613 + t10170*t4787 + t10163*t4849 - 1.03824*(t10181*t4885 - 1.*t10175*t4901) - 0.02565*(t10175*t4885 + t10181*t4901) + t10181*t4904 + t10175*t4947 + t10137*t5275 + t10143*t5291 + t4669*t5324;
  p_output1[28]=t10137*t10201 + t10211*t4613 + t10205*t4669 + t10230*t4787 + t10224*t4849 - 1.03824*(t10243*t4885 - 1.*t10234*t4901) - 0.02565*(t10234*t4885 + t10243*t4901) + t10243*t4904 + t10234*t4947 + t10143*t9931;
  p_output1[29]=t10042*t10143 + t10137*t10265 + t10274*t4613 + t10271*t4669 + t10283*t4787 + t10278*t4849 - 1.03824*(t10301*t4885 - 1.*t10292*t4901) - 0.02565*(t10292*t4885 + t10301*t4901) + t10301*t4904 + t10292*t4947;
  p_output1[30]=t10335*t4849 - 1.03824*(t10355*t4885 - 1.*t10344*t4901) - 0.02565*(t10344*t4885 + t10355*t4901) + t10355*t4904 + t10344*t4947 + t10322*t5324 + t10328*t5365 + t4787*t5406;
  p_output1[31]=t10205*t10322 + t10328*t10377 + t10391*t4787 + t10386*t4849 - 1.03824*(t10399*t4885 - 1.*t10395*t4901) - 0.02565*(t10395*t4885 + t10399*t4901) + t10399*t4904 + t10395*t4947;
  p_output1[32]=t10271*t10322 + t10328*t10416 + t10423*t4787 + t10420*t4849 - 1.03824*(t10432*t4885 - 1.*t10428*t4901) - 0.02565*(t10428*t4885 + t10432*t4901) + t10432*t4904 + t10428*t4947;
  p_output1[33]=-1.03824*(t10457 + t10455*t4885) + t10455*t4904 + t10445*t5386 + t10449*t5406 + t4947*t5458 - 0.02565*(t10455*t4901 + t5548);
  p_output1[34]=t10391*t10449 + t10445*t10468 - 1.03824*(t10479 + t10477*t4885) - 0.02565*(t10484 + t10477*t4901) + t10477*t4904 + t10473*t4947;
  p_output1[35]=t10423*t10449 + t10445*t10497 - 1.03824*(t10507 + t10505*t4885) - 0.02565*(t10512 + t10505*t4901) + t10505*t4904 + t10502*t4947;
  p_output1[36]=t10520*t5458 + t10526*t5499 - 1.03824*(t10457 - 1.*t4885*t5499) - 0.02565*t5558;
  p_output1[37]=t10473*t10520 + t10526*t10540 - 1.03824*(t10479 - 1.*t10540*t4885) - 0.02565*(t10484 - 1.*t10540*t4901);
  p_output1[38]=t10502*t10520 + t10526*t10554 - 1.03824*(t10507 - 1.*t10554*t4885) - 0.02565*(t10512 - 1.*t10554*t4901);
  p_output1[39]=0;
  p_output1[40]=0;
  p_output1[41]=0;
  p_output1[42]=0;
  p_output1[43]=0;
  p_output1[44]=0;
  p_output1[45]=0;
  p_output1[46]=0;
  p_output1[47]=0;
  p_output1[48]=0;
  p_output1[49]=0;
  p_output1[50]=0;
  p_output1[51]=0;
  p_output1[52]=0;
  p_output1[53]=0;
  p_output1[54]=0;
  p_output1[55]=0;
  p_output1[56]=0;
  p_output1[57]=0;
  p_output1[58]=0;
  p_output1[59]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "One input(s) required (var1).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 20 && ncols == 1) && 
      !(mrows == 1 && ncols == 20))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 3, (mwSize) 20, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1);


}

#else // MATLAB_MEX_FILE

#include "Jp_LeftToe_mex.hh"

namespace SymExpression
{

void Jp_LeftToe_mex_raw(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}

}

#endif // MATLAB_MEX_FILE
