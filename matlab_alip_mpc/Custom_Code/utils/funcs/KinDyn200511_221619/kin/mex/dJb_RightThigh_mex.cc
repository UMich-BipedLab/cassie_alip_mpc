/*
 * Automatically Generated from Mathematica.
 * Mon 11 May 2020 22:28:25 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t537;
  double t984;
  double t1009;
  double t1205;
  double t1233;
  double t925;
  double t1286;
  double t1315;
  double t1327;
  double t924;
  double t1428;
  double t1478;
  double t1696;
  double t196;
  double t830;
  double t2213;
  double t2123;
  double t2147;
  double t2172;
  double t1933;
  double t1225;
  double t1341;
  double t1376;
  double t1602;
  double t215;
  double t895;
  double t3236;
  double t3268;
  double t3311;
  double t3041;
  double t3128;
  double t3158;
  double t2681;
  double t2685;
  double t563;
  double t740;
  double t1377;
  double t1699;
  double t1722;
  double t3737;
  double t3781;
  double t3795;
  double t3852;
  double t3862;
  double t3868;
  double t3790;
  double t3806;
  double t3833;
  double t4017;
  double t4021;
  double t4022;
  double t4003;
  double t4414;
  double t4419;
  double t4429;
  double t4357;
  double t4369;
  double t4375;
  double t4006;
  double t4023;
  double t4075;
  double t4112;
  double t4114;
  double t4116;
  double t4119;
  double t4640;
  double t4643;
  double t4656;
  double t4675;
  double t4884;
  double t4885;
  double t4628;
  double t4648;
  double t4683;
  double t4714;
  double t869;
  double t1801;
  double t1890;
  double t2175;
  double t2246;
  double t2262;
  double t2305;
  double t2333;
  double t2341;
  double t2578;
  double t2654;
  double t2662;
  double t2691;
  double t2758;
  double t2829;
  double t2864;
  double t2914;
  double t2923;
  double t2943;
  double t2981;
  double t2998;
  double t3004;
  double t3235;
  double t3349;
  double t3353;
  double t3430;
  double t3438;
  double t3459;
  double t3464;
  double t3469;
  double t3475;
  double t3572;
  double t3640;
  double t3643;
  double t3657;
  double t3836;
  double t3878;
  double t3881;
  double t3923;
  double t3932;
  double t3944;
  double t4027;
  double t4031;
  double t4038;
  double t4053;
  double t4113;
  double t4126;
  double t4165;
  double t4188;
  double t4206;
  double t4216;
  double t4227;
  double t4241;
  double t4243;
  double t4278;
  double t4294;
  double t4310;
  double t4408;
  double t4438;
  double t4440;
  double t4489;
  double t4513;
  double t4516;
  double t4518;
  double t4523;
  double t4529;
  double t4554;
  double t4565;
  double t4587;
  double t4588;
  double t4639;
  double t4717;
  double t4725;
  double t4734;
  double t4768;
  double t4779;
  double t4795;
  double t4821;
  double t4824;
  double t4864;
  double t4867;
  double t4876;
  double t4887;
  double t4902;
  double t4911;
  double t4912;
  double t4914;
  double t4942;
  double t5002;
  double t5019;
  double t5029;
  double t5037;
  double t5048;
  double t5050;
  double t5059;
  double t5065;
  double t5876;
  double t5809;
  double t5813;
  double t5832;
  double t5836;
  double t5844;
  double t5854;
  double t5873;
  double t5877;
  double t5880;
  double t5881;
  double t5911;
  double t5931;
  double t5940;
  double t5942;
  double t5947;
  double t5948;
  double t5977;
  double t5831;
  double t5941;
  double t5978;
  double t6088;
  double t6091;
  double t6032;
  double t6033;
  double t6044;
  double t6048;
  double t6051;
  double t6156;
  double t6157;
  double t6167;
  double t5993;
  double t5995;
  double t5998;
  double t6003;
  double t6013;
  double t5817;
  double t5979;
  double t6179;
  double t6180;
  double t6207;
  double t6208;
  double t6223;
  double t6238;
  double t6244;
  double t5988;
  double t6015;
  double t6026;
  double t6170;
  double t6218;
  double t6250;
  double t6251;
  double t6262;
  double t6273;
  double t6283;
  double t6074;
  double t6095;
  double t6147;
  double t5803;
  double t6467;
  double t6300;
  double t6301;
  double t6306;
  double t6314;
  double t6432;
  double t6451;
  double t6459;
  double t6376;
  double t6383;
  double t6385;
  double t6411;
  double t5720;
  double t5722;
  double t5746;
  double t5646;
  double t5654;
  double t5670;
  double t6594;
  double t6607;
  double t6609;
  double t6591;
  double t5570;
  double t5582;
  double t5621;
  double t6749;
  double t6750;
  double t5764;
  double t5774;
  double t5776;
  double t6775;
  double t6777;
  double t6778;
  double t6780;
  double t6801;
  double t6812;
  double t6821;
  double t6751;
  double t6761;
  double t6763;
  double t6793;
  double t6824;
  double t6830;
  double t6842;
  double t6853;
  double t6858;
  double t5630;
  double t5636;
  double t5641;
  double t6959;
  double t6967;
  double t6968;
  double t6985;
  double t6987;
  double t6993;
  double t6995;
  double t6996;
  double t6977;
  double t6989;
  double t6990;
  double t7024;
  double t7040;
  double t7041;
  double t6992;
  double t7005;
  double t7012;
  double t7018;
  double t7042;
  double t7043;
  double t7047;
  double t7055;
  double t7060;
  double t7108;
  double t7133;
  double t7136;
  double t7142;
  double t7143;
  double t7171;
  double t7174;
  double t7194;
  double t7211;
  double t5546;
  double t5549;
  double t5554;
  double t5507;
  double t5509;
  double t5514;
  double t5525;
  double t5534;
  double t5536;
  double t7606;
  double t7614;
  double t7616;
  double t7617;
  double t7641;
  double t7643;
  double t7645;
  double t7646;
  double t5503;
  double t5505;
  double t5523;
  double t5542;
  double t5555;
  double t5558;
  double t5560;
  double t5567;
  double t5625;
  double t5642;
  double t5671;
  double t5678;
  double t5685;
  double t5705;
  double t5755;
  double t5777;
  double t5785;
  double t6030;
  double t6150;
  double t6320;
  double t6323;
  double t7906;
  double t7907;
  double t7909;
  double t6428;
  double t6462;
  double t6519;
  double t6520;
  double t7922;
  double t7923;
  double t7925;
  double t6740;
  double t6764;
  double t6890;
  double t6909;
  double t7015;
  double t7078;
  double t7080;
  double t7223;
  double t7224;
  double t7243;
  double t7245;
  double t8001;
  double t8002;
  double t8004;
  double t7110;
  double t7114;
  double t8018;
  double t8019;
  double t8020;
  double t7154;
  double t7155;
  double t7368;
  double t7398;
  double t7429;
  double t7431;
  double t7495;
  double t7516;
  double t7524;
  double t7658;
  double t7659;
  double t7679;
  double t7680;
  double t7563;
  double t7565;
  double t8142;
  double t8145;
  double t8146;
  double t8148;
  double t8151;
  double t8154;
  double t7619;
  double t7626;
  double t7782;
  double t7787;
  double t7808;
  double t7809;
  double t7847;
  double t7856;
  double t7879;
  double t7880;
  double t7953;
  double t7954;
  double t7962;
  double t7967;
  double t7981;
  double t8273;
  double t8274;
  double t8275;
  double t7987;
  double t7988;
  double t8061;
  double t8062;
  double t8071;
  double t8072;
  double t8371;
  double t8372;
  double t8373;
  double t8102;
  double t8110;
  double t8116;
  double t8191;
  double t8192;
  double t8199;
  double t8200;
  double t8430;
  double t8431;
  double t8432;
  double t8212;
  double t8214;
  double t8444;
  double t8445;
  double t8446;
  double t8221;
  double t8222;
  double t8487;
  double t8488;
  double t8489;
  double t8529;
  double t8531;
  double t8532;
  double t8581;
  double t8582;
  double t8583;
  double t8594;
  double t8595;
  double t8596;
  double t8479;
  double t8481;
  double t8482;
  double t8483;
  double t8484;
  double t8485;
  double t8486;
  double t8616;
  double t8565;
  double t8606;
  double t8637;
  t537 = Sin(var1[15]);
  t984 = Cos(var1[15]);
  t1009 = -1.*t984;
  t1205 = 0. + t1009;
  t1233 = Sin(var1[13]);
  t925 = Cos(var1[13]);
  t1286 = Sin(var1[14]);
  t1315 = t1286*t537;
  t1327 = 0. + t1315;
  t924 = Cos(var1[5]);
  t1428 = -1.*t1205*t1233;
  t1478 = t925*t1327;
  t1696 = Sin(var1[5]);
  t196 = Cos(var1[3]);
  t830 = Sin(var1[4]);
  t2213 = t1428 + t1478;
  t2123 = -1.*t925*t1205;
  t2147 = -1.*t1233*t1327;
  t2172 = t2123 + t2147;
  t1933 = Sin(var1[3]);
  t1225 = t925*t1205;
  t1341 = t1233*t1327;
  t1376 = 0. + t1225 + t1341;
  t1602 = 0. + t1428 + t1478;
  t215 = Cos(var1[14]);
  t895 = Cos(var1[4]);
  t3236 = t984*t1233*t1286;
  t3268 = t925*t537;
  t3311 = t3236 + t3268;
  t3041 = t925*t984*t1286;
  t3128 = -1.*t1233*t537;
  t3158 = t3041 + t3128;
  t2681 = t924*t1602;
  t2685 = -1.*t1376*t1696;
  t563 = t215*t537;
  t740 = 0. + t563;
  t1377 = t924*t1376;
  t1699 = t1602*t1696;
  t1722 = 0. + t1377 + t1699;
  t3737 = t984*t1286;
  t3781 = 0. + t3737;
  t3795 = 0. + t537;
  t3852 = -1.*t1233*t3781;
  t3862 = -1.*t925*t3795;
  t3868 = t3852 + t3862;
  t3790 = t925*t3781;
  t3806 = -1.*t1233*t3795;
  t3833 = t3790 + t3806;
  t4017 = t1233*t3781;
  t4021 = t925*t3795;
  t4022 = 0. + t4017 + t4021;
  t4003 = 0. + t3790 + t3806;
  t4414 = t925*t984;
  t4419 = -1.*t1233*t1286*t537;
  t4429 = t4414 + t4419;
  t4357 = -1.*t984*t1233;
  t4369 = -1.*t925*t1286*t537;
  t4375 = t4357 + t4369;
  t4006 = t924*t4003;
  t4023 = -1.*t4022*t1696;
  t4075 = t215*t984;
  t4112 = 0. + t4075;
  t4114 = t924*t4022;
  t4116 = t4003*t1696;
  t4119 = 0. + t4114 + t4116;
  t4640 = -1.*t215*t1233;
  t4643 = 0. + t4640;
  t4656 = -1.*t925*t215;
  t4675 = 0. + t4656;
  t4884 = t4675*t924;
  t4885 = -1.*t4643*t1696;
  t4628 = 0. + t1286;
  t4648 = t924*t4643;
  t4683 = t4675*t1696;
  t4714 = 0. + t4648 + t4683;
  t869 = -1.*t740*t830;
  t1801 = t895*t1722;
  t1890 = t869 + t1801;
  t2175 = t924*t2172;
  t2246 = -1.*t2213*t1696;
  t2262 = t2175 + t2246;
  t2305 = t924*t2213;
  t2333 = t2172*t1696;
  t2341 = t2305 + t2333;
  t2578 = -1.*t924*t1376;
  t2654 = -1.*t1602*t1696;
  t2662 = t2578 + t2654;
  t2691 = t2681 + t2685;
  t2758 = t925*t215*t924*t537;
  t2829 = -1.*t215*t1233*t537*t1696;
  t2864 = t2758 + t2829;
  t2914 = -1.*t895*t1286*t537;
  t2923 = t215*t924*t1233*t537;
  t2943 = t925*t215*t537*t1696;
  t2981 = t2923 + t2943;
  t2998 = t830*t2981;
  t3004 = t2914 + t2998;
  t3235 = t924*t3158;
  t3349 = -1.*t3311*t1696;
  t3353 = t3235 + t3349;
  t3430 = t215*t984*t895;
  t3438 = t924*t3311;
  t3459 = t3158*t1696;
  t3464 = t3438 + t3459;
  t3469 = t830*t3464;
  t3475 = t3430 + t3469;
  t3572 = 0. + t2681 + t2685;
  t3640 = t895*t740;
  t3643 = t830*t1722;
  t3657 = 0. + t3640 + t3643;
  t3836 = t924*t3833;
  t3878 = t3868*t1696;
  t3881 = t3836 + t3878;
  t3923 = t924*t3868;
  t3932 = -1.*t3833*t1696;
  t3944 = t3923 + t3932;
  t4027 = t4006 + t4023;
  t4031 = -1.*t924*t4022;
  t4038 = -1.*t4003*t1696;
  t4053 = t4031 + t4038;
  t4113 = -1.*t4112*t830;
  t4126 = t895*t4119;
  t4165 = t4113 + t4126;
  t4188 = t925*t215*t984*t924;
  t4206 = -1.*t215*t984*t1233*t1696;
  t4216 = t4188 + t4206;
  t4227 = -1.*t984*t895*t1286;
  t4241 = t215*t984*t924*t1233;
  t4243 = t925*t215*t984*t1696;
  t4278 = t4241 + t4243;
  t4294 = t830*t4278;
  t4310 = t4227 + t4294;
  t4408 = t924*t4375;
  t4438 = -1.*t4429*t1696;
  t4440 = t4408 + t4438;
  t4489 = -1.*t215*t895*t537;
  t4513 = t924*t4429;
  t4516 = t4375*t1696;
  t4518 = t4513 + t4516;
  t4523 = t830*t4518;
  t4529 = t4489 + t4523;
  t4554 = 0. + t4006 + t4023;
  t4565 = t4112*t895;
  t4587 = t830*t4119;
  t4588 = 0. + t4565 + t4587;
  t4639 = -1.*t4628*t830;
  t4717 = t895*t4714;
  t4725 = t4639 + t4717;
  t4734 = t215*t924*t1233;
  t4768 = t925*t215*t1696;
  t4779 = t4734 + t4768;
  t4795 = -1.*t925*t215*t924;
  t4821 = t215*t1233*t1696;
  t4824 = t4795 + t4821;
  t4864 = -1.*t924*t4643;
  t4867 = -1.*t4675*t1696;
  t4876 = t4864 + t4867;
  t4887 = t4884 + t4885;
  t4902 = 0. + t4884 + t4885;
  t4911 = t895*t4628;
  t4912 = t830*t4714;
  t4914 = 0. + t4911 + t4912;
  t4942 = t925*t924*t1286;
  t5002 = -1.*t1233*t1286*t1696;
  t5019 = t4942 + t5002;
  t5029 = t215*t895;
  t5037 = t924*t1233*t1286;
  t5048 = t925*t1286*t1696;
  t5050 = t5037 + t5048;
  t5059 = t830*t5050;
  t5065 = t5029 + t5059;
  t5876 = 1. + t1009;
  t5809 = -1.*t925;
  t5813 = 1. + t5809;
  t5832 = -1.*t215;
  t5836 = 1. + t5832;
  t5844 = -0.135*t5836;
  t5854 = -0.1708*t215;
  t5873 = 0.08055*t1286;
  t5877 = -0.08055*t5876;
  t5880 = -0.08045*t984;
  t5881 = 0.0598*t537;
  t5911 = 0. + t5877 + t5880 + t5881;
  t5931 = t1286*t5911;
  t5940 = 0. + t5844 + t5854 + t5873 + t5931;
  t5942 = -0.01004*t5876;
  t5947 = -0.06984*t984;
  t5948 = 0.00010000000000000286*t537;
  t5977 = 0. + t5942 + t5947 + t5948;
  t5831 = 0.07996*t1233;
  t5941 = t925*t5940;
  t5978 = -1.*t1233*t5977;
  t6088 = 0.135*t925;
  t6091 = t6088 + t5831 + t5941 + t5978;
  t6032 = 0.07996*t925;
  t6033 = -0.135*t1233;
  t6044 = -1.*t1233*t5940;
  t6048 = -1.*t925*t5977;
  t6051 = t6032 + t6033 + t6044 + t6048;
  t6156 = t924*t6091;
  t6157 = t6051*t1696;
  t6167 = t6156 + t6157;
  t5993 = 0.07996*t5813;
  t5995 = 0.135*t1233;
  t5998 = t1233*t5940;
  t6003 = t925*t5977;
  t6013 = 0. + t5993 + t5995 + t5998 + t6003;
  t5817 = -0.135*t5813;
  t5979 = 0. + t5817 + t5831 + t5941 + t5978;
  t6179 = -0.08055*t5836;
  t6180 = 0.0358*t1286;
  t6207 = t215*t5911;
  t6208 = 0. + t6179 + t6180 + t6207;
  t6223 = t924*t6013;
  t6238 = t5979*t1696;
  t6244 = 0. + t6223 + t6238;
  t5988 = t924*t5979;
  t6015 = -1.*t6013*t1696;
  t6026 = 0. + t5988 + t6015;
  t6170 = 0. + t4639 + t4717;
  t6218 = -1.*t6208*t830;
  t6250 = t895*t6244;
  t6251 = 0. + t6218 + t6250;
  t6262 = t895*t6208;
  t6273 = t830*t6244;
  t6283 = 0. + t6262 + t6273;
  t6074 = t924*t6051;
  t6095 = -1.*t6091*t1696;
  t6147 = t6074 + t6095;
  t5803 = 0. + t4113 + t4126;
  t6467 = t5988 + t6015;
  t6300 = t4902*t6026;
  t6301 = t6170*t6251;
  t6306 = t4914*t6283;
  t6314 = t6300 + t6301 + t6306;
  t6432 = -1.*t924*t6013;
  t6451 = -1.*t5979*t1696;
  t6459 = t6432 + t6451;
  t6376 = -1.*t6026*t4554;
  t6383 = -1.*t6251*t5803;
  t6385 = -1.*t6283*t4588;
  t6411 = t6376 + t6383 + t6385;
  t5720 = -1.*t895*t4628;
  t5722 = -1.*t830*t4714;
  t5746 = t5720 + t5722;
  t5646 = -1.*t4112*t895;
  t5654 = -1.*t830*t4119;
  t5670 = t5646 + t5654;
  t6594 = -1.*t895*t6208;
  t6607 = -1.*t830*t6244;
  t6609 = t6594 + t6607;
  t6591 = t6218 + t6250;
  t5570 = t984*t1286*t830;
  t5582 = t895*t4278;
  t5621 = t5570 + t5582;
  t6749 = 0.08055*t215;
  t6750 = t6749 + t6180 + t6207;
  t5764 = -1.*t215*t830;
  t5774 = t895*t5050;
  t5776 = t5764 + t5774;
  t6775 = 0.0358*t215;
  t6777 = -0.08055*t1286;
  t6778 = -1.*t1286*t5911;
  t6780 = t6775 + t6777 + t6778;
  t6801 = t924*t1233*t6750;
  t6812 = t925*t6750*t1696;
  t6821 = t6801 + t6812;
  t6751 = t925*t924*t6750;
  t6761 = -1.*t1233*t6750*t1696;
  t6763 = t6751 + t6761;
  t6793 = -1.*t6780*t830;
  t6824 = t895*t6821;
  t6830 = t6793 + t6824;
  t6842 = t895*t6780;
  t6853 = t830*t6821;
  t6858 = t6842 + t6853;
  t5630 = t215*t537*t830;
  t5636 = t895*t4518;
  t5641 = t5630 + t5636;
  t6959 = 0.0598*t984;
  t6967 = -0.00010000000000000286*t537;
  t6968 = t6959 + t6967;
  t6985 = 0.00010000000000000286*t984;
  t6987 = t6985 + t5881;
  t6993 = t1233*t1286*t6968;
  t6995 = t925*t6987;
  t6996 = t6993 + t6995;
  t6977 = t925*t1286*t6968;
  t6989 = -1.*t1233*t6987;
  t6990 = t6977 + t6989;
  t7024 = t924*t6996;
  t7040 = t6990*t1696;
  t7041 = t7024 + t7040;
  t6992 = t924*t6990;
  t7005 = -1.*t6996*t1696;
  t7012 = t6992 + t7005;
  t7018 = -1.*t215*t6968*t830;
  t7042 = t895*t7041;
  t7043 = t7018 + t7042;
  t7047 = t215*t895*t6968;
  t7055 = t830*t7041;
  t7060 = t7047 + t7055;
  t7108 = 0. + t869 + t1801;
  t7133 = -1.*t4902*t6026;
  t7136 = -1.*t6170*t6251;
  t7142 = -1.*t4914*t6283;
  t7143 = t7133 + t7136 + t7142;
  t7171 = t6026*t3572;
  t7174 = t6251*t7108;
  t7194 = t6283*t3657;
  t7211 = t7171 + t7174 + t7194;
  t5546 = -1.*t895*t740;
  t5549 = -1.*t830*t1722;
  t5554 = t5546 + t5549;
  t5507 = t1286*t537*t830;
  t5509 = t895*t2981;
  t5514 = t5507 + t5509;
  t5525 = -1.*t215*t984*t830;
  t5534 = t895*t3464;
  t5536 = t5525 + t5534;
  t7606 = t6026*t4554;
  t7614 = t6251*t5803;
  t7616 = t6283*t4588;
  t7617 = t7606 + t7614 + t7616;
  t7641 = -1.*t6026*t3572;
  t7643 = -1.*t6251*t7108;
  t7645 = -1.*t6283*t3657;
  t7646 = t7641 + t7643 + t7645;
  t5503 = var2[13]*t895*t2341;
  t5505 = var2[5]*t895*t2691;
  t5523 = var2[14]*t5514;
  t5542 = var2[15]*t5536;
  t5555 = var2[4]*t5554;
  t5558 = t5503 + t5505 + t5523 + t5542 + t5555;
  t5560 = var2[13]*t895*t3881;
  t5567 = var2[5]*t895*t4027;
  t5625 = var2[14]*t5621;
  t5642 = var2[15]*t5641;
  t5671 = var2[4]*t5670;
  t5678 = t5560 + t5567 + t5625 + t5642 + t5671;
  t5685 = var2[13]*t895*t4824;
  t5705 = var2[5]*t895*t4887;
  t5755 = var2[4]*t5746;
  t5777 = var2[14]*t5776;
  t5785 = t5685 + t5705 + t5755 + t5777;
  t6030 = t4779*t6026;
  t6150 = t4902*t6147;
  t6320 = -1.*t6147*t4554;
  t6323 = -1.*t6026*t3944;
  t7906 = t4628*t6208;
  t7907 = t4714*t6244;
  t7909 = t7906 + t6300 + t7907;
  t6428 = t4876*t6026;
  t6462 = t4902*t6459;
  t6519 = -1.*t6459*t4554;
  t6520 = -1.*t6026*t4053;
  t7922 = -1.*t4112*t6208;
  t7923 = -1.*t6244*t4119;
  t7925 = t7922 + t6376 + t7923;
  t6740 = t5019*t6026;
  t6764 = t4902*t6763;
  t6890 = -1.*t4216*t6026;
  t6909 = -1.*t6763*t4554;
  t7015 = t4902*t7012;
  t7078 = -1.*t6026*t4440;
  t7080 = -1.*t7012*t4554;
  t7223 = -1.*t4876*t6026;
  t7224 = -1.*t4902*t6459;
  t7243 = t6026*t2662;
  t7245 = t6459*t3572;
  t8001 = -1.*t4628*t6208;
  t8002 = -1.*t4714*t6244;
  t8004 = t8001 + t7133 + t8002;
  t7110 = -1.*t4779*t6026;
  t7114 = -1.*t4902*t6147;
  t8018 = t6208*t740;
  t8019 = t6244*t1722;
  t8020 = t8018 + t8019 + t7171;
  t7154 = t6026*t2262;
  t7155 = t6147*t3572;
  t7368 = -1.*t5019*t6026;
  t7398 = -1.*t4902*t6763;
  t7429 = t6026*t2864;
  t7431 = t6763*t3572;
  t7495 = -1.*t4902*t7012;
  t7516 = t6026*t3353;
  t7524 = t7012*t3572;
  t7658 = t6459*t4554;
  t7659 = t6026*t4053;
  t7679 = -1.*t6026*t2662;
  t7680 = -1.*t6459*t3572;
  t7563 = t6147*t4554;
  t7565 = t6026*t3944;
  t8142 = t4112*t6208;
  t8145 = t6244*t4119;
  t8146 = t8142 + t7606 + t8145;
  t8148 = -1.*t6208*t740;
  t8151 = -1.*t6244*t1722;
  t8154 = t8148 + t8151 + t7641;
  t7619 = -1.*t6026*t2262;
  t7626 = -1.*t6147*t3572;
  t7782 = t4216*t6026;
  t7787 = t6763*t4554;
  t7808 = -1.*t6026*t2864;
  t7809 = -1.*t6763*t3572;
  t7847 = t6026*t4440;
  t7856 = t7012*t4554;
  t7879 = -1.*t6026*t3353;
  t7880 = -1.*t7012*t3572;
  t7953 = t215*t6208;
  t7954 = t4628*t6780;
  t7962 = t984*t1286*t6208;
  t7967 = -1.*t4112*t6780;
  t7981 = t215*t4628*t6968;
  t8273 = t4643*t6013;
  t8274 = t4675*t5979;
  t8275 = t8273 + t8274 + t7906;
  t7987 = -1.*t215*t4112*t6968;
  t7988 = t215*t6208*t537;
  t8061 = -1.*t215*t6208;
  t8062 = -1.*t4628*t6780;
  t8071 = -1.*t1286*t6208*t537;
  t8072 = t6780*t740;
  t8371 = -1.*t4643*t6013;
  t8372 = -1.*t4675*t5979;
  t8373 = t8371 + t8372 + t8001;
  t8102 = -1.*t215*t4628*t6968;
  t8110 = t215*t984*t6208;
  t8116 = t215*t6968*t740;
  t8191 = -1.*t984*t1286*t6208;
  t8192 = t4112*t6780;
  t8199 = t1286*t6208*t537;
  t8200 = -1.*t6780*t740;
  t8430 = t6013*t4022;
  t8431 = t5979*t4003;
  t8432 = t8142 + t8430 + t8431;
  t8212 = t215*t4112*t6968;
  t8214 = -1.*t215*t6208*t537;
  t8444 = -1.*t5979*t1602;
  t8445 = -1.*t6013*t1376;
  t8446 = t8148 + t8444 + t8445;
  t8221 = -1.*t215*t984*t6208;
  t8222 = -1.*t215*t6968*t740;
  t8487 = t1286*t6208;
  t8488 = -1.*t215*t5940;
  t8489 = 0. + t8487 + t8488;
  t8529 = -1.*t1286*t6208;
  t8531 = t215*t5940;
  t8532 = 0. + t8529 + t8531;
  t8581 = t3781*t5940;
  t8582 = t5977*t3795;
  t8583 = t8142 + t8581 + t8582;
  t8594 = -1.*t1205*t5977;
  t8595 = -1.*t5940*t1327;
  t8596 = t8594 + t8148 + t8595;
  t8479 = var2[15]*t215*t984;
  t8481 = -1.*var2[14]*t1286*t537;
  t8482 = t8479 + t8481;
  t8483 = -1.*var2[14]*t984*t1286;
  t8484 = -1.*var2[15]*t215*t537;
  t8485 = t8483 + t8484;
  t8486 = var2[14]*t215;
  t8616 = -1.*t5977*t537;
  t8565 = t5977*t537;
  t8606 = t984*t5977;
  t8637 = -1.*t5911*t537;
  p_output1[0]=(-1.*t196*t3572 - 1.*t1933*t3657)*var2[3] + t1890*t196*var2[4] + (-1.*t1933*t2662 + t196*t2691*t830)*var2[5] + (-1.*t1933*t2262 + t196*t2341*t830)*var2[13] + (-1.*t1933*t2864 + t196*t3004)*var2[14] + (-1.*t1933*t3353 + t196*t3475)*var2[15];
  p_output1[1]=(-1.*t196*t4554 - 1.*t1933*t4588)*var2[3] + t196*t4165*var2[4] + (-1.*t1933*t4053 + t196*t4027*t830)*var2[5] + (-1.*t1933*t3944 + t196*t3881*t830)*var2[13] + (-1.*t1933*t4216 + t196*t4310)*var2[14] + (-1.*t1933*t4440 + t196*t4529)*var2[15];
  p_output1[2]=(-1.*t196*t4902 - 1.*t1933*t4914)*var2[3] + t196*t4725*var2[4] + (-1.*t1933*t4876 + t196*t4887*t830)*var2[5] + (-1.*t1933*t4779 + t196*t4824*t830)*var2[13] + (-1.*t1933*t5019 + t196*t5065)*var2[14];
  p_output1[3]=0;
  p_output1[4]=0;
  p_output1[5]=0;
  p_output1[6]=(-1.*t1933*t3572 + t196*t3657)*var2[3] + t1890*t1933*var2[4] + (t196*t2662 + t1933*t2691*t830)*var2[5] + (t196*t2262 + t1933*t2341*t830)*var2[13] + (t196*t2864 + t1933*t3004)*var2[14] + (t196*t3353 + t1933*t3475)*var2[15];
  p_output1[7]=(-1.*t1933*t4554 + t196*t4588)*var2[3] + t1933*t4165*var2[4] + (t196*t4053 + t1933*t4027*t830)*var2[5] + (t196*t3944 + t1933*t3881*t830)*var2[13] + (t196*t4216 + t1933*t4310)*var2[14] + (t196*t4440 + t1933*t4529)*var2[15];
  p_output1[8]=(-1.*t1933*t4902 + t196*t4914)*var2[3] + t1933*t4725*var2[4] + (t196*t4876 + t1933*t4887*t830)*var2[5] + (t196*t4779 + t1933*t4824*t830)*var2[13] + (t196*t5019 + t1933*t5065)*var2[14];
  p_output1[9]=0;
  p_output1[10]=0;
  p_output1[11]=0;
  p_output1[12]=t5558;
  p_output1[13]=t5678;
  p_output1[14]=t5785;
  p_output1[15]=0;
  p_output1[16]=0;
  p_output1[17]=0;
  p_output1[18]=(t5670*t6314 + t5746*t6411 + t6170*(-1.*t5670*t6251 - 1.*t4165*t6283 - 1.*t4588*t6591 - 1.*t5803*t6609) + t5803*(t5746*t6251 + t4725*t6283 + t4914*t6591 + t6170*t6609))*var2[4] + (t4027*t6314*t895 + t4887*t6411*t895 + t6170*(t6519 + t6520 - 1.*t4027*t6283*t830 - 1.*t4588*t6467*t830 - 1.*t4027*t6251*t895 - 1.*t5803*t6467*t895) + t5803*(t6428 + t6462 + t4887*t6283*t830 + t4914*t6467*t830 + t4887*t6251*t895 + t6170*t6467*t895))*var2[5] + (t3881*t6314*t895 + t4824*t6411*t895 + t6170*(t6320 + t6323 - 1.*t4588*t6167*t830 - 1.*t3881*t6283*t830 - 1.*t5803*t6167*t895 - 1.*t3881*t6251*t895) + t5803*(t6030 + t6150 + t4914*t6167*t830 + t4824*t6283*t830 + t6167*t6170*t895 + t4824*t6251*t895))*var2[13] + (t5621*t6314 + t5776*t6411 + t5803*(t5776*t6251 + t5065*t6283 + t6740 + t6764 + t6170*t6830 + t4914*t6858) + t6170*(-1.*t5621*t6251 - 1.*t4310*t6283 - 1.*t5803*t6830 - 1.*t4588*t6858 + t6890 + t6909))*var2[14] + (t5641*t6314 + t5803*(t7015 + t6170*t7043 + t4914*t7060) + t6170*(-1.*t5641*t6251 - 1.*t4529*t6283 - 1.*t5803*t7043 - 1.*t4588*t7060 + t7078 + t7080))*var2[15];
  p_output1[19]=((-1.*t5746*t6251 - 1.*t4725*t6283 - 1.*t4914*t6591 - 1.*t6170*t6609)*t7108 + t6170*(t5554*t6251 + t1890*t6283 + t3657*t6591 + t6609*t7108) + t5554*t7143 + t5746*t7211)*var2[4] + (t2691*t7143*t895 + t4887*t7211*t895 + t7108*(t7223 + t7224 - 1.*t4887*t6283*t830 - 1.*t4914*t6467*t830 - 1.*t4887*t6251*t895 - 1.*t6170*t6467*t895) + t6170*(t7243 + t7245 + t2691*t6283*t830 + t3657*t6467*t830 + t2691*t6251*t895 + t6467*t7108*t895))*var2[5] + (t2341*t7143*t895 + t4824*t7211*t895 + t7108*(t7110 + t7114 - 1.*t4914*t6167*t830 - 1.*t4824*t6283*t830 - 1.*t6167*t6170*t895 - 1.*t4824*t6251*t895) + t6170*(t7154 + t7155 + t3657*t6167*t830 + t2341*t6283*t830 + t2341*t6251*t895 + t6167*t7108*t895))*var2[13] + (t5514*t7143 + t5776*t7211 + t7108*(-1.*t5776*t6251 - 1.*t5065*t6283 - 1.*t6170*t6830 - 1.*t4914*t6858 + t7368 + t7398) + t6170*(t5514*t6251 + t3004*t6283 + t3657*t6858 + t6830*t7108 + t7429 + t7431))*var2[14] + (t5536*t7143 + t7108*(-1.*t6170*t7043 - 1.*t4914*t7060 + t7495) + t6170*(t5536*t6251 + t3475*t6283 + t3657*t7060 + t7043*t7108 + t7516 + t7524))*var2[15];
  p_output1[20]=((t5670*t6251 + t4165*t6283 + t4588*t6591 + t5803*t6609)*t7108 + t5803*(-1.*t5554*t6251 - 1.*t1890*t6283 - 1.*t3657*t6591 - 1.*t6609*t7108) + t5554*t7617 + t5670*t7646)*var2[4] + (t2691*t7617*t895 + t4027*t7646*t895 + t7108*(t7658 + t7659 + t4027*t6283*t830 + t4588*t6467*t830 + t4027*t6251*t895 + t5803*t6467*t895) + t5803*(t7679 + t7680 - 1.*t2691*t6283*t830 - 1.*t3657*t6467*t830 - 1.*t2691*t6251*t895 - 1.*t6467*t7108*t895))*var2[5] + (t2341*t7617*t895 + t3881*t7646*t895 + t7108*(t7563 + t7565 + t4588*t6167*t830 + t3881*t6283*t830 + t5803*t6167*t895 + t3881*t6251*t895) + t5803*(t7619 + t7626 - 1.*t3657*t6167*t830 - 1.*t2341*t6283*t830 - 1.*t2341*t6251*t895 - 1.*t6167*t7108*t895))*var2[13] + (t5514*t7617 + t5621*t7646 + t7108*(t5621*t6251 + t4310*t6283 + t5803*t6830 + t4588*t6858 + t7782 + t7787) + t5803*(-1.*t5514*t6251 - 1.*t3004*t6283 - 1.*t3657*t6858 - 1.*t6830*t7108 + t7808 + t7809))*var2[14] + (t5536*t7617 + t5641*t7646 + t7108*(t5641*t6251 + t4529*t6283 + t5803*t7043 + t4588*t7060 + t7847 + t7856) + t5803*(-1.*t5536*t6251 - 1.*t3475*t6283 - 1.*t3657*t7060 - 1.*t7043*t7108 + t7879 + t7880))*var2[15];
  p_output1[21]=t5558;
  p_output1[22]=t5678;
  p_output1[23]=t5785;
  p_output1[24]=(t4554*(t4887*t6244 + t6428 + t6462 + t4714*t6467) + t4902*(-1.*t4027*t6244 - 1.*t4119*t6467 + t6519 + t6520) + t4053*t7909 + t4876*t7925)*var2[5] + (t4554*(t6030 + t6150 + t4714*t6167 + t4824*t6244) + t4902*(-1.*t4119*t6167 - 1.*t3881*t6244 + t6320 + t6323) + t3944*t7909 + t4779*t7925)*var2[13] + (t4216*t7909 + t5019*t7925 + t4554*(t5050*t6244 + t6740 + t6764 + t4714*t6821 + t7953 + t7954) + t4902*(-1.*t4278*t6244 - 1.*t4119*t6821 + t6890 + t6909 + t7962 + t7967))*var2[14] + (t4440*t7909 + t4554*(t7015 + t4714*t7041 + t7981) + t4902*(-1.*t4518*t6244 - 1.*t4119*t7041 + t7078 + t7080 + t7987 + t7988))*var2[15];
  p_output1[25]=(t3572*(-1.*t4887*t6244 - 1.*t4714*t6467 + t7223 + t7224) + t4902*(t2691*t6244 + t1722*t6467 + t7243 + t7245) + t2662*t8004 + t4876*t8020)*var2[5] + (t3572*(-1.*t4714*t6167 - 1.*t4824*t6244 + t7110 + t7114) + t4902*(t1722*t6167 + t2341*t6244 + t7154 + t7155) + t2262*t8004 + t4779*t8020)*var2[13] + (t2864*t8004 + t5019*t8020 + t3572*(-1.*t5050*t6244 - 1.*t4714*t6821 + t7368 + t7398 + t8061 + t8062) + t4902*(t2981*t6244 + t1722*t6821 + t7429 + t7431 + t8071 + t8072))*var2[14] + (t3353*t8004 + t3572*(-1.*t4714*t7041 + t7495 + t8102) + t4902*(t3464*t6244 + t1722*t7041 + t7516 + t7524 + t8110 + t8116))*var2[15];
  p_output1[26]=(t3572*(t4027*t6244 + t4119*t6467 + t7658 + t7659) + t4554*(-1.*t2691*t6244 - 1.*t1722*t6467 + t7679 + t7680) + t2662*t8146 + t4053*t8154)*var2[5] + (t3572*(t4119*t6167 + t3881*t6244 + t7563 + t7565) + t4554*(-1.*t1722*t6167 - 1.*t2341*t6244 + t7619 + t7626) + t2262*t8146 + t3944*t8154)*var2[13] + (t2864*t8146 + t4216*t8154 + t3572*(t4278*t6244 + t4119*t6821 + t7782 + t7787 + t8191 + t8192) + t4554*(-1.*t2981*t6244 - 1.*t1722*t6821 + t7808 + t7809 + t8199 + t8200))*var2[14] + (t3353*t8146 + t4440*t8154 + t3572*(t4518*t6244 + t4119*t7041 + t7847 + t7856 + t8212 + t8214) + t4554*(-1.*t3464*t6244 - 1.*t1722*t7041 + t7879 + t7880 + t8221 + t8222))*var2[15];
  p_output1[27]=t2662*var2[5] + t2262*var2[13] + t2864*var2[14] + t3353*var2[15];
  p_output1[28]=t4053*var2[5] + t3944*var2[13] + t4216*var2[14] + t4440*var2[15];
  p_output1[29]=t4876*var2[5] + t4779*var2[13] + t5019*var2[14];
  p_output1[30]=(t4628*(-1.*t3868*t5979 - 1.*t3833*t6013 - 1.*t4003*t6051 - 1.*t4022*t6091) + t4112*(t1233*t215*t5979 + t4675*t6051 + t4643*t6091 - 1.*t215*t6013*t925))*var2[13] + (t215*(-1.*t4003*t5979 - 1.*t4022*t6013 + t7922) + t4112*(t1233*t1286*t6013 + t1233*t4643*t6750 + t7953 + t7954 + t1286*t5979*t925 + t4675*t6750*t925) - 1.*t1286*t8275*t984 + t4628*(-1.*t1233*t4022*t6750 + t7962 + t7967 - 1.*t4003*t6750*t925 - 1.*t1233*t215*t6013*t984 - 1.*t215*t5979*t925*t984))*var2[14] + (t4112*(t4675*t6990 + t4643*t6996 + t7981) + t4628*(-1.*t4375*t5979 - 1.*t4429*t6013 - 1.*t4003*t6990 - 1.*t4022*t6996 + t7987 + t7988) - 1.*t215*t537*t8275)*var2[15];
  p_output1[31]=(t4628*(t2172*t5979 + t2213*t6013 + t1602*t6051 + t1376*t6091) + t740*(-1.*t1233*t215*t5979 - 1.*t4675*t6051 - 1.*t4643*t6091 + t215*t6013*t925))*var2[13] + (t215*(t1602*t5979 + t1376*t6013 + t8018) - 1.*t1286*t537*t8373 + t4628*(t1233*t215*t537*t6013 + t1233*t1376*t6750 + t8071 + t8072 + t215*t537*t5979*t925 + t1602*t6750*t925) + t740*(-1.*t1233*t1286*t6013 - 1.*t1233*t4643*t6750 + t8061 + t8062 - 1.*t1286*t5979*t925 - 1.*t4675*t6750*t925))*var2[14] + (t740*(-1.*t4675*t6990 - 1.*t4643*t6996 + t8102) + t4628*(t3158*t5979 + t3311*t6013 + t1602*t6990 + t1376*t6996 + t8110 + t8116) + t215*t8373*t984)*var2[15];
  p_output1[32]=(t4112*(-1.*t2172*t5979 - 1.*t2213*t6013 - 1.*t1602*t6051 - 1.*t1376*t6091) + (t3868*t5979 + t3833*t6013 + t4003*t6051 + t4022*t6091)*t740)*var2[13] + (-1.*t1286*t537*t8432 + t4112*(-1.*t1233*t215*t537*t6013 - 1.*t1233*t1376*t6750 + t8199 + t8200 - 1.*t215*t537*t5979*t925 - 1.*t1602*t6750*t925) - 1.*t1286*t8446*t984 + t740*(t1233*t4022*t6750 + t8191 + t8192 + t4003*t6750*t925 + t1233*t215*t6013*t984 + t215*t5979*t925*t984))*var2[14] + (t740*(t4375*t5979 + t4429*t6013 + t4003*t6990 + t4022*t6996 + t8212 + t8214) + t4112*(-1.*t3158*t5979 - 1.*t3311*t6013 - 1.*t1602*t6990 - 1.*t1376*t6996 + t8221 + t8222) - 1.*t215*t537*t8446 + t215*t8432*t984)*var2[15];
  p_output1[33]=t8482;
  p_output1[34]=t8485;
  p_output1[35]=t8486;
  p_output1[36]=0;
  p_output1[37]=0;
  p_output1[38]=0;
  p_output1[39]=0;
  p_output1[40]=0;
  p_output1[41]=0;
  p_output1[42]=0;
  p_output1[43]=0;
  p_output1[44]=0;
  p_output1[45]=0;
  p_output1[46]=0;
  p_output1[47]=0;
  p_output1[48]=0;
  p_output1[49]=0;
  p_output1[50]=0;
  p_output1[51]=0;
  p_output1[52]=0;
  p_output1[53]=0;
  p_output1[54]=0;
  p_output1[55]=0;
  p_output1[56]=0;
  p_output1[57]=0;
  p_output1[58]=0;
  p_output1[59]=0;
  p_output1[60]=0;
  p_output1[61]=0;
  p_output1[62]=0;
  p_output1[63]=0;
  p_output1[64]=0;
  p_output1[65]=0;
  p_output1[66]=0;
  p_output1[67]=0;
  p_output1[68]=0;
  p_output1[69]=0;
  p_output1[70]=0;
  p_output1[71]=0;
  p_output1[72]=0;
  p_output1[73]=0;
  p_output1[74]=0;
  p_output1[75]=0;
  p_output1[76]=0;
  p_output1[77]=0;
  p_output1[78]=(0.07996*t215*t537 + t215*(-1.*t3781*t5940 - 1.*t3795*t5977 + t7922) + t4112*(t1286*t5940 - 1.*t215*t6750 + t1286*t6780 + t7953) - 1.*t1286*t8489*t984 + t1286*(-1.*t3781*t6750 + t7962 + t7967 - 1.*t215*t5940*t984))*var2[14] + (0.135*t537 - 1.*t215*t537*t8489 + 0.07996*t1286*t984 + t1286*(t1286*t537*t5940 - 1.*t1286*t3781*t6968 - 1.*t3795*t6987 + t7987 + t7988 - 1.*t5977*t984))*var2[15];
  p_output1[79]=(t215*(t1327*t5940 + t1205*t5977 + t8018) + t740*(-1.*t1286*t5940 + t215*t6750 - 1.*t1286*t6780 + t8061) + t1286*(t215*t537*t5940 + t1327*t6750 + t8071 + t8072) - 1.*t1286*t537*t8532 + 0.07996*t215*t984)*var2[14] + (-0.07996*t1286*t537 + 0.135*t984 + t215*t8532*t984 + t1286*(t1286*t1327*t6968 + t1205*t6987 + t8110 + t8116 + t8565 + t1286*t5940*t984))*var2[15];
  p_output1[80]=(0.07996*t1286 + t4112*(-1.*t215*t537*t5940 - 1.*t1327*t6750 + t8199 + t8200) - 1.*t1286*t537*t8583 - 1.*t1286*t8596*t984 + t740*(t3781*t6750 + t8191 + t8192 + t215*t5940*t984))*var2[14] + (-1.*t215*t537*t8596 + t740*(-1.*t1286*t537*t5940 + t1286*t3781*t6968 + t3795*t6987 + t8212 + t8214 + t8606) + t215*t8583*t984 + t4112*(-1.*t1286*t1327*t6968 - 1.*t1205*t6987 + t8221 + t8222 + t8616 - 1.*t1286*t5940*t984))*var2[15];
  p_output1[81]=t8482;
  p_output1[82]=t8485;
  p_output1[83]=t8486;
  p_output1[84]=0.0358*t984*var2[15];
  p_output1[85]=-0.0358*t537*var2[15];
  p_output1[86]=((0. + t8606 + t8637)*t984 + t537*(0. + t8565 + t5911*t984) - 1.*t984*(t537*t6987 + t8606 + t8637 + t6968*t984) + t537*(-1.*t537*t6968 + t8616 - 1.*t5911*t984 + t6987*t984))*var2[15];
  p_output1[87]=t537*var2[15];
  p_output1[88]=t984*var2[15];
  p_output1[89]=0;
  p_output1[90]=0;
  p_output1[91]=0;
  p_output1[92]=0;
  p_output1[93]=0;
  p_output1[94]=0;
  p_output1[95]=0;
  p_output1[96]=0;
  p_output1[97]=0;
  p_output1[98]=0;
  p_output1[99]=0;
  p_output1[100]=0;
  p_output1[101]=0;
  p_output1[102]=0;
  p_output1[103]=0;
  p_output1[104]=0;
  p_output1[105]=0;
  p_output1[106]=0;
  p_output1[107]=0;
  p_output1[108]=0;
  p_output1[109]=0;
  p_output1[110]=0;
  p_output1[111]=0;
  p_output1[112]=0;
  p_output1[113]=0;
  p_output1[114]=0;
  p_output1[115]=0;
  p_output1[116]=0;
  p_output1[117]=0;
  p_output1[118]=0;
  p_output1[119]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 20 && ncols == 1) && 
      !(mrows == 1 && ncols == 20))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 20 && ncols == 1) && 
      !(mrows == 1 && ncols == 20))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 6, (mwSize) 20, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "dJb_RightThigh_mex.hh"

namespace SymExpression
{

void dJb_RightThigh_mex_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
