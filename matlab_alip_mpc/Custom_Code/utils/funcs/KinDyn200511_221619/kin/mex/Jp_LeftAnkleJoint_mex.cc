/*
 * Automatically Generated from Mathematica.
 * Mon 11 May 2020 22:19:57 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t824;
  double t388;
  double t505;
  double t630;
  double t841;
  double t857;
  double t1078;
  double t1129;
  double t1217;
  double t1624;
  double t1635;
  double t1687;
  double t660;
  double t851;
  double t854;
  double t2103;
  double t2417;
  double t2421;
  double t2463;
  double t1947;
  double t1972;
  double t2025;
  double t2579;
  double t3207;
  double t3334;
  double t3344;
  double t3384;
  double t2944;
  double t2948;
  double t3011;
  double t3720;
  double t3759;
  double t3921;
  double t4192;
  double t4328;
  double t4462;
  double t4496;
  double t4958;
  double t4968;
  double t4970;
  double t5381;
  double t5414;
  double t5452;
  double t5500;
  double t5678;
  double t5687;
  double t5731;
  double t5872;
  double t5876;
  double t5877;
  double t6019;
  double t6020;
  double t6071;
  double t6193;
  double t6284;
  double t6298;
  double t6366;
  double t6437;
  double t6440;
  double t6446;
  double t6613;
  double t6652;
  double t6661;
  double t1177;
  double t1245;
  double t1275;
  double t1762;
  double t1827;
  double t1904;
  double t6837;
  double t6966;
  double t6998;
  double t6731;
  double t6765;
  double t6775;
  double t2450;
  double t2475;
  double t2503;
  double t2609;
  double t2783;
  double t2806;
  double t7050;
  double t7051;
  double t7054;
  double t3353;
  double t3461;
  double t3519;
  double t4034;
  double t4080;
  double t4136;
  double t4492;
  double t4629;
  double t4747;
  double t7204;
  double t7211;
  double t7213;
  double t7219;
  double t7233;
  double t7243;
  double t5107;
  double t5325;
  double t5348;
  double t5730;
  double t5787;
  double t5857;
  double t7292;
  double t7304;
  double t7305;
  double t7322;
  double t7324;
  double t7331;
  double t5998;
  double t6004;
  double t6011;
  double t6304;
  double t6379;
  double t6418;
  double t7353;
  double t7366;
  double t7370;
  double t7374;
  double t7382;
  double t7384;
  double t6501;
  double t6504;
  double t6559;
  double t7391;
  double t7392;
  double t7402;
  double t7408;
  double t7409;
  double t7410;
  double t7470;
  double t7476;
  double t7478;
  double t7499;
  double t7501;
  double t7503;
  double t7507;
  double t7509;
  double t7510;
  double t7516;
  double t7527;
  double t7530;
  double t7540;
  double t7544;
  double t7547;
  double t7550;
  double t7552;
  double t7555;
  double t7559;
  double t7560;
  double t7564;
  double t7572;
  double t7576;
  double t7577;
  double t7579;
  double t7581;
  double t7588;
  double t7614;
  double t7615;
  double t7616;
  double t7642;
  double t7644;
  double t7646;
  double t7656;
  double t7657;
  double t7659;
  double t7671;
  double t7674;
  double t7676;
  double t7680;
  double t7683;
  double t7690;
  double t7692;
  double t7693;
  double t7695;
  double t7699;
  double t7701;
  double t7702;
  double t7704;
  double t7707;
  double t7708;
  double t7715;
  double t7717;
  double t7718;
  double t7743;
  double t7745;
  double t7752;
  double t7766;
  double t7767;
  double t7772;
  double t7774;
  double t7777;
  double t7778;
  double t7782;
  double t7786;
  double t7787;
  double t7794;
  double t7796;
  double t7797;
  double t7799;
  double t7800;
  double t7802;
  double t7804;
  double t7805;
  double t7806;
  double t7811;
  double t7817;
  double t7820;
  double t7822;
  double t7824;
  double t7826;
  double t7848;
  double t7849;
  double t7851;
  double t7857;
  double t7859;
  double t7865;
  double t7866;
  double t7869;
  double t7872;
  double t7874;
  double t7879;
  double t7883;
  double t7884;
  double t7886;
  double t7888;
  double t7889;
  double t7890;
  double t7895;
  double t7897;
  double t7898;
  double t7903;
  double t7904;
  double t7909;
  double t7913;
  double t7917;
  double t7918;
  double t7948;
  double t7951;
  double t7952;
  double t7957;
  double t7958;
  double t7959;
  double t7970;
  double t7971;
  double t7974;
  double t7978;
  double t7979;
  double t7981;
  double t7985;
  double t7987;
  double t7990;
  double t7991;
  double t7994;
  double t7997;
  double t7999;
  double t8001;
  double t8004;
  double t8005;
  double t8006;
  double t8016;
  double t8021;
  double t8024;
  double t8045;
  double t8050;
  double t8051;
  double t8066;
  double t8067;
  double t8068;
  double t8072;
  double t8075;
  double t8076;
  double t8080;
  double t8081;
  double t8083;
  double t8088;
  double t8089;
  double t8090;
  double t8093;
  double t8096;
  double t8097;
  double t8099;
  double t8100;
  double t8103;
  double t8106;
  double t8108;
  double t8109;
  double t8155;
  double t8156;
  double t8158;
  double t8159;
  double t8160;
  double t8162;
  double t8164;
  double t8165;
  double t8169;
  double t8170;
  double t8171;
  double t8174;
  double t8179;
  double t8180;
  double t8183;
  double t8185;
  double t8186;
  double t8188;
  double t8190;
  double t8192;
  double t8139;
  double t8140;
  double t8144;
  double t8147;
  double t8149;
  double t8210;
  double t8211;
  double t8212;
  double t8214;
  double t8215;
  double t8220;
  double t8222;
  double t8224;
  double t8226;
  double t8228;
  double t8230;
  double t8231;
  double t8232;
  double t8234;
  double t8235;
  double t8236;
  double t8240;
  double t8241;
  double t8242;
  double t8244;
  double t8249;
  double t8255;
  double t8257;
  double t8258;
  double t8259;
  double t8054;
  double t8058;
  double t8062;
  double t8070;
  double t8078;
  double t8087;
  double t8091;
  double t8098;
  double t8104;
  double t8112;
  double t8117;
  double t8125;
  double t8128;
  double t8133;
  double t8134;
  double t8135;
  double t8136;
  double t8137;
  double t7081;
  double t7143;
  double t7174;
  double t8299;
  double t8300;
  double t8301;
  double t8305;
  double t8309;
  double t8312;
  double t8317;
  double t8321;
  double t8322;
  double t8325;
  double t8326;
  double t8328;
  double t8281;
  double t8282;
  double t8283;
  double t8286;
  double t8287;
  double t8346;
  double t8348;
  double t8350;
  double t8352;
  double t8355;
  double t8356;
  double t8370;
  double t8371;
  double t8372;
  double t8374;
  double t8375;
  double t8376;
  double t8378;
  double t8379;
  double t8380;
  double t8382;
  double t8383;
  double t8386;
  double t8405;
  double t8406;
  double t8407;
  double t8409;
  double t8410;
  double t8411;
  double t8422;
  double t8424;
  double t8426;
  double t8428;
  double t8430;
  double t8431;
  double t8434;
  double t8436;
  double t8437;
  double t8439;
  double t8440;
  double t8441;
  double t8482;
  double t8483;
  double t8484;
  double t8490;
  double t8493;
  double t8496;
  double t8498;
  double t8500;
  double t8506;
  double t8507;
  double t8509;
  double t8512;
  double t8513;
  double t8514;
  double t8473;
  double t8474;
  double t8475;
  double t8479;
  double t8480;
  double t8527;
  double t8528;
  double t8529;
  double t8534;
  double t8535;
  double t8538;
  double t8540;
  double t8542;
  double t8543;
  double t8545;
  double t8546;
  double t8549;
  double t8552;
  double t8554;
  double t8557;
  double t8559;
  double t8560;
  double t8564;
  double t8566;
  double t8569;
  double t8570;
  double t8592;
  double t8593;
  double t8594;
  double t8598;
  double t8599;
  double t8601;
  double t8603;
  double t8604;
  double t8607;
  double t8610;
  double t8612;
  double t8614;
  double t8617;
  double t8621;
  double t8622;
  double t8625;
  double t8628;
  double t8630;
  double t8634;
  double t8635;
  double t8636;
  double t8670;
  double t8671;
  double t8675;
  double t8676;
  double t8677;
  double t8686;
  double t8687;
  double t8658;
  double t8659;
  double t8660;
  double t8664;
  double t8665;
  double t8702;
  double t8708;
  double t8711;
  double t8716;
  double t8717;
  double t8719;
  double t8721;
  double t8725;
  double t8727;
  double t8728;
  double t8730;
  double t8732;
  double t8733;
  double t8755;
  double t8756;
  double t8757;
  double t8760;
  double t8761;
  double t8764;
  double t8765;
  double t8768;
  double t8769;
  double t8771;
  double t8773;
  double t8775;
  double t8776;
  double t8800;
  double t8801;
  double t7429;
  double t8792;
  double t8793;
  double t8795;
  double t8796;
  double t8797;
  double t8818;
  double t8819;
  double t8820;
  double t8825;
  double t8826;
  double t8828;
  double t8830;
  double t8851;
  double t8852;
  double t8854;
  double t8856;
  double t8860;
  double t8862;
  double t8866;
  double t7416;
  double t7435;
  double t8810;
  double t8884;
  double t8886;
  double t8888;
  double t8891;
  double t8893;
  double t8909;
  double t8910;
  double t8911;
  double t8833;
  double t8840;
  double t8925;
  double t8926;
  double t8927;
  double t8871;
  double t8878;
  t824 = Cos(var1[3]);
  t388 = Cos(var1[5]);
  t505 = Sin(var1[3]);
  t630 = Sin(var1[4]);
  t841 = Sin(var1[5]);
  t857 = Cos(var1[6]);
  t1078 = -1.*t857;
  t1129 = 1. + t1078;
  t1217 = Sin(var1[6]);
  t1624 = -1.*t824*t388;
  t1635 = -1.*t505*t630*t841;
  t1687 = t1624 + t1635;
  t660 = -1.*t388*t505*t630;
  t851 = t824*t841;
  t854 = t660 + t851;
  t2103 = Cos(var1[7]);
  t2417 = -1.*t2103;
  t2421 = 1. + t2417;
  t2463 = Sin(var1[7]);
  t1947 = t857*t1687;
  t1972 = t854*t1217;
  t2025 = t1947 + t1972;
  t2579 = Cos(var1[4]);
  t3207 = Cos(var1[8]);
  t3334 = -1.*t3207;
  t3344 = 1. + t3334;
  t3384 = Sin(var1[8]);
  t2944 = -1.*t2579*t2103*t505;
  t2948 = t2025*t2463;
  t3011 = t2944 + t2948;
  t3720 = t857*t854;
  t3759 = -1.*t1687*t1217;
  t3921 = t3720 + t3759;
  t4192 = Cos(var1[9]);
  t4328 = -1.*t4192;
  t4462 = 1. + t4328;
  t4496 = Sin(var1[9]);
  t4958 = t3207*t3011;
  t4968 = t3921*t3384;
  t4970 = t4958 + t4968;
  t5381 = t3207*t3921;
  t5414 = -1.*t3011*t3384;
  t5452 = t5381 + t5414;
  t5500 = Cos(var1[10]);
  t5678 = -1.*t5500;
  t5687 = 1. + t5678;
  t5731 = Sin(var1[10]);
  t5872 = -1.*t4496*t4970;
  t5876 = t4192*t5452;
  t5877 = t5872 + t5876;
  t6019 = t4192*t4970;
  t6020 = t4496*t5452;
  t6071 = t6019 + t6020;
  t6193 = Cos(var1[11]);
  t6284 = -1.*t6193;
  t6298 = 1. + t6284;
  t6366 = Sin(var1[11]);
  t6437 = t5731*t5877;
  t6440 = t5500*t6071;
  t6446 = t6437 + t6440;
  t6613 = t5500*t5877;
  t6652 = -1.*t5731*t6071;
  t6661 = t6613 + t6652;
  t1177 = 0.07996*t1129;
  t1245 = -0.135*t1217;
  t1275 = 0. + t1177 + t1245;
  t1762 = 0.135*t1129;
  t1827 = 0.07996*t1217;
  t1904 = 0. + t1762 + t1827;
  t6837 = -1.*t388*t505;
  t6966 = t824*t630*t841;
  t6998 = t6837 + t6966;
  t6731 = t824*t388*t630;
  t6765 = t505*t841;
  t6775 = t6731 + t6765;
  t2450 = 0.135*t2421;
  t2475 = 0.08055*t2463;
  t2503 = 0. + t2450 + t2475;
  t2609 = -0.08055*t2421;
  t2783 = 0.135*t2463;
  t2806 = 0. + t2609 + t2783;
  t7050 = t857*t6998;
  t7051 = t6775*t1217;
  t7054 = t7050 + t7051;
  t3353 = -0.08055*t3344;
  t3461 = -0.01004*t3384;
  t3519 = 0. + t3353 + t3461;
  t4034 = -0.01004*t3344;
  t4080 = 0.08055*t3384;
  t4136 = 0. + t4034 + t4080;
  t4492 = -0.08055*t4462;
  t4629 = -0.13004*t4496;
  t4747 = 0. + t4492 + t4629;
  t7204 = t824*t2579*t2103;
  t7211 = t7054*t2463;
  t7213 = t7204 + t7211;
  t7219 = t857*t6775;
  t7233 = -1.*t6998*t1217;
  t7243 = t7219 + t7233;
  t5107 = -0.13004*t4462;
  t5325 = 0.08055*t4496;
  t5348 = 0. + t5107 + t5325;
  t5730 = -0.19074*t5687;
  t5787 = 0.03315*t5731;
  t5857 = 0. + t5730 + t5787;
  t7292 = t3207*t7213;
  t7304 = t7243*t3384;
  t7305 = t7292 + t7304;
  t7322 = t3207*t7243;
  t7324 = -1.*t7213*t3384;
  t7331 = t7322 + t7324;
  t5998 = -0.03315*t5687;
  t6004 = -0.19074*t5731;
  t6011 = 0. + t5998 + t6004;
  t6304 = -0.01315*t6298;
  t6379 = -0.62554*t6366;
  t6418 = 0. + t6304 + t6379;
  t7353 = -1.*t4496*t7305;
  t7366 = t4192*t7331;
  t7370 = t7353 + t7366;
  t7374 = t4192*t7305;
  t7382 = t4496*t7331;
  t7384 = t7374 + t7382;
  t6501 = -0.62554*t6298;
  t6504 = 0.01315*t6366;
  t6559 = 0. + t6501 + t6504;
  t7391 = t5731*t7370;
  t7392 = t5500*t7384;
  t7402 = t7391 + t7392;
  t7408 = t5500*t7370;
  t7409 = -1.*t5731*t7384;
  t7410 = t7408 + t7409;
  t7470 = t824*t2579*t857*t841;
  t7476 = t824*t2579*t388*t1217;
  t7478 = t7470 + t7476;
  t7499 = -1.*t824*t2103*t630;
  t7501 = t7478*t2463;
  t7503 = t7499 + t7501;
  t7507 = t824*t2579*t388*t857;
  t7509 = -1.*t824*t2579*t841*t1217;
  t7510 = t7507 + t7509;
  t7516 = t3207*t7503;
  t7527 = t7510*t3384;
  t7530 = t7516 + t7527;
  t7540 = t3207*t7510;
  t7544 = -1.*t7503*t3384;
  t7547 = t7540 + t7544;
  t7550 = -1.*t4496*t7530;
  t7552 = t4192*t7547;
  t7555 = t7550 + t7552;
  t7559 = t4192*t7530;
  t7560 = t4496*t7547;
  t7564 = t7559 + t7560;
  t7572 = t5731*t7555;
  t7576 = t5500*t7564;
  t7577 = t7572 + t7576;
  t7579 = t5500*t7555;
  t7581 = -1.*t5731*t7564;
  t7588 = t7579 + t7581;
  t7614 = t2579*t857*t505*t841;
  t7615 = t2579*t388*t505*t1217;
  t7616 = t7614 + t7615;
  t7642 = -1.*t2103*t505*t630;
  t7644 = t7616*t2463;
  t7646 = t7642 + t7644;
  t7656 = t2579*t388*t857*t505;
  t7657 = -1.*t2579*t505*t841*t1217;
  t7659 = t7656 + t7657;
  t7671 = t3207*t7646;
  t7674 = t7659*t3384;
  t7676 = t7671 + t7674;
  t7680 = t3207*t7659;
  t7683 = -1.*t7646*t3384;
  t7690 = t7680 + t7683;
  t7692 = -1.*t4496*t7676;
  t7693 = t4192*t7690;
  t7695 = t7692 + t7693;
  t7699 = t4192*t7676;
  t7701 = t4496*t7690;
  t7702 = t7699 + t7701;
  t7704 = t5731*t7695;
  t7707 = t5500*t7702;
  t7708 = t7704 + t7707;
  t7715 = t5500*t7695;
  t7717 = -1.*t5731*t7702;
  t7718 = t7715 + t7717;
  t7743 = -1.*t857*t630*t841;
  t7745 = -1.*t388*t630*t1217;
  t7752 = t7743 + t7745;
  t7766 = -1.*t2579*t2103;
  t7767 = t7752*t2463;
  t7772 = t7766 + t7767;
  t7774 = -1.*t388*t857*t630;
  t7777 = t630*t841*t1217;
  t7778 = t7774 + t7777;
  t7782 = t3207*t7772;
  t7786 = t7778*t3384;
  t7787 = t7782 + t7786;
  t7794 = t3207*t7778;
  t7796 = -1.*t7772*t3384;
  t7797 = t7794 + t7796;
  t7799 = -1.*t4496*t7787;
  t7800 = t4192*t7797;
  t7802 = t7799 + t7800;
  t7804 = t4192*t7787;
  t7805 = t4496*t7797;
  t7806 = t7804 + t7805;
  t7811 = t5731*t7802;
  t7817 = t5500*t7806;
  t7820 = t7811 + t7817;
  t7822 = t5500*t7802;
  t7824 = -1.*t5731*t7806;
  t7826 = t7822 + t7824;
  t7848 = t388*t505;
  t7849 = -1.*t824*t630*t841;
  t7851 = t7848 + t7849;
  t7857 = t7851*t1217;
  t7859 = t7219 + t7857;
  t7865 = t857*t7851;
  t7866 = -1.*t6775*t1217;
  t7869 = t7865 + t7866;
  t7872 = t3207*t7859*t2463;
  t7874 = t7869*t3384;
  t7879 = t7872 + t7874;
  t7883 = t3207*t7869;
  t7884 = -1.*t7859*t2463*t3384;
  t7886 = t7883 + t7884;
  t7888 = -1.*t4496*t7879;
  t7889 = t4192*t7886;
  t7890 = t7888 + t7889;
  t7895 = t4192*t7879;
  t7897 = t4496*t7886;
  t7898 = t7895 + t7897;
  t7903 = t5731*t7890;
  t7904 = t5500*t7898;
  t7909 = t7903 + t7904;
  t7913 = t5500*t7890;
  t7917 = -1.*t5731*t7898;
  t7918 = t7913 + t7917;
  t7948 = t388*t505*t630;
  t7951 = -1.*t824*t841;
  t7952 = t7948 + t7951;
  t7957 = t857*t7952;
  t7958 = t1687*t1217;
  t7959 = t7957 + t7958;
  t7970 = -1.*t7952*t1217;
  t7971 = t1947 + t7970;
  t7974 = t3207*t7959*t2463;
  t7978 = t7971*t3384;
  t7979 = t7974 + t7978;
  t7981 = t3207*t7971;
  t7985 = -1.*t7959*t2463*t3384;
  t7987 = t7981 + t7985;
  t7990 = -1.*t4496*t7979;
  t7991 = t4192*t7987;
  t7994 = t7990 + t7991;
  t7997 = t4192*t7979;
  t7999 = t4496*t7987;
  t8001 = t7997 + t7999;
  t8004 = t5731*t7994;
  t8005 = t5500*t8001;
  t8006 = t8004 + t8005;
  t8016 = t5500*t7994;
  t8021 = -1.*t5731*t8001;
  t8024 = t8016 + t8021;
  t8045 = t2579*t388*t857;
  t8050 = -1.*t2579*t841*t1217;
  t8051 = t8045 + t8050;
  t8066 = -1.*t2579*t857*t841;
  t8067 = -1.*t2579*t388*t1217;
  t8068 = t8066 + t8067;
  t8072 = t3207*t8051*t2463;
  t8075 = t8068*t3384;
  t8076 = t8072 + t8075;
  t8080 = t3207*t8068;
  t8081 = -1.*t8051*t2463*t3384;
  t8083 = t8080 + t8081;
  t8088 = -1.*t4496*t8076;
  t8089 = t4192*t8083;
  t8090 = t8088 + t8089;
  t8093 = t4192*t8076;
  t8096 = t4496*t8083;
  t8097 = t8093 + t8096;
  t8099 = t5731*t8090;
  t8100 = t5500*t8097;
  t8103 = t8099 + t8100;
  t8106 = t5500*t8090;
  t8108 = -1.*t5731*t8097;
  t8109 = t8106 + t8108;
  t8155 = -1.*t857*t6998;
  t8156 = t8155 + t7866;
  t8158 = t3207*t7243*t2463;
  t8159 = t8156*t3384;
  t8160 = t8158 + t8159;
  t8162 = t3207*t8156;
  t8164 = -1.*t7243*t2463*t3384;
  t8165 = t8162 + t8164;
  t8169 = -1.*t4496*t8160;
  t8170 = t4192*t8165;
  t8171 = t8169 + t8170;
  t8174 = t4192*t8160;
  t8179 = t4496*t8165;
  t8180 = t8174 + t8179;
  t8183 = t5731*t8171;
  t8185 = t5500*t8180;
  t8186 = t8183 + t8185;
  t8188 = t5500*t8171;
  t8190 = -1.*t5731*t8180;
  t8192 = t8188 + t8190;
  t8139 = -0.135*t857;
  t8140 = t8139 + t1827;
  t8144 = 0.07996*t857;
  t8147 = 0.135*t1217;
  t8149 = t8144 + t8147;
  t8210 = t824*t388;
  t8211 = t505*t630*t841;
  t8212 = t8210 + t8211;
  t8214 = -1.*t8212*t1217;
  t8215 = t7957 + t8214;
  t8220 = -1.*t857*t8212;
  t8222 = t8220 + t7970;
  t8224 = t3207*t8215*t2463;
  t8226 = t8222*t3384;
  t8228 = t8224 + t8226;
  t8230 = t3207*t8222;
  t8231 = -1.*t8215*t2463*t3384;
  t8232 = t8230 + t8231;
  t8234 = -1.*t4496*t8228;
  t8235 = t4192*t8232;
  t8236 = t8234 + t8235;
  t8240 = t4192*t8228;
  t8241 = t4496*t8232;
  t8242 = t8240 + t8241;
  t8244 = t5731*t8236;
  t8249 = t5500*t8242;
  t8255 = t8244 + t8249;
  t8257 = t5500*t8236;
  t8258 = -1.*t5731*t8242;
  t8259 = t8257 + t8258;
  t8054 = 0.1305*t2103*t8051;
  t8058 = t8051*t2503;
  t8062 = t8051*t2463*t3519;
  t8070 = t8068*t4136;
  t8078 = t4747*t8076;
  t8087 = t5348*t8083;
  t8091 = t5857*t8090;
  t8098 = t6011*t8097;
  t8104 = t6418*t8103;
  t8112 = t6559*t8109;
  t8117 = -1.*t6366*t8103;
  t8125 = t6193*t8109;
  t8128 = t8117 + t8125;
  t8133 = -0.62554*t8128;
  t8134 = t6193*t8103;
  t8135 = t6366*t8109;
  t8136 = t8134 + t8135;
  t8137 = -0.01315*t8136;
  t7081 = t2103*t7054;
  t7143 = -1.*t824*t2579*t2463;
  t7174 = t7081 + t7143;
  t8299 = -1.*t3207*t4496*t7174;
  t8300 = -1.*t4192*t7174*t3384;
  t8301 = t8299 + t8300;
  t8305 = t4192*t3207*t7174;
  t8309 = -1.*t4496*t7174*t3384;
  t8312 = t8305 + t8309;
  t8317 = t5731*t8301;
  t8321 = t5500*t8312;
  t8322 = t8317 + t8321;
  t8325 = t5500*t8301;
  t8326 = -1.*t5731*t8312;
  t8328 = t8325 + t8326;
  t8281 = 0.135*t2103;
  t8282 = -0.08055*t2463;
  t8283 = t8281 + t8282;
  t8286 = 0.08055*t2103;
  t8287 = t8286 + t2783;
  t8346 = t857*t8212;
  t8348 = t7952*t1217;
  t8350 = t8346 + t8348;
  t8352 = t2103*t8350;
  t8355 = -1.*t2579*t505*t2463;
  t8356 = t8352 + t8355;
  t8370 = -1.*t3207*t4496*t8356;
  t8371 = -1.*t4192*t8356*t3384;
  t8372 = t8370 + t8371;
  t8374 = t4192*t3207*t8356;
  t8375 = -1.*t4496*t8356*t3384;
  t8376 = t8374 + t8375;
  t8378 = t5731*t8372;
  t8379 = t5500*t8376;
  t8380 = t8378 + t8379;
  t8382 = t5500*t8372;
  t8383 = -1.*t5731*t8376;
  t8386 = t8382 + t8383;
  t8405 = t2579*t857*t841;
  t8406 = t2579*t388*t1217;
  t8407 = t8405 + t8406;
  t8409 = t2103*t8407;
  t8410 = t630*t2463;
  t8411 = t8409 + t8410;
  t8422 = -1.*t3207*t4496*t8411;
  t8424 = -1.*t4192*t8411*t3384;
  t8426 = t8422 + t8424;
  t8428 = t4192*t3207*t8411;
  t8430 = -1.*t4496*t8411*t3384;
  t8431 = t8428 + t8430;
  t8434 = t5731*t8426;
  t8436 = t5500*t8431;
  t8437 = t8434 + t8436;
  t8439 = t5500*t8426;
  t8440 = -1.*t5731*t8431;
  t8441 = t8439 + t8440;
  t8482 = -1.*t3207*t7213;
  t8483 = -1.*t7243*t3384;
  t8484 = t8482 + t8483;
  t8490 = t4496*t8484;
  t8493 = t8490 + t7366;
  t8496 = t4192*t8484;
  t8498 = -1.*t4496*t7331;
  t8500 = t8496 + t8498;
  t8506 = -1.*t5731*t8493;
  t8507 = t5500*t8500;
  t8509 = t8506 + t8507;
  t8512 = t5500*t8493;
  t8513 = t5731*t8500;
  t8514 = t8512 + t8513;
  t8473 = -0.01004*t3207;
  t8474 = -0.08055*t3384;
  t8475 = t8473 + t8474;
  t8479 = 0.08055*t3207;
  t8480 = t8479 + t3461;
  t8527 = t2579*t2103*t505;
  t8528 = t8350*t2463;
  t8529 = t8527 + t8528;
  t8534 = -1.*t3207*t8529;
  t8535 = -1.*t8215*t3384;
  t8538 = t8534 + t8535;
  t8540 = t3207*t8215;
  t8542 = -1.*t8529*t3384;
  t8543 = t8540 + t8542;
  t8545 = t4496*t8538;
  t8546 = t4192*t8543;
  t8549 = t8545 + t8546;
  t8552 = t4192*t8538;
  t8554 = -1.*t4496*t8543;
  t8557 = t8552 + t8554;
  t8559 = -1.*t5731*t8549;
  t8560 = t5500*t8557;
  t8564 = t8559 + t8560;
  t8566 = t5500*t8549;
  t8569 = t5731*t8557;
  t8570 = t8566 + t8569;
  t8592 = -1.*t2103*t630;
  t8593 = t8407*t2463;
  t8594 = t8592 + t8593;
  t8598 = -1.*t3207*t8594;
  t8599 = -1.*t8051*t3384;
  t8601 = t8598 + t8599;
  t8603 = t3207*t8051;
  t8604 = -1.*t8594*t3384;
  t8607 = t8603 + t8604;
  t8610 = t4496*t8601;
  t8612 = t4192*t8607;
  t8614 = t8610 + t8612;
  t8617 = t4192*t8601;
  t8621 = -1.*t4496*t8607;
  t8622 = t8617 + t8621;
  t8625 = -1.*t5731*t8614;
  t8628 = t5500*t8622;
  t8630 = t8625 + t8628;
  t8634 = t5500*t8614;
  t8635 = t5731*t8622;
  t8636 = t8634 + t8635;
  t8670 = -1.*t4192*t7305;
  t8671 = t8670 + t8498;
  t8675 = -1.*t5731*t7370;
  t8676 = t5500*t8671;
  t8677 = t8675 + t8676;
  t8686 = t5731*t8671;
  t8687 = t7408 + t8686;
  t8658 = -0.13004*t4192;
  t8659 = -0.08055*t4496;
  t8660 = t8658 + t8659;
  t8664 = 0.08055*t4192;
  t8665 = t8664 + t4629;
  t8702 = t3207*t8529;
  t8708 = t8215*t3384;
  t8711 = t8702 + t8708;
  t8716 = -1.*t4496*t8711;
  t8717 = t8716 + t8546;
  t8719 = -1.*t4192*t8711;
  t8721 = t8719 + t8554;
  t8725 = -1.*t5731*t8717;
  t8727 = t5500*t8721;
  t8728 = t8725 + t8727;
  t8730 = t5500*t8717;
  t8732 = t5731*t8721;
  t8733 = t8730 + t8732;
  t8755 = t3207*t8594;
  t8756 = t8051*t3384;
  t8757 = t8755 + t8756;
  t8760 = -1.*t4496*t8757;
  t8761 = t8760 + t8612;
  t8764 = -1.*t4192*t8757;
  t8765 = t8764 + t8621;
  t8768 = -1.*t5731*t8761;
  t8769 = t5500*t8765;
  t8771 = t8768 + t8769;
  t8773 = t5500*t8761;
  t8775 = t5731*t8765;
  t8776 = t8773 + t8775;
  t8800 = -1.*t5500*t7384;
  t8801 = t8675 + t8800;
  t7429 = t6193*t7410;
  t8792 = 0.03315*t5500;
  t8793 = t8792 + t6004;
  t8795 = -0.19074*t5500;
  t8796 = -0.03315*t5731;
  t8797 = t8795 + t8796;
  t8818 = t4192*t8711;
  t8819 = t4496*t8543;
  t8820 = t8818 + t8819;
  t8825 = -1.*t5500*t8820;
  t8826 = t8725 + t8825;
  t8828 = -1.*t5731*t8820;
  t8830 = t8730 + t8828;
  t8851 = t4192*t8757;
  t8852 = t4496*t8607;
  t8854 = t8851 + t8852;
  t8856 = -1.*t5500*t8854;
  t8860 = t8768 + t8856;
  t8862 = -1.*t5731*t8854;
  t8866 = t8773 + t8862;
  t7416 = -1.*t6366*t7402;
  t7435 = t7416 + t7429;
  t8810 = -1.*t6366*t7410;
  t8884 = -0.62554*t6193;
  t8886 = -0.01315*t6366;
  t8888 = t8884 + t8886;
  t8891 = 0.01315*t6193;
  t8893 = t8891 + t6379;
  t8909 = t5731*t8717;
  t8910 = t5500*t8820;
  t8911 = t8909 + t8910;
  t8833 = t6193*t8830;
  t8840 = -1.*t6366*t8830;
  t8925 = t5731*t8761;
  t8926 = t5500*t8854;
  t8927 = t8925 + t8926;
  t8871 = t6193*t8866;
  t8878 = -1.*t6366*t8866;
  p_output1[0]=1.;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=0;
  p_output1[4]=1.;
  p_output1[5]=0;
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=1.;
  p_output1[9]=t1687*t1904 + t2025*t2503 + t3011*t3519 + t3921*t4136 + t4747*t4970 - 1.*t2579*t2806*t505 + 0.1305*(t2025*t2103 + t2463*t2579*t505) + t5348*t5452 + t5857*t5877 + t6011*t6071 + t6418*t6446 + t6559*t6661 - 0.62554*(-1.*t6366*t6446 + t6193*t6661) - 0.01315*(t6193*t6446 + t6366*t6661) + t1275*t854;
  p_output1[10]=t1275*t6775 + t1904*t6998 + t2503*t7054 + 0.1305*t7174 + t3519*t7213 + t4136*t7243 + t4747*t7305 + t5348*t7331 + t5857*t7370 + t6011*t7384 + t6418*t7402 + t6559*t7410 - 0.01315*(t6193*t7402 + t6366*t7410) - 0.62554*t7435 + t2579*t2806*t824;
  p_output1[11]=0;
  p_output1[12]=t2503*t7478 + t3519*t7503 + t4136*t7510 + t4747*t7530 + t5348*t7547 + t5857*t7555 + t6011*t7564 + t6418*t7577 + t6559*t7588 - 0.62554*(-1.*t6366*t7577 + t6193*t7588) - 0.01315*(t6193*t7577 + t6366*t7588) + t1275*t2579*t388*t824 - 1.*t2806*t630*t824 + 0.1305*(t2103*t7478 + t2463*t630*t824) + t1904*t2579*t824*t841;
  p_output1[13]=t1275*t2579*t388*t505 - 1.*t2806*t505*t630 + t2503*t7616 + 0.1305*(t2463*t505*t630 + t2103*t7616) + t3519*t7646 + t4136*t7659 + t4747*t7676 + t5348*t7690 + t5857*t7695 + t6011*t7702 + t6418*t7708 + t6559*t7718 - 0.62554*(-1.*t6366*t7708 + t6193*t7718) - 0.01315*(t6193*t7708 + t6366*t7718) + t1904*t2579*t505*t841;
  p_output1[14]=-1.*t2579*t2806 - 1.*t1275*t388*t630 + t2503*t7752 + 0.1305*(t2463*t2579 + t2103*t7752) + t3519*t7772 + t4136*t7778 + t4747*t7787 + t5348*t7797 + t5857*t7802 + t6011*t7806 + t6418*t7820 + t6559*t7826 - 0.62554*(-1.*t6366*t7820 + t6193*t7826) - 0.01315*(t6193*t7820 + t6366*t7826) - 1.*t1904*t630*t841;
  p_output1[15]=t1904*t6775 + t1275*t7851 + 0.1305*t2103*t7859 + t2503*t7859 + t2463*t3519*t7859 + t4136*t7869 + t4747*t7879 + t5348*t7886 + t5857*t7890 + t6011*t7898 + t6418*t7909 + t6559*t7918 - 0.62554*(-1.*t6366*t7909 + t6193*t7918) - 0.01315*(t6193*t7909 + t6366*t7918);
  p_output1[16]=t1275*t1687 + t1904*t7952 + 0.1305*t2103*t7959 + t2503*t7959 + t2463*t3519*t7959 + t4136*t7971 + t4747*t7979 + t5348*t7987 + t5857*t7994 + t6011*t8001 + t6418*t8006 + t6559*t8024 - 0.62554*(-1.*t6366*t8006 + t6193*t8024) - 0.01315*(t6193*t8006 + t6366*t8024);
  p_output1[17]=t1904*t2579*t388 + t8054 + t8058 + t8062 + t8070 + t8078 + t8087 + t8091 + t8098 + t8104 + t8112 + t8133 + t8137 - 1.*t1275*t2579*t841;
  p_output1[18]=0.1305*t2103*t7243 + t2503*t7243 + t2463*t3519*t7243 + t6775*t8140 + t6998*t8149 + t4136*t8156 + t4747*t8160 + t5348*t8165 + t5857*t8171 + t6011*t8180 + t6418*t8186 + t6559*t8192 - 0.62554*(-1.*t6366*t8186 + t6193*t8192) - 0.01315*(t6193*t8186 + t6366*t8192);
  p_output1[19]=t7952*t8140 + t8149*t8212 + 0.1305*t2103*t8215 + t2503*t8215 + t2463*t3519*t8215 + t4136*t8222 + t4747*t8228 + t5348*t8232 + t5857*t8236 + t6011*t8242 + t6418*t8255 + t6559*t8259 - 0.62554*(-1.*t6366*t8255 + t6193*t8259) - 0.01315*(t6193*t8255 + t6366*t8259);
  p_output1[20]=t8054 + t8058 + t8062 + t8070 + t8078 + t8087 + t8091 + t8098 + t8104 + t8112 + t8133 + t8137 + t2579*t388*t8140 + t2579*t8149*t841;
  p_output1[21]=t3519*t7174 + t3207*t4747*t7174 - 1.*t3384*t5348*t7174 + 0.1305*(-1.*t2463*t7054 - 1.*t2103*t2579*t824) + t2579*t824*t8283 + t7054*t8287 + t5857*t8301 + t6011*t8312 + t6418*t8322 + t6559*t8328 - 0.62554*(-1.*t6366*t8322 + t6193*t8328) - 0.01315*(t6193*t8322 + t6366*t8328);
  p_output1[22]=t2579*t505*t8283 + t8287*t8350 + 0.1305*(t2944 - 1.*t2463*t8350) + t3519*t8356 + t3207*t4747*t8356 - 1.*t3384*t5348*t8356 + t5857*t8372 + t6011*t8376 + t6418*t8380 + t6559*t8386 - 0.62554*(-1.*t6366*t8380 + t6193*t8386) - 0.01315*(t6193*t8380 + t6366*t8386);
  p_output1[23]=-1.*t630*t8283 + t8287*t8407 + 0.1305*(t2103*t630 - 1.*t2463*t8407) + t3519*t8411 + t3207*t4747*t8411 - 1.*t3384*t5348*t8411 + t5857*t8426 + t6011*t8431 + t6418*t8437 + t6559*t8441 - 0.62554*(-1.*t6366*t8437 + t6193*t8441) - 0.01315*(t6193*t8437 + t6366*t8441);
  p_output1[24]=t4747*t7331 + t7213*t8475 + t7243*t8480 + t5348*t8484 + t6011*t8493 + t5857*t8500 + t6559*t8509 + t6418*t8514 - 0.01315*(t6366*t8509 + t6193*t8514) - 0.62554*(t6193*t8509 - 1.*t6366*t8514);
  p_output1[25]=t8215*t8480 + t8475*t8529 + t5348*t8538 + t4747*t8543 + t6011*t8549 + t5857*t8557 + t6559*t8564 + t6418*t8570 - 0.01315*(t6366*t8564 + t6193*t8570) - 0.62554*(t6193*t8564 - 1.*t6366*t8570);
  p_output1[26]=t8051*t8480 + t8475*t8594 + t5348*t8601 + t4747*t8607 + t6011*t8614 + t5857*t8622 + t6559*t8630 + t6418*t8636 - 0.01315*(t6366*t8630 + t6193*t8636) - 0.62554*(t6193*t8630 - 1.*t6366*t8636);
  p_output1[27]=t6011*t7370 + t7305*t8660 + t7331*t8665 + t5857*t8671 + t6559*t8677 + t6418*t8687 - 0.01315*(t6366*t8677 + t6193*t8687) - 0.62554*(t6193*t8677 - 1.*t6366*t8687);
  p_output1[28]=t8543*t8665 + t8660*t8711 + t6011*t8717 + t5857*t8721 + t6559*t8728 + t6418*t8733 - 0.01315*(t6366*t8728 + t6193*t8733) - 0.62554*(t6193*t8728 - 1.*t6366*t8733);
  p_output1[29]=t8607*t8665 + t8660*t8757 + t6011*t8761 + t5857*t8765 + t6559*t8771 + t6418*t8776 - 0.01315*(t6366*t8771 + t6193*t8776) - 0.62554*(t6193*t8771 - 1.*t6366*t8776);
  p_output1[30]=t6418*t7410 + t7370*t8793 + t7384*t8797 + t6559*t8801 - 0.01315*(t7429 + t6366*t8801) - 0.62554*(t6193*t8801 + t8810);
  p_output1[31]=t8717*t8793 + t8797*t8820 + t6559*t8826 + t6418*t8830 - 0.01315*(t6366*t8826 + t8833) - 0.62554*(t6193*t8826 + t8840);
  p_output1[32]=t8761*t8793 + t8797*t8854 + t6559*t8860 + t6418*t8866 - 0.01315*(t6366*t8860 + t8871) - 0.62554*(t6193*t8860 + t8878);
  p_output1[33]=-0.01315*t7435 - 0.62554*(-1.*t6193*t7402 + t8810) + t7402*t8888 + t7410*t8893;
  p_output1[34]=t8830*t8893 + t8888*t8911 - 0.62554*(t8840 - 1.*t6193*t8911) - 0.01315*(t8833 - 1.*t6366*t8911);
  p_output1[35]=t8866*t8893 + t8888*t8927 - 0.62554*(t8878 - 1.*t6193*t8927) - 0.01315*(t8871 - 1.*t6366*t8927);
  p_output1[36]=0;
  p_output1[37]=0;
  p_output1[38]=0;
  p_output1[39]=0;
  p_output1[40]=0;
  p_output1[41]=0;
  p_output1[42]=0;
  p_output1[43]=0;
  p_output1[44]=0;
  p_output1[45]=0;
  p_output1[46]=0;
  p_output1[47]=0;
  p_output1[48]=0;
  p_output1[49]=0;
  p_output1[50]=0;
  p_output1[51]=0;
  p_output1[52]=0;
  p_output1[53]=0;
  p_output1[54]=0;
  p_output1[55]=0;
  p_output1[56]=0;
  p_output1[57]=0;
  p_output1[58]=0;
  p_output1[59]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "One input(s) required (var1).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 20 && ncols == 1) && 
      !(mrows == 1 && ncols == 20))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 3, (mwSize) 20, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1);


}

#else // MATLAB_MEX_FILE

#include "Jp_LeftAnkleJoint_mex.hh"

namespace SymExpression
{

void Jp_LeftAnkleJoint_mex_raw(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}

}

#endif // MATLAB_MEX_FILE
