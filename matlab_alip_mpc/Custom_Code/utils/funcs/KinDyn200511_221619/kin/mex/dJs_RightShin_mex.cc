/*
 * Automatically Generated from Mathematica.
 * Mon 11 May 2020 22:29:34 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t85;
  double t162;
  double t711;
  double t776;
  double t725;
  double t815;
  double t816;
  double t841;
  double t1494;
  double t1514;
  double t905;
  double t924;
  double t939;
  double t977;
  double t1540;
  double t1543;
  double t1575;
  double t1792;
  double t1794;
  double t1798;
  double t1075;
  double t1097;
  double t1201;
  double t1207;
  double t1257;
  double t1258;
  double t1287;
  double t1295;
  double t1402;
  double t1410;
  double t1412;
  double t1449;
  double t1456;
  double t1486;
  double t1491;
  double t2481;
  double t2135;
  double t2154;
  double t2197;
  double t2514;
  double t2496;
  double t2515;
  double t2532;
  double t2626;
  double t2629;
  double t2004;
  double t2023;
  double t2035;
  double t2646;
  double t2667;
  double t2668;
  double t2672;
  double t2690;
  double t2695;
  double t1698;
  double t1705;
  double t1778;
  double t2830;
  double t2838;
  double t2842;
  double t2785;
  double t2801;
  double t2810;
  double t2820;
  double t2558;
  double t2565;
  double t2570;
  double t2919;
  double t2920;
  double t2928;
  double t2929;
  double t2933;
  double t1624;
  double t1626;
  double t1637;
  double t2902;
  double t2857;
  double t2961;
  double t2967;
  double t2978;
  double t2980;
  double t3002;
  double t3010;
  double t3024;
  double t3055;
  double t3064;
  double t3065;
  double t3272;
  double t3274;
  double t3279;
  double t3367;
  double t3372;
  double t3380;
  double t3427;
  double t3432;
  double t3433;
  double t3434;
  double t3559;
  double t3586;
  double t3242;
  double t3252;
  double t3258;
  double t2671;
  double t2720;
  double t3382;
  double t3384;
  double t3393;
  double t3780;
  double t3134;
  double t3565;
  double t3566;
  double t3804;
  double t3805;
  double t3806;
  double t3820;
  double t3855;
  double t2910;
  double t2911;
  double t3633;
  double t3636;
  double t3523;
  double t3527;
  double t3536;
  double t4115;
  double t4122;
  double t4184;
  double t4187;
  double t4127;
  double t4129;
  double t4131;
  double t3482;
  double t3485;
  double t3486;
  double t4188;
  double t4191;
  double t4197;
  double t4209;
  double t4214;
  double t4215;
  double t2849;
  double t2871;
  double t3121;
  double t3122;
  double t4204;
  double t4220;
  double t4221;
  double t3605;
  double t3608;
  double t4249;
  double t4257;
  double t4259;
  double t3150;
  double t3151;
  double t3168;
  double t3170;
  double t4140;
  double t4149;
  double t4155;
  double t4163;
  double t4164;
  double t4168;
  double t3196;
  double t3197;
  double t3212;
  double t3403;
  double t3405;
  double t3410;
  double t3219;
  double t3226;
  double t3291;
  double t3297;
  double t3761;
  double t3765;
  double t3771;
  double t4386;
  double t4394;
  double t4395;
  double t4228;
  double t4235;
  double t4236;
  double t4485;
  double t4486;
  double t4494;
  double t4496;
  double t4500;
  double t4311;
  double t3039;
  double t3048;
  double t4378;
  double t4400;
  double t2921;
  double t2937;
  double t3568;
  double t3571;
  double t3587;
  double t3589;
  double t4652;
  double t4658;
  double t4659;
  double t3360;
  double t3362;
  double t3437;
  double t3459;
  double t4460;
  double t4462;
  double t4463;
  double t4707;
  double t4711;
  double t4716;
  double t3676;
  double t3677;
  double t4697;
  double t4719;
  double t3652;
  double t3663;
  double t2897;
  double t3504;
  double t3506;
  double t4526;
  double t4534;
  double t4535;
  double t4921;
  double t3783;
  double t3789;
  double t4435;
  double t4436;
  double t4437;
  double t4265;
  double t4271;
  double t3823;
  double t3824;
  double t4742;
  double t4750;
  double t4755;
  double t5100;
  double t3863;
  double t3869;
  double t3889;
  double t3891;
  double t5112;
  double t5119;
  double t5127;
  double t4004;
  double t4015;
  double t4922;
  double t4923;
  double t4984;
  double t4992;
  double t4999;
  double t4558;
  double t4559;
  double t5141;
  double t5148;
  double t3951;
  double t3962;
  double t3916;
  double t3920;
  double t4908;
  double t4909;
  double t4917;
  double t4637;
  double t4644;
  double t4646;
  double t4119;
  double t4134;
  double t4136;
  double t4138;
  double t4180;
  double t5434;
  double t5435;
  double t5437;
  double t5446;
  double t5415;
  double t5419;
  double t5420;
  double t5439;
  double t5457;
  double t5461;
  double t5464;
  double t5465;
  double t5468;
  double t4313;
  double t4317;
  double t5518;
  double t5523;
  double t5529;
  double t5530;
  double t5531;
  double t5394;
  double t5399;
  double t5400;
  double t5462;
  double t5472;
  double t5474;
  double t4374;
  double t5608;
  double t5613;
  double t4611;
  double t5623;
  double t5625;
  double t5628;
  double t5629;
  double t4495;
  double t4502;
  double t4510;
  double t4511;
  double t4419;
  double t4430;
  double t4431;
  double t4448;
  double t4449;
  double t4802;
  double t4803;
  double t4806;
  double t4454;
  double t4456;
  double t5060;
  double t5069;
  double t5079;
  double t4631;
  double t4650;
  double t4680;
  double t5777;
  double t5778;
  double t5781;
  double t5797;
  double t5799;
  double t4890;
  double t5841;
  double t5843;
  double t5844;
  double t5847;
  double t4946;
  double t4947;
  double t4960;
  double t4966;
  double t4789;
  double t4790;
  double t4812;
  double t4842;
  double t5564;
  double t5567;
  double t5568;
  double t4926;
  double t5023;
  double t5029;
  double t5037;
  double t5048;
  double t5090;
  double t5096;
  double t5104;
  double t5106;
  double t5480;
  double t5482;
  double t5158;
  double t5186;
  double t6203;
  double t6207;
  double t6216;
  double t6217;
  double t6227;
  double t6234;
  double t6240;
  double t6242;
  double t6243;
  double t6244;
  double t6245;
  double t6247;
  double t5315;
  double t5331;
  double t5248;
  double t5251;
  double t5262;
  double t5267;
  double t5237;
  double t5344;
  double t5345;
  double t5347;
  double t5351;
  double t5352;
  double t5353;
  double t5363;
  double t5366;
  double t5367;
  double t5370;
  double t5371;
  double t5373;
  double t5379;
  double t5382;
  double t5384;
  double t5385;
  double t5387;
  double t5390;
  double t5401;
  double t5404;
  double t5411;
  double t5414;
  double t5422;
  double t5423;
  double t5425;
  double t5431;
  double t5432;
  double t5433;
  double t6445;
  double t6446;
  double t6449;
  double t6478;
  double t6078;
  double t6081;
  double t6086;
  double t6468;
  double t6479;
  double t6480;
  double t5981;
  double t5982;
  double t5983;
  double t6504;
  double t6515;
  double t6521;
  double t5486;
  double t5487;
  double t5488;
  double t5490;
  double t5491;
  double t5494;
  double t5524;
  double t5532;
  double t6067;
  double t6069;
  double t6073;
  double t5537;
  double t5542;
  double t5545;
  double t5573;
  double t5574;
  double t6046;
  double t6050;
  double t6053;
  double t6059;
  double t6060;
  double t6062;
  double t6481;
  double t6485;
  double t6486;
  double t6598;
  double t6620;
  double t6645;
  double t6653;
  double t6656;
  double t6663;
  double t6664;
  double t6502;
  double t6523;
  double t6525;
  double t5586;
  double t5590;
  double t5591;
  double t5594;
  double t5595;
  double t5598;
  double t5600;
  double t5602;
  double t5811;
  double t5813;
  double t5818;
  double t5823;
  double t5825;
  double t5826;
  double t6738;
  double t6740;
  double t6741;
  double t6768;
  double t6780;
  double t5638;
  double t5641;
  double t5645;
  double t5658;
  double t5659;
  double t5663;
  double t5680;
  double t5683;
  double t5877;
  double t5881;
  double t5887;
  double t5896;
  double t5897;
  double t5898;
  double t6843;
  double t6844;
  double t6845;
  double t6851;
  double t5699;
  double t5705;
  double t5715;
  double t5718;
  double t5725;
  double t5729;
  double t5733;
  double t5741;
  double t5744;
  double t5745;
  double t5944;
  double t5946;
  double t5947;
  double t5950;
  double t5951;
  double t5952;
  double t5749;
  double t5754;
  double t6145;
  double t6152;
  double t6161;
  double t6164;
  double t6166;
  double t6171;
  double t5783;
  double t5785;
  double t7111;
  double t7112;
  double t7136;
  double t7138;
  double t7147;
  double t5861;
  double t5872;
  double t7197;
  double t7198;
  double t7201;
  double t7202;
  double t5902;
  double t5918;
  double t5938;
  double t5939;
  double t5956;
  double t5957;
  double t6710;
  double t6713;
  double t5991;
  double t5992;
  double t6025;
  double t6028;
  double t6036;
  double t6042;
  double t7470;
  double t7478;
  double t6096;
  double t6108;
  double t6118;
  double t6120;
  double t7542;
  double t7551;
  double t6195;
  double t6197;
  double t6180;
  double t6182;
  double t6534;
  double t6537;
  double t6264;
  double t6274;
  double t6254;
  double t6257;
  double t7692;
  double t7697;
  double t7704;
  double t7708;
  double t7724;
  double t7727;
  double t7729;
  double t7731;
  double t7735;
  double t7736;
  double t7737;
  double t7738;
  double t6304;
  double t6314;
  double t6357;
  double t6358;
  double t6377;
  double t6385;
  double t6410;
  double t6420;
  t85 = Cos(var1[3]);
  t162 = Sin(var1[3]);
  t711 = Cos(var1[4]);
  t776 = Sin(var1[4]);
  t725 = -1.*var2[2]*t711*t162;
  t815 = -1.*var2[1]*t776;
  t816 = -1.*var1[1]*t711;
  t841 = var1[2]*t162*t776;
  t1494 = Cos(var1[5]);
  t1514 = Sin(var1[5]);
  t905 = var2[2]*t85*t711;
  t924 = var2[0]*t776;
  t939 = var1[0]*t711;
  t977 = -1.*var1[2]*t85*t776;
  t1540 = t85*t1494*t776;
  t1543 = t162*t1514;
  t1575 = t1540 + t1543;
  t1792 = -1.*t85*t1494;
  t1794 = -1.*t162*t776*t1514;
  t1798 = t1792 + t1794;
  t1075 = -1.*var2[1]*t85*t711;
  t1097 = var2[0]*t711*t162;
  t1201 = var1[0]*t85*t711;
  t1207 = var1[1]*t711*t162;
  t1257 = t1201 + t1207;
  t1258 = var2[3]*t1257;
  t1287 = var1[1]*t85*t776;
  t1295 = -1.*var1[0]*t162*t776;
  t1402 = -1.*var2[3]*t711*t162;
  t1410 = -1.*var2[4]*t85*t776;
  t1412 = t1402 + t1410;
  t1449 = var2[3]*t85*t711;
  t1456 = -1.*var2[4]*t162*t776;
  t1486 = t1449 + t1456;
  t1491 = -1.*var2[4]*t711;
  t2481 = Cos(var1[13]);
  t2135 = t1494*t162*t776;
  t2154 = -1.*t85*t1514;
  t2197 = t2135 + t2154;
  t2514 = Sin(var1[13]);
  t2496 = t2481*t711*t1494;
  t2515 = -1.*t711*t2514*t1514;
  t2532 = t2496 + t2515;
  t2626 = -1.*t2481;
  t2629 = 1. + t2626;
  t2004 = -1.*t1494*t162;
  t2023 = t85*t776*t1514;
  t2035 = t2004 + t2023;
  t2646 = 0.07996*t2629;
  t2667 = 0.135*t2514;
  t2668 = 0. + t2646 + t2667;
  t2672 = -0.135*t2629;
  t2690 = 0.07996*t2514;
  t2695 = 0. + t2672 + t2690;
  t1698 = -1.*t1494*t162*t776;
  t1705 = t85*t1514;
  t1778 = t1698 + t1705;
  t2830 = t2481*t1575;
  t2838 = -1.*t2514*t2035;
  t2842 = t2830 + t2838;
  t2785 = -1.*var1[2];
  t2801 = -1.*t711*t1494*t2668;
  t2810 = -1.*t711*t2695*t1514;
  t2820 = 0. + t2785 + t2801 + t2810;
  t2558 = t85*t1494;
  t2565 = t162*t776*t1514;
  t2570 = t2558 + t2565;
  t2919 = 0.135*t2481;
  t2920 = t2919 + t2690;
  t2928 = 0.07996*t2481;
  t2929 = -0.135*t2514;
  t2933 = t2928 + t2929;
  t1624 = t1494*t162;
  t1626 = -1.*t85*t776*t1514;
  t1637 = t1624 + t1626;
  t2902 = -1.*t2514*t2197;
  t2857 = t2481*t1798;
  t2961 = -1.*t711*t1494*t2514;
  t2967 = -1.*t2481*t711*t1514;
  t2978 = t2961 + t2967;
  t2980 = t2668*t2197;
  t3002 = t2695*t2570;
  t3010 = 0. + var1[1] + t2980 + t3002;
  t3024 = t2978*t3010;
  t3055 = t2481*t2197;
  t3064 = -1.*t2514*t2570;
  t3065 = t3055 + t3064;
  t3272 = -1.*t2481*t1494*t776;
  t3274 = t2514*t776*t1514;
  t3279 = t3272 + t3274;
  t3367 = t711*t1494*t2668;
  t3372 = t711*t2695*t1514;
  t3380 = 0. + var1[2] + t3367 + t3372;
  t3427 = -1.*var1[0];
  t3432 = -1.*t2668*t1575;
  t3433 = -1.*t2695*t2035;
  t3434 = 0. + t3427 + t3432 + t3433;
  t3559 = -1.*t2514*t1575;
  t3586 = t2978*t3434;
  t3242 = t2481*t711*t1494*t162;
  t3252 = -1.*t711*t2514*t162*t1514;
  t3258 = t3242 + t3252;
  t2671 = t2668*t1575;
  t2720 = t2695*t2035;
  t3382 = t2481*t85*t711*t1494;
  t3384 = -1.*t85*t711*t2514*t1514;
  t3393 = t3382 + t3384;
  t3780 = 0. + var1[0] + t2671 + t2720;
  t3134 = t2902 + t2857;
  t3565 = t2481*t1637;
  t3566 = t3559 + t3565;
  t3804 = -1.*var1[1];
  t3805 = -1.*t2668*t2197;
  t3806 = -1.*t2695*t2570;
  t3820 = 0. + t3804 + t3805 + t3806;
  t3855 = 0.08055*t2532;
  t2910 = -1.*t2481*t2570;
  t2911 = t2902 + t2910;
  t3633 = -1.*t2481*t2035;
  t3636 = t3559 + t3633;
  t3523 = t2481*t1778;
  t3527 = -1.*t2514*t1798;
  t3536 = t3523 + t3527;
  t4115 = Sin(var1[14]);
  t4122 = Cos(var1[14]);
  t4184 = -1.*t4122;
  t4187 = 1. + t4184;
  t4127 = t711*t1494*t2514;
  t4129 = t2481*t711*t1514;
  t4131 = t4127 + t4129;
  t3482 = t2514*t1575;
  t3485 = t2481*t2035;
  t3486 = t3482 + t3485;
  t4188 = -0.08055*t4187;
  t4191 = -0.135*t4115;
  t4197 = 0. + t4188 + t4191;
  t4209 = -0.135*t4187;
  t4214 = 0.08055*t4115;
  t4215 = 0. + t4209 + t4214;
  t2849 = t2514*t1778;
  t2871 = t2849 + t2857;
  t3121 = t2514*t1637;
  t3122 = t2830 + t3121;
  t4204 = t4197*t776;
  t4220 = -1.*t4215*t4131;
  t4221 = 0. + t2785 + t2801 + t4204 + t2810 + t4220;
  t3605 = t2514*t1798;
  t3608 = t3055 + t3605;
  t4249 = t4115*t776;
  t4257 = t4122*t4131;
  t4259 = t4249 + t4257;
  t3150 = t2695*t2197;
  t3151 = t2668*t1798;
  t3168 = -1.*t711*t1494*t2695;
  t3170 = t711*t2668*t1514;
  t4140 = -1.*t711*t4115*t162;
  t4149 = t2514*t2197;
  t4155 = t2481*t2570;
  t4163 = t4149 + t4155;
  t4164 = t4122*t4163;
  t4168 = t4140 + t4164;
  t3196 = t85*t711*t1494*t2514;
  t3197 = t2481*t85*t711*t1514;
  t3212 = t3196 + t3197;
  t3403 = t711*t1494*t2514*t162;
  t3405 = t2481*t711*t162*t1514;
  t3410 = t3403 + t3405;
  t3219 = t711*t1494*t2668*t162;
  t3226 = t711*t2695*t162*t1514;
  t3291 = t1494*t2668*t776;
  t3297 = t2695*t776*t1514;
  t3761 = -1.*t1494*t2514*t776;
  t3765 = -1.*t2481*t776*t1514;
  t3771 = t3761 + t3765;
  t4386 = t711*t4197*t162;
  t4394 = t4215*t4163;
  t4395 = 0. + var1[1] + t4386 + t2980 + t3002 + t4394;
  t4228 = -1.*t85*t711*t4115;
  t4235 = t4122*t3486;
  t4236 = t4228 + t4235;
  t4485 = -0.135*t4122;
  t4486 = -0.08055*t4115;
  t4494 = t4485 + t4486;
  t4496 = 0.08055*t4122;
  t4500 = t4496 + t4191;
  t4311 = -1.*t4122*t711*t162;
  t3039 = -1.*t711*t1494*t2920;
  t3048 = -1.*t711*t2933*t1514;
  t4378 = -1.*t4215*t2532;
  t4400 = -1.*t4122*t2532*t4395;
  t2921 = t2920*t2197;
  t2937 = t2933*t2570;
  t3568 = -1.*t2695*t1575;
  t3571 = -1.*t2668*t1637;
  t3587 = t711*t1494*t2695;
  t3589 = -1.*t711*t2668*t1514;
  t4652 = -1.*t4197*t776;
  t4658 = t4215*t4131;
  t4659 = 0. + var1[2] + t3367 + t4652 + t3372 + t4658;
  t3360 = -1.*t85*t711*t1494*t2668;
  t3362 = -1.*t85*t711*t2695*t1514;
  t3437 = -1.*t1494*t2668*t776;
  t3459 = -1.*t2695*t776*t1514;
  t4460 = t711*t4115;
  t4462 = t4122*t3771;
  t4463 = t4460 + t4462;
  t4707 = -1.*t85*t711*t4197;
  t4711 = -1.*t4215*t3486;
  t4716 = 0. + t3427 + t4707 + t3432 + t3433 + t4711;
  t3676 = t711*t1494*t2920;
  t3677 = t711*t2933*t1514;
  t4697 = t4215*t2532;
  t4719 = -1.*t4122*t2532*t4716;
  t3652 = -1.*t2920*t1575;
  t3663 = -1.*t2933*t2035;
  t2897 = 0.08055*t2842;
  t3504 = -1.*t2668*t1778;
  t3506 = -1.*t2695*t1798;
  t4526 = t4122*t776;
  t4534 = -1.*t4115*t4131;
  t4535 = t4526 + t4534;
  t4921 = t711*t4115*t162;
  t3783 = -1.*t711*t1494*t2668*t162;
  t3789 = -1.*t711*t2695*t162*t1514;
  t4435 = t4115*t162*t776;
  t4436 = t4122*t3410;
  t4437 = t4435 + t4436;
  t4265 = t85*t711*t4197;
  t4271 = t4215*t3486;
  t3823 = t85*t711*t1494*t2668;
  t3824 = t85*t711*t2695*t1514;
  t4742 = t85*t4115*t776;
  t4750 = t4122*t3212;
  t4755 = t4742 + t4750;
  t5100 = 0. + var1[0] + t4265 + t2671 + t2720 + t4271;
  t3863 = -1.*t2695*t2197;
  t3869 = -1.*t2668*t1798;
  t3889 = t2695*t1575;
  t3891 = t2668*t1637;
  t5112 = -1.*t711*t4197*t162;
  t5119 = -1.*t4215*t4163;
  t5127 = 0. + t3804 + t5112 + t3805 + t3806 + t5119;
  t4004 = t2668*t1778;
  t4015 = t2695*t1798;
  t4922 = t4122*t2871;
  t4923 = t4921 + t4922;
  t4984 = -1.*t4122*t85*t711;
  t4992 = -1.*t4115*t3486;
  t4999 = t4984 + t4992;
  t4558 = -1.*t4115*t4163;
  t4559 = t4311 + t4558;
  t5141 = 0.08055*t2978;
  t5148 = -0.01004*t4115*t2532;
  t3951 = t2920*t1575;
  t3962 = t2933*t2035;
  t3916 = -1.*t2920*t2197;
  t3920 = -1.*t2933*t2570;
  t4908 = t4122*t85*t711;
  t4909 = t4115*t3486;
  t4917 = t4908 + t4909;
  t4637 = t85*t711*t4115;
  t4644 = -1.*t4122*t3486;
  t4646 = t4637 + t4644;
  t4119 = -1.*t4115*t776;
  t4134 = -1.*t4122*t4131;
  t4136 = t4119 + t4134;
  t4138 = var2[1]*t4136;
  t4180 = var2[2]*t4168;
  t5434 = Cos(var1[15]);
  t5435 = -1.*t5434;
  t5437 = 1. + t5435;
  t5446 = Sin(var1[15]);
  t5415 = -1.*t4122*t776;
  t5419 = t4115*t4131;
  t5420 = t5415 + t5419;
  t5439 = -0.01004*t5437;
  t5457 = 0.08055*t5446;
  t5461 = 0. + t5439 + t5457;
  t5464 = -0.08055*t5437;
  t5465 = -0.01004*t5446;
  t5468 = 0. + t5464 + t5465;
  t4313 = t4115*t2871;
  t4317 = t4311 + t4313;
  t5518 = 0.08055*t5434;
  t5523 = t5518 + t5465;
  t5529 = -0.01004*t5434;
  t5530 = -0.08055*t5446;
  t5531 = t5529 + t5530;
  t5394 = t4122*t711*t162;
  t5399 = t4115*t4163;
  t5400 = t5394 + t5399;
  t5462 = -1.*t5461*t2532;
  t5472 = -1.*t5468*t5420;
  t5474 = 0. + t2785 + t2801 + t4204 + t2810 + t4220 + t5462 + t5472;
  t4374 = t4215*t3608;
  t5608 = -1.*t5461*t2978;
  t5613 = -1.*t4115*t5468*t2532;
  t4611 = t4215*t3065;
  t5623 = t5461*t3065;
  t5625 = t5468*t5400;
  t5628 = 0. + var1[1] + t4386 + t2980 + t3002 + t4394 + t5623 + t5625;
  t5629 = -1.*t4122*t2532*t5628;
  t4495 = t4494*t776;
  t4502 = -1.*t4500*t4131;
  t4510 = t711*t4494*t162;
  t4511 = t4500*t4163;
  t4419 = -1.*t4122*t85*t776;
  t4430 = t4115*t3212;
  t4431 = t4419 + t4430;
  t4448 = -1.*t4197*t162*t776;
  t4449 = t4215*t3410;
  t4802 = -1.*t4122*t162*t776;
  t4803 = t4115*t3410;
  t4806 = t4802 + t4803;
  t4454 = t711*t4197;
  t4456 = -1.*t4215*t3771;
  t5060 = -1.*t4122*t711;
  t5069 = t4115*t3771;
  t5079 = t5060 + t5069;
  t4631 = var2[0]*t4259;
  t4650 = var2[2]*t4646;
  t4680 = -1.*t4215*t3122;
  t5777 = t5461*t2532;
  t5778 = t5468*t5420;
  t5781 = 0. + var1[2] + t3367 + t4652 + t3372 + t4658 + t5777 + t5778;
  t5797 = t5461*t2978;
  t5799 = t4115*t5468*t2532;
  t4890 = -1.*t4215*t2842;
  t5841 = -1.*t5461*t2842;
  t5843 = -1.*t5468*t4917;
  t5844 = 0. + t3427 + t4707 + t3432 + t3433 + t4711 + t5841 + t5843;
  t5847 = -1.*t4122*t2532*t5844;
  t4946 = -1.*t4494*t776;
  t4947 = t4500*t4131;
  t4960 = -1.*t85*t711*t4494;
  t4966 = -1.*t4500*t3486;
  t4789 = t85*t4197*t776;
  t4790 = -1.*t4215*t3212;
  t4812 = -1.*t711*t4197;
  t4842 = t4215*t3771;
  t5564 = t5434*t2842;
  t5567 = -1.*t5446*t4917;
  t5568 = t5564 + t5567;
  t4926 = -1.*t4215*t2871;
  t5023 = var2[1]*t4236;
  t5029 = -1.*t4122*t4163;
  t5037 = t4921 + t5029;
  t5048 = var2[0]*t5037;
  t5090 = t4197*t162*t776;
  t5096 = -1.*t4215*t3410;
  t5104 = -1.*t85*t4197*t776;
  t5106 = t4215*t3212;
  t5480 = t5461*t2842;
  t5482 = t5468*t4917;
  t5158 = -1.*t4215*t3608;
  t5186 = t4215*t3122;
  t6203 = 0. + var1[0] + t4265 + t2671 + t2720 + t4271 + t5480 + t5482;
  t6207 = -1.*t5461*t3065;
  t6216 = -1.*t5468*t5400;
  t6217 = 0. + t3804 + t5112 + t3805 + t3806 + t5119 + t6207 + t6216;
  t6227 = t5446*t2978;
  t6234 = t5434*t4115*t2532;
  t6240 = t6227 + t6234;
  t6242 = -0.13004*t6240;
  t6243 = t5434*t2978;
  t6244 = -1.*t4115*t5446*t2532;
  t6245 = t6243 + t6244;
  t6247 = 0.08055*t6245;
  t5315 = t4215*t2842;
  t5331 = -1.*t4215*t3065;
  t5248 = t85*t711*t4494;
  t5251 = t4500*t3486;
  t5262 = -1.*t711*t4494*t162;
  t5267 = -1.*t4500*t4163;
  t5237 = t4215*t2871;
  t5344 = -1.*t85*t4115*t776;
  t5345 = -1.*t4122*t3212;
  t5347 = t5344 + t5345;
  t5351 = var2[4]*t5347;
  t5352 = -1.*var2[5]*t4122*t3122;
  t5353 = -1.*var2[13]*t4122*t2842;
  t5363 = var2[14]*t4917;
  t5366 = -1.*t4122*t2871;
  t5367 = t4140 + t5366;
  t5370 = var2[3]*t5367;
  t5371 = t5351 + t5352 + t5353 + t5363 + t5370;
  t5373 = -1.*t4115*t162*t776;
  t5379 = -1.*t4122*t3410;
  t5382 = t5373 + t5379;
  t5384 = var2[4]*t5382;
  t5385 = -1.*var2[5]*t4122*t3608;
  t5387 = -1.*var2[13]*t4122*t3065;
  t5390 = var2[3]*t4646;
  t5401 = var2[14]*t5400;
  t5404 = t5384 + t5385 + t5387 + t5390 + t5401;
  t5411 = -1.*var2[13]*t4122*t2532;
  t5414 = -1.*var2[5]*t4122*t2532;
  t5422 = var2[14]*t5420;
  t5423 = -1.*t711*t4115;
  t5425 = -1.*t4122*t3771;
  t5431 = t5423 + t5425;
  t5432 = var2[4]*t5431;
  t5433 = t5411 + t5414 + t5422 + t5432;
  t6445 = Cos(var1[16]);
  t6446 = -1.*t6445;
  t6449 = 1. + t6446;
  t6478 = Sin(var1[16]);
  t6078 = t5434*t2532;
  t6081 = -1.*t5446*t5420;
  t6086 = t6078 + t6081;
  t6468 = -0.08055*t6449;
  t6479 = -0.13004*t6478;
  t6480 = 0. + t6468 + t6479;
  t5981 = t5446*t2842;
  t5982 = t5434*t4917;
  t5983 = t5981 + t5982;
  t6504 = -0.13004*t6449;
  t6515 = 0.08055*t6478;
  t6521 = 0. + t6504 + t6515;
  t5486 = t5446*t3536;
  t5487 = t5434*t4317;
  t5488 = t5486 + t5487;
  t5490 = t5434*t3536;
  t5491 = -1.*t5446*t4317;
  t5494 = t5490 + t5491;
  t5524 = -1.*t5523*t2532;
  t5532 = -1.*t5531*t5420;
  t6067 = -1.*t5446*t2532;
  t6069 = -1.*t5434*t5420;
  t6073 = t6067 + t6069;
  t5537 = -1.*t5446*t2842;
  t5542 = -1.*t5434*t4917;
  t5545 = t5537 + t5542;
  t5573 = t5523*t3065;
  t5574 = t5531*t5400;
  t6046 = -1.*t5446*t3065;
  t6050 = -1.*t5434*t5400;
  t6053 = t6046 + t6050;
  t6059 = t5434*t3065;
  t6060 = -1.*t5446*t5400;
  t6062 = t6059 + t6060;
  t6481 = t5446*t2532;
  t6485 = t5434*t5420;
  t6486 = t6481 + t6485;
  t6598 = t6445*t5568;
  t6620 = -1.*t6478*t5568;
  t6645 = -0.13004*t6445;
  t6653 = -0.08055*t6478;
  t6656 = t6645 + t6653;
  t6663 = 0.08055*t6445;
  t6664 = t6663 + t6479;
  t6502 = -1.*t6480*t6486;
  t6523 = -1.*t6521*t6086;
  t6525 = 0. + t2785 + t2801 + t4204 + t2810 + t4220 + t5462 + t5472 + t6502 + t6523;
  t5586 = t5446*t3566;
  t5590 = t5434*t4115*t3122;
  t5591 = t5586 + t5590;
  t5594 = t5434*t3566;
  t5595 = -1.*t4115*t5446*t3122;
  t5598 = t5594 + t5595;
  t5600 = t5461*t3134;
  t5602 = t4115*t5468*t3608;
  t5811 = t5446*t3134;
  t5813 = t5434*t4115*t3608;
  t5818 = t5811 + t5813;
  t5823 = t5434*t3134;
  t5825 = -1.*t4115*t5446*t3608;
  t5826 = t5823 + t5825;
  t6738 = t5446*t3065;
  t6740 = t5434*t5400;
  t6741 = t6738 + t6740;
  t6768 = -1.*t6480*t6240;
  t6780 = -1.*t6521*t6245;
  t5638 = t5446*t3636;
  t5641 = t5434*t4115*t2842;
  t5645 = t5638 + t5641;
  t5658 = t5434*t3636;
  t5659 = -1.*t4115*t5446*t2842;
  t5663 = t5658 + t5659;
  t5680 = t5461*t2911;
  t5683 = t4115*t5468*t3065;
  t5877 = t5446*t2911;
  t5881 = t5434*t4115*t3065;
  t5887 = t5877 + t5881;
  t5896 = t5434*t2911;
  t5897 = -1.*t4115*t5446*t3065;
  t5898 = t5896 + t5897;
  t6843 = t6480*t6741;
  t6844 = t6521*t6062;
  t6845 = 0. + var1[1] + t4386 + t2980 + t3002 + t4394 + t5623 + t5625 + t6843 + t6844;
  t6851 = -1.*t4122*t2532*t6845;
  t5699 = -1.*t5468*t4259;
  t5705 = t5468*t4168;
  t5715 = t5446*t3393;
  t5718 = t5434*t4431;
  t5725 = t5715 + t5718;
  t5729 = t5434*t3393;
  t5733 = -1.*t5446*t4431;
  t5741 = t5729 + t5733;
  t5744 = t5461*t3258;
  t5745 = t5468*t4806;
  t5944 = t5446*t3258;
  t5946 = t5434*t4806;
  t5947 = t5944 + t5946;
  t5950 = t5434*t3258;
  t5951 = -1.*t5446*t4806;
  t5952 = t5950 + t5951;
  t5749 = -1.*t5461*t3279;
  t5754 = -1.*t5468*t5079;
  t6145 = t5446*t3279;
  t6152 = t5434*t5079;
  t6161 = t6145 + t6152;
  t6164 = t5434*t3279;
  t6166 = -1.*t5446*t5079;
  t6171 = t6164 + t6166;
  t5783 = -1.*t5461*t3566;
  t5785 = -1.*t4115*t5468*t3122;
  t7111 = t6480*t6240;
  t7112 = t6521*t6245;
  t7136 = t6480*t6486;
  t7138 = t6521*t6086;
  t7147 = 0. + var1[2] + t3367 + t4652 + t3372 + t4658 + t5777 + t5778 + t7136 + t7138;
  t5861 = -1.*t5461*t3636;
  t5872 = -1.*t4115*t5468*t2842;
  t7197 = -1.*t6480*t5983;
  t7198 = -1.*t6521*t5568;
  t7201 = 0. + t3427 + t4707 + t3432 + t3433 + t4711 + t5841 + t5843 + t7197 + t7198;
  t7202 = -1.*t4122*t2532*t7201;
  t5902 = t5468*t4259;
  t5918 = -1.*t5468*t4236;
  t5938 = -1.*t5461*t3393;
  t5939 = -1.*t5468*t4431;
  t5956 = t5461*t3279;
  t5957 = t5468*t5079;
  t6710 = -1.*t6478*t5983;
  t6713 = t6710 + t6598;
  t5991 = -1.*t5461*t3536;
  t5992 = -1.*t5468*t4317;
  t6025 = t5523*t2532;
  t6028 = t5531*t5420;
  t6036 = -1.*t5523*t2842;
  t6042 = -1.*t5531*t4917;
  t7470 = t6445*t6062;
  t7478 = -1.*t6478*t6062;
  t6096 = t5523*t2842;
  t6108 = t5531*t4917;
  t6118 = -1.*t5523*t3065;
  t6120 = -1.*t5531*t5400;
  t7542 = t6445*t6086;
  t7551 = -1.*t6478*t6086;
  t6195 = t5461*t3393;
  t6197 = t5468*t4431;
  t6180 = -1.*t5461*t3258;
  t6182 = -1.*t5468*t4806;
  t6534 = t6480*t5983;
  t6537 = t6521*t5568;
  t6264 = t5461*t3566;
  t6274 = t4115*t5468*t3122;
  t6254 = -1.*t5461*t3134;
  t6257 = -1.*t4115*t5468*t3608;
  t7692 = 0. + var1[0] + t4265 + t2671 + t2720 + t4271 + t5480 + t5482 + t6534 + t6537;
  t7697 = -1.*t6480*t6741;
  t7704 = -1.*t6521*t6062;
  t7708 = 0. + t3804 + t5112 + t3805 + t3806 + t5119 + t6207 + t6216 + t7697 + t7704;
  t7724 = -1.*t6478*t6240;
  t7727 = t6445*t6245;
  t7729 = t7724 + t7727;
  t7731 = 0.03315*t7729;
  t7735 = t6445*t6240;
  t7736 = t6478*t6245;
  t7737 = t7735 + t7736;
  t7738 = -0.19074*t7737;
  t6304 = t5461*t3636;
  t6314 = t4115*t5468*t2842;
  t6357 = -1.*t5461*t2911;
  t6358 = -1.*t4115*t5468*t3065;
  t6377 = t5468*t4236;
  t6385 = -1.*t5468*t4168;
  t6410 = t5461*t3536;
  t6420 = t5468*t4317;
  p_output1[0]=0;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=0;
  p_output1[4]=0;
  p_output1[5]=0;
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=0;
  p_output1[10]=0;
  p_output1[11]=0;
  p_output1[12]=0;
  p_output1[13]=0;
  p_output1[14]=0;
  p_output1[15]=0;
  p_output1[16]=0;
  p_output1[17]=0;
  p_output1[18]=var2[1];
  p_output1[19]=-1.*var2[0];
  p_output1[20]=0;
  p_output1[21]=0;
  p_output1[22]=0;
  p_output1[23]=0;
  p_output1[24]=-1.*t85*var2[2] + t162*var1[2]*var2[3];
  p_output1[25]=-1.*t162*var2[2] - 1.*t85*var1[2]*var2[3];
  p_output1[26]=t85*var2[0] + t162*var2[1] + (-1.*t162*var1[0] + t85*var1[1])*var2[3];
  p_output1[27]=-1.*t85*var2[3];
  p_output1[28]=-1.*t162*var2[3];
  p_output1[29]=0;
  p_output1[30]=t725 + t815 - 1.*t711*t85*var1[2]*var2[3] + (t816 + t841)*var2[4];
  p_output1[31]=t905 + t924 - 1.*t162*t711*var1[2]*var2[3] + (t939 + t977)*var2[4];
  p_output1[32]=t1075 + t1097 + t1258 + (t1287 + t1295)*var2[4];
  p_output1[33]=t1412;
  p_output1[34]=t1486;
  p_output1[35]=t1491;
  p_output1[36]=0;
  p_output1[37]=0;
  p_output1[38]=0;
  p_output1[39]=0;
  p_output1[40]=0;
  p_output1[41]=0;
  p_output1[42]=0;
  p_output1[43]=0;
  p_output1[44]=0;
  p_output1[45]=0;
  p_output1[46]=0;
  p_output1[47]=0;
  p_output1[48]=0;
  p_output1[49]=0;
  p_output1[50]=0;
  p_output1[51]=0;
  p_output1[52]=0;
  p_output1[53]=0;
  p_output1[54]=0;
  p_output1[55]=0;
  p_output1[56]=0;
  p_output1[57]=0;
  p_output1[58]=0;
  p_output1[59]=0;
  p_output1[60]=0;
  p_output1[61]=0;
  p_output1[62]=0;
  p_output1[63]=0;
  p_output1[64]=0;
  p_output1[65]=0;
  p_output1[66]=0;
  p_output1[67]=0;
  p_output1[68]=0;
  p_output1[69]=0;
  p_output1[70]=0;
  p_output1[71]=0;
  p_output1[72]=0;
  p_output1[73]=0;
  p_output1[74]=0;
  p_output1[75]=0;
  p_output1[76]=0;
  p_output1[77]=0;
  p_output1[78]=t725 + t815 + (0.135*t1778 + 0.07996*t1798 - 1.*t711*t85*var1[2])*var2[3] + (t816 + t841 + 0.135*t1494*t711*t85 + 0.07996*t1514*t711*t85)*var2[4] + (0.07996*t1575 + 0.135*t1637)*var2[5];
  p_output1[79]=t905 + t924 + (0.135*t1575 + 0.07996*t2035 - 1.*t162*t711*var1[2])*var2[3] + (0.135*t1494*t162*t711 + 0.07996*t1514*t162*t711 + t939 + t977)*var2[4] + (0.135*t1798 + 0.07996*t2197)*var2[5];
  p_output1[80]=t1075 + t1097 + t1258 + (t1287 + t1295 - 0.135*t1494*t776 - 0.07996*t1514*t776)*var2[4] + (0.07996*t1494*t711 - 0.135*t1514*t711)*var2[5];
  p_output1[81]=t1412;
  p_output1[82]=t1486;
  p_output1[83]=t1491;
  p_output1[84]=t2532*var2[1] + (-1.*t2197*t2481 + t2514*t2570)*var2[2] + (t2532*(t2671 + t2720) + t2820*t2842 + 0.08055*t2871 + 0.135*t162*t711)*var2[3] + (0.08055*t3212 + t2532*(t3219 + t3226) + t2820*t3258 + t3010*t3279 + t3065*(t3291 + t3297) + 0.135*t776*t85)*var2[4] + (t3024 + 0.08055*t3122 + t2820*t3134 + t2532*(t3150 + t3151) + t3065*(t3168 + t3170))*var2[5] + (t2897 + t2820*t2911 + t2532*(t2921 + t2937) + t3024 + (t3039 + t3048)*t3065)*var2[13];
  p_output1[85]=(-1.*t1494*t2481*t711 + t1514*t2514*t711)*var2[0] + t2842*var2[2] + (0.08055*t3486 + t2532*(t3504 + t3506) + t3380*t3536 - 0.135*t711*t85)*var2[3] + (t2532*(t3360 + t3362) + t3380*t3393 + 0.08055*t3410 + t3279*t3434 + t2842*(t3437 + t3459) + 0.135*t162*t776)*var2[4] + (t3380*t3566 + t2532*(t3568 + t3571) + t3586 + t2842*(t3587 + t3589) + 0.08055*t3608)*var2[5] + (0.08055*t3065 + t3586 + t3380*t3636 + t2532*(t3652 + t3663) + t2842*(t3676 + t3677))*var2[13];
  p_output1[86]=t3065*var2[0] + (-1.*t1575*t2481 + t2035*t2514)*var2[1] + (t2842*(t3432 + t3433) + t2842*t3780 + t3536*t3820 + t3065*(t4004 + t4015))*var2[3] + (0.08055*t3771 + t3258*t3780 + t2842*(t3783 + t3789) + t3393*t3820 + t3065*(t3823 + t3824) + 0.135*t711)*var2[4] + (t3134*t3780 + t3566*t3820 + t3855 + t2842*(t3863 + t3869) + t3065*(t3889 + t3891))*var2[5] + (t2911*t3780 + t3636*t3820 + t3855 + t2842*(t3916 + t3920) + t3065*(t3951 + t3962))*var2[13];
  p_output1[87]=t3536*var2[3] + t3393*var2[4] + t3566*var2[5] + t3636*var2[13];
  p_output1[88]=t2842*var2[3] + t3258*var2[4] + t3134*var2[5] + t2911*var2[13];
  p_output1[89]=t3279*var2[4] + t2978*var2[5] + t2978*var2[13];
  p_output1[90]=t4138 + t4180 + (0.08055*t3536 - 1.*t4221*t4236 - 1.*t4259*(t2671 + t2720 + t4265 + t4271) - 0.01004*t4317)*var2[3] + (0.08055*t3393 - 0.01004*t4431 - 1.*t4221*t4437 - 1.*t4259*(t3219 + t3226 + t4448 + t4449) - 1.*t4168*(t3291 + t3297 + t4454 + t4456) - 1.*t4395*t4463)*var2[4] + (0.08055*t3566 - 0.01004*t3122*t4115 - 1.*t3608*t4122*t4221 - 1.*t4259*(t3150 + t3151 + t4374) - 1.*t4168*(t3168 + t3170 + t4378) + t4400)*var2[5] + (0.08055*t3636 - 0.01004*t2842*t4115 - 1.*t3065*t4122*t4221 - 1.*t4168*(t3039 + t3048 + t4378) + t4400 - 1.*t4259*(t2921 + t2937 + t4611))*var2[13] + (-0.01004*t4236 - 1.*t4168*(t4495 + t4502) - 1.*t4259*(t4510 + t4511) - 1.*t4395*t4535 - 1.*t4221*t4559)*var2[14];
  p_output1[91]=t4631 + t4650 + (t2897 - 0.01004*t4917 - 1.*t4659*t4923 - 1.*t4259*(t3504 + t3506 + t4386 + t4926))*var2[3] + (0.08055*t3258 - 1.*t4463*t4716 - 1.*t4659*t4755 - 1.*t4259*(t3360 + t3362 + t4789 + t4790) - 0.01004*t4806 - 1.*t4236*(t3437 + t3459 + t4812 + t4842))*var2[4] + (0.08055*t3134 - 0.01004*t3608*t4115 - 1.*t3122*t4122*t4659 - 1.*t4259*(t3568 + t3571 + t4680) - 1.*t4236*(t3587 + t3589 + t4697) + t4719)*var2[5] + (0.08055*t2911 - 0.01004*t3065*t4115 - 1.*t2842*t4122*t4659 - 1.*t4236*(t3676 + t3677 + t4697) + t4719 - 1.*t4259*(t3652 + t3663 + t4890))*var2[13] + (-0.01004*t4168 - 1.*t4535*t4716 - 1.*t4236*(t4946 + t4947) - 1.*t4259*(t4960 + t4966) - 1.*t4659*t4999)*var2[14];
  p_output1[92]=t5023 + t5048 + (-1.*t4236*(t3432 + t3433 + t4707 + t4711) - 1.*t4236*t5100 - 1.*t4923*t5127 - 1.*t4168*(t4004 + t4015 + t5112 + t5237))*var2[3] + (0.08055*t3279 - 0.01004*t5079 - 1.*t4236*(t3783 + t3789 + t5090 + t5096) - 1.*t4437*t5100 - 1.*t4168*(t3823 + t3824 + t5104 + t5106) - 1.*t4755*t5127)*var2[4] + (-1.*t3608*t4122*t5100 - 1.*t3122*t4122*t5127 + t5141 + t5148 - 1.*t4236*(t3863 + t3869 + t5158) - 1.*t4168*(t3889 + t3891 + t5186))*var2[5] + (-1.*t3065*t4122*t5100 - 1.*t2842*t4122*t5127 + t5141 + t5148 - 1.*t4168*(t3951 + t3962 + t5315) - 1.*t4236*(t3916 + t3920 + t5331))*var2[13] + (-0.01004*t4259 - 1.*t4559*t5100 - 1.*t4999*t5127 - 1.*t4168*(t5248 + t5251) - 1.*t4236*(t5262 + t5267))*var2[14];
  p_output1[93]=t5371;
  p_output1[94]=t5404;
  p_output1[95]=t5433;
  p_output1[96]=t4138 + t4180 + (-1.*t4236*t5474 - 1.*t4259*(t2671 + t2720 + t4265 + t4271 + t5480 + t5482) - 0.13004*t5488 + 0.08055*t5494)*var2[3] + (-1.*t4437*t5474 - 1.*t4463*t5628 - 0.13004*t5725 + 0.08055*t5741 - 1.*t4259*(t3219 + t3226 + t4448 + t4449 + t5744 + t5745) - 1.*t4168*(t3291 + t3297 + t4454 + t4456 + t5749 + t5754))*var2[4] + (-1.*t3608*t4122*t5474 - 0.13004*t5591 + 0.08055*t5598 - 1.*t4259*(t3150 + t3151 + t4374 + t5600 + t5602) - 1.*t4168*(t3168 + t3170 + t4378 + t5608 + t5613) + t5629)*var2[5] + (-1.*t3065*t4122*t5474 - 1.*t4168*(t3039 + t3048 + t4378 + t5608 + t5613) + t5629 - 0.13004*t5645 + 0.08055*t5663 - 1.*t4259*(t2921 + t2937 + t4611 + t5680 + t5683))*var2[13] + (-0.13004*t4236*t5434 - 0.08055*t4236*t5446 - 1.*t4559*t5474 - 1.*t4535*t5628 - 1.*t4168*(t4495 + t4502 + t5699) - 1.*t4259*(t4510 + t4511 + t5705))*var2[14] + (-1.*t4168*(t5524 + t5532) + 0.08055*t5545 - 0.13004*t5568 - 1.*t4259*(t5573 + t5574))*var2[15];
  p_output1[97]=t4631 + t4650 + (0.08055*t5568 - 1.*t4923*t5781 - 0.13004*t5983 - 1.*t4259*(t3504 + t3506 + t4386 + t4926 + t5991 + t5992))*var2[3] + (-1.*t4755*t5781 - 1.*t4463*t5844 - 1.*t4259*(t3360 + t3362 + t4789 + t4790 + t5938 + t5939) - 0.13004*t5947 + 0.08055*t5952 - 1.*t4236*(t3437 + t3459 + t4812 + t4842 + t5956 + t5957))*var2[4] + (-1.*t3122*t4122*t5781 - 1.*t4259*(t3568 + t3571 + t4680 + t5783 + t5785) - 1.*t4236*(t3587 + t3589 + t4697 + t5797 + t5799) - 0.13004*t5818 + 0.08055*t5826 + t5847)*var2[5] + (-1.*t2842*t4122*t5781 - 1.*t4236*(t3676 + t3677 + t4697 + t5797 + t5799) + t5847 - 1.*t4259*(t3652 + t3663 + t4890 + t5861 + t5872) - 0.13004*t5887 + 0.08055*t5898)*var2[13] + (-0.13004*t4168*t5434 - 0.08055*t4168*t5446 - 1.*t4999*t5781 - 1.*t4535*t5844 - 1.*t4236*(t4946 + t4947 + t5902) - 1.*t4259*(t4960 + t4966 + t5918))*var2[14] + (-1.*t4236*(t6025 + t6028) - 1.*t4259*(t6036 + t6042) + 0.08055*t6053 - 0.13004*t6062)*var2[15];
  p_output1[98]=t5023 + t5048 + (-1.*t4236*(t3432 + t3433 + t4707 + t4711 + t5841 + t5843) - 1.*t4236*t6203 - 1.*t4923*t6217 - 1.*t4168*(t4004 + t4015 + t5112 + t5237 + t6410 + t6420))*var2[3] + (-0.13004*t6161 + 0.08055*t6171 - 1.*t4236*(t3783 + t3789 + t5090 + t5096 + t6180 + t6182) - 1.*t4168*(t3823 + t3824 + t5104 + t5106 + t6195 + t6197) - 1.*t4437*t6203 - 1.*t4755*t6217)*var2[4] + (-1.*t3608*t4122*t6203 - 1.*t3122*t4122*t6217 + t6242 + t6247 - 1.*t4236*(t3863 + t3869 + t5158 + t6254 + t6257) - 1.*t4168*(t3889 + t3891 + t5186 + t6264 + t6274))*var2[5] + (-1.*t3065*t4122*t6203 - 1.*t2842*t4122*t6217 + t6242 + t6247 - 1.*t4168*(t3951 + t3962 + t5315 + t6304 + t6314) - 1.*t4236*(t3916 + t3920 + t5331 + t6357 + t6358))*var2[13] + (-0.13004*t4259*t5434 - 0.08055*t4259*t5446 - 1.*t4559*t6203 - 1.*t4999*t6217 - 1.*t4168*(t5248 + t5251 + t6377) - 1.*t4236*(t5262 + t5267 + t6385))*var2[14] + (0.08055*t6073 - 0.13004*t6086 - 1.*t4168*(t6096 + t6108) - 1.*t4236*(t6118 + t6120))*var2[15];
  p_output1[99]=t5371;
  p_output1[100]=t5404;
  p_output1[101]=t5433;
  p_output1[102]=t4138 + t4180 + (0.03315*(t5494*t6445 - 1.*t5488*t6478) - 0.19074*(t5488*t6445 + t5494*t6478) - 1.*t4236*t6525 - 1.*t4259*(t2671 + t2720 + t4265 + t4271 + t5480 + t5482 + t6534 + t6537))*var2[3] + (0.03315*(t5741*t6445 - 1.*t5725*t6478) - 0.19074*(t5725*t6445 + t5741*t6478) - 1.*t4259*(t3219 + t3226 + t4448 + t4449 + t5744 + t5745 + t5947*t6480 + t5952*t6521) - 1.*t4168*(t3291 + t3297 + t4454 + t4456 + t5749 + t5754 - 1.*t6161*t6480 - 1.*t6171*t6521) - 1.*t4437*t6525 - 1.*t4463*t6845)*var2[4] + (0.03315*(t5598*t6445 - 1.*t5591*t6478) - 0.19074*(t5591*t6445 + t5598*t6478) - 1.*t4259*(t3150 + t3151 + t4374 + t5600 + t5602 + t5818*t6480 + t5826*t6521) - 1.*t3608*t4122*t6525 - 1.*t4168*(t3168 + t3170 + t4378 + t5608 + t5613 + t6768 + t6780) + t6851)*var2[5] + (0.03315*(t5663*t6445 - 1.*t5645*t6478) - 0.19074*(t5645*t6445 + t5663*t6478) - 1.*t4259*(t2921 + t2937 + t4611 + t5680 + t5683 + t5887*t6480 + t5898*t6521) - 1.*t3065*t4122*t6525 - 1.*t4168*(t3039 + t3048 + t4378 + t5608 + t5613 + t6768 + t6780) + t6851)*var2[13] + (0.03315*(-1.*t4236*t5446*t6445 - 1.*t4236*t5434*t6478) - 0.19074*(t4236*t5434*t6445 - 1.*t4236*t5446*t6478) - 1.*t4259*(t4510 + t4511 + t5705 + t4168*t5434*t6480 - 1.*t4168*t5446*t6521) - 1.*t4168*(t4495 + t4502 + t5699 - 1.*t4259*t5434*t6480 + t4259*t5446*t6521) - 1.*t4559*t6525 - 1.*t4535*t6845)*var2[14] + (-1.*t4259*(t5573 + t5574 + t6062*t6480 + t6053*t6521) - 1.*t4168*(t5524 + t5532 - 1.*t6086*t6480 - 1.*t6073*t6521) - 0.19074*(t5545*t6478 + t6598) + 0.03315*(t5545*t6445 + t6620))*var2[15] + (0.03315*(-1.*t5983*t6445 + t6620) - 1.*t4168*(-1.*t6486*t6656 - 1.*t6086*t6664) - 0.19074*t6713 - 1.*t4259*(t6062*t6664 + t6656*t6741))*var2[16];
  p_output1[103]=t4631 + t4650 + (-0.19074*(t5983*t6445 + t5568*t6478) - 1.*t4259*(t3504 + t3506 + t4386 + t4926 + t5991 + t5992 - 1.*t5488*t6480 - 1.*t5494*t6521) + 0.03315*t6713 - 1.*t4923*t7147)*var2[3] + (0.03315*(t5952*t6445 - 1.*t5947*t6478) - 0.19074*(t5947*t6445 + t5952*t6478) - 1.*t4259*(t3360 + t3362 + t4789 + t4790 + t5938 + t5939 - 1.*t5725*t6480 - 1.*t5741*t6521) - 1.*t4236*(t3437 + t3459 + t4812 + t4842 + t5956 + t5957 + t6161*t6480 + t6171*t6521) - 1.*t4755*t7147 - 1.*t4463*t7201)*var2[4] + (0.03315*(t5826*t6445 - 1.*t5818*t6478) - 0.19074*(t5818*t6445 + t5826*t6478) - 1.*t4259*(t3568 + t3571 + t4680 + t5783 + t5785 - 1.*t5591*t6480 - 1.*t5598*t6521) - 1.*t4236*(t3587 + t3589 + t4697 + t5797 + t5799 + t7111 + t7112) - 1.*t3122*t4122*t7147 + t7202)*var2[5] + (0.03315*(t5898*t6445 - 1.*t5887*t6478) - 0.19074*(t5887*t6445 + t5898*t6478) - 1.*t4259*(t3652 + t3663 + t4890 + t5861 + t5872 - 1.*t5645*t6480 - 1.*t5663*t6521) - 1.*t4236*(t3676 + t3677 + t4697 + t5797 + t5799 + t7111 + t7112) - 1.*t2842*t4122*t7147 + t7202)*var2[13] + (0.03315*(-1.*t4168*t5446*t6445 - 1.*t4168*t5434*t6478) - 0.19074*(t4168*t5434*t6445 - 1.*t4168*t5446*t6478) - 1.*t4259*(t4960 + t4966 + t5918 - 1.*t4236*t5434*t6480 + t4236*t5446*t6521) - 1.*t4236*(t4946 + t4947 + t5902 + t4259*t5434*t6480 - 1.*t4259*t5446*t6521) - 1.*t4999*t7147 - 1.*t4535*t7201)*var2[14] + (-1.*t4259*(t6036 + t6042 - 1.*t5568*t6480 - 1.*t5545*t6521) - 1.*t4236*(t6025 + t6028 + t6086*t6480 + t6073*t6521) - 0.19074*(t6053*t6478 + t7470) + 0.03315*(t6053*t6445 + t7478))*var2[15] + (-1.*t4259*(-1.*t5983*t6656 - 1.*t5568*t6664) - 1.*t4236*(t6486*t6656 + t6086*t6664) - 0.19074*(-1.*t6478*t6741 + t7470) + 0.03315*(-1.*t6445*t6741 + t7478))*var2[16];
  p_output1[104]=t5023 + t5048 + (-1.*t4168*(t4004 + t4015 + t5112 + t5237 + t6410 + t6420 + t5488*t6480 + t5494*t6521) - 1.*t4236*(t3432 + t3433 + t4707 + t4711 + t5841 + t5843 + t7197 + t7198) - 1.*t4236*t7692 - 1.*t4923*t7708)*var2[3] + (0.03315*(t6171*t6445 - 1.*t6161*t6478) - 0.19074*(t6161*t6445 + t6171*t6478) - 1.*t4168*(t3823 + t3824 + t5104 + t5106 + t6195 + t6197 + t5725*t6480 + t5741*t6521) - 1.*t4236*(t3783 + t3789 + t5090 + t5096 + t6180 + t6182 - 1.*t5947*t6480 - 1.*t5952*t6521) - 1.*t4437*t7692 - 1.*t4755*t7708)*var2[4] + (-1.*t4168*(t3889 + t3891 + t5186 + t6264 + t6274 + t5591*t6480 + t5598*t6521) - 1.*t4236*(t3863 + t3869 + t5158 + t6254 + t6257 - 1.*t5818*t6480 - 1.*t5826*t6521) - 1.*t3608*t4122*t7692 - 1.*t3122*t4122*t7708 + t7731 + t7738)*var2[5] + (-1.*t4168*(t3951 + t3962 + t5315 + t6304 + t6314 + t5645*t6480 + t5663*t6521) - 1.*t4236*(t3916 + t3920 + t5331 + t6357 + t6358 - 1.*t5887*t6480 - 1.*t5898*t6521) - 1.*t3065*t4122*t7692 - 1.*t2842*t4122*t7708 + t7731 + t7738)*var2[13] + (0.03315*(-1.*t4259*t5446*t6445 - 1.*t4259*t5434*t6478) - 0.19074*(t4259*t5434*t6445 - 1.*t4259*t5446*t6478) - 1.*t4236*(t5262 + t5267 + t6385 - 1.*t4168*t5434*t6480 + t4168*t5446*t6521) - 1.*t4168*(t5248 + t5251 + t6377 + t4236*t5434*t6480 - 1.*t4236*t5446*t6521) - 1.*t4559*t7692 - 1.*t4999*t7708)*var2[14] + (-1.*t4168*(t6096 + t6108 + t5568*t6480 + t5545*t6521) - 1.*t4236*(t6118 + t6120 - 1.*t6062*t6480 - 1.*t6053*t6521) - 0.19074*(t6073*t6478 + t7542) + 0.03315*(t6073*t6445 + t7551))*var2[15] + (-1.*t4168*(t5983*t6656 + t5568*t6664) - 1.*t4236*(-1.*t6062*t6664 - 1.*t6656*t6741) - 0.19074*(-1.*t6478*t6486 + t7542) + 0.03315*(-1.*t6445*t6486 + t7551))*var2[16];
  p_output1[105]=t5371;
  p_output1[106]=t5404;
  p_output1[107]=t5433;
  p_output1[108]=0;
  p_output1[109]=0;
  p_output1[110]=0;
  p_output1[111]=0;
  p_output1[112]=0;
  p_output1[113]=0;
  p_output1[114]=0;
  p_output1[115]=0;
  p_output1[116]=0;
  p_output1[117]=0;
  p_output1[118]=0;
  p_output1[119]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 20 && ncols == 1) && 
      !(mrows == 1 && ncols == 20))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 20 && ncols == 1) && 
      !(mrows == 1 && ncols == 20))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 6, (mwSize) 20, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "dJs_RightShin_mex.hh"

namespace SymExpression
{

void dJs_RightShin_mex_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
