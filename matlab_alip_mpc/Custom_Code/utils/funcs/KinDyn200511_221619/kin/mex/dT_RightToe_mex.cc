/*
 * Automatically Generated from Mathematica.
 * Mon 11 May 2020 22:30:57 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t534;
  double t560;
  double t614;
  double t658;
  double t524;
  double t665;
  double t743;
  double t640;
  double t682;
  double t702;
  double t462;
  double t745;
  double t762;
  double t775;
  double t805;
  double t809;
  double t821;
  double t826;
  double t844;
  double t882;
  double t942;
  double t720;
  double t906;
  double t922;
  double t438;
  double t953;
  double t965;
  double t970;
  double t1022;
  double t924;
  double t988;
  double t1000;
  double t430;
  double t1046;
  double t1062;
  double t1069;
  double t1136;
  double t1001;
  double t1089;
  double t1092;
  double t427;
  double t1157;
  double t1171;
  double t1190;
  double t359;
  double t1310;
  double t1288;
  double t1322;
  double t1326;
  double t1341;
  double t1343;
  double t1353;
  double t1330;
  double t1367;
  double t1377;
  double t1398;
  double t1413;
  double t1414;
  double t1383;
  double t1415;
  double t1417;
  double t1423;
  double t1432;
  double t1440;
  double t1418;
  double t1463;
  double t1470;
  double t1487;
  double t1489;
  double t1517;
  double t1216;
  double t1481;
  double t1518;
  double t1531;
  double t1538;
  double t1551;
  double t1558;
  double t1621;
  double t1625;
  double t1634;
  double t1642;
  double t1663;
  double t1669;
  double t1679;
  double t1695;
  double t1700;
  double t1710;
  double t1717;
  double t1726;
  double t1756;
  double t1763;
  double t1765;
  double t1740;
  double t1778;
  double t1779;
  double t1796;
  double t1805;
  double t1814;
  double t1861;
  double t1888;
  double t1896;
  double t1897;
  double t1889;
  double t1905;
  double t1910;
  double t1936;
  double t1961;
  double t1963;
  double t1932;
  double t1972;
  double t1980;
  double t1985;
  double t1986;
  double t1991;
  double t1981;
  double t1997;
  double t2011;
  double t2017;
  double t2024;
  double t2027;
  double t2132;
  double t2141;
  double t2142;
  double t2127;
  double t2143;
  double t2155;
  double t2174;
  double t2175;
  double t2184;
  double t2159;
  double t2188;
  double t2206;
  double t2211;
  double t2214;
  double t2218;
  double t2209;
  double t2225;
  double t2228;
  double t2240;
  double t2244;
  double t2246;
  double t2289;
  double t2296;
  double t2306;
  double t2316;
  double t2334;
  double t2340;
  double t2349;
  double t2336;
  double t2352;
  double t2363;
  double t2368;
  double t2373;
  double t2382;
  double t2418;
  double t2422;
  double t2428;
  double t2432;
  double t2437;
  double t2451;
  double t2460;
  double t2461;
  double t2486;
  double t2491;
  double t2494;
  double t2479;
  double t2496;
  double t2505;
  double t2524;
  double t2598;
  double t2600;
  double t2602;
  double t2607;
  double t2620;
  double t2621;
  double t2605;
  double t2624;
  double t2629;
  double t2635;
  double t2648;
  double t2655;
  double t2666;
  double t2690;
  double t2694;
  double t2634;
  double t2697;
  double t2698;
  double t2713;
  double t2714;
  double t2715;
  double t2705;
  double t2722;
  double t2725;
  double t2732;
  double t2733;
  double t2750;
  double t2730;
  double t2761;
  double t2767;
  double t2787;
  double t2802;
  double t2805;
  double t2864;
  double t2865;
  double t2869;
  double t2873;
  double t2877;
  double t2883;
  double t2884;
  double t2888;
  double t2893;
  double t2870;
  double t2899;
  double t2900;
  double t2904;
  double t2914;
  double t2915;
  double t2901;
  double t2923;
  double t2924;
  double t2929;
  double t2934;
  double t2947;
  double t2926;
  double t2949;
  double t2951;
  double t2957;
  double t2958;
  double t2967;
  double t3027;
  double t3032;
  double t3033;
  double t3034;
  double t3035;
  double t3049;
  double t3068;
  double t3071;
  double t3040;
  double t3087;
  double t3088;
  double t3095;
  double t3103;
  double t3108;
  double t3089;
  double t3109;
  double t3118;
  double t3122;
  double t3124;
  double t3125;
  double t3121;
  double t3131;
  double t3132;
  double t3138;
  double t3139;
  double t3142;
  double t3174;
  double t3180;
  double t3181;
  double t3186;
  double t3191;
  double t3192;
  double t3193;
  double t3202;
  double t3203;
  double t3207;
  double t3210;
  double t3215;
  double t3230;
  double t3237;
  double t3238;
  double t3222;
  double t3240;
  double t3241;
  double t3257;
  double t3259;
  double t3260;
  double t3301;
  double t3305;
  double t3310;
  double t3312;
  double t3309;
  double t3313;
  double t3316;
  double t3321;
  double t3322;
  double t3323;
  double t3319;
  double t3328;
  double t3330;
  double t3337;
  double t3338;
  double t3344;
  double t3334;
  double t3347;
  double t3348;
  double t3353;
  double t3361;
  double t3364;
  double t2567;
  double t2578;
  double t2584;
  double t3420;
  double t3425;
  double t3430;
  double t3414;
  double t3432;
  double t3433;
  double t3437;
  double t3445;
  double t3446;
  double t3435;
  double t3449;
  double t3453;
  double t3461;
  double t3474;
  double t3481;
  double t3460;
  double t3485;
  double t3486;
  double t3493;
  double t3509;
  double t3515;
  double t3573;
  double t3578;
  double t3581;
  double t3584;
  double t3586;
  double t3597;
  double t3599;
  double t3594;
  double t3600;
  double t3603;
  double t3610;
  double t3612;
  double t3613;
  double t3642;
  double t3643;
  double t3647;
  double t3648;
  double t3650;
  double t3654;
  double t3655;
  double t3656;
  double t3678;
  double t3689;
  double t3690;
  double t3662;
  double t3693;
  double t3696;
  double t3698;
  double t3741;
  double t3747;
  double t3749;
  double t3753;
  double t3757;
  double t3759;
  double t3760;
  double t3766;
  double t3768;
  double t3780;
  double t3781;
  double t3783;
  double t3771;
  double t3789;
  double t3791;
  double t3802;
  double t3803;
  double t3810;
  double t3850;
  double t3854;
  double t3855;
  double t3858;
  double t3859;
  double t3861;
  double t3857;
  double t3866;
  double t3872;
  double t3880;
  double t3882;
  double t3894;
  double t3873;
  double t3895;
  double t3903;
  double t3907;
  double t3916;
  double t3919;
  double t3905;
  double t3920;
  double t3922;
  double t3937;
  double t3944;
  double t3946;
  double t3923;
  double t3947;
  double t3948;
  double t3950;
  double t3951;
  double t3952;
  double t3966;
  double t3970;
  double t3975;
  double t3997;
  double t4000;
  double t4001;
  double t3996;
  double t4002;
  double t4003;
  double t4005;
  double t4007;
  double t4008;
  double t4004;
  double t4010;
  double t4011;
  double t4016;
  double t4020;
  double t4022;
  double t4015;
  double t4023;
  double t4028;
  double t4035;
  double t4037;
  double t4043;
  double t4069;
  double t4077;
  double t4080;
  double t4092;
  double t4097;
  double t4103;
  double t4108;
  double t4102;
  double t4115;
  double t4116;
  double t4118;
  double t4120;
  double t4125;
  double t4214;
  double t4215;
  double t4217;
  double t4218;
  double t4219;
  double t4221;
  double t4222;
  double t4227;
  double t4303;
  double t4305;
  double t4311;
  double t4253;
  double t4324;
  double t4329;
  double t4332;
  double t4415;
  double t4426;
  double t4434;
  double t4450;
  double t4451;
  double t4455;
  double t4457;
  double t4461;
  double t4464;
  double t4446;
  double t4466;
  double t4468;
  double t4479;
  double t4481;
  double t4487;
  double t4476;
  double t4491;
  double t4495;
  double t4501;
  double t4509;
  double t4512;
  double t4496;
  double t4528;
  double t4529;
  double t4537;
  double t4538;
  double t4539;
  double t1107;
  double t1191;
  double t1210;
  double t1224;
  double t1234;
  double t1261;
  double t1534;
  double t1560;
  double t1561;
  double t1567;
  double t1583;
  double t1587;
  double t1784;
  double t1818;
  double t1823;
  double t1834;
  double t1841;
  double t1850;
  double t2013;
  double t2035;
  double t2048;
  double t2102;
  double t2104;
  double t2105;
  double t2229;
  double t2247;
  double t2257;
  double t2261;
  double t2263;
  double t2271;
  double t2367;
  double t2384;
  double t2385;
  double t2387;
  double t2391;
  double t2398;
  double t2440;
  double t2470;
  double t2475;
  double t2480;
  double t2527;
  double t2544;
  double t4714;
  double t2785;
  double t2812;
  double t2820;
  double t2838;
  double t2840;
  double t2846;
  double t2956;
  double t2977;
  double t2983;
  double t2993;
  double t3004;
  double t3007;
  double t3134;
  double t3150;
  double t3156;
  double t3159;
  double t3161;
  double t3167;
  double t3243;
  double t3263;
  double t3270;
  double t3278;
  double t3279;
  double t3281;
  double t3349;
  double t3369;
  double t3375;
  double t3377;
  double t3379;
  double t3387;
  double t2589;
  double t2595;
  double t3491;
  double t3516;
  double t3524;
  double t3538;
  double t3546;
  double t3554;
  double t3608;
  double t3614;
  double t3615;
  double t3621;
  double t3623;
  double t3627;
  double t3653;
  double t3657;
  double t3660;
  double t3663;
  double t3703;
  double t3712;
  double t4964;
  double t3726;
  double t3728;
  double t3731;
  double t3801;
  double t3812;
  double t3821;
  double t3828;
  double t3833;
  double t3835;
  double t5015;
  double t5021;
  double t5025;
  double t4032;
  double t4044;
  double t4047;
  double t4055;
  double t4057;
  double t4061;
  double t4117;
  double t4137;
  double t4138;
  double t4152;
  double t4153;
  double t4180;
  double t4220;
  double t4231;
  double t4252;
  double t4279;
  double t4333;
  double t4339;
  double t5090;
  double t4383;
  double t4384;
  double t4402;
  double t4535;
  double t4553;
  double t4554;
  double t4563;
  double t4565;
  double t4567;
  double t5345;
  double t5354;
  double t5378;
  double t5379;
  double t5452;
  double t5454;
  double t5532;
  double t5539;
  double t5621;
  double t5626;
  double t5675;
  double t5676;
  double t5728;
  double t5729;
  double t4588;
  double t4589;
  double t4594;
  double t5406;
  double t5411;
  double t5412;
  double t5360;
  double t5366;
  double t5368;
  double t5456;
  double t5460;
  double t5462;
  double t5419;
  double t5423;
  double t5435;
  double t5497;
  double t5498;
  double t5510;
  double t5554;
  double t5579;
  double t5586;
  double t5600;
  double t5602;
  double t5611;
  double t5634;
  double t5636;
  double t5639;
  double t5661;
  double t5663;
  double t5668;
  double t5697;
  double t5699;
  double t5702;
  double t5704;
  double t5712;
  double t5715;
  double t5733;
  double t5736;
  double t5742;
  double t5748;
  double t5749;
  double t5758;
  double t4599;
  double t4610;
  double t4615;
  double t5394;
  double t4634;
  double t4642;
  double t4648;
  double t4652;
  double t4660;
  double t4661;
  double t4668;
  double t4672;
  double t4675;
  double t4683;
  double t4684;
  double t4688;
  double t4695;
  double t4697;
  double t4699;
  double t4716;
  double t4719;
  double t6660;
  double t4729;
  double t4733;
  double t5386;
  double t5398;
  double t4757;
  double t4759;
  double t4788;
  double t4799;
  double t4807;
  double t4810;
  double t4818;
  double t4820;
  double t4846;
  double t5902;
  double t5904;
  double t5905;
  double t5923;
  double t5934;
  double t4856;
  double t4859;
  double t4860;
  double t6056;
  double t6063;
  double t6069;
  double t6072;
  double t6075;
  double t4873;
  double t4881;
  double t4884;
  double t6199;
  double t6202;
  double t6209;
  double t6221;
  double t6222;
  double t4906;
  double t4910;
  double t4911;
  double t6317;
  double t6318;
  double t6345;
  double t6376;
  double t6383;
  double t4913;
  double t4914;
  double t4920;
  double t6480;
  double t6483;
  double t6486;
  double t6488;
  double t6494;
  double t4939;
  double t4947;
  double t4948;
  double t6602;
  double t6605;
  double t6614;
  double t6628;
  double t6631;
  double t4969;
  double t4971;
  double t6711;
  double t6716;
  double t6725;
  double t6727;
  double t6734;
  double t7702;
  double t4986;
  double t4990;
  double t5008;
  double t5009;
  double t5012;
  double t7901;
  double t7906;
  double t7918;
  double t7920;
  double t7927;
  double t7928;
  double t7938;
  double t7939;
  double t7947;
  double t7950;
  double t7956;
  double t7963;
  double t7972;
  double t7973;
  double t7976;
  double t7983;
  double t7984;
  double t5037;
  double t5040;
  double t5045;
  double t5047;
  double t5055;
  double t5058;
  double t5064;
  double t5070;
  double t5071;
  double t5111;
  double t5113;
  double t8210;
  double t5125;
  double t5129;
  double t5135;
  double t5138;
  double t5139;
  t534 = Cos(var1[3]);
  t560 = Cos(var1[4]);
  t614 = Cos(var1[5]);
  t658 = Sin(var1[13]);
  t524 = Cos(var1[13]);
  t665 = Sin(var1[5]);
  t743 = Cos(var1[15]);
  t640 = t524*t534*t560*t614;
  t682 = -1.*t534*t560*t658*t665;
  t702 = t640 + t682;
  t462 = Sin(var1[15]);
  t745 = Cos(var1[14]);
  t762 = Sin(var1[4]);
  t775 = -1.*t745*t534*t762;
  t805 = Sin(var1[14]);
  t809 = t534*t560*t614*t658;
  t821 = t524*t534*t560*t665;
  t826 = t809 + t821;
  t844 = t805*t826;
  t882 = t775 + t844;
  t942 = Cos(var1[16]);
  t720 = t462*t702;
  t906 = t743*t882;
  t922 = t720 + t906;
  t438 = Sin(var1[16]);
  t953 = t743*t702;
  t965 = -1.*t462*t882;
  t970 = t953 + t965;
  t1022 = Cos(var1[17]);
  t924 = -1.*t438*t922;
  t988 = t942*t970;
  t1000 = t924 + t988;
  t430 = Sin(var1[17]);
  t1046 = t942*t922;
  t1062 = t438*t970;
  t1069 = t1046 + t1062;
  t1136 = Cos(var1[18]);
  t1001 = t430*t1000;
  t1089 = t1022*t1069;
  t1092 = t1001 + t1089;
  t427 = Sin(var1[18]);
  t1157 = t1022*t1000;
  t1171 = -1.*t430*t1069;
  t1190 = t1157 + t1171;
  t359 = Cos(var1[19]);
  t1310 = Sin(var1[3]);
  t1288 = t534*t614*t762;
  t1322 = t1310*t665;
  t1326 = t1288 + t1322;
  t1341 = t614*t1310;
  t1343 = -1.*t534*t762*t665;
  t1353 = t1341 + t1343;
  t1330 = -1.*t658*t1326;
  t1367 = t524*t1353;
  t1377 = t1330 + t1367;
  t1398 = t524*t1326;
  t1413 = t658*t1353;
  t1414 = t1398 + t1413;
  t1383 = t462*t1377;
  t1415 = t743*t805*t1414;
  t1417 = t1383 + t1415;
  t1423 = t743*t1377;
  t1432 = -1.*t805*t462*t1414;
  t1440 = t1423 + t1432;
  t1418 = -1.*t438*t1417;
  t1463 = t942*t1440;
  t1470 = t1418 + t1463;
  t1487 = t942*t1417;
  t1489 = t438*t1440;
  t1517 = t1487 + t1489;
  t1216 = Sin(var1[19]);
  t1481 = t430*t1470;
  t1518 = t1022*t1517;
  t1531 = t1481 + t1518;
  t1538 = t1022*t1470;
  t1551 = -1.*t430*t1517;
  t1558 = t1538 + t1551;
  t1621 = -1.*t534*t560*t805;
  t1625 = t658*t1326;
  t1634 = -1.*t614*t1310;
  t1642 = t534*t762*t665;
  t1663 = t1634 + t1642;
  t1669 = t524*t1663;
  t1679 = t1625 + t1669;
  t1695 = t745*t1679;
  t1700 = t1621 + t1695;
  t1710 = -1.*t942*t462*t1700;
  t1717 = -1.*t743*t438*t1700;
  t1726 = t1710 + t1717;
  t1756 = t743*t942*t1700;
  t1763 = -1.*t462*t438*t1700;
  t1765 = t1756 + t1763;
  t1740 = t430*t1726;
  t1778 = t1022*t1765;
  t1779 = t1740 + t1778;
  t1796 = t1022*t1726;
  t1805 = -1.*t430*t1765;
  t1814 = t1796 + t1805;
  t1861 = -1.*t524*t1663;
  t1888 = t1330 + t1861;
  t1896 = -1.*t658*t1663;
  t1897 = t1398 + t1896;
  t1889 = t462*t1888;
  t1905 = t743*t805*t1897;
  t1910 = t1889 + t1905;
  t1936 = t743*t1888;
  t1961 = -1.*t805*t462*t1897;
  t1963 = t1936 + t1961;
  t1932 = -1.*t438*t1910;
  t1972 = t942*t1963;
  t1980 = t1932 + t1972;
  t1985 = t942*t1910;
  t1986 = t438*t1963;
  t1991 = t1985 + t1986;
  t1981 = t430*t1980;
  t1997 = t1022*t1991;
  t2011 = t1981 + t1997;
  t2017 = t1022*t1980;
  t2024 = -1.*t430*t1991;
  t2027 = t2017 + t2024;
  t2132 = t745*t534*t560;
  t2141 = t805*t1679;
  t2142 = t2132 + t2141;
  t2127 = -1.*t462*t1897;
  t2143 = -1.*t743*t2142;
  t2155 = t2127 + t2143;
  t2174 = t743*t1897;
  t2175 = -1.*t462*t2142;
  t2184 = t2174 + t2175;
  t2159 = t438*t2155;
  t2188 = t942*t2184;
  t2206 = t2159 + t2188;
  t2211 = t942*t2155;
  t2214 = -1.*t438*t2184;
  t2218 = t2211 + t2214;
  t2209 = -1.*t430*t2206;
  t2225 = t1022*t2218;
  t2228 = t2209 + t2225;
  t2240 = t1022*t2206;
  t2244 = t430*t2218;
  t2246 = t2240 + t2244;
  t2289 = t462*t1897;
  t2296 = t743*t2142;
  t2306 = t2289 + t2296;
  t2316 = -1.*t438*t2306;
  t2334 = t2316 + t2188;
  t2340 = -1.*t942*t2306;
  t2349 = t2340 + t2214;
  t2336 = -1.*t430*t2334;
  t2352 = t1022*t2349;
  t2363 = t2336 + t2352;
  t2368 = t1022*t2334;
  t2373 = t430*t2349;
  t2382 = t2368 + t2373;
  t2418 = t942*t2306;
  t2422 = t438*t2184;
  t2428 = t2418 + t2422;
  t2432 = -1.*t1022*t2428;
  t2437 = t2336 + t2432;
  t2451 = -1.*t430*t2428;
  t2460 = t2368 + t2451;
  t2461 = t1136*t2460;
  t2486 = t430*t2334;
  t2491 = t1022*t2428;
  t2494 = t2486 + t2491;
  t2479 = -1.*t427*t2460;
  t2496 = -1.*t427*t2494;
  t2505 = t2496 + t2461;
  t2524 = t1216*t2505;
  t2598 = -1.*t614*t1310*t762;
  t2600 = t534*t665;
  t2602 = t2598 + t2600;
  t2607 = -1.*t534*t614;
  t2620 = -1.*t1310*t762*t665;
  t2621 = t2607 + t2620;
  t2605 = t524*t2602;
  t2624 = -1.*t658*t2621;
  t2629 = t2605 + t2624;
  t2635 = -1.*t745*t560*t1310;
  t2648 = t658*t2602;
  t2655 = t524*t2621;
  t2666 = t2648 + t2655;
  t2690 = t805*t2666;
  t2694 = t2635 + t2690;
  t2634 = t462*t2629;
  t2697 = t743*t2694;
  t2698 = t2634 + t2697;
  t2713 = t743*t2629;
  t2714 = -1.*t462*t2694;
  t2715 = t2713 + t2714;
  t2705 = -1.*t438*t2698;
  t2722 = t942*t2715;
  t2725 = t2705 + t2722;
  t2732 = t942*t2698;
  t2733 = t438*t2715;
  t2750 = t2732 + t2733;
  t2730 = t430*t2725;
  t2761 = t1022*t2750;
  t2767 = t2730 + t2761;
  t2787 = t1022*t2725;
  t2802 = -1.*t430*t2750;
  t2805 = t2787 + t2802;
  t2864 = t524*t560*t614*t1310;
  t2865 = -1.*t560*t658*t1310*t665;
  t2869 = t2864 + t2865;
  t2873 = -1.*t745*t1310*t762;
  t2877 = t560*t614*t658*t1310;
  t2883 = t524*t560*t1310*t665;
  t2884 = t2877 + t2883;
  t2888 = t805*t2884;
  t2893 = t2873 + t2888;
  t2870 = t462*t2869;
  t2899 = t743*t2893;
  t2900 = t2870 + t2899;
  t2904 = t743*t2869;
  t2914 = -1.*t462*t2893;
  t2915 = t2904 + t2914;
  t2901 = -1.*t438*t2900;
  t2923 = t942*t2915;
  t2924 = t2901 + t2923;
  t2929 = t942*t2900;
  t2934 = t438*t2915;
  t2947 = t2929 + t2934;
  t2926 = t430*t2924;
  t2949 = t1022*t2947;
  t2951 = t2926 + t2949;
  t2957 = t1022*t2924;
  t2958 = -1.*t430*t2947;
  t2967 = t2957 + t2958;
  t3027 = t614*t1310*t762;
  t3032 = -1.*t534*t665;
  t3033 = t3027 + t3032;
  t3034 = -1.*t658*t3033;
  t3035 = t3034 + t2655;
  t3049 = t524*t3033;
  t3068 = t658*t2621;
  t3071 = t3049 + t3068;
  t3040 = t462*t3035;
  t3087 = t743*t805*t3071;
  t3088 = t3040 + t3087;
  t3095 = t743*t3035;
  t3103 = -1.*t805*t462*t3071;
  t3108 = t3095 + t3103;
  t3089 = -1.*t438*t3088;
  t3109 = t942*t3108;
  t3118 = t3089 + t3109;
  t3122 = t942*t3088;
  t3124 = t438*t3108;
  t3125 = t3122 + t3124;
  t3121 = t430*t3118;
  t3131 = t1022*t3125;
  t3132 = t3121 + t3131;
  t3138 = t1022*t3118;
  t3139 = -1.*t430*t3125;
  t3142 = t3138 + t3139;
  t3174 = -1.*t560*t805*t1310;
  t3180 = t658*t3033;
  t3181 = t534*t614;
  t3186 = t1310*t762*t665;
  t3191 = t3181 + t3186;
  t3192 = t524*t3191;
  t3193 = t3180 + t3192;
  t3202 = t745*t3193;
  t3203 = t3174 + t3202;
  t3207 = -1.*t942*t462*t3203;
  t3210 = -1.*t743*t438*t3203;
  t3215 = t3207 + t3210;
  t3230 = t743*t942*t3203;
  t3237 = -1.*t462*t438*t3203;
  t3238 = t3230 + t3237;
  t3222 = t430*t3215;
  t3240 = t1022*t3238;
  t3241 = t3222 + t3240;
  t3257 = t1022*t3215;
  t3259 = -1.*t430*t3238;
  t3260 = t3257 + t3259;
  t3301 = -1.*t524*t3191;
  t3305 = t3034 + t3301;
  t3310 = -1.*t658*t3191;
  t3312 = t3049 + t3310;
  t3309 = t462*t3305;
  t3313 = t743*t805*t3312;
  t3316 = t3309 + t3313;
  t3321 = t743*t3305;
  t3322 = -1.*t805*t462*t3312;
  t3323 = t3321 + t3322;
  t3319 = -1.*t438*t3316;
  t3328 = t942*t3323;
  t3330 = t3319 + t3328;
  t3337 = t942*t3316;
  t3338 = t438*t3323;
  t3344 = t3337 + t3338;
  t3334 = t430*t3330;
  t3347 = t1022*t3344;
  t3348 = t3334 + t3347;
  t3353 = t1022*t3330;
  t3361 = -1.*t430*t3344;
  t3364 = t3353 + t3361;
  t2567 = t1136*t2494;
  t2578 = t427*t2460;
  t2584 = t2567 + t2578;
  t3420 = t745*t560*t1310;
  t3425 = t805*t3193;
  t3430 = t3420 + t3425;
  t3414 = -1.*t462*t3312;
  t3432 = -1.*t743*t3430;
  t3433 = t3414 + t3432;
  t3437 = t743*t3312;
  t3445 = -1.*t462*t3430;
  t3446 = t3437 + t3445;
  t3435 = t438*t3433;
  t3449 = t942*t3446;
  t3453 = t3435 + t3449;
  t3461 = t942*t3433;
  t3474 = -1.*t438*t3446;
  t3481 = t3461 + t3474;
  t3460 = -1.*t430*t3453;
  t3485 = t1022*t3481;
  t3486 = t3460 + t3485;
  t3493 = t1022*t3453;
  t3509 = t430*t3481;
  t3515 = t3493 + t3509;
  t3573 = t462*t3312;
  t3578 = t743*t3430;
  t3581 = t3573 + t3578;
  t3584 = -1.*t438*t3581;
  t3586 = t3584 + t3449;
  t3597 = -1.*t942*t3581;
  t3599 = t3597 + t3474;
  t3594 = -1.*t430*t3586;
  t3600 = t1022*t3599;
  t3603 = t3594 + t3600;
  t3610 = t1022*t3586;
  t3612 = t430*t3599;
  t3613 = t3610 + t3612;
  t3642 = t942*t3581;
  t3643 = t438*t3446;
  t3647 = t3642 + t3643;
  t3648 = -1.*t1022*t3647;
  t3650 = t3594 + t3648;
  t3654 = -1.*t430*t3647;
  t3655 = t3610 + t3654;
  t3656 = t1136*t3655;
  t3678 = t430*t3586;
  t3689 = t1022*t3647;
  t3690 = t3678 + t3689;
  t3662 = -1.*t427*t3655;
  t3693 = -1.*t427*t3690;
  t3696 = t3693 + t3656;
  t3698 = t1216*t3696;
  t3741 = t805*t762;
  t3747 = t560*t614*t658;
  t3749 = t524*t560*t665;
  t3753 = t3747 + t3749;
  t3757 = t745*t3753;
  t3759 = t3741 + t3757;
  t3760 = -1.*t942*t462*t3759;
  t3766 = -1.*t743*t438*t3759;
  t3768 = t3760 + t3766;
  t3780 = t743*t942*t3759;
  t3781 = -1.*t462*t438*t3759;
  t3783 = t3780 + t3781;
  t3771 = t430*t3768;
  t3789 = t1022*t3783;
  t3791 = t3771 + t3789;
  t3802 = t1022*t3768;
  t3803 = -1.*t430*t3783;
  t3810 = t3802 + t3803;
  t3850 = -1.*t560*t614*t658;
  t3854 = -1.*t524*t560*t665;
  t3855 = t3850 + t3854;
  t3858 = t524*t560*t614;
  t3859 = -1.*t560*t658*t665;
  t3861 = t3858 + t3859;
  t3857 = t462*t3855;
  t3866 = t743*t805*t3861;
  t3872 = t3857 + t3866;
  t3880 = t743*t3855;
  t3882 = -1.*t805*t462*t3861;
  t3894 = t3880 + t3882;
  t3873 = -1.*t438*t3872;
  t3895 = t942*t3894;
  t3903 = t3873 + t3895;
  t3907 = t942*t3872;
  t3916 = t438*t3894;
  t3919 = t3907 + t3916;
  t3905 = t430*t3903;
  t3920 = t1022*t3919;
  t3922 = t3905 + t3920;
  t3937 = t1022*t3903;
  t3944 = -1.*t430*t3919;
  t3946 = t3937 + t3944;
  t3923 = -1.*t427*t3922;
  t3947 = t1136*t3946;
  t3948 = t3923 + t3947;
  t3950 = -1.*t359*t3948;
  t3951 = t1136*t3922;
  t3952 = t427*t3946;
  t3966 = t3951 + t3952;
  t3970 = t1216*t3966;
  t3975 = t3950 + t3970;
  t3997 = -1.*t745*t762;
  t4000 = t805*t3753;
  t4001 = t3997 + t4000;
  t3996 = -1.*t462*t3861;
  t4002 = -1.*t743*t4001;
  t4003 = t3996 + t4002;
  t4005 = t743*t3861;
  t4007 = -1.*t462*t4001;
  t4008 = t4005 + t4007;
  t4004 = t438*t4003;
  t4010 = t942*t4008;
  t4011 = t4004 + t4010;
  t4016 = t942*t4003;
  t4020 = -1.*t438*t4008;
  t4022 = t4016 + t4020;
  t4015 = -1.*t430*t4011;
  t4023 = t1022*t4022;
  t4028 = t4015 + t4023;
  t4035 = t1022*t4011;
  t4037 = t430*t4022;
  t4043 = t4035 + t4037;
  t4069 = t462*t3861;
  t4077 = t743*t4001;
  t4080 = t4069 + t4077;
  t4092 = -1.*t438*t4080;
  t4097 = t4092 + t4010;
  t4103 = -1.*t942*t4080;
  t4108 = t4103 + t4020;
  t4102 = -1.*t430*t4097;
  t4115 = t1022*t4108;
  t4116 = t4102 + t4115;
  t4118 = t1022*t4097;
  t4120 = t430*t4108;
  t4125 = t4118 + t4120;
  t4214 = t942*t4080;
  t4215 = t438*t4008;
  t4217 = t4214 + t4215;
  t4218 = -1.*t1022*t4217;
  t4219 = t4102 + t4218;
  t4221 = -1.*t430*t4217;
  t4222 = t4118 + t4221;
  t4227 = t1136*t4222;
  t4303 = t430*t4097;
  t4305 = t1022*t4217;
  t4311 = t4303 + t4305;
  t4253 = -1.*t427*t4222;
  t4324 = -1.*t427*t4311;
  t4329 = t4324 + t4227;
  t4332 = t1216*t4329;
  t4415 = -1.*t524*t614*t762;
  t4426 = t658*t762*t665;
  t4434 = t4415 + t4426;
  t4450 = -1.*t745*t560;
  t4451 = -1.*t614*t658*t762;
  t4455 = -1.*t524*t762*t665;
  t4457 = t4451 + t4455;
  t4461 = t805*t4457;
  t4464 = t4450 + t4461;
  t4446 = t462*t4434;
  t4466 = t743*t4464;
  t4468 = t4446 + t4466;
  t4479 = t743*t4434;
  t4481 = -1.*t462*t4464;
  t4487 = t4479 + t4481;
  t4476 = -1.*t438*t4468;
  t4491 = t942*t4487;
  t4495 = t4476 + t4491;
  t4501 = t942*t4468;
  t4509 = t438*t4487;
  t4512 = t4501 + t4509;
  t4496 = t430*t4495;
  t4528 = t1022*t4512;
  t4529 = t4496 + t4528;
  t4537 = t1022*t4495;
  t4538 = -1.*t430*t4512;
  t4539 = t4537 + t4538;
  t1107 = -1.*t427*t1092;
  t1191 = t1136*t1190;
  t1210 = t1107 + t1191;
  t1224 = t1136*t1092;
  t1234 = t427*t1190;
  t1261 = t1224 + t1234;
  t1534 = -1.*t427*t1531;
  t1560 = t1136*t1558;
  t1561 = t1534 + t1560;
  t1567 = t1136*t1531;
  t1583 = t427*t1558;
  t1587 = t1567 + t1583;
  t1784 = -1.*t427*t1779;
  t1818 = t1136*t1814;
  t1823 = t1784 + t1818;
  t1834 = t1136*t1779;
  t1841 = t427*t1814;
  t1850 = t1834 + t1841;
  t2013 = -1.*t427*t2011;
  t2035 = t1136*t2027;
  t2048 = t2013 + t2035;
  t2102 = t1136*t2011;
  t2104 = t427*t2027;
  t2105 = t2102 + t2104;
  t2229 = t427*t2228;
  t2247 = t1136*t2246;
  t2257 = t2229 + t2247;
  t2261 = t1136*t2228;
  t2263 = -1.*t427*t2246;
  t2271 = t2261 + t2263;
  t2367 = t427*t2363;
  t2384 = t1136*t2382;
  t2385 = t2367 + t2384;
  t2387 = t1136*t2363;
  t2391 = -1.*t427*t2382;
  t2398 = t2387 + t2391;
  t2440 = t427*t2437;
  t2470 = t2440 + t2461;
  t2475 = t1136*t2437;
  t2480 = t2475 + t2479;
  t2527 = -1.*t1136*t2494;
  t2544 = t2527 + t2479;
  t4714 = t359*t2505;
  t2785 = -1.*t427*t2767;
  t2812 = t1136*t2805;
  t2820 = t2785 + t2812;
  t2838 = t1136*t2767;
  t2840 = t427*t2805;
  t2846 = t2838 + t2840;
  t2956 = -1.*t427*t2951;
  t2977 = t1136*t2967;
  t2983 = t2956 + t2977;
  t2993 = t1136*t2951;
  t3004 = t427*t2967;
  t3007 = t2993 + t3004;
  t3134 = -1.*t427*t3132;
  t3150 = t1136*t3142;
  t3156 = t3134 + t3150;
  t3159 = t1136*t3132;
  t3161 = t427*t3142;
  t3167 = t3159 + t3161;
  t3243 = -1.*t427*t3241;
  t3263 = t1136*t3260;
  t3270 = t3243 + t3263;
  t3278 = t1136*t3241;
  t3279 = t427*t3260;
  t3281 = t3278 + t3279;
  t3349 = -1.*t427*t3348;
  t3369 = t1136*t3364;
  t3375 = t3349 + t3369;
  t3377 = t1136*t3348;
  t3379 = t427*t3364;
  t3387 = t3377 + t3379;
  t2589 = t359*t2584;
  t2595 = t2524 + t2589;
  t3491 = t427*t3486;
  t3516 = t1136*t3515;
  t3524 = t3491 + t3516;
  t3538 = t1136*t3486;
  t3546 = -1.*t427*t3515;
  t3554 = t3538 + t3546;
  t3608 = t427*t3603;
  t3614 = t1136*t3613;
  t3615 = t3608 + t3614;
  t3621 = t1136*t3603;
  t3623 = -1.*t427*t3613;
  t3627 = t3621 + t3623;
  t3653 = t427*t3650;
  t3657 = t3653 + t3656;
  t3660 = t1136*t3650;
  t3663 = t3660 + t3662;
  t3703 = -1.*t1136*t3690;
  t3712 = t3703 + t3662;
  t4964 = t359*t3696;
  t3726 = t1136*t3690;
  t3728 = t427*t3655;
  t3731 = t3726 + t3728;
  t3801 = -1.*t427*t3791;
  t3812 = t1136*t3810;
  t3821 = t3801 + t3812;
  t3828 = t1136*t3791;
  t3833 = t427*t3810;
  t3835 = t3828 + t3833;
  t5015 = t1216*t3948;
  t5021 = t359*t3966;
  t5025 = t5015 + t5021;
  t4032 = t427*t4028;
  t4044 = t1136*t4043;
  t4047 = t4032 + t4044;
  t4055 = t1136*t4028;
  t4057 = -1.*t427*t4043;
  t4061 = t4055 + t4057;
  t4117 = t427*t4116;
  t4137 = t1136*t4125;
  t4138 = t4117 + t4137;
  t4152 = t1136*t4116;
  t4153 = -1.*t427*t4125;
  t4180 = t4152 + t4153;
  t4220 = t427*t4219;
  t4231 = t4220 + t4227;
  t4252 = t1136*t4219;
  t4279 = t4252 + t4253;
  t4333 = -1.*t1136*t4311;
  t4339 = t4333 + t4253;
  t5090 = t359*t4329;
  t4383 = t1136*t4311;
  t4384 = t427*t4222;
  t4402 = t4383 + t4384;
  t4535 = -1.*t427*t4529;
  t4553 = t1136*t4539;
  t4554 = t4535 + t4553;
  t4563 = t1136*t4529;
  t4565 = t427*t4539;
  t4567 = t4563 + t4565;
  t5345 = -1.*t524;
  t5354 = 1. + t5345;
  t5378 = -1.*t745;
  t5379 = 1. + t5378;
  t5452 = -1.*t743;
  t5454 = 1. + t5452;
  t5532 = -1.*t942;
  t5539 = 1. + t5532;
  t5621 = -1.*t1022;
  t5626 = 1. + t5621;
  t5675 = -1.*t1136;
  t5676 = 1. + t5675;
  t5728 = -1.*t359;
  t5729 = 1. + t5728;
  t4588 = t1216*t1210;
  t4589 = t359*t1261;
  t4594 = t4588 + t4589;
  t5406 = -0.135*t5354;
  t5411 = 0.07996*t658;
  t5412 = 0. + t5406 + t5411;
  t5360 = 0.07996*t5354;
  t5366 = 0.135*t658;
  t5368 = 0. + t5360 + t5366;
  t5456 = -0.01004*t5454;
  t5460 = 0.08055*t462;
  t5462 = 0. + t5456 + t5460;
  t5419 = -0.135*t5379;
  t5423 = 0.08055*t805;
  t5435 = 0. + t5419 + t5423;
  t5497 = -0.08055*t5454;
  t5498 = -0.01004*t462;
  t5510 = 0. + t5497 + t5498;
  t5554 = -0.08055*t5539;
  t5579 = -0.13004*t438;
  t5586 = 0. + t5554 + t5579;
  t5600 = -0.13004*t5539;
  t5602 = 0.08055*t438;
  t5611 = 0. + t5600 + t5602;
  t5634 = -0.19074*t5626;
  t5636 = 0.03315*t430;
  t5639 = 0. + t5634 + t5636;
  t5661 = -0.03315*t5626;
  t5663 = -0.19074*t430;
  t5668 = 0. + t5661 + t5663;
  t5697 = -0.01315*t5676;
  t5699 = -0.62554*t427;
  t5702 = 0. + t5697 + t5699;
  t5704 = -0.62554*t5676;
  t5712 = 0.01315*t427;
  t5715 = 0. + t5704 + t5712;
  t5733 = -1.03354*t5729;
  t5736 = 0.05315*t1216;
  t5742 = 0. + t5733 + t5736;
  t5748 = -0.05315*t5729;
  t5749 = -1.03354*t1216;
  t5758 = 0. + t5748 + t5749;
  t4599 = t1216*t1561;
  t4610 = t359*t1587;
  t4615 = t4599 + t4610;
  t5394 = -0.135*t805;
  t4634 = t1216*t1823;
  t4642 = t359*t1850;
  t4648 = t4634 + t4642;
  t4652 = t1216*t2048;
  t4660 = t359*t2105;
  t4661 = t4652 + t4660;
  t4668 = t359*t2257;
  t4672 = t1216*t2271;
  t4675 = t4668 + t4672;
  t4683 = t359*t2385;
  t4684 = t1216*t2398;
  t4688 = t4683 + t4684;
  t4695 = t359*t2470;
  t4697 = t1216*t2480;
  t4699 = t4695 + t4697;
  t4716 = t1216*t2544;
  t4719 = t4714 + t4716;
  t6660 = -1.*t1216*t2505;
  t4729 = -1.*t1216*t2584;
  t4733 = t4714 + t4729;
  t5386 = -0.08055*t5379;
  t5398 = 0. + t5386 + t5394;
  t4757 = t1216*t2820;
  t4759 = t359*t2846;
  t4788 = t4757 + t4759;
  t4799 = t1216*t2983;
  t4807 = t359*t3007;
  t4810 = t4799 + t4807;
  t4818 = t1216*t3156;
  t4820 = t359*t3167;
  t4846 = t4818 + t4820;
  t5902 = -0.135*t745;
  t5904 = -0.08055*t805;
  t5905 = t5902 + t5904;
  t5923 = 0.08055*t745;
  t5934 = t5923 + t5394;
  t4856 = t1216*t3270;
  t4859 = t359*t3281;
  t4860 = t4856 + t4859;
  t6056 = 0.135*t524;
  t6063 = t6056 + t5411;
  t6069 = 0.07996*t524;
  t6072 = -0.135*t658;
  t6075 = t6069 + t6072;
  t4873 = t1216*t3375;
  t4881 = t359*t3387;
  t4884 = t4873 + t4881;
  t6199 = 0.08055*t743;
  t6202 = t6199 + t5498;
  t6209 = -0.01004*t743;
  t6221 = -0.08055*t462;
  t6222 = t6209 + t6221;
  t4906 = t359*t3524;
  t4910 = t1216*t3554;
  t4911 = t4906 + t4910;
  t6317 = -0.13004*t942;
  t6318 = -0.08055*t438;
  t6345 = t6317 + t6318;
  t6376 = 0.08055*t942;
  t6383 = t6376 + t5579;
  t4913 = t359*t3615;
  t4914 = t1216*t3627;
  t4920 = t4913 + t4914;
  t6480 = 0.03315*t1022;
  t6483 = t6480 + t5663;
  t6486 = -0.19074*t1022;
  t6488 = -0.03315*t430;
  t6494 = t6486 + t6488;
  t4939 = t359*t3657;
  t4947 = t1216*t3663;
  t4948 = t4939 + t4947;
  t6602 = -0.62554*t1136;
  t6605 = -0.01315*t427;
  t6614 = t6602 + t6605;
  t6628 = 0.01315*t1136;
  t6631 = t6628 + t5699;
  t4969 = t1216*t3712;
  t4971 = t4964 + t4969;
  t6711 = 0.05315*t359;
  t6716 = t6711 + t5749;
  t6725 = -1.03354*t359;
  t6727 = -0.05315*t1216;
  t6734 = t6725 + t6727;
  t7702 = -1.*t1216*t3696;
  t4986 = -1.*t1216*t3731;
  t4990 = t4964 + t4986;
  t5008 = t1216*t3821;
  t5009 = t359*t3835;
  t5012 = t5008 + t5009;
  t7901 = t5462*t3855;
  t7906 = -0.1306*t745*t3861;
  t7918 = t5435*t3861;
  t7920 = t805*t5510*t3861;
  t7927 = t5586*t3872;
  t7928 = t5611*t3894;
  t7938 = t5639*t3903;
  t7939 = t5668*t3919;
  t7947 = t5702*t3922;
  t7950 = t5715*t3946;
  t7956 = t5742*t3948;
  t7963 = t5758*t3966;
  t7972 = -0.02565*t5025;
  t7973 = t359*t3948;
  t7976 = -1.*t1216*t3966;
  t7983 = t7973 + t7976;
  t7984 = -1.03824*t7983;
  t5037 = t359*t4047;
  t5040 = t1216*t4061;
  t5045 = t5037 + t5040;
  t5047 = t359*t4138;
  t5055 = t1216*t4180;
  t5058 = t5047 + t5055;
  t5064 = t359*t4231;
  t5070 = t1216*t4279;
  t5071 = t5064 + t5070;
  t5111 = t1216*t4339;
  t5113 = t5090 + t5111;
  t8210 = -1.*t1216*t4329;
  t5125 = -1.*t1216*t4402;
  t5129 = t5090 + t5125;
  t5135 = t1216*t4554;
  t5138 = t359*t4567;
  t5139 = t5135 + t5138;
  p_output1[0]=(t1216*t2846 - 1.*t2820*t359)*var2[3] + (t1216*t1261 - 1.*t1210*t359)*var2[4] + (t1216*t1587 - 1.*t1561*t359)*var2[5] + (t1216*t2105 - 1.*t2048*t359)*var2[13] + (t1216*t1850 - 1.*t1823*t359)*var2[14] + (t1216*t2257 - 1.*t2271*t359)*var2[15] + (t1216*t2385 - 1.*t2398*t359)*var2[16] + (t1216*t2470 - 1.*t2480*t359)*var2[17] + (t2524 - 1.*t2544*t359)*var2[18] + t2595*var2[19];
  p_output1[1]=(t1216*t2584 - 1.*t2505*t359)*var2[3] + (t1216*t3007 - 1.*t2983*t359)*var2[4] + (t1216*t3167 - 1.*t3156*t359)*var2[5] + (t1216*t3387 - 1.*t3375*t359)*var2[13] + (t1216*t3281 - 1.*t3270*t359)*var2[14] + (t1216*t3524 - 1.*t3554*t359)*var2[15] + (t1216*t3615 - 1.*t359*t3627)*var2[16] + (t1216*t3657 - 1.*t359*t3663)*var2[17] + (t3698 - 1.*t359*t3712)*var2[18] + (t3698 + t359*t3731)*var2[19];
  p_output1[2]=(-1.*t359*t4554 + t1216*t4567)*var2[4] + t3975*var2[5] + t3975*var2[13] + (-1.*t359*t3821 + t1216*t3835)*var2[14] + (t1216*t4047 - 1.*t359*t4061)*var2[15] + (t1216*t4138 - 1.*t359*t4180)*var2[16] + (t1216*t4231 - 1.*t359*t4279)*var2[17] + (t4332 - 1.*t359*t4339)*var2[18] + (t4332 + t359*t4402)*var2[19];
  p_output1[3]=0;
  p_output1[4]=t4788*var2[3] + t4594*var2[4] + t4615*var2[5] + t4661*var2[13] + t4648*var2[14] + t4675*var2[15] + t4688*var2[16] + t4699*var2[17] + t4719*var2[18] + t4733*var2[19];
  p_output1[5]=t2595*var2[3] + t4810*var2[4] + t4846*var2[5] + t4884*var2[13] + t4860*var2[14] + t4911*var2[15] + t4920*var2[16] + t4948*var2[17] + t4971*var2[18] + t4990*var2[19];
  p_output1[6]=t5139*var2[4] + t5025*var2[5] + t5025*var2[13] + t5012*var2[14] + t5045*var2[15] + t5058*var2[16] + t5071*var2[17] + t5113*var2[18] + t5129*var2[19];
  p_output1[7]=0;
  p_output1[8]=(t3174 - 1.*t2666*t745)*var2[3] + (-1.*t534*t762*t805 - 1.*t745*t826)*var2[4] - 1.*t1414*t745*var2[5] - 1.*t1897*t745*var2[13] + t2142*var2[14];
  p_output1[9]=(-1.*t1679*t745 + t534*t560*t805)*var2[3] + (-1.*t2884*t745 - 1.*t1310*t762*t805)*var2[4] - 1.*t3071*t745*var2[5] - 1.*t3312*t745*var2[13] + t3430*var2[14];
  p_output1[10]=(-1.*t4457*t745 - 1.*t560*t805)*var2[4] - 1.*t3861*t745*var2[5] - 1.*t3861*t745*var2[13] + t4001*var2[14];
  p_output1[11]=0;
  p_output1[12]=var2[0] + (-1.03824*(-1.*t1216*t2846 + t2820*t359) - 0.02565*t4788 + t2602*t5368 + t2621*t5412 + t2666*t5435 + t2629*t5462 + t2694*t5510 + t2698*t5586 - 1.*t1310*t5398*t560 + t2715*t5611 + t2725*t5639 + t2750*t5668 + t2767*t5702 + t2805*t5715 + t2820*t5742 + t2846*t5758 - 0.1306*(t2666*t745 + t1310*t560*t805))*var2[3] + (-1.03824*(-1.*t1216*t1261 + t1210*t359) - 0.02565*t4594 + t1000*t5639 + t1069*t5668 + t1092*t5702 + t1190*t5715 + t1210*t5742 + t1261*t5758 + t534*t5368*t560*t614 + t534*t5412*t560*t665 + t5462*t702 - 1.*t534*t5398*t762 + t5435*t826 - 0.1306*(t534*t762*t805 + t745*t826) + t5510*t882 + t5586*t922 + t5611*t970)*var2[4] + (-1.03824*(-1.*t1216*t1587 + t1561*t359) - 0.02565*t4615 + t1353*t5368 + t1326*t5412 + t1414*t5435 + t1377*t5462 + t1417*t5586 + t1440*t5611 + t1470*t5639 + t1517*t5668 + t1531*t5702 + t1558*t5715 + t1561*t5742 + t1587*t5758 - 0.1306*t1414*t745 + t1414*t5510*t805)*var2[5] + (-1.03824*(-1.*t1216*t2105 + t2048*t359) - 0.02565*t4661 + t1897*t5435 + t1888*t5462 + t1910*t5586 + t1963*t5611 + t1980*t5639 + t1991*t5668 + t2011*t5702 + t2027*t5715 + t2048*t5742 + t2105*t5758 + t1326*t6063 + t1663*t6075 - 0.1306*t1897*t745 + t1897*t5510*t805)*var2[13] + (-1.03824*(-1.*t1216*t1850 + t1823*t359) - 0.02565*t4648 + t1700*t5510 - 1.*t1700*t462*t5611 + t1726*t5639 + t1765*t5668 + t1779*t5702 + t1814*t5715 + t1823*t5742 + t1850*t5758 + t534*t560*t5905 + t1679*t5934 + t1700*t5586*t743 - 0.1306*(-1.*t534*t560*t745 - 1.*t1679*t805))*var2[14] + (-1.03824*(-1.*t1216*t2257 + t2271*t359) - 0.02565*t4675 + t2184*t5586 + t2155*t5611 + t2218*t5639 + t2206*t5668 + t2246*t5702 + t2228*t5715 + t2271*t5742 + t2257*t5758 + t1897*t6202 + t2142*t6222)*var2[15] + (-1.03824*(-1.*t1216*t2385 + t2398*t359) - 0.02565*t4688 + t2349*t5639 + t2334*t5668 + t2382*t5702 + t2363*t5715 + t2398*t5742 + t2385*t5758 + t2306*t6345 + t2184*t6383)*var2[16] + (-1.03824*(-1.*t1216*t2470 + t2480*t359) - 0.02565*t4699 + t2460*t5702 + t2437*t5715 + t2480*t5742 + t2470*t5758 + t2334*t6483 + t2428*t6494)*var2[17] + (-0.02565*t4719 + t2544*t5742 + t2505*t5758 + t2494*t6614 + t2460*t6631 - 1.03824*(t2544*t359 + t6660))*var2[18] + (-0.02565*t4733 - 1.03824*(-1.*t2584*t359 + t6660) + t2505*t6716 + t2584*t6734)*var2[19];
  p_output1[13]=var2[1] + (-0.1306*t1700 - 0.02565*t2595 - 1.03824*t4733 + t1326*t5368 + t1663*t5412 + t1679*t5435 + t1897*t5462 + t2142*t5510 + t2306*t5586 + t534*t5398*t560 + t2184*t5611 + t2334*t5639 + t2428*t5668 + t2494*t5702 + t2460*t5715 + t2505*t5742 + t2584*t5758)*var2[3] + (-1.03824*(-1.*t1216*t3007 + t2983*t359) - 0.02565*t4810 + t2884*t5435 + t2869*t5462 + t2893*t5510 + t2900*t5586 + t2915*t5611 + t2924*t5639 + t2947*t5668 + t2951*t5702 + t2967*t5715 + t2983*t5742 + t3007*t5758 + t1310*t5368*t560*t614 + t1310*t5412*t560*t665 - 1.*t1310*t5398*t762 - 0.1306*(t2884*t745 + t1310*t762*t805))*var2[4] + (-1.03824*(-1.*t1216*t3167 + t3156*t359) - 0.02565*t4846 + t2621*t5368 + t3033*t5412 + t3071*t5435 + t3035*t5462 + t3088*t5586 + t3108*t5611 + t3118*t5639 + t3125*t5668 + t3132*t5702 + t3142*t5715 + t3156*t5742 + t3167*t5758 - 0.1306*t3071*t745 + t3071*t5510*t805)*var2[5] + (-1.03824*(-1.*t1216*t3387 + t3375*t359) - 0.02565*t4884 + t3312*t5435 + t3305*t5462 + t3316*t5586 + t3323*t5611 + t3330*t5639 + t3344*t5668 + t3348*t5702 + t3364*t5715 + t3375*t5742 + t3387*t5758 + t3033*t6063 + t3191*t6075 - 0.1306*t3312*t745 + t3312*t5510*t805)*var2[13] + (-1.03824*(-1.*t1216*t3281 + t3270*t359) - 0.02565*t4860 + t3203*t5510 - 1.*t3203*t462*t5611 + t3215*t5639 + t3238*t5668 + t3241*t5702 + t3260*t5715 + t3270*t5742 + t3281*t5758 + t1310*t560*t5905 + t3193*t5934 + t3203*t5586*t743 - 0.1306*(t2635 - 1.*t3193*t805))*var2[14] + (-1.03824*(-1.*t1216*t3524 + t3554*t359) - 0.02565*t4911 + t3446*t5586 + t3433*t5611 + t3481*t5639 + t3453*t5668 + t3515*t5702 + t3486*t5715 + t3554*t5742 + t3524*t5758 + t3312*t6202 + t3430*t6222)*var2[15] + (-1.03824*(-1.*t1216*t3615 + t359*t3627) - 0.02565*t4920 + t3599*t5639 + t3586*t5668 + t3613*t5702 + t3603*t5715 + t3627*t5742 + t3615*t5758 + t3581*t6345 + t3446*t6383)*var2[16] + (-1.03824*(-1.*t1216*t3657 + t359*t3663) - 0.02565*t4948 + t3655*t5702 + t3650*t5715 + t3663*t5742 + t3657*t5758 + t3586*t6483 + t3647*t6494)*var2[17] + (-0.02565*t4971 + t3712*t5742 + t3696*t5758 + t3690*t6614 + t3655*t6631 - 1.03824*(t359*t3712 + t7702))*var2[18] + (-0.02565*t4990 + t3696*t6716 + t3731*t6734 - 1.03824*(-1.*t359*t3731 + t7702))*var2[19];
  p_output1[14]=var2[2] + (-1.03824*(t359*t4554 - 1.*t1216*t4567) - 0.02565*t5139 + t4457*t5435 + t4434*t5462 + t4464*t5510 + t4468*t5586 - 1.*t5398*t560 + t4487*t5611 + t4495*t5639 + t4512*t5668 + t4529*t5702 + t4539*t5715 + t4554*t5742 + t4567*t5758 - 1.*t5368*t614*t762 - 1.*t5412*t665*t762 - 0.1306*(t4457*t745 + t560*t805))*var2[4] + (t5412*t560*t614 - 1.*t5368*t560*t665 + t7901 + t7906 + t7918 + t7920 + t7927 + t7928 + t7938 + t7939 + t7947 + t7950 + t7956 + t7963 + t7972 + t7984)*var2[5] + (t560*t6063*t614 + t560*t6075*t665 + t7901 + t7906 + t7918 + t7920 + t7927 + t7928 + t7938 + t7939 + t7947 + t7950 + t7956 + t7963 + t7972 + t7984)*var2[13] + (-1.03824*(t359*t3821 - 1.*t1216*t3835) - 0.02565*t5012 + t3759*t5510 - 1.*t3759*t462*t5611 + t3768*t5639 + t3783*t5668 + t3791*t5702 + t3810*t5715 + t3821*t5742 + t3835*t5758 + t3753*t5934 + t3759*t5586*t743 - 1.*t5905*t762 - 0.1306*(t745*t762 - 1.*t3753*t805))*var2[14] + (-1.03824*(-1.*t1216*t4047 + t359*t4061) - 0.02565*t5045 + t4008*t5586 + t4003*t5611 + t4022*t5639 + t4011*t5668 + t4043*t5702 + t4028*t5715 + t4061*t5742 + t4047*t5758 + t3861*t6202 + t4001*t6222)*var2[15] + (-1.03824*(-1.*t1216*t4138 + t359*t4180) - 0.02565*t5058 + t4108*t5639 + t4097*t5668 + t4125*t5702 + t4116*t5715 + t4180*t5742 + t4138*t5758 + t4080*t6345 + t4008*t6383)*var2[16] + (-1.03824*(-1.*t1216*t4231 + t359*t4279) - 0.02565*t5071 + t4222*t5702 + t4219*t5715 + t4279*t5742 + t4231*t5758 + t4097*t6483 + t4217*t6494)*var2[17] + (-0.02565*t5113 + t4339*t5742 + t4329*t5758 + t4311*t6614 + t4222*t6631 - 1.03824*(t359*t4339 + t8210))*var2[18] + (-0.02565*t5129 + t4329*t6716 + t4402*t6734 - 1.03824*(-1.*t359*t4402 + t8210))*var2[19];
  p_output1[15]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 20 && ncols == 1) && 
      !(mrows == 1 && ncols == 20))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 20 && ncols == 1) && 
      !(mrows == 1 && ncols == 20))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 4, (mwSize) 4, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "dT_RightToe_mex.hh"

namespace SymExpression
{

void dT_RightToe_mex_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
