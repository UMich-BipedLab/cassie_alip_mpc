/*
 * Automatically Generated from Mathematica.
 * Mon 11 May 2020 22:31:41 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t584;
  double t499;
  double t588;
  double t503;
  double t612;
  double t478;
  double t487;
  double t520;
  double t618;
  double t632;
  double t669;
  double t672;
  double t691;
  double t715;
  double t716;
  double t720;
  double t726;
  double t728;
  double t743;
  double t749;
  double t794;
  double t815;
  double t829;
  double t458;
  double t473;
  double t837;
  double t907;
  double t821;
  double t880;
  double t883;
  double t409;
  double t925;
  double t931;
  double t1005;
  double t1038;
  double t892;
  double t1025;
  double t1029;
  double t311;
  double t1048;
  double t1054;
  double t1063;
  double t1088;
  double t1031;
  double t1073;
  double t1086;
  double t218;
  double t1120;
  double t1125;
  double t1165;
  double t1372;
  double t1378;
  double t1391;
  double t1451;
  double t1456;
  double t1457;
  double t1342;
  double t1421;
  double t1426;
  double t1439;
  double t1484;
  double t1487;
  double t1509;
  double t1520;
  double t1525;
  double t1497;
  double t1541;
  double t1544;
  double t1571;
  double t1574;
  double t1582;
  double t1550;
  double t1604;
  double t1618;
  double t1660;
  double t1682;
  double t1694;
  double t1641;
  double t1700;
  double t1701;
  double t1735;
  double t1743;
  double t1747;
  double t1903;
  double t1911;
  double t1844;
  double t1859;
  double t1876;
  double t1917;
  double t1922;
  double t1957;
  double t1975;
  double t1976;
  double t1924;
  double t1978;
  double t1980;
  double t1987;
  double t1990;
  double t2013;
  double t1983;
  double t2015;
  double t2033;
  double t2052;
  double t2054;
  double t2066;
  double t2034;
  double t2070;
  double t2075;
  double t2086;
  double t2087;
  double t2089;
  double t2219;
  double t2234;
  double t2235;
  double t2175;
  double t2176;
  double t2178;
  double t2179;
  double t2199;
  double t2207;
  double t2218;
  double t2236;
  double t2244;
  double t2277;
  double t2278;
  double t2283;
  double t2274;
  double t2290;
  double t2292;
  double t2317;
  double t2339;
  double t2342;
  double t2309;
  double t2346;
  double t2352;
  double t2363;
  double t2368;
  double t2374;
  double t2360;
  double t2381;
  double t2389;
  double t2408;
  double t2417;
  double t2420;
  double t2525;
  double t2531;
  double t2534;
  double t2499;
  double t2504;
  double t2508;
  double t2604;
  double t2607;
  double t2614;
  double t2496;
  double t2513;
  double t2540;
  double t2541;
  double t2579;
  double t2592;
  double t2594;
  double t2615;
  double t2620;
  double t2636;
  double t2645;
  double t2653;
  double t2629;
  double t2664;
  double t2674;
  double t2677;
  double t2698;
  double t2713;
  double t2675;
  double t2722;
  double t2732;
  double t2740;
  double t2741;
  double t2742;
  double t2735;
  double t2747;
  double t2749;
  double t2760;
  double t2766;
  double t2767;
  double t2849;
  double t2850;
  double t2853;
  double t2869;
  double t2873;
  double t2875;
  double t2890;
  double t2892;
  double t2898;
  double t2878;
  double t2903;
  double t2907;
  double t2910;
  double t2919;
  double t2926;
  double t2908;
  double t2930;
  double t2931;
  double t2935;
  double t2949;
  double t2953;
  double t2932;
  double t2959;
  double t2961;
  double t2964;
  double t2966;
  double t2974;
  double t3005;
  double t3017;
  double t3020;
  double t3021;
  double t3036;
  double t3056;
  double t3060;
  double t3051;
  double t3066;
  double t3067;
  double t3092;
  double t3093;
  double t3094;
  double t3075;
  double t3099;
  double t3126;
  double t3140;
  double t3145;
  double t3149;
  double t3207;
  double t3209;
  double t3219;
  double t3222;
  double t3226;
  double t3235;
  double t3245;
  double t3230;
  double t3251;
  double t3253;
  double t3260;
  double t3262;
  double t3264;
  double t3289;
  double t3294;
  double t3298;
  double t3300;
  double t3301;
  double t3310;
  double t3311;
  double t3305;
  double t3321;
  double t3347;
  double t3348;
  double t3356;
  double t3419;
  double t3423;
  double t3426;
  double t3427;
  double t3428;
  double t3431;
  double t3436;
  double t3440;
  double t3442;
  double t3448;
  double t3451;
  double t3464;
  double t3470;
  double t3473;
  double t3476;
  double t3489;
  double t3493;
  double t3494;
  double t3487;
  double t3496;
  double t3500;
  double t3520;
  double t3528;
  double t3533;
  double t3502;
  double t3541;
  double t3545;
  double t3556;
  double t3564;
  double t3566;
  double t3631;
  double t3640;
  double t3605;
  double t3609;
  double t3611;
  double t3614;
  double t3641;
  double t3642;
  double t3648;
  double t3659;
  double t3662;
  double t3645;
  double t3666;
  double t3667;
  double t3675;
  double t3678;
  double t3680;
  double t3672;
  double t3683;
  double t3687;
  double t3696;
  double t3706;
  double t3709;
  double t3694;
  double t3710;
  double t3722;
  double t3727;
  double t3740;
  double t3746;
  double t3805;
  double t3811;
  double t3792;
  double t3797;
  double t3804;
  double t3813;
  double t3816;
  double t3821;
  double t3822;
  double t3824;
  double t3818;
  double t3825;
  double t3831;
  double t3833;
  double t3835;
  double t3837;
  double t3832;
  double t3839;
  double t3857;
  double t3868;
  double t3872;
  double t3876;
  double t3858;
  double t3887;
  double t3893;
  double t3902;
  double t3904;
  double t3912;
  double t3965;
  double t3975;
  double t3980;
  double t3941;
  double t3949;
  double t3951;
  double t3957;
  double t3958;
  double t3959;
  double t3962;
  double t3983;
  double t3984;
  double t3993;
  double t3994;
  double t3998;
  double t3992;
  double t3999;
  double t4000;
  double t4012;
  double t4021;
  double t4023;
  double t4002;
  double t4036;
  double t4039;
  double t4051;
  double t4055;
  double t4058;
  double t4043;
  double t4059;
  double t4060;
  double t4074;
  double t4077;
  double t4086;
  double t4115;
  double t4116;
  double t4130;
  double t4136;
  double t4151;
  double t4152;
  double t4162;
  double t4163;
  double t4164;
  double t4153;
  double t4175;
  double t4182;
  double t4188;
  double t4192;
  double t4199;
  double t4187;
  double t4201;
  double t4208;
  double t4216;
  double t4220;
  double t4222;
  double t4209;
  double t4228;
  double t4230;
  double t4265;
  double t4273;
  double t4276;
  double t4342;
  double t4345;
  double t4359;
  double t4365;
  double t4368;
  double t4371;
  double t4381;
  double t4369;
  double t4382;
  double t4383;
  double t4405;
  double t4406;
  double t4411;
  double t4397;
  double t4412;
  double t4418;
  double t4424;
  double t4426;
  double t4429;
  double t4480;
  double t4481;
  double t4482;
  double t4486;
  double t4487;
  double t4492;
  double t4495;
  double t4490;
  double t4508;
  double t4517;
  double t4528;
  double t4533;
  double t4535;
  double t4558;
  double t4562;
  double t4576;
  double t4578;
  double t4589;
  double t4601;
  double t4605;
  double t4594;
  double t4622;
  double t4648;
  double t4665;
  double t4666;
  double t3390;
  double t3396;
  double t4748;
  double t4768;
  double t4777;
  double t4788;
  double t4791;
  double t4809;
  double t4816;
  double t4824;
  double t4827;
  double t4833;
  double t4834;
  double t4851;
  double t4829;
  double t4855;
  double t4862;
  double t4867;
  double t4874;
  double t4879;
  double t4863;
  double t4881;
  double t4885;
  double t4893;
  double t4896;
  double t4915;
  double t4965;
  double t4966;
  double t4968;
  double t4958;
  double t4961;
  double t4963;
  double t4964;
  double t4970;
  double t4971;
  double t4981;
  double t4983;
  double t4988;
  double t4979;
  double t4990;
  double t4991;
  double t5001;
  double t5002;
  double t5011;
  double t5000;
  double t5012;
  double t5020;
  double t5026;
  double t5045;
  double t5051;
  double t5022;
  double t5052;
  double t5059;
  double t5064;
  double t5065;
  double t5072;
  double t5060;
  double t5073;
  double t5076;
  double t5080;
  double t5093;
  double t5095;
  double t5097;
  double t5098;
  double t5101;
  double t5121;
  double t5122;
  double t5127;
  double t5130;
  double t5142;
  double t5145;
  double t5149;
  double t5150;
  double t5151;
  double t5148;
  double t5159;
  double t5164;
  double t5168;
  double t5173;
  double t5181;
  double t5167;
  double t5191;
  double t5192;
  double t5203;
  double t5209;
  double t5214;
  double t5199;
  double t5219;
  double t5222;
  double t5233;
  double t5234;
  double t5243;
  double t5278;
  double t5283;
  double t5285;
  double t5289;
  double t5301;
  double t5308;
  double t5314;
  double t5306;
  double t5316;
  double t5324;
  double t5326;
  double t5337;
  double t5338;
  double t5325;
  double t5346;
  double t5348;
  double t5362;
  double t5365;
  double t5369;
  double t5422;
  double t5426;
  double t5427;
  double t5428;
  double t5430;
  double t5435;
  double t5437;
  double t5432;
  double t5439;
  double t5448;
  double t5461;
  double t5467;
  double t5468;
  double t5509;
  double t5513;
  double t5520;
  double t5522;
  double t5529;
  double t5537;
  double t5539;
  double t5536;
  double t5566;
  double t5601;
  double t5619;
  double t5621;
  double t5739;
  double t5740;
  double t5741;
  double t5677;
  double t5693;
  double t5696;
  double t5709;
  double t5714;
  double t5726;
  double t5737;
  double t5760;
  double t5762;
  double t5773;
  double t5774;
  double t5782;
  double t5763;
  double t5786;
  double t5787;
  double t5790;
  double t5794;
  double t5802;
  double t5789;
  double t5804;
  double t5813;
  double t5816;
  double t5817;
  double t5818;
  double t5814;
  double t5832;
  double t5833;
  double t5840;
  double t5844;
  double t5850;
  double t1087;
  double t1168;
  double t1176;
  double t1209;
  double t1252;
  double t1258;
  double t1711;
  double t1767;
  double t1769;
  double t1787;
  double t1815;
  double t1820;
  double t2081;
  double t2095;
  double t2108;
  double t2120;
  double t2125;
  double t2139;
  double t2397;
  double t2439;
  double t2450;
  double t2473;
  double t2474;
  double t2478;
  double t2755;
  double t2773;
  double t2776;
  double t2804;
  double t2809;
  double t2815;
  double t2962;
  double t2975;
  double t2977;
  double t2985;
  double t2987;
  double t2990;
  double t3127;
  double t3156;
  double t3167;
  double t3183;
  double t3191;
  double t3195;
  double t3256;
  double t3265;
  double t3267;
  double t3270;
  double t3271;
  double t3272;
  double t3314;
  double t3316;
  double t3322;
  double t3332;
  double t3364;
  double t3365;
  double t3553;
  double t3571;
  double t3580;
  double t3584;
  double t3587;
  double t3593;
  double t3724;
  double t3747;
  double t3753;
  double t3756;
  double t3773;
  double t3778;
  double t3898;
  double t3915;
  double t3919;
  double t3924;
  double t3927;
  double t3930;
  double t4061;
  double t4089;
  double t4099;
  double t4101;
  double t4104;
  double t4106;
  double t4234;
  double t4278;
  double t4279;
  double t4286;
  double t4289;
  double t4301;
  double t4423;
  double t4437;
  double t4440;
  double t4462;
  double t4464;
  double t4467;
  double t4527;
  double t4538;
  double t4542;
  double t4546;
  double t4550;
  double t4551;
  double t4608;
  double t4613;
  double t4626;
  double t4630;
  double t4675;
  double t4678;
  double t4680;
  double t4683;
  double t4703;
  double t4728;
  double t4730;
  double t3399;
  double t4891;
  double t4921;
  double t4931;
  double t4935;
  double t4938;
  double t4939;
  double t6571;
  double t6579;
  double t6591;
  double t5224;
  double t5245;
  double t5247;
  double t5256;
  double t5260;
  double t5261;
  double t5352;
  double t5375;
  double t5391;
  double t5397;
  double t5401;
  double t5410;
  double t5455;
  double t5471;
  double t5481;
  double t5486;
  double t5488;
  double t5489;
  double t5554;
  double t5555;
  double t5575;
  double t5576;
  double t5629;
  double t5630;
  double t5647;
  double t5650;
  double t5834;
  double t5851;
  double t5852;
  double t5870;
  double t5871;
  double t5882;
  double t5966;
  double t5974;
  double t5976;
  double t6751;
  double t6754;
  double t6822;
  double t6823;
  double t6865;
  double t6867;
  double t6896;
  double t6899;
  double t6937;
  double t6938;
  double t6767;
  double t6776;
  double t6784;
  double t6788;
  double t6789;
  double t6756;
  double t6757;
  double t6758;
  double t6798;
  double t6800;
  double t6815;
  double t6827;
  double t6833;
  double t6843;
  double t6845;
  double t6851;
  double t6856;
  double t6875;
  double t6878;
  double t6879;
  double t6881;
  double t6884;
  double t6889;
  double t6900;
  double t6901;
  double t6905;
  double t6913;
  double t6914;
  double t6915;
  double t6980;
  double t6993;
  double t6994;
  double t7013;
  double t7016;
  double t7020;
  double t7042;
  double t7048;
  double t7049;
  double t6946;
  double t6947;
  double t6956;
  double t6974;
  double t6982;
  double t6731;
  double t5947;
  double t5948;
  double t5954;
  double t7173;
  double t7174;
  double t5906;
  double t5921;
  double t5926;
  double t6710;
  double t6711;
  double t6713;
  double t6730;
  double t6744;
  double t6037;
  double t6039;
  double t7106;
  double t7107;
  double t7109;
  double t7115;
  double t7116;
  double t6014;
  double t6015;
  double t6017;
  double t7325;
  double t7336;
  double t7341;
  double t7346;
  double t7347;
  double t7381;
  double t7383;
  double t7392;
  double t7401;
  double t7404;
  double t7455;
  double t7457;
  double t7466;
  double t7468;
  double t7473;
  double t7514;
  double t7515;
  double t7517;
  double t7521;
  double t7525;
  double t7577;
  double t7580;
  double t7583;
  double t7586;
  double t7587;
  double t6074;
  double t6076;
  double t6079;
  double t7993;
  double t7999;
  double t8000;
  double t8003;
  double t8004;
  double t8010;
  double t8013;
  double t8014;
  double t8016;
  double t8020;
  double t8021;
  double t8022;
  double t8025;
  double t8028;
  double t6065;
  double t6066;
  double t6068;
  t584 = Cos(var1[3]);
  t499 = Cos(var1[5]);
  t588 = Sin(var1[4]);
  t503 = Sin(var1[3]);
  t612 = Sin(var1[5]);
  t478 = Cos(var1[7]);
  t487 = Cos(var1[6]);
  t520 = -1.*t499*t503;
  t618 = t584*t588*t612;
  t632 = t520 + t618;
  t669 = t487*t632;
  t672 = t584*t499*t588;
  t691 = t503*t612;
  t715 = t672 + t691;
  t716 = Sin(var1[6]);
  t720 = t715*t716;
  t726 = t669 + t720;
  t728 = t478*t726;
  t743 = Cos(var1[4]);
  t749 = Sin(var1[7]);
  t794 = -1.*t584*t743*t749;
  t815 = t728 + t794;
  t829 = Cos(var1[9]);
  t458 = Cos(var1[8]);
  t473 = Sin(var1[9]);
  t837 = Sin(var1[8]);
  t907 = Cos(var1[10]);
  t821 = -1.*t458*t473*t815;
  t880 = -1.*t829*t815*t837;
  t883 = t821 + t880;
  t409 = Sin(var1[10]);
  t925 = t829*t458*t815;
  t931 = -1.*t473*t815*t837;
  t1005 = t925 + t931;
  t1038 = Cos(var1[11]);
  t892 = t409*t883;
  t1025 = t907*t1005;
  t1029 = t892 + t1025;
  t311 = Sin(var1[11]);
  t1048 = t907*t883;
  t1054 = -1.*t409*t1005;
  t1063 = t1048 + t1054;
  t1088 = Cos(var1[12]);
  t1031 = -1.*t311*t1029;
  t1073 = t1038*t1063;
  t1086 = t1031 + t1073;
  t218 = Sin(var1[12]);
  t1120 = t1038*t1029;
  t1125 = t311*t1063;
  t1165 = t1120 + t1125;
  t1372 = t499*t503;
  t1378 = -1.*t584*t588*t612;
  t1391 = t1372 + t1378;
  t1451 = t487*t1391;
  t1456 = -1.*t715*t716;
  t1457 = t1451 + t1456;
  t1342 = t487*t715;
  t1421 = t1391*t716;
  t1426 = t1342 + t1421;
  t1439 = t458*t1426*t749;
  t1484 = t1457*t837;
  t1487 = t1439 + t1484;
  t1509 = t458*t1457;
  t1520 = -1.*t1426*t749*t837;
  t1525 = t1509 + t1520;
  t1497 = -1.*t473*t1487;
  t1541 = t829*t1525;
  t1544 = t1497 + t1541;
  t1571 = t829*t1487;
  t1574 = t473*t1525;
  t1582 = t1571 + t1574;
  t1550 = t409*t1544;
  t1604 = t907*t1582;
  t1618 = t1550 + t1604;
  t1660 = t907*t1544;
  t1682 = -1.*t409*t1582;
  t1694 = t1660 + t1682;
  t1641 = -1.*t311*t1618;
  t1700 = t1038*t1694;
  t1701 = t1641 + t1700;
  t1735 = t1038*t1618;
  t1743 = t311*t1694;
  t1747 = t1735 + t1743;
  t1903 = -1.*t487*t632;
  t1911 = t1903 + t1456;
  t1844 = -1.*t632*t716;
  t1859 = t1342 + t1844;
  t1876 = t458*t1859*t749;
  t1917 = t1911*t837;
  t1922 = t1876 + t1917;
  t1957 = t458*t1911;
  t1975 = -1.*t1859*t749*t837;
  t1976 = t1957 + t1975;
  t1924 = -1.*t473*t1922;
  t1978 = t829*t1976;
  t1980 = t1924 + t1978;
  t1987 = t829*t1922;
  t1990 = t473*t1976;
  t2013 = t1987 + t1990;
  t1983 = t409*t1980;
  t2015 = t907*t2013;
  t2033 = t1983 + t2015;
  t2052 = t907*t1980;
  t2054 = -1.*t409*t2013;
  t2066 = t2052 + t2054;
  t2034 = -1.*t311*t2033;
  t2070 = t1038*t2066;
  t2075 = t2034 + t2070;
  t2086 = t1038*t2033;
  t2087 = t311*t2066;
  t2089 = t2086 + t2087;
  t2219 = t584*t743*t499*t487;
  t2234 = -1.*t584*t743*t612*t716;
  t2235 = t2219 + t2234;
  t2175 = -1.*t584*t478*t588;
  t2176 = t584*t743*t487*t612;
  t2178 = t584*t743*t499*t716;
  t2179 = t2176 + t2178;
  t2199 = t2179*t749;
  t2207 = t2175 + t2199;
  t2218 = t458*t2207;
  t2236 = t2235*t837;
  t2244 = t2218 + t2236;
  t2277 = t458*t2235;
  t2278 = -1.*t2207*t837;
  t2283 = t2277 + t2278;
  t2274 = -1.*t473*t2244;
  t2290 = t829*t2283;
  t2292 = t2274 + t2290;
  t2317 = t829*t2244;
  t2339 = t473*t2283;
  t2342 = t2317 + t2339;
  t2309 = t409*t2292;
  t2346 = t907*t2342;
  t2352 = t2309 + t2346;
  t2363 = t907*t2292;
  t2368 = -1.*t409*t2342;
  t2374 = t2363 + t2368;
  t2360 = -1.*t311*t2352;
  t2381 = t1038*t2374;
  t2389 = t2360 + t2381;
  t2408 = t1038*t2352;
  t2417 = t311*t2374;
  t2420 = t2408 + t2417;
  t2525 = -1.*t499*t503*t588;
  t2531 = t584*t612;
  t2534 = t2525 + t2531;
  t2499 = -1.*t584*t499;
  t2504 = -1.*t503*t588*t612;
  t2508 = t2499 + t2504;
  t2604 = t487*t2534;
  t2607 = -1.*t2508*t716;
  t2614 = t2604 + t2607;
  t2496 = -1.*t743*t478*t503;
  t2513 = t487*t2508;
  t2540 = t2534*t716;
  t2541 = t2513 + t2540;
  t2579 = t2541*t749;
  t2592 = t2496 + t2579;
  t2594 = t458*t2592;
  t2615 = t2614*t837;
  t2620 = t2594 + t2615;
  t2636 = t458*t2614;
  t2645 = -1.*t2592*t837;
  t2653 = t2636 + t2645;
  t2629 = -1.*t473*t2620;
  t2664 = t829*t2653;
  t2674 = t2629 + t2664;
  t2677 = t829*t2620;
  t2698 = t473*t2653;
  t2713 = t2677 + t2698;
  t2675 = t409*t2674;
  t2722 = t907*t2713;
  t2732 = t2675 + t2722;
  t2740 = t907*t2674;
  t2741 = -1.*t409*t2713;
  t2742 = t2740 + t2741;
  t2735 = -1.*t311*t2732;
  t2747 = t1038*t2742;
  t2749 = t2735 + t2747;
  t2760 = t1038*t2732;
  t2766 = t311*t2742;
  t2767 = t2760 + t2766;
  t2849 = t584*t743*t478;
  t2850 = t726*t749;
  t2853 = t2849 + t2850;
  t2869 = -1.*t458*t2853;
  t2873 = -1.*t1859*t837;
  t2875 = t2869 + t2873;
  t2890 = t458*t1859;
  t2892 = -1.*t2853*t837;
  t2898 = t2890 + t2892;
  t2878 = t473*t2875;
  t2903 = t829*t2898;
  t2907 = t2878 + t2903;
  t2910 = t829*t2875;
  t2919 = -1.*t473*t2898;
  t2926 = t2910 + t2919;
  t2908 = -1.*t409*t2907;
  t2930 = t907*t2926;
  t2931 = t2908 + t2930;
  t2935 = t907*t2907;
  t2949 = t409*t2926;
  t2953 = t2935 + t2949;
  t2932 = t311*t2931;
  t2959 = t1038*t2953;
  t2961 = t2932 + t2959;
  t2964 = t1038*t2931;
  t2966 = -1.*t311*t2953;
  t2974 = t2964 + t2966;
  t3005 = t458*t2853;
  t3017 = t1859*t837;
  t3020 = t3005 + t3017;
  t3021 = -1.*t473*t3020;
  t3036 = t3021 + t2903;
  t3056 = -1.*t829*t3020;
  t3060 = t3056 + t2919;
  t3051 = -1.*t409*t3036;
  t3066 = t907*t3060;
  t3067 = t3051 + t3066;
  t3092 = t907*t3036;
  t3093 = t409*t3060;
  t3094 = t3092 + t3093;
  t3075 = t311*t3067;
  t3099 = t1038*t3094;
  t3126 = t3075 + t3099;
  t3140 = t1038*t3067;
  t3145 = -1.*t311*t3094;
  t3149 = t3140 + t3145;
  t3207 = t829*t3020;
  t3209 = t473*t2898;
  t3219 = t3207 + t3209;
  t3222 = -1.*t907*t3219;
  t3226 = t3051 + t3222;
  t3235 = -1.*t409*t3219;
  t3245 = t3092 + t3235;
  t3230 = t311*t3226;
  t3251 = t1038*t3245;
  t3253 = t3230 + t3251;
  t3260 = t1038*t3226;
  t3262 = -1.*t311*t3245;
  t3264 = t3260 + t3262;
  t3289 = t409*t3036;
  t3294 = t907*t3219;
  t3298 = t3289 + t3294;
  t3300 = -1.*t311*t3298;
  t3301 = t3300 + t3251;
  t3310 = -1.*t1038*t3298;
  t3311 = t3310 + t3262;
  t3305 = -1.*t218*t3301;
  t3321 = t1088*t3301;
  t3347 = t1038*t3298;
  t3348 = t311*t3245;
  t3356 = t3347 + t3348;
  t3419 = t584*t499;
  t3423 = t503*t588*t612;
  t3426 = t3419 + t3423;
  t3427 = t487*t3426;
  t3428 = t499*t503*t588;
  t3431 = -1.*t584*t612;
  t3436 = t3428 + t3431;
  t3440 = t3436*t716;
  t3442 = t3427 + t3440;
  t3448 = t478*t3442;
  t3451 = -1.*t743*t503*t749;
  t3464 = t3448 + t3451;
  t3470 = -1.*t458*t473*t3464;
  t3473 = -1.*t829*t3464*t837;
  t3476 = t3470 + t3473;
  t3489 = t829*t458*t3464;
  t3493 = -1.*t473*t3464*t837;
  t3494 = t3489 + t3493;
  t3487 = t409*t3476;
  t3496 = t907*t3494;
  t3500 = t3487 + t3496;
  t3520 = t907*t3476;
  t3528 = -1.*t409*t3494;
  t3533 = t3520 + t3528;
  t3502 = -1.*t311*t3500;
  t3541 = t1038*t3533;
  t3545 = t3502 + t3541;
  t3556 = t1038*t3500;
  t3564 = t311*t3533;
  t3566 = t3556 + t3564;
  t3631 = -1.*t3436*t716;
  t3640 = t2513 + t3631;
  t3605 = t487*t3436;
  t3609 = t2508*t716;
  t3611 = t3605 + t3609;
  t3614 = t458*t3611*t749;
  t3641 = t3640*t837;
  t3642 = t3614 + t3641;
  t3648 = t458*t3640;
  t3659 = -1.*t3611*t749*t837;
  t3662 = t3648 + t3659;
  t3645 = -1.*t473*t3642;
  t3666 = t829*t3662;
  t3667 = t3645 + t3666;
  t3675 = t829*t3642;
  t3678 = t473*t3662;
  t3680 = t3675 + t3678;
  t3672 = t409*t3667;
  t3683 = t907*t3680;
  t3687 = t3672 + t3683;
  t3696 = t907*t3667;
  t3706 = -1.*t409*t3680;
  t3709 = t3696 + t3706;
  t3694 = -1.*t311*t3687;
  t3710 = t1038*t3709;
  t3722 = t3694 + t3710;
  t3727 = t1038*t3687;
  t3740 = t311*t3709;
  t3746 = t3727 + t3740;
  t3805 = -1.*t487*t3426;
  t3811 = t3805 + t3631;
  t3792 = -1.*t3426*t716;
  t3797 = t3605 + t3792;
  t3804 = t458*t3797*t749;
  t3813 = t3811*t837;
  t3816 = t3804 + t3813;
  t3821 = t458*t3811;
  t3822 = -1.*t3797*t749*t837;
  t3824 = t3821 + t3822;
  t3818 = -1.*t473*t3816;
  t3825 = t829*t3824;
  t3831 = t3818 + t3825;
  t3833 = t829*t3816;
  t3835 = t473*t3824;
  t3837 = t3833 + t3835;
  t3832 = t409*t3831;
  t3839 = t907*t3837;
  t3857 = t3832 + t3839;
  t3868 = t907*t3831;
  t3872 = -1.*t409*t3837;
  t3876 = t3868 + t3872;
  t3858 = -1.*t311*t3857;
  t3887 = t1038*t3876;
  t3893 = t3858 + t3887;
  t3902 = t1038*t3857;
  t3904 = t311*t3876;
  t3912 = t3902 + t3904;
  t3965 = t743*t499*t487*t503;
  t3975 = -1.*t743*t503*t612*t716;
  t3980 = t3965 + t3975;
  t3941 = -1.*t478*t503*t588;
  t3949 = t743*t487*t503*t612;
  t3951 = t743*t499*t503*t716;
  t3957 = t3949 + t3951;
  t3958 = t3957*t749;
  t3959 = t3941 + t3958;
  t3962 = t458*t3959;
  t3983 = t3980*t837;
  t3984 = t3962 + t3983;
  t3993 = t458*t3980;
  t3994 = -1.*t3959*t837;
  t3998 = t3993 + t3994;
  t3992 = -1.*t473*t3984;
  t3999 = t829*t3998;
  t4000 = t3992 + t3999;
  t4012 = t829*t3984;
  t4021 = t473*t3998;
  t4023 = t4012 + t4021;
  t4002 = t409*t4000;
  t4036 = t907*t4023;
  t4039 = t4002 + t4036;
  t4051 = t907*t4000;
  t4055 = -1.*t409*t4023;
  t4058 = t4051 + t4055;
  t4043 = -1.*t311*t4039;
  t4059 = t1038*t4058;
  t4060 = t4043 + t4059;
  t4074 = t1038*t4039;
  t4077 = t311*t4058;
  t4086 = t4074 + t4077;
  t4115 = t743*t478*t503;
  t4116 = t3442*t749;
  t4130 = t4115 + t4116;
  t4136 = -1.*t458*t4130;
  t4151 = -1.*t3797*t837;
  t4152 = t4136 + t4151;
  t4162 = t458*t3797;
  t4163 = -1.*t4130*t837;
  t4164 = t4162 + t4163;
  t4153 = t473*t4152;
  t4175 = t829*t4164;
  t4182 = t4153 + t4175;
  t4188 = t829*t4152;
  t4192 = -1.*t473*t4164;
  t4199 = t4188 + t4192;
  t4187 = -1.*t409*t4182;
  t4201 = t907*t4199;
  t4208 = t4187 + t4201;
  t4216 = t907*t4182;
  t4220 = t409*t4199;
  t4222 = t4216 + t4220;
  t4209 = t311*t4208;
  t4228 = t1038*t4222;
  t4230 = t4209 + t4228;
  t4265 = t1038*t4208;
  t4273 = -1.*t311*t4222;
  t4276 = t4265 + t4273;
  t4342 = t458*t4130;
  t4345 = t3797*t837;
  t4359 = t4342 + t4345;
  t4365 = -1.*t473*t4359;
  t4368 = t4365 + t4175;
  t4371 = -1.*t829*t4359;
  t4381 = t4371 + t4192;
  t4369 = -1.*t409*t4368;
  t4382 = t907*t4381;
  t4383 = t4369 + t4382;
  t4405 = t907*t4368;
  t4406 = t409*t4381;
  t4411 = t4405 + t4406;
  t4397 = t311*t4383;
  t4412 = t1038*t4411;
  t4418 = t4397 + t4412;
  t4424 = t1038*t4383;
  t4426 = -1.*t311*t4411;
  t4429 = t4424 + t4426;
  t4480 = t829*t4359;
  t4481 = t473*t4164;
  t4482 = t4480 + t4481;
  t4486 = -1.*t907*t4482;
  t4487 = t4369 + t4486;
  t4492 = -1.*t409*t4482;
  t4495 = t4405 + t4492;
  t4490 = t311*t4487;
  t4508 = t1038*t4495;
  t4517 = t4490 + t4508;
  t4528 = t1038*t4487;
  t4533 = -1.*t311*t4495;
  t4535 = t4528 + t4533;
  t4558 = t409*t4368;
  t4562 = t907*t4482;
  t4576 = t4558 + t4562;
  t4578 = -1.*t311*t4576;
  t4589 = t4578 + t4508;
  t4601 = -1.*t1038*t4576;
  t4605 = t4601 + t4533;
  t4594 = -1.*t218*t4589;
  t4622 = t1088*t4589;
  t4648 = t1038*t4576;
  t4665 = t311*t4495;
  t4666 = t4648 + t4665;
  t3390 = -1.*t218*t3356;
  t3396 = t3321 + t3390;
  t4748 = t743*t487*t612;
  t4768 = t743*t499*t716;
  t4777 = t4748 + t4768;
  t4788 = t478*t4777;
  t4791 = t588*t749;
  t4809 = t4788 + t4791;
  t4816 = -1.*t458*t473*t4809;
  t4824 = -1.*t829*t4809*t837;
  t4827 = t4816 + t4824;
  t4833 = t829*t458*t4809;
  t4834 = -1.*t473*t4809*t837;
  t4851 = t4833 + t4834;
  t4829 = t409*t4827;
  t4855 = t907*t4851;
  t4862 = t4829 + t4855;
  t4867 = t907*t4827;
  t4874 = -1.*t409*t4851;
  t4879 = t4867 + t4874;
  t4863 = -1.*t311*t4862;
  t4881 = t1038*t4879;
  t4885 = t4863 + t4881;
  t4893 = t1038*t4862;
  t4896 = t311*t4879;
  t4915 = t4893 + t4896;
  t4965 = -1.*t743*t487*t612;
  t4966 = -1.*t743*t499*t716;
  t4968 = t4965 + t4966;
  t4958 = t743*t499*t487;
  t4961 = -1.*t743*t612*t716;
  t4963 = t4958 + t4961;
  t4964 = t458*t4963*t749;
  t4970 = t4968*t837;
  t4971 = t4964 + t4970;
  t4981 = t458*t4968;
  t4983 = -1.*t4963*t749*t837;
  t4988 = t4981 + t4983;
  t4979 = -1.*t473*t4971;
  t4990 = t829*t4988;
  t4991 = t4979 + t4990;
  t5001 = t829*t4971;
  t5002 = t473*t4988;
  t5011 = t5001 + t5002;
  t5000 = t409*t4991;
  t5012 = t907*t5011;
  t5020 = t5000 + t5012;
  t5026 = t907*t4991;
  t5045 = -1.*t409*t5011;
  t5051 = t5026 + t5045;
  t5022 = -1.*t311*t5020;
  t5052 = t1038*t5051;
  t5059 = t5022 + t5052;
  t5064 = t1038*t5020;
  t5065 = t311*t5051;
  t5072 = t5064 + t5065;
  t5060 = t218*t5059;
  t5073 = t1088*t5072;
  t5076 = t5060 + t5073;
  t5080 = 0.642788*t5076;
  t5093 = t1088*t5059;
  t5095 = -1.*t218*t5072;
  t5097 = t5093 + t5095;
  t5098 = 0.766044*t5097;
  t5101 = t5080 + t5098;
  t5121 = -1.*t478*t588;
  t5122 = t4777*t749;
  t5127 = t5121 + t5122;
  t5130 = -1.*t458*t5127;
  t5142 = -1.*t4963*t837;
  t5145 = t5130 + t5142;
  t5149 = t458*t4963;
  t5150 = -1.*t5127*t837;
  t5151 = t5149 + t5150;
  t5148 = t473*t5145;
  t5159 = t829*t5151;
  t5164 = t5148 + t5159;
  t5168 = t829*t5145;
  t5173 = -1.*t473*t5151;
  t5181 = t5168 + t5173;
  t5167 = -1.*t409*t5164;
  t5191 = t907*t5181;
  t5192 = t5167 + t5191;
  t5203 = t907*t5164;
  t5209 = t409*t5181;
  t5214 = t5203 + t5209;
  t5199 = t311*t5192;
  t5219 = t1038*t5214;
  t5222 = t5199 + t5219;
  t5233 = t1038*t5192;
  t5234 = -1.*t311*t5214;
  t5243 = t5233 + t5234;
  t5278 = t458*t5127;
  t5283 = t4963*t837;
  t5285 = t5278 + t5283;
  t5289 = -1.*t473*t5285;
  t5301 = t5289 + t5159;
  t5308 = -1.*t829*t5285;
  t5314 = t5308 + t5173;
  t5306 = -1.*t409*t5301;
  t5316 = t907*t5314;
  t5324 = t5306 + t5316;
  t5326 = t907*t5301;
  t5337 = t409*t5314;
  t5338 = t5326 + t5337;
  t5325 = t311*t5324;
  t5346 = t1038*t5338;
  t5348 = t5325 + t5346;
  t5362 = t1038*t5324;
  t5365 = -1.*t311*t5338;
  t5369 = t5362 + t5365;
  t5422 = t829*t5285;
  t5426 = t473*t5151;
  t5427 = t5422 + t5426;
  t5428 = -1.*t907*t5427;
  t5430 = t5306 + t5428;
  t5435 = -1.*t409*t5427;
  t5437 = t5326 + t5435;
  t5432 = t311*t5430;
  t5439 = t1038*t5437;
  t5448 = t5432 + t5439;
  t5461 = t1038*t5430;
  t5467 = -1.*t311*t5437;
  t5468 = t5461 + t5467;
  t5509 = t409*t5301;
  t5513 = t907*t5427;
  t5520 = t5509 + t5513;
  t5522 = -1.*t311*t5520;
  t5529 = t5522 + t5439;
  t5537 = -1.*t1038*t5520;
  t5539 = t5537 + t5467;
  t5536 = -1.*t218*t5529;
  t5566 = t1088*t5529;
  t5601 = t1038*t5520;
  t5619 = t311*t5437;
  t5621 = t5601 + t5619;
  t5739 = -1.*t499*t487*t588;
  t5740 = t588*t612*t716;
  t5741 = t5739 + t5740;
  t5677 = -1.*t743*t478;
  t5693 = -1.*t487*t588*t612;
  t5696 = -1.*t499*t588*t716;
  t5709 = t5693 + t5696;
  t5714 = t5709*t749;
  t5726 = t5677 + t5714;
  t5737 = t458*t5726;
  t5760 = t5741*t837;
  t5762 = t5737 + t5760;
  t5773 = t458*t5741;
  t5774 = -1.*t5726*t837;
  t5782 = t5773 + t5774;
  t5763 = -1.*t473*t5762;
  t5786 = t829*t5782;
  t5787 = t5763 + t5786;
  t5790 = t829*t5762;
  t5794 = t473*t5782;
  t5802 = t5790 + t5794;
  t5789 = t409*t5787;
  t5804 = t907*t5802;
  t5813 = t5789 + t5804;
  t5816 = t907*t5787;
  t5817 = -1.*t409*t5802;
  t5818 = t5816 + t5817;
  t5814 = -1.*t311*t5813;
  t5832 = t1038*t5818;
  t5833 = t5814 + t5832;
  t5840 = t1038*t5813;
  t5844 = t311*t5818;
  t5850 = t5840 + t5844;
  t1087 = t218*t1086;
  t1168 = t1088*t1165;
  t1176 = t1087 + t1168;
  t1209 = t1088*t1086;
  t1252 = -1.*t218*t1165;
  t1258 = t1209 + t1252;
  t1711 = t218*t1701;
  t1767 = t1088*t1747;
  t1769 = t1711 + t1767;
  t1787 = t1088*t1701;
  t1815 = -1.*t218*t1747;
  t1820 = t1787 + t1815;
  t2081 = t218*t2075;
  t2095 = t1088*t2089;
  t2108 = t2081 + t2095;
  t2120 = t1088*t2075;
  t2125 = -1.*t218*t2089;
  t2139 = t2120 + t2125;
  t2397 = t218*t2389;
  t2439 = t1088*t2420;
  t2450 = t2397 + t2439;
  t2473 = t1088*t2389;
  t2474 = -1.*t218*t2420;
  t2478 = t2473 + t2474;
  t2755 = t218*t2749;
  t2773 = t1088*t2767;
  t2776 = t2755 + t2773;
  t2804 = t1088*t2749;
  t2809 = -1.*t218*t2767;
  t2815 = t2804 + t2809;
  t2962 = -1.*t218*t2961;
  t2975 = t1088*t2974;
  t2977 = t2962 + t2975;
  t2985 = t1088*t2961;
  t2987 = t218*t2974;
  t2990 = t2985 + t2987;
  t3127 = -1.*t218*t3126;
  t3156 = t1088*t3149;
  t3167 = t3127 + t3156;
  t3183 = t1088*t3126;
  t3191 = t218*t3149;
  t3195 = t3183 + t3191;
  t3256 = -1.*t218*t3253;
  t3265 = t1088*t3264;
  t3267 = t3256 + t3265;
  t3270 = t1088*t3253;
  t3271 = t218*t3264;
  t3272 = t3270 + t3271;
  t3314 = t1088*t3311;
  t3316 = t3305 + t3314;
  t3322 = t218*t3311;
  t3332 = t3321 + t3322;
  t3364 = -1.*t1088*t3356;
  t3365 = t3305 + t3364;
  t3553 = t218*t3545;
  t3571 = t1088*t3566;
  t3580 = t3553 + t3571;
  t3584 = t1088*t3545;
  t3587 = -1.*t218*t3566;
  t3593 = t3584 + t3587;
  t3724 = t218*t3722;
  t3747 = t1088*t3746;
  t3753 = t3724 + t3747;
  t3756 = t1088*t3722;
  t3773 = -1.*t218*t3746;
  t3778 = t3756 + t3773;
  t3898 = t218*t3893;
  t3915 = t1088*t3912;
  t3919 = t3898 + t3915;
  t3924 = t1088*t3893;
  t3927 = -1.*t218*t3912;
  t3930 = t3924 + t3927;
  t4061 = t218*t4060;
  t4089 = t1088*t4086;
  t4099 = t4061 + t4089;
  t4101 = t1088*t4060;
  t4104 = -1.*t218*t4086;
  t4106 = t4101 + t4104;
  t4234 = -1.*t218*t4230;
  t4278 = t1088*t4276;
  t4279 = t4234 + t4278;
  t4286 = t1088*t4230;
  t4289 = t218*t4276;
  t4301 = t4286 + t4289;
  t4423 = -1.*t218*t4418;
  t4437 = t1088*t4429;
  t4440 = t4423 + t4437;
  t4462 = t1088*t4418;
  t4464 = t218*t4429;
  t4467 = t4462 + t4464;
  t4527 = -1.*t218*t4517;
  t4538 = t1088*t4535;
  t4542 = t4527 + t4538;
  t4546 = t1088*t4517;
  t4550 = t218*t4535;
  t4551 = t4546 + t4550;
  t4608 = t1088*t4605;
  t4613 = t4594 + t4608;
  t4626 = t218*t4605;
  t4630 = t4622 + t4626;
  t4675 = -1.*t1088*t4666;
  t4678 = t4594 + t4675;
  t4680 = -1.*t218*t4666;
  t4683 = t4622 + t4680;
  t4703 = t218*t3301;
  t4728 = t1088*t3356;
  t4730 = t4703 + t4728;
  t3399 = 0.642788*t3396;
  t4891 = t218*t4885;
  t4921 = t1088*t4915;
  t4931 = t4891 + t4921;
  t4935 = t1088*t4885;
  t4938 = -1.*t218*t4915;
  t4939 = t4935 + t4938;
  t6571 = -0.766044*t5076;
  t6579 = 0.642788*t5097;
  t6591 = t6571 + t6579;
  t5224 = -1.*t218*t5222;
  t5245 = t1088*t5243;
  t5247 = t5224 + t5245;
  t5256 = t1088*t5222;
  t5260 = t218*t5243;
  t5261 = t5256 + t5260;
  t5352 = -1.*t218*t5348;
  t5375 = t1088*t5369;
  t5391 = t5352 + t5375;
  t5397 = t1088*t5348;
  t5401 = t218*t5369;
  t5410 = t5397 + t5401;
  t5455 = -1.*t218*t5448;
  t5471 = t1088*t5468;
  t5481 = t5455 + t5471;
  t5486 = t1088*t5448;
  t5488 = t218*t5468;
  t5489 = t5486 + t5488;
  t5554 = t1088*t5539;
  t5555 = t5536 + t5554;
  t5575 = t218*t5539;
  t5576 = t5566 + t5575;
  t5629 = -1.*t1088*t5621;
  t5630 = t5536 + t5629;
  t5647 = -1.*t218*t5621;
  t5650 = t5566 + t5647;
  t5834 = t218*t5833;
  t5851 = t1088*t5850;
  t5852 = t5834 + t5851;
  t5870 = t1088*t5833;
  t5871 = -1.*t218*t5850;
  t5882 = t5870 + t5871;
  t5966 = -1.*t584*t743*t478;
  t5974 = -1.*t726*t749;
  t5976 = t5966 + t5974;
  t6751 = -1.*t829;
  t6754 = 1. + t6751;
  t6822 = -1.*t907;
  t6823 = 1. + t6822;
  t6865 = -1.*t1038;
  t6867 = 1. + t6865;
  t6896 = -1.*t1088;
  t6899 = 1. + t6896;
  t6937 = -1.*t487;
  t6938 = 1. + t6937;
  t6767 = -1.*t458;
  t6776 = 1. + t6767;
  t6784 = -0.08055*t6776;
  t6788 = -0.01004*t837;
  t6789 = 0. + t6784 + t6788;
  t6756 = -0.08055*t6754;
  t6757 = -0.13004*t473;
  t6758 = 0. + t6756 + t6757;
  t6798 = -0.13004*t6754;
  t6800 = 0.08055*t473;
  t6815 = 0. + t6798 + t6800;
  t6827 = -0.19074*t6823;
  t6833 = 0.03315*t409;
  t6843 = 0. + t6827 + t6833;
  t6845 = -0.03315*t6823;
  t6851 = -0.19074*t409;
  t6856 = 0. + t6845 + t6851;
  t6875 = -0.01315*t6867;
  t6878 = -0.62554*t311;
  t6879 = 0. + t6875 + t6878;
  t6881 = -0.62554*t6867;
  t6884 = 0.01315*t311;
  t6889 = 0. + t6881 + t6884;
  t6900 = -1.03354*t6899;
  t6901 = 0.05315*t218;
  t6905 = 0. + t6900 + t6901;
  t6913 = -0.05315*t6899;
  t6914 = -1.03354*t218;
  t6915 = 0. + t6913 + t6914;
  t6980 = 0.07996*t716;
  t6993 = -1.*t478;
  t6994 = 1. + t6993;
  t7013 = 0.135*t6994;
  t7016 = 0.08055*t749;
  t7020 = 0. + t7013 + t7016;
  t7042 = -0.01004*t6776;
  t7048 = 0.08055*t837;
  t7049 = 0. + t7042 + t7048;
  t6946 = 0.07996*t6938;
  t6947 = -0.135*t716;
  t6956 = 0. + t6946 + t6947;
  t6974 = 0.135*t6938;
  t6982 = 0. + t6974 + t6980;
  t6731 = 0.135*t749;
  t5947 = t478*t2179;
  t5948 = t584*t588*t749;
  t5954 = t5947 + t5948;
  t7173 = -0.08055*t6994;
  t7174 = 0. + t7173 + t6731;
  t5906 = t478*t2541;
  t5921 = t743*t503*t749;
  t5926 = t5906 + t5921;
  t6710 = 0.135*t478;
  t6711 = -0.08055*t749;
  t6713 = t6710 + t6711;
  t6730 = 0.08055*t478;
  t6744 = t6730 + t6731;
  t6037 = -1.*t3442*t749;
  t6039 = t2496 + t6037;
  t7106 = -0.135*t487;
  t7107 = t7106 + t6980;
  t7109 = 0.07996*t487;
  t7115 = 0.135*t716;
  t7116 = t7109 + t7115;
  t6014 = t478*t3957;
  t6015 = t503*t588*t749;
  t6017 = t6014 + t6015;
  t7325 = -0.01004*t458;
  t7336 = -0.08055*t837;
  t7341 = t7325 + t7336;
  t7346 = 0.08055*t458;
  t7347 = t7346 + t6788;
  t7381 = -0.13004*t829;
  t7383 = -0.08055*t473;
  t7392 = t7381 + t7383;
  t7401 = 0.08055*t829;
  t7404 = t7401 + t6757;
  t7455 = 0.03315*t907;
  t7457 = t7455 + t6851;
  t7466 = -0.19074*t907;
  t7468 = -0.03315*t409;
  t7473 = t7466 + t7468;
  t7514 = -0.62554*t1038;
  t7515 = -0.01315*t311;
  t7517 = t7514 + t7515;
  t7521 = 0.01315*t1038;
  t7525 = t7521 + t6878;
  t7577 = 0.05315*t1088;
  t7580 = t7577 + t6914;
  t7583 = -1.03354*t1088;
  t7586 = -0.05315*t218;
  t7587 = t7583 + t7586;
  t6074 = t478*t588;
  t6076 = -1.*t4777*t749;
  t6079 = t6074 + t6076;
  t7993 = 0.1305*t478*t4963;
  t7999 = t4963*t7020;
  t8000 = t4963*t749*t6789;
  t8003 = t4968*t7049;
  t8004 = t6758*t4971;
  t8010 = t6815*t4988;
  t8013 = t6843*t4991;
  t8014 = t6856*t5011;
  t8016 = t6879*t5020;
  t8020 = t6889*t5051;
  t8021 = t6905*t5059;
  t8022 = t6915*t5072;
  t8025 = -0.00095*t5076;
  t8028 = -1.05124*t5097;
  t6065 = t478*t5709;
  t6066 = t743*t749;
  t6068 = t6065 + t6066;
  p_output1[0]=(0.642788*t2776 + 0.766044*t2815)*var2[3] + (0.642788*t2450 + 0.766044*t2478)*var2[4] + (0.642788*t1769 + 0.766044*t1820)*var2[5] + (0.642788*t2108 + 0.766044*t2139)*var2[6] + (0.642788*t1176 + 0.766044*t1258)*var2[7] + (0.766044*t2977 + 0.642788*t2990)*var2[8] + (0.766044*t3167 + 0.642788*t3195)*var2[9] + (0.766044*t3267 + 0.642788*t3272)*var2[10] + (0.766044*t3316 + 0.642788*t3332)*var2[11] + (0.766044*t3365 + t3399)*var2[12];
  p_output1[1]=(0.766044*t3396 + 0.642788*t4730)*var2[3] + (0.642788*t4099 + 0.766044*t4106)*var2[4] + (0.642788*t3753 + 0.766044*t3778)*var2[5] + (0.642788*t3919 + 0.766044*t3930)*var2[6] + (0.642788*t3580 + 0.766044*t3593)*var2[7] + (0.766044*t4279 + 0.642788*t4301)*var2[8] + (0.766044*t4440 + 0.642788*t4467)*var2[9] + (0.766044*t4542 + 0.642788*t4551)*var2[10] + (0.766044*t4613 + 0.642788*t4630)*var2[11] + (0.766044*t4678 + 0.642788*t4683)*var2[12];
  p_output1[2]=(0.642788*t5852 + 0.766044*t5882)*var2[4] + t5101*var2[5] + t5101*var2[6] + (0.642788*t4931 + 0.766044*t4939)*var2[7] + (0.766044*t5247 + 0.642788*t5261)*var2[8] + (0.766044*t5391 + 0.642788*t5410)*var2[9] + (0.766044*t5481 + 0.642788*t5489)*var2[10] + (0.766044*t5555 + 0.642788*t5576)*var2[11] + (0.766044*t5630 + 0.642788*t5650)*var2[12];
  p_output1[3]=0;
  p_output1[4]=t5926*var2[3] + t5954*var2[4] + t1426*t478*var2[5] + t1859*t478*var2[6] + t5976*var2[7];
  p_output1[5]=t815*var2[3] + t6017*var2[4] + t3611*t478*var2[5] + t3797*t478*var2[6] + t6039*var2[7];
  p_output1[6]=t6068*var2[4] + t478*t4963*var2[5] + t478*t4963*var2[6] + t6079*var2[7];
  p_output1[7]=0;
  p_output1[8]=(-0.766044*t2776 + 0.642788*t2815)*var2[3] + (-0.766044*t2450 + 0.642788*t2478)*var2[4] + (-0.766044*t1769 + 0.642788*t1820)*var2[5] + (-0.766044*t2108 + 0.642788*t2139)*var2[6] + (-0.766044*t1176 + 0.642788*t1258)*var2[7] + (0.642788*t2977 - 0.766044*t2990)*var2[8] + (0.642788*t3167 - 0.766044*t3195)*var2[9] + (0.642788*t3267 - 0.766044*t3272)*var2[10] + (0.642788*t3316 - 0.766044*t3332)*var2[11] + (0.642788*t3365 - 0.766044*t3396)*var2[12];
  p_output1[9]=(t3399 - 0.766044*t4730)*var2[3] + (-0.766044*t4099 + 0.642788*t4106)*var2[4] + (-0.766044*t3753 + 0.642788*t3778)*var2[5] + (-0.766044*t3919 + 0.642788*t3930)*var2[6] + (-0.766044*t3580 + 0.642788*t3593)*var2[7] + (0.642788*t4279 - 0.766044*t4301)*var2[8] + (0.642788*t4440 - 0.766044*t4467)*var2[9] + (0.642788*t4542 - 0.766044*t4551)*var2[10] + (0.642788*t4613 - 0.766044*t4630)*var2[11] + (0.642788*t4678 - 0.766044*t4683)*var2[12];
  p_output1[10]=(-0.766044*t5852 + 0.642788*t5882)*var2[4] + t6591*var2[5] + t6591*var2[6] + (-0.766044*t4931 + 0.642788*t4939)*var2[7] + (0.642788*t5247 - 0.766044*t5261)*var2[8] + (0.642788*t5391 - 0.766044*t5410)*var2[9] + (0.642788*t5481 - 0.766044*t5489)*var2[10] + (0.642788*t5555 - 0.766044*t5576)*var2[11] + (0.642788*t5630 - 0.766044*t5650)*var2[12];
  p_output1[11]=0;
  p_output1[12]=var2[0] + (-0.00095*t2776 - 1.05124*t2815 + 0.1305*t5926 + t2620*t6758 + t2592*t6789 + t2653*t6815 + t2674*t6843 + t2713*t6856 + t2732*t6879 + t2742*t6889 + t2749*t6905 + t2767*t6915 + t2534*t6956 + t2508*t6982 + t2541*t7020 + t2614*t7049 - 1.*t503*t7174*t743)*var2[3] + (-0.00095*t2450 - 1.05124*t2478 + 0.1305*t5954 + t2244*t6758 + t2207*t6789 + t2283*t6815 + t2292*t6843 + t2342*t6856 + t2352*t6879 + t2374*t6889 + t2389*t6905 + t2420*t6915 + t2179*t7020 + t2235*t7049 - 1.*t584*t588*t7174 + t499*t584*t6956*t743 + t584*t612*t6982*t743)*var2[4] + (-0.00095*t1769 - 1.05124*t1820 + 0.1305*t1426*t478 + t1487*t6758 + t1525*t6815 + t1544*t6843 + t1582*t6856 + t1618*t6879 + t1694*t6889 + t1701*t6905 + t1747*t6915 + t1391*t6956 + t1426*t7020 + t1457*t7049 + t6982*t715 + t1426*t6789*t749)*var2[5] + (-0.00095*t2108 - 1.05124*t2139 + 0.1305*t1859*t478 + t1922*t6758 + t1976*t6815 + t1980*t6843 + t2013*t6856 + t2033*t6879 + t2066*t6889 + t2075*t6905 + t2089*t6915 + t1859*t7020 + t1911*t7049 + t632*t7116 + t7107*t715 + t1859*t6789*t749)*var2[6] + (-0.00095*t1176 - 1.05124*t1258 + 0.1305*t5976 + t1005*t6856 + t1029*t6879 + t1063*t6889 + t1086*t6905 + t1165*t6915 + t6744*t726 + t584*t6713*t743 + t458*t6758*t815 + t6789*t815 - 1.*t6815*t815*t837 + t6843*t883)*var2[7] + (-1.05124*t2977 - 0.00095*t2990 + t2898*t6758 + t2875*t6815 + t2926*t6843 + t2907*t6856 + t2953*t6879 + t2931*t6889 + t2974*t6905 + t2961*t6915 + t2853*t7341 + t1859*t7347)*var2[8] + (-1.05124*t3167 - 0.00095*t3195 + t3060*t6843 + t3036*t6856 + t3094*t6879 + t3067*t6889 + t3149*t6905 + t3126*t6915 + t3020*t7392 + t2898*t7404)*var2[9] + (-1.05124*t3267 - 0.00095*t3272 + t3245*t6879 + t3226*t6889 + t3264*t6905 + t3253*t6915 + t3036*t7457 + t3219*t7473)*var2[10] + (-1.05124*t3316 - 0.00095*t3332 + t3311*t6905 + t3301*t6915 + t3298*t7517 + t3245*t7525)*var2[11] + (-1.05124*t3365 - 0.00095*t3396 + t3301*t7580 + t3356*t7587)*var2[12];
  p_output1[13]=var2[1] + (-1.05124*t3396 - 0.00095*t4730 + t3020*t6758 + t2853*t6789 + t2898*t6815 + t3036*t6843 + t3219*t6856 + t3298*t6879 + t3245*t6889 + t3301*t6905 + t3356*t6915 + t632*t6982 + t1859*t7049 + t6956*t715 + t7020*t726 + t584*t7174*t743 + 0.1305*t815)*var2[3] + (-0.00095*t4099 - 1.05124*t4106 + 0.1305*t6017 + t3984*t6758 + t3959*t6789 + t3998*t6815 + t4000*t6843 + t4023*t6856 + t4039*t6879 + t4058*t6889 + t4060*t6905 + t4086*t6915 + t3957*t7020 + t3980*t7049 - 1.*t503*t588*t7174 + t499*t503*t6956*t743 + t503*t612*t6982*t743)*var2[4] + (-0.00095*t3753 - 1.05124*t3778 + 0.1305*t3611*t478 + t3642*t6758 + t3662*t6815 + t3667*t6843 + t3680*t6856 + t3687*t6879 + t3709*t6889 + t3722*t6905 + t3746*t6915 + t2508*t6956 + t3436*t6982 + t3611*t7020 + t3640*t7049 + t3611*t6789*t749)*var2[5] + (-0.00095*t3919 - 1.05124*t3930 + 0.1305*t3797*t478 + t3816*t6758 + t3824*t6815 + t3831*t6843 + t3837*t6856 + t3857*t6879 + t3876*t6889 + t3893*t6905 + t3912*t6915 + t3797*t7020 + t3811*t7049 + t3436*t7107 + t3426*t7116 + t3797*t6789*t749)*var2[6] + (-0.00095*t3580 - 1.05124*t3593 + 0.1305*t6039 + t3442*t6744 + t3464*t458*t6758 + t3464*t6789 + t3476*t6843 + t3494*t6856 + t3500*t6879 + t3533*t6889 + t3545*t6905 + t3566*t6915 + t503*t6713*t743 - 1.*t3464*t6815*t837)*var2[7] + (-1.05124*t4279 - 0.00095*t4301 + t4164*t6758 + t4152*t6815 + t4199*t6843 + t4182*t6856 + t4222*t6879 + t4208*t6889 + t4276*t6905 + t4230*t6915 + t4130*t7341 + t3797*t7347)*var2[8] + (-1.05124*t4440 - 0.00095*t4467 + t4381*t6843 + t4368*t6856 + t4411*t6879 + t4383*t6889 + t4429*t6905 + t4418*t6915 + t4359*t7392 + t4164*t7404)*var2[9] + (-1.05124*t4542 - 0.00095*t4551 + t4495*t6879 + t4487*t6889 + t4535*t6905 + t4517*t6915 + t4368*t7457 + t4482*t7473)*var2[10] + (-1.05124*t4613 - 0.00095*t4630 + t4605*t6905 + t4589*t6915 + t4576*t7517 + t4495*t7525)*var2[11] + (-1.05124*t4678 - 0.00095*t4683 + t4589*t7580 + t4666*t7587)*var2[12];
  p_output1[14]=var2[2] + (-0.00095*t5852 - 1.05124*t5882 + 0.1305*t6068 + t5762*t6758 + t5726*t6789 + t5782*t6815 + t5787*t6843 + t5802*t6856 + t5813*t6879 + t5818*t6889 + t5833*t6905 + t5850*t6915 - 1.*t499*t588*t6956 - 1.*t588*t612*t6982 + t5709*t7020 + t5741*t7049 - 1.*t7174*t743)*var2[4] + (-1.*t612*t6956*t743 + t499*t6982*t743 + t7993 + t7999 + t8000 + t8003 + t8004 + t8010 + t8013 + t8014 + t8016 + t8020 + t8021 + t8022 + t8025 + t8028)*var2[5] + (t499*t7107*t743 + t612*t7116*t743 + t7993 + t7999 + t8000 + t8003 + t8004 + t8010 + t8013 + t8014 + t8016 + t8020 + t8021 + t8022 + t8025 + t8028)*var2[6] + (-0.00095*t4931 - 1.05124*t4939 + 0.1305*t6079 - 1.*t588*t6713 + t4777*t6744 + t458*t4809*t6758 + t4809*t6789 + t4827*t6843 + t4851*t6856 + t4862*t6879 + t4879*t6889 + t4885*t6905 + t4915*t6915 - 1.*t4809*t6815*t837)*var2[7] + (-1.05124*t5247 - 0.00095*t5261 + t5151*t6758 + t5145*t6815 + t5181*t6843 + t5164*t6856 + t5214*t6879 + t5192*t6889 + t5243*t6905 + t5222*t6915 + t5127*t7341 + t4963*t7347)*var2[8] + (-1.05124*t5391 - 0.00095*t5410 + t5314*t6843 + t5301*t6856 + t5338*t6879 + t5324*t6889 + t5369*t6905 + t5348*t6915 + t5285*t7392 + t5151*t7404)*var2[9] + (-1.05124*t5481 - 0.00095*t5489 + t5437*t6879 + t5430*t6889 + t5468*t6905 + t5448*t6915 + t5301*t7457 + t5427*t7473)*var2[10] + (-1.05124*t5555 - 0.00095*t5576 + t5539*t6905 + t5529*t6915 + t5520*t7517 + t5437*t7525)*var2[11] + (-1.05124*t5630 - 0.00095*t5650 + t5529*t7580 + t5621*t7587)*var2[12];
  p_output1[15]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 20 && ncols == 1) && 
      !(mrows == 1 && ncols == 20))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 20 && ncols == 1) && 
      !(mrows == 1 && ncols == 20))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 4, (mwSize) 4, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "dT_LeftToeBottom_mex.hh"

namespace SymExpression
{

void dT_LeftToeBottom_mex_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
