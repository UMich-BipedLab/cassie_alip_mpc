/*
 * Automatically Generated from Mathematica.
 * Mon 11 May 2020 22:21:43 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t806;
  double t354;
  double t596;
  double t808;
  double t619;
  double t855;
  double t905;
  double t1376;
  double t1225;
  double t1228;
  double t1233;
  double t1220;
  double t1393;
  double t1394;
  double t1395;
  double t1212;
  double t1615;
  double t1644;
  double t1698;
  double t91;
  double t1068;
  double t2011;
  double t1884;
  double t1960;
  double t1999;
  double t1811;
  double t1340;
  double t1415;
  double t1491;
  double t1691;
  double t101;
  double t1110;
  double t2980;
  double t3035;
  double t3038;
  double t3074;
  double t3169;
  double t3190;
  double t3191;
  double t2998;
  double t3097;
  double t3139;
  double t3143;
  double t3206;
  double t3207;
  double t3210;
  double t3211;
  double t3222;
  double t3278;
  double t3292;
  double t3304;
  double t3354;
  double t3361;
  double t3365;
  double t2499;
  double t2614;
  double t970;
  double t1009;
  double t1547;
  double t1726;
  double t1743;
  double t3618;
  double t3698;
  double t3701;
  double t3736;
  double t3763;
  double t3849;
  double t3798;
  double t3809;
  double t3826;
  double t3676;
  double t3715;
  double t3723;
  double t3766;
  double t4199;
  double t4202;
  double t4207;
  double t4283;
  double t4300;
  double t4306;
  double t4231;
  double t4242;
  double t4248;
  double t4276;
  double t4309;
  double t4337;
  double t4343;
  double t4349;
  double t4359;
  double t4366;
  double t4368;
  double t4369;
  double t4371;
  double t4375;
  double t4376;
  double t3967;
  double t3974;
  double t3626;
  double t3649;
  double t3727;
  double t3774;
  double t3775;
  double t4475;
  double t4478;
  double t4521;
  double t4523;
  double t4531;
  double t4535;
  double t4844;
  double t4866;
  double t4464;
  double t4525;
  double t4563;
  double t4569;
  double t1107;
  double t1763;
  double t1770;
  double t2004;
  double t2119;
  double t2156;
  double t2212;
  double t2228;
  double t2237;
  double t2308;
  double t2315;
  double t2361;
  double t2653;
  double t2714;
  double t2735;
  double t2782;
  double t2805;
  double t2819;
  double t2838;
  double t2859;
  double t2863;
  double t2864;
  double t5134;
  double t5153;
  double t5174;
  double t3424;
  double t3435;
  double t3452;
  double t3453;
  double t3666;
  double t3777;
  double t3789;
  double t3838;
  double t3850;
  double t3858;
  double t3864;
  double t3892;
  double t3893;
  double t3924;
  double t3925;
  double t3942;
  double t3988;
  double t4019;
  double t4032;
  double t4043;
  double t4062;
  double t4078;
  double t4116;
  double t4142;
  double t4146;
  double t4169;
  double t5417;
  double t5419;
  double t5438;
  double t4407;
  double t4426;
  double t4427;
  double t4429;
  double t4468;
  double t4575;
  double t4585;
  double t4593;
  double t4599;
  double t4618;
  double t4634;
  double t4680;
  double t4700;
  double t4793;
  double t4794;
  double t4829;
  double t4876;
  double t4893;
  double t4913;
  double t4915;
  double t4917;
  double t4966;
  double t4970;
  double t4984;
  double t5012;
  double t5031;
  double t5032;
  double t5038;
  double t5043;
  double t5053;
  double t5734;
  double t5788;
  double t5790;
  double t5866;
  double t5867;
  double t5881;
  double t6072;
  double t6078;
  double t6042;
  double t6050;
  double t6121;
  double t6128;
  double t6140;
  double t6083;
  double t6096;
  double t6099;
  double t6011;
  double t6025;
  double t6060;
  double t6115;
  double t6116;
  double t6143;
  double t6146;
  double t6154;
  double t6156;
  double t6161;
  double t6166;
  double t6170;
  double t6171;
  double t6172;
  double t6173;
  double t6176;
  double t6177;
  double t6183;
  double t6185;
  double t6212;
  double t6213;
  double t6225;
  double t6234;
  double t6241;
  double t6028;
  double t6036;
  double t6151;
  double t6193;
  double t6198;
  double t6272;
  double t6273;
  double t6275;
  double t6286;
  double t6290;
  double t6293;
  double t6295;
  double t6271;
  double t6207;
  double t6246;
  double t6262;
  double t6289;
  double t6298;
  double t6299;
  double t6312;
  double t6314;
  double t6322;
  double t6399;
  double t6401;
  double t6419;
  double t6428;
  double t6430;
  double t6431;
  double t6435;
  double t6452;
  double t6460;
  double t6466;
  double t6407;
  double t6437;
  double t6448;
  double t6484;
  double t6492;
  double t6499;
  double t6264;
  double t6300;
  double t6323;
  double t6330;
  double t6335;
  double t6350;
  double t6450;
  double t6473;
  double t6474;
  double t6364;
  double t6369;
  double t6478;
  double t6515;
  double t6516;
  double t6389;
  double t6524;
  double t6536;
  double t6543;
  double t6621;
  double t6627;
  double t6601;
  double t6602;
  double t6607;
  double t6608;
  double t6619;
  double t6677;
  double t6683;
  double t6692;
  double t6620;
  double t6629;
  double t6632;
  double t6771;
  double t6764;
  double t6765;
  double t6766;
  double t6741;
  double t6745;
  double t6749;
  double t6751;
  double t5963;
  double t5967;
  double t5977;
  double t5934;
  double t5937;
  double t5940;
  double t6906;
  double t6907;
  double t6911;
  double t6899;
  double t5848;
  double t5850;
  double t5859;
  double t6968;
  double t6970;
  double t6995;
  double t6996;
  double t7015;
  double t7016;
  double t7019;
  double t7020;
  double t7023;
  double t5984;
  double t5989;
  double t5993;
  double t6983;
  double t6987;
  double t6988;
  double t7018;
  double t7029;
  double t7033;
  double t7036;
  double t7056;
  double t7057;
  double t7144;
  double t7145;
  double t7147;
  double t7148;
  double t7163;
  double t7164;
  double t7177;
  double t7178;
  double t7213;
  double t7325;
  double t7331;
  double t7332;
  double t7333;
  double t5813;
  double t5815;
  double t5831;
  double t5719;
  double t5727;
  double t5728;
  double t7568;
  double t7570;
  double t7575;
  double t7577;
  double t7621;
  double t7627;
  double t7629;
  double t7630;
  double t7786;
  double t7789;
  double t7800;
  double t7833;
  double t7773;
  double t7779;
  double t7781;
  double t7837;
  double t5715;
  double t5716;
  double t5729;
  double t5791;
  double t5793;
  double t5834;
  double t5838;
  double t5839;
  double t5840;
  double t5860;
  double t5897;
  double t5904;
  double t5942;
  double t5944;
  double t5950;
  double t5956;
  double t5979;
  double t5994;
  double t5996;
  double t6476;
  double t7918;
  double t7920;
  double t7921;
  double t7922;
  double t7928;
  double t7933;
  double t6581;
  double t6767;
  double t6768;
  double t6836;
  double t6841;
  double t6636;
  double t6637;
  double t6724;
  double t6726;
  double t7987;
  double t7988;
  double t7989;
  double t6993;
  double t6994;
  double t7100;
  double t7101;
  double t7225;
  double t8071;
  double t8072;
  double t8073;
  double t8074;
  double t8075;
  double t8076;
  double t7249;
  double t7346;
  double t7347;
  double t7373;
  double t7375;
  double t7265;
  double t7271;
  double t7295;
  double t7301;
  double t8162;
  double t8163;
  double t8169;
  double t7459;
  double t7461;
  double t7490;
  double t7492;
  double t7712;
  double t7719;
  double t7742;
  double t7747;
  double t8286;
  double t8289;
  double t8290;
  double t8309;
  double t8311;
  double t8312;
  double t8334;
  double t8343;
  double t7852;
  double t8350;
  double t8326;
  double t8327;
  double t7865;
  double t8352;
  double t7547;
  double t7548;
  double t7587;
  double t7599;
  double t7652;
  double t7654;
  double t7683;
  double t7685;
  double t8500;
  double t8501;
  double t8507;
  double t8508;
  double t7941;
  double t8512;
  double t8517;
  double t7951;
  double t8040;
  double t8041;
  double t8047;
  double t8050;
  double t8631;
  double t8632;
  double t8634;
  double t8637;
  double t8088;
  double t8114;
  double t8642;
  double t8645;
  double t8225;
  double t8226;
  double t8234;
  double t8237;
  double t8264;
  double t8267;
  double t8293;
  double t8297;
  double t8782;
  double t8783;
  double t8784;
  double t8795;
  double t8798;
  double t8800;
  double t8359;
  double t8813;
  double t8817;
  double t8820;
  double t8809;
  double t8810;
  double t8370;
  double t8823;
  double t8877;
  double t8878;
  double t8879;
  double t8882;
  double t8884;
  double t8885;
  double t8886;
  double t8947;
  double t8949;
  double t8950;
  double t8951;
  double t8952;
  double t8954;
  double t8955;
  double t9010;
  double t9011;
  double t9012;
  double t9023;
  double t9028;
  double t9032;
  double t9056;
  double t9057;
  double t9060;
  double t9047;
  double t9051;
  double t9061;
  double t8851;
  double t8859;
  double t8860;
  double t8864;
  double t8867;
  double t8868;
  double t8869;
  double t8870;
  double t8876;
  double t9082;
  double t9088;
  double t9090;
  double t9108;
  double t9109;
  double t9112;
  double t9105;
  double t9069;
  double t9100;
  double t9065;
  double t9114;
  double t9115;
  double t9116;
  t806 = Cos(var1[15]);
  t354 = Cos(var1[16]);
  t596 = Sin(var1[15]);
  t808 = Sin(var1[16]);
  t619 = t354*t596;
  t855 = t806*t808;
  t905 = 0. + t619 + t855;
  t1376 = Sin(var1[13]);
  t1225 = -1.*t806*t354;
  t1228 = t596*t808;
  t1233 = 0. + t1225 + t1228;
  t1220 = Cos(var1[13]);
  t1393 = Sin(var1[14]);
  t1394 = t1393*t905;
  t1395 = 0. + t1394;
  t1212 = Cos(var1[5]);
  t1615 = -1.*t1376*t1233;
  t1644 = t1220*t1395;
  t1698 = Sin(var1[5]);
  t91 = Cos(var1[3]);
  t1068 = Sin(var1[4]);
  t2011 = t1615 + t1644;
  t1884 = -1.*t1220*t1233;
  t1960 = -1.*t1376*t1395;
  t1999 = t1884 + t1960;
  t1811 = Sin(var1[3]);
  t1340 = t1220*t1233;
  t1415 = t1376*t1395;
  t1491 = 0. + t1340 + t1415;
  t1691 = 0. + t1615 + t1644;
  t101 = Cos(var1[14]);
  t1110 = Cos(var1[4]);
  t2980 = t619 + t855;
  t3035 = t806*t354;
  t3038 = -1.*t596*t808;
  t3074 = t3035 + t3038;
  t3169 = t1220*t2980;
  t3190 = t1376*t1393*t3074;
  t3191 = t3169 + t3190;
  t2998 = -1.*t1376*t2980;
  t3097 = t1220*t1393*t3074;
  t3139 = t2998 + t3097;
  t3143 = t1212*t3139;
  t3206 = -1.*t3191*t1698;
  t3207 = t3143 + t3206;
  t3210 = -1.*t1811*t3207;
  t3211 = t101*t1110*t3074;
  t3222 = t1212*t3191;
  t3278 = t3139*t1698;
  t3292 = t3222 + t3278;
  t3304 = t1068*t3292;
  t3354 = t3211 + t3304;
  t3361 = t91*t3354;
  t3365 = t3210 + t3361;
  t2499 = t1212*t1691;
  t2614 = -1.*t1491*t1698;
  t970 = t101*t905;
  t1009 = 0. + t970;
  t1547 = t1212*t1491;
  t1726 = t1691*t1698;
  t1743 = 0. + t1547 + t1726;
  t3618 = 0. + t3035 + t3038;
  t3698 = t1393*t3618;
  t3701 = 0. + t3698;
  t3736 = -1.*t1376*t905;
  t3763 = t1220*t3701;
  t3849 = t3736 + t3763;
  t3798 = -1.*t1220*t905;
  t3809 = -1.*t1376*t3701;
  t3826 = t3798 + t3809;
  t3676 = t1220*t905;
  t3715 = t1376*t3701;
  t3723 = 0. + t3676 + t3715;
  t3766 = 0. + t3736 + t3763;
  t4199 = -1.*t354*t596;
  t4202 = -1.*t806*t808;
  t4207 = t4199 + t4202;
  t4283 = t1376*t1393*t4207;
  t4300 = t1220*t3074;
  t4306 = t4283 + t4300;
  t4231 = t1220*t1393*t4207;
  t4242 = -1.*t1376*t3074;
  t4248 = t4231 + t4242;
  t4276 = t1212*t4248;
  t4309 = -1.*t4306*t1698;
  t4337 = t4276 + t4309;
  t4343 = -1.*t1811*t4337;
  t4349 = t101*t1110*t4207;
  t4359 = t1212*t4306;
  t4366 = t4248*t1698;
  t4368 = t4359 + t4366;
  t4369 = t1068*t4368;
  t4371 = t4349 + t4369;
  t4375 = t91*t4371;
  t4376 = t4343 + t4375;
  t3967 = t1212*t3766;
  t3974 = -1.*t3723*t1698;
  t3626 = t101*t3618;
  t3649 = 0. + t3626;
  t3727 = t1212*t3723;
  t3774 = t3766*t1698;
  t3775 = 0. + t3727 + t3774;
  t4475 = -1.*t101;
  t4478 = 0. + t4475;
  t4521 = t4478*t1376;
  t4523 = 0. + t4521;
  t4531 = t1220*t4478;
  t4535 = 0. + t4531;
  t4844 = t4535*t1212;
  t4866 = -1.*t4523*t1698;
  t4464 = 0. + t1393;
  t4525 = t1212*t4523;
  t4563 = t4535*t1698;
  t4569 = 0. + t4525 + t4563;
  t1107 = -1.*t1009*t1068;
  t1763 = t1110*t1743;
  t1770 = t1107 + t1763;
  t2004 = t1212*t1999;
  t2119 = -1.*t2011*t1698;
  t2156 = t2004 + t2119;
  t2212 = t1212*t2011;
  t2228 = t1999*t1698;
  t2237 = t2212 + t2228;
  t2308 = -1.*t1212*t1491;
  t2315 = -1.*t1691*t1698;
  t2361 = t2308 + t2315;
  t2653 = t2499 + t2614;
  t2714 = t1220*t101*t1212*t905;
  t2735 = -1.*t101*t1376*t905*t1698;
  t2782 = t2714 + t2735;
  t2805 = -1.*t1110*t1393*t905;
  t2819 = t101*t1212*t1376*t905;
  t2838 = t1220*t101*t905*t1698;
  t2859 = t2819 + t2838;
  t2863 = t1068*t2859;
  t2864 = t2805 + t2863;
  t5134 = t91*t3207;
  t5153 = t1811*t3354;
  t5174 = t5134 + t5153;
  t3424 = 0. + t2499 + t2614;
  t3435 = t1110*t1009;
  t3452 = t1068*t1743;
  t3453 = 0. + t3435 + t3452;
  t3666 = -1.*t3649*t1068;
  t3777 = t1110*t3775;
  t3789 = t3666 + t3777;
  t3838 = t1212*t3826;
  t3850 = -1.*t3849*t1698;
  t3858 = t3838 + t3850;
  t3864 = t1212*t3849;
  t3892 = t3826*t1698;
  t3893 = t3864 + t3892;
  t3924 = -1.*t1212*t3723;
  t3925 = -1.*t3766*t1698;
  t3942 = t3924 + t3925;
  t3988 = t3967 + t3974;
  t4019 = t1220*t101*t1212*t3618;
  t4032 = -1.*t101*t1376*t3618*t1698;
  t4043 = t4019 + t4032;
  t4062 = -1.*t1110*t1393*t3618;
  t4078 = t101*t1212*t1376*t3618;
  t4116 = t1220*t101*t3618*t1698;
  t4142 = t4078 + t4116;
  t4146 = t1068*t4142;
  t4169 = t4062 + t4146;
  t5417 = t91*t4337;
  t5419 = t1811*t4371;
  t5438 = t5417 + t5419;
  t4407 = 0. + t3967 + t3974;
  t4426 = t1110*t3649;
  t4427 = t1068*t3775;
  t4429 = 0. + t4426 + t4427;
  t4468 = -1.*t4464*t1068;
  t4575 = t1110*t4569;
  t4585 = t4468 + t4575;
  t4593 = -1.*t4478*t1212*t1376;
  t4599 = -1.*t1220*t4478*t1698;
  t4618 = t4593 + t4599;
  t4634 = t1220*t4478*t1212;
  t4680 = -1.*t4478*t1376*t1698;
  t4700 = t4634 + t4680;
  t4793 = -1.*t1212*t4523;
  t4794 = -1.*t4535*t1698;
  t4829 = t4793 + t4794;
  t4876 = t4844 + t4866;
  t4893 = 0. + t4844 + t4866;
  t4913 = t1110*t4464;
  t4915 = t1068*t4569;
  t4917 = 0. + t4913 + t4915;
  t4966 = t1220*t1212*t1393;
  t4970 = -1.*t1376*t1393*t1698;
  t4984 = t4966 + t4970;
  t5012 = t101*t1110;
  t5031 = t1212*t1376*t1393;
  t5032 = t1220*t1393*t1698;
  t5038 = t5031 + t5032;
  t5043 = t1068*t5038;
  t5053 = t5012 + t5043;
  t5734 = -1.*t101*t3074*t1068;
  t5788 = t1110*t3292;
  t5790 = t5734 + t5788;
  t5866 = -1.*t101*t4207*t1068;
  t5867 = t1110*t4368;
  t5881 = t5866 + t5867;
  t6072 = -1.*t354;
  t6078 = 1. + t6072;
  t6042 = -1.*t806;
  t6050 = 1. + t6042;
  t6121 = -0.08055*t6078;
  t6128 = -0.08055*t354;
  t6140 = 0. + t6121 + t6128;
  t6083 = -0.13004*t6078;
  t6096 = -0.13004*t354;
  t6099 = 0. + t6083 + t6096;
  t6011 = -1.*t1220;
  t6025 = 1. + t6011;
  t6060 = -0.01004*t6050;
  t6115 = t806*t6099;
  t6116 = 0.08055*t596;
  t6143 = t6140*t596;
  t6146 = 0. + t6060 + t6115 + t6116 + t6143;
  t6154 = -1.*t101;
  t6156 = 1. + t6154;
  t6161 = -0.135*t6156;
  t6166 = -0.1305*t101;
  t6170 = 0.08055*t1393;
  t6171 = -0.08055*t6050;
  t6172 = t806*t6140;
  t6173 = -0.01004*t596;
  t6176 = -1.*t6099*t596;
  t6177 = 0. + t6171 + t6172 + t6173 + t6176;
  t6183 = t1393*t6177;
  t6185 = 0. + t6161 + t6166 + t6170 + t6183;
  t6212 = 0.07996*t6025;
  t6213 = 0.135*t1376;
  t6225 = t1220*t6146;
  t6234 = t1376*t6185;
  t6241 = 0. + t6212 + t6213 + t6225 + t6234;
  t6028 = -0.135*t6025;
  t6036 = 0.07996*t1376;
  t6151 = -1.*t1376*t6146;
  t6193 = t1220*t6185;
  t6198 = 0. + t6028 + t6036 + t6151 + t6193;
  t6272 = -0.08055*t6156;
  t6273 = -0.004500000000000004*t1393;
  t6275 = t101*t6177;
  t6286 = 0. + t6272 + t6273 + t6275;
  t6290 = t1212*t6241;
  t6293 = t6198*t1698;
  t6295 = 0. + t6290 + t6293;
  t6271 = 0. + t4468 + t4575;
  t6207 = t1212*t6198;
  t6246 = -1.*t6241*t1698;
  t6262 = 0. + t6207 + t6246;
  t6289 = -1.*t6286*t1068;
  t6298 = t1110*t6295;
  t6299 = 0. + t6289 + t6298;
  t6312 = t1110*t6286;
  t6314 = t1068*t6295;
  t6322 = 0. + t6312 + t6314;
  t6399 = 0.08055*t806;
  t6401 = t6399 + t6172 + t6173 + t6176;
  t6419 = -0.01004*t806;
  t6428 = -1.*t806*t6099;
  t6430 = -0.08055*t596;
  t6431 = -1.*t6140*t596;
  t6435 = t6419 + t6428 + t6430 + t6431;
  t6452 = t1220*t6401;
  t6460 = t1376*t1393*t6435;
  t6466 = t6452 + t6460;
  t6407 = -1.*t1376*t6401;
  t6437 = t1220*t1393*t6435;
  t6448 = t6407 + t6437;
  t6484 = t1212*t6466;
  t6492 = t6448*t1698;
  t6499 = t6484 + t6492;
  t6264 = t4893*t6262;
  t6300 = t6271*t6299;
  t6323 = t4917*t6322;
  t6330 = t6264 + t6300 + t6323;
  t6335 = t5881*t6330;
  t6350 = -1.*t6262*t4337;
  t6450 = t1212*t6448;
  t6473 = -1.*t6466*t1698;
  t6474 = t6450 + t6473;
  t6364 = -1.*t6299*t5881;
  t6369 = -1.*t6322*t4371;
  t6478 = -1.*t101*t6435*t1068;
  t6515 = t1110*t6499;
  t6516 = t6478 + t6515;
  t6389 = 0. + t3666 + t3777;
  t6524 = t101*t1110*t6435;
  t6536 = t1068*t6499;
  t6543 = t6524 + t6536;
  t6621 = 0.135*t1220;
  t6627 = t6621 + t6036 + t6151 + t6193;
  t6601 = 0.07996*t1220;
  t6602 = -0.135*t1376;
  t6607 = -1.*t1220*t6146;
  t6608 = -1.*t1376*t6185;
  t6619 = t6601 + t6602 + t6607 + t6608;
  t6677 = t1212*t6627;
  t6683 = t6619*t1698;
  t6692 = t6677 + t6683;
  t6620 = t1212*t6619;
  t6629 = -1.*t6627*t1698;
  t6632 = t6620 + t6629;
  t6771 = t6207 + t6246;
  t6764 = -1.*t1212*t6241;
  t6765 = -1.*t6198*t1698;
  t6766 = t6764 + t6765;
  t6741 = -1.*t6262*t4407;
  t6745 = -1.*t6299*t6389;
  t6749 = -1.*t6322*t4429;
  t6751 = t6741 + t6745 + t6749;
  t5963 = -1.*t1110*t4464;
  t5967 = -1.*t1068*t4569;
  t5977 = t5963 + t5967;
  t5934 = -1.*t1110*t3649;
  t5937 = -1.*t1068*t3775;
  t5940 = t5934 + t5937;
  t6906 = -1.*t1110*t6286;
  t6907 = -1.*t1068*t6295;
  t6911 = t6906 + t6907;
  t6899 = t6289 + t6298;
  t5848 = t1393*t3618*t1068;
  t5850 = t1110*t4142;
  t5859 = t5848 + t5850;
  t6968 = 0.08055*t101;
  t6970 = t6968 + t6273 + t6275;
  t6995 = -0.004500000000000004*t101;
  t6996 = -0.08055*t1393;
  t7015 = -1.*t1393*t6177;
  t7016 = t6995 + t6996 + t7015;
  t7019 = t1212*t1376*t6970;
  t7020 = t1220*t6970*t1698;
  t7023 = t7019 + t7020;
  t5984 = -1.*t101*t1068;
  t5989 = t1110*t5038;
  t5993 = t5984 + t5989;
  t6983 = t1220*t1212*t6970;
  t6987 = -1.*t1376*t6970*t1698;
  t6988 = t6983 + t6987;
  t7018 = -1.*t7016*t1068;
  t7029 = t1110*t7023;
  t7033 = t7018 + t7029;
  t7036 = t1110*t7016;
  t7056 = t1068*t7023;
  t7057 = t7036 + t7056;
  t7144 = -1.*t4893*t6262;
  t7145 = -1.*t6271*t6299;
  t7147 = -1.*t4917*t6322;
  t7148 = t7144 + t7145 + t7147;
  t7163 = t5790*t7148;
  t7164 = t6262*t3207;
  t7177 = t6299*t5790;
  t7178 = t6322*t3354;
  t7213 = 0. + t1107 + t1763;
  t7325 = t6262*t3424;
  t7331 = t6299*t7213;
  t7332 = t6322*t3453;
  t7333 = t7325 + t7331 + t7332;
  t5813 = -1.*t1110*t1009;
  t5815 = -1.*t1068*t1743;
  t5831 = t5813 + t5815;
  t5719 = t1393*t905*t1068;
  t5727 = t1110*t2859;
  t5728 = t5719 + t5727;
  t7568 = -1.*t6262*t3424;
  t7570 = -1.*t6299*t7213;
  t7575 = -1.*t6322*t3453;
  t7577 = t7568 + t7570 + t7575;
  t7621 = t6262*t4407;
  t7627 = t6299*t6389;
  t7629 = t6322*t4429;
  t7630 = t7621 + t7627 + t7629;
  t7786 = -1.*t6262*t3207;
  t7789 = -1.*t6299*t5790;
  t7800 = -1.*t6322*t3354;
  t7833 = t5881*t7577;
  t7773 = t6262*t4337;
  t7779 = t6299*t5881;
  t7781 = t6322*t4371;
  t7837 = t5790*t7630;
  t5715 = var2[13]*t1110*t2237;
  t5716 = var2[5]*t1110*t2653;
  t5729 = var2[14]*t5728;
  t5791 = var2[15]*t5790;
  t5793 = var2[16]*t5790;
  t5834 = var2[4]*t5831;
  t5838 = t5715 + t5716 + t5729 + t5791 + t5793 + t5834;
  t5839 = var2[13]*t1110*t3893;
  t5840 = var2[5]*t1110*t3988;
  t5860 = var2[14]*t5859;
  t5897 = var2[15]*t5881;
  t5904 = var2[16]*t5881;
  t5942 = var2[4]*t5940;
  t5944 = t5839 + t5840 + t5860 + t5897 + t5904 + t5942;
  t5950 = var2[13]*t1110*t4700;
  t5956 = var2[5]*t1110*t4876;
  t5979 = var2[4]*t5977;
  t5994 = var2[14]*t5993;
  t5996 = t5950 + t5956 + t5979 + t5994;
  t6476 = t4893*t6474;
  t7918 = t4464*t6286;
  t7920 = t4569*t6295;
  t7921 = t7918 + t7920 + t6264;
  t7922 = t4337*t7921;
  t7928 = -1.*t101*t6286*t4207;
  t7933 = -1.*t6295*t4368;
  t6581 = -1.*t6474*t4407;
  t6767 = t4893*t6766;
  t6768 = t4829*t6262;
  t6836 = -1.*t6262*t3942;
  t6841 = -1.*t6766*t4407;
  t6636 = t4893*t6632;
  t6637 = t4618*t6262;
  t6724 = -1.*t6262*t3858;
  t6726 = -1.*t6632*t4407;
  t7987 = -1.*t6286*t3649;
  t7988 = -1.*t6295*t3775;
  t7989 = t7987 + t7988 + t6741;
  t6993 = t4893*t6988;
  t6994 = t4984*t6262;
  t7100 = -1.*t6262*t4043;
  t7101 = -1.*t6988*t4407;
  t7225 = -1.*t4893*t6474;
  t8071 = -1.*t4464*t6286;
  t8072 = -1.*t4569*t6295;
  t8073 = t8071 + t8072 + t7144;
  t8074 = t3207*t8073;
  t8075 = t101*t6286*t3074;
  t8076 = t6295*t3292;
  t7249 = t6474*t3424;
  t7346 = -1.*t4893*t6766;
  t7347 = -1.*t4829*t6262;
  t7373 = t6262*t2361;
  t7375 = t6766*t3424;
  t7265 = -1.*t4893*t6632;
  t7271 = -1.*t4618*t6262;
  t7295 = t6262*t2156;
  t7301 = t6632*t3424;
  t8162 = t6286*t1009;
  t8163 = t6295*t1743;
  t8169 = t8162 + t8163 + t7325;
  t7459 = -1.*t4893*t6988;
  t7461 = -1.*t4984*t6262;
  t7490 = t6262*t2782;
  t7492 = t6988*t3424;
  t7712 = -1.*t6262*t2782;
  t7719 = -1.*t6988*t3424;
  t7742 = t6262*t4043;
  t7747 = t6988*t4407;
  t8286 = -1.*t6286*t1009;
  t8289 = -1.*t6295*t1743;
  t8290 = t8286 + t8289 + t7568;
  t8309 = t6286*t3649;
  t8311 = t6295*t3775;
  t8312 = t8309 + t8311 + t7621;
  t8334 = -1.*t101*t6286*t3074;
  t8343 = -1.*t6295*t3292;
  t7852 = -1.*t6474*t3424;
  t8350 = t4337*t8290;
  t8326 = t101*t6286*t4207;
  t8327 = t6295*t4368;
  t7865 = t6474*t4407;
  t8352 = t3207*t8312;
  t7547 = -1.*t6262*t2156;
  t7548 = -1.*t6632*t3424;
  t7587 = t6262*t3858;
  t7599 = t6632*t4407;
  t7652 = -1.*t6262*t2361;
  t7654 = -1.*t6766*t3424;
  t7683 = t6262*t3942;
  t7685 = t6766*t4407;
  t8500 = t4535*t6198;
  t8501 = t4523*t6241;
  t8507 = t7918 + t8500 + t8501;
  t8508 = t101*t8507*t4207;
  t7941 = t101*t4464*t6435;
  t8512 = -1.*t6241*t4306;
  t8517 = -1.*t6198*t4248;
  t7951 = -1.*t101*t6435*t3649;
  t8040 = t101*t6286;
  t8041 = t4464*t7016;
  t8047 = t1393*t6286*t3618;
  t8050 = -1.*t7016*t3649;
  t8631 = -1.*t4535*t6198;
  t8632 = -1.*t4523*t6241;
  t8634 = t8071 + t8631 + t8632;
  t8637 = t101*t8634*t3074;
  t8088 = -1.*t101*t4464*t6435;
  t8114 = t101*t6435*t1009;
  t8642 = t6198*t3139;
  t8645 = t6241*t3191;
  t8225 = -1.*t101*t6286;
  t8226 = -1.*t4464*t7016;
  t8234 = -1.*t1393*t6286*t905;
  t8237 = t7016*t1009;
  t8264 = t1393*t6286*t905;
  t8267 = -1.*t7016*t1009;
  t8293 = -1.*t1393*t6286*t3618;
  t8297 = t7016*t3649;
  t8782 = -1.*t6198*t1691;
  t8783 = -1.*t6241*t1491;
  t8784 = t8286 + t8782 + t8783;
  t8795 = t6198*t3766;
  t8798 = t6241*t3723;
  t8800 = t8309 + t8795 + t8798;
  t8359 = -1.*t101*t6435*t1009;
  t8813 = -1.*t6198*t3139;
  t8817 = -1.*t6241*t3191;
  t8820 = t101*t4207*t8784;
  t8809 = t6241*t4306;
  t8810 = t6198*t4248;
  t8370 = t101*t6435*t3649;
  t8823 = t101*t3074*t8800;
  t8877 = t4478*t6185;
  t8878 = 0. + t7918 + t8877;
  t8879 = t101*t8878*t4207;
  t8882 = 0.135*t2980;
  t8884 = 0.07996*t1393*t3074;
  t8885 = -1.*t1393*t6185*t4207;
  t8886 = -1.*t6146*t3074;
  t8947 = 0.07996*t1393*t4207;
  t8949 = 0.135*t3074;
  t8950 = -1.*t4478*t6185;
  t8951 = 0. + t8071 + t8950;
  t8952 = t101*t8951*t3074;
  t8954 = t6146*t2980;
  t8955 = t1393*t6185*t3074;
  t9010 = -1.*t6146*t1233;
  t9011 = -1.*t6185*t1395;
  t9012 = t9010 + t8286 + t9011;
  t9023 = t6146*t905;
  t9028 = t6185*t3701;
  t9032 = t9023 + t8309 + t9028;
  t9056 = -1.*t6146*t2980;
  t9057 = -1.*t1393*t6185*t3074;
  t9060 = t101*t4207*t9012;
  t9047 = t1393*t6185*t4207;
  t9051 = t6146*t3074;
  t9061 = t101*t3074*t9032;
  t8851 = -1.*var2[14]*t1393*t905;
  t8859 = var2[15]*t101*t3074;
  t8860 = var2[16]*t101*t3074;
  t8864 = t8851 + t8859 + t8860;
  t8867 = var2[15]*t101*t4207;
  t8868 = var2[16]*t101*t4207;
  t8869 = -1.*var2[14]*t1393*t3618;
  t8870 = t8867 + t8868 + t8869;
  t8876 = var2[14]*t101;
  t9082 = -0.135*t4207;
  t9088 = -0.1305*t2980;
  t9090 = t9082 + t9088;
  t9108 = t6177*t3618;
  t9109 = 0. + t9023 + t9108;
  t9112 = t2980*t9109;
  t9105 = t6177*t4207;
  t9069 = t6401*t905;
  t9100 = -1.*t6177*t3074;
  t9065 = -1.*t6401*t1233;
  t9114 = -1.*t6177*t905;
  t9115 = 0. + t9114 + t9010;
  t9116 = t3074*t9115;
  p_output1[0]=(-1.*t1811*t3453 - 1.*t3424*t91)*var2[3] + t1770*t91*var2[4] + (-1.*t1811*t2361 + t1068*t2653*t91)*var2[5] + (-1.*t1811*t2156 + t1068*t2237*t91)*var2[13] + (-1.*t1811*t2782 + t2864*t91)*var2[14] + t3365*var2[15] + t3365*var2[16];
  p_output1[1]=(-1.*t1811*t4429 - 1.*t4407*t91)*var2[3] + t3789*t91*var2[4] + (-1.*t1811*t3942 + t1068*t3988*t91)*var2[5] + (-1.*t1811*t3858 + t1068*t3893*t91)*var2[13] + (-1.*t1811*t4043 + t4169*t91)*var2[14] + t4376*var2[15] + t4376*var2[16];
  p_output1[2]=(-1.*t1811*t4917 - 1.*t4893*t91)*var2[3] + t4585*t91*var2[4] + (-1.*t1811*t4829 + t1068*t4876*t91)*var2[5] + (-1.*t1811*t4618 + t1068*t4700*t91)*var2[13] + (-1.*t1811*t4984 + t5053*t91)*var2[14];
  p_output1[3]=0;
  p_output1[4]=0;
  p_output1[5]=0;
  p_output1[6]=(-1.*t1811*t3424 + t3453*t91)*var2[3] + t1770*t1811*var2[4] + (t1068*t1811*t2653 + t2361*t91)*var2[5] + (t1068*t1811*t2237 + t2156*t91)*var2[13] + (t1811*t2864 + t2782*t91)*var2[14] + t5174*var2[15] + t5174*var2[16];
  p_output1[7]=(-1.*t1811*t4407 + t4429*t91)*var2[3] + t1811*t3789*var2[4] + (t1068*t1811*t3988 + t3942*t91)*var2[5] + (t1068*t1811*t3893 + t3858*t91)*var2[13] + (t1811*t4169 + t4043*t91)*var2[14] + t5438*var2[15] + t5438*var2[16];
  p_output1[8]=(-1.*t1811*t4893 + t4917*t91)*var2[3] + t1811*t4585*var2[4] + (t1068*t1811*t4876 + t4829*t91)*var2[5] + (t1068*t1811*t4700 + t4618*t91)*var2[13] + (t1811*t5053 + t4984*t91)*var2[14];
  p_output1[9]=0;
  p_output1[10]=0;
  p_output1[11]=0;
  p_output1[12]=t5838;
  p_output1[13]=t5944;
  p_output1[14]=t5996;
  p_output1[15]=0;
  p_output1[16]=0;
  p_output1[17]=0;
  p_output1[18]=(t5940*t6330 + t5977*t6751 + t6389*(t5977*t6299 + t4585*t6322 + t4917*t6899 + t6271*t6911) + t6271*(-1.*t5940*t6299 - 1.*t3789*t6322 - 1.*t4429*t6899 - 1.*t6389*t6911))*var2[4] + (t1110*t3988*t6330 + t1110*t4876*t6751 + t6389*(t1110*t4876*t6299 + t1068*t4876*t6322 + t6767 + t6768 + t1068*t4917*t6771 + t1110*t6271*t6771) + t6271*(-1.*t1110*t3988*t6299 - 1.*t1068*t3988*t6322 - 1.*t1068*t4429*t6771 - 1.*t1110*t6389*t6771 + t6836 + t6841))*var2[5] + (t1110*t3893*t6330 + t6389*(t1110*t4700*t6299 + t1068*t4700*t6322 + t6636 + t6637 + t1068*t4917*t6692 + t1110*t6271*t6692) + t6271*(-1.*t1110*t3893*t6299 - 1.*t1068*t3893*t6322 - 1.*t1068*t4429*t6692 - 1.*t1110*t6389*t6692 + t6724 + t6726) + t1110*t4700*t6751)*var2[13] + (t5859*t6330 + t5993*t6751 + t6389*(t5993*t6299 + t5053*t6322 + t6993 + t6994 + t6271*t7033 + t4917*t7057) + t6271*(-1.*t5859*t6299 - 1.*t4169*t6322 - 1.*t6389*t7033 - 1.*t4429*t7057 + t7100 + t7101))*var2[14] + (t6335 + t6389*(t6476 + t6271*t6516 + t4917*t6543) + t6271*(t6350 + t6364 + t6369 - 1.*t6389*t6516 - 1.*t4429*t6543 + t6581))*var2[15] + (0. + t6335 + t6271*(0. + t6350 + t6364 + t6369))*var2[16];
  p_output1[19]=(t5831*t7148 + (-1.*t5977*t6299 - 1.*t4585*t6322 - 1.*t4917*t6899 - 1.*t6271*t6911)*t7213 + t6271*(t5831*t6299 + t1770*t6322 + t3453*t6899 + t6911*t7213) + t5977*t7333)*var2[4] + (t1110*t2653*t7148 + t1110*t4876*t7333 + t7213*(-1.*t1110*t4876*t6299 - 1.*t1068*t4876*t6322 - 1.*t1068*t4917*t6771 - 1.*t1110*t6271*t6771 + t7346 + t7347) + t6271*(t1110*t2653*t6299 + t1068*t2653*t6322 + t1068*t3453*t6771 + t1110*t6771*t7213 + t7373 + t7375))*var2[5] + (t1110*t2237*t7148 + t7213*(-1.*t1110*t4700*t6299 - 1.*t1068*t4700*t6322 - 1.*t1068*t4917*t6692 - 1.*t1110*t6271*t6692 + t7265 + t7271) + t6271*(t1110*t2237*t6299 + t1068*t2237*t6322 + t1068*t3453*t6692 + t1110*t6692*t7213 + t7295 + t7301) + t1110*t4700*t7333)*var2[13] + (t5728*t7148 + t5993*t7333 + t7213*(-1.*t5993*t6299 - 1.*t5053*t6322 - 1.*t6271*t7033 - 1.*t4917*t7057 + t7459 + t7461) + t6271*(t5728*t6299 + t2864*t6322 + t3453*t7057 + t7033*t7213 + t7490 + t7492))*var2[14] + (t7163 + t7213*(-1.*t6271*t6516 - 1.*t4917*t6543 + t7225) + t6271*(t3453*t6543 + t7164 + t7177 + t7178 + t6516*t7213 + t7249))*var2[15] + (0. + t7163 + t6271*(0. + t7164 + t7177 + t7178))*var2[16];
  p_output1[20]=((t5940*t6299 + t3789*t6322 + t4429*t6899 + t6389*t6911)*t7213 + t6389*(-1.*t5831*t6299 - 1.*t1770*t6322 - 1.*t3453*t6899 - 1.*t6911*t7213) + t5940*t7577 + t5831*t7630)*var2[4] + (t1110*t3988*t7577 + t1110*t2653*t7630 + t6389*(-1.*t1110*t2653*t6299 - 1.*t1068*t2653*t6322 - 1.*t1068*t3453*t6771 - 1.*t1110*t6771*t7213 + t7652 + t7654) + t7213*(t1110*t3988*t6299 + t1068*t3988*t6322 + t1068*t4429*t6771 + t1110*t6389*t6771 + t7683 + t7685))*var2[5] + (t6389*(-1.*t1110*t2237*t6299 - 1.*t1068*t2237*t6322 - 1.*t1068*t3453*t6692 - 1.*t1110*t6692*t7213 + t7547 + t7548) + t1110*t3893*t7577 + t7213*(t1110*t3893*t6299 + t1068*t3893*t6322 + t1068*t4429*t6692 + t1110*t6389*t6692 + t7587 + t7599) + t1110*t2237*t7630)*var2[13] + (t5859*t7577 + t5728*t7630 + t6389*(-1.*t5728*t6299 - 1.*t2864*t6322 - 1.*t3453*t7057 - 1.*t7033*t7213 + t7712 + t7719) + t7213*(t5859*t6299 + t4169*t6322 + t6389*t7033 + t4429*t7057 + t7742 + t7747))*var2[14] + (t7833 + t7837 + t6389*(-1.*t3453*t6543 - 1.*t6516*t7213 + t7786 + t7789 + t7800 + t7852) + t7213*(t6389*t6516 + t4429*t6543 + t7773 + t7779 + t7781 + t7865))*var2[15] + (t7213*(0. + t7773 + t7779 + t7781) + t6389*(0. + t7786 + t7789 + t7800) + t7833 + t7837)*var2[16];
  p_output1[21]=t5838;
  p_output1[22]=t5944;
  p_output1[23]=t5996;
  p_output1[24]=(t4407*(t4876*t6295 + t6767 + t6768 + t4569*t6771) + t4893*(-1.*t3988*t6295 - 1.*t3775*t6771 + t6836 + t6841) + t3942*t7921 + t4829*t7989)*var2[5] + (t4407*(t4700*t6295 + t6636 + t6637 + t4569*t6692) + t4893*(-1.*t3893*t6295 - 1.*t3775*t6692 + t6724 + t6726) + t3858*t7921 + t4618*t7989)*var2[13] + (t4043*t7921 + t4984*t7989 + t4407*(t5038*t6295 + t6993 + t6994 + t4569*t7023 + t8040 + t8041) + t4893*(-1.*t4142*t6295 - 1.*t3775*t7023 + t7100 + t7101 + t8047 + t8050))*var2[14] + (t7922 + t4407*(t6476 + t4569*t6499 + t7941) + t4893*(t6350 - 1.*t3775*t6499 + t6581 + t7928 + t7933 + t7951))*var2[15] + (0. + t7922 + t4893*(0. + t6350 + t7928 + t7933))*var2[16];
  p_output1[25]=(t3424*(-1.*t4876*t6295 - 1.*t4569*t6771 + t7346 + t7347) + t4893*(t2653*t6295 + t1743*t6771 + t7373 + t7375) + t2361*t8073 + t4829*t8169)*var2[5] + (t3424*(-1.*t4700*t6295 - 1.*t4569*t6692 + t7265 + t7271) + t4893*(t2237*t6295 + t1743*t6692 + t7295 + t7301) + t2156*t8073 + t4618*t8169)*var2[13] + (t2782*t8073 + t4984*t8169 + t3424*(-1.*t5038*t6295 - 1.*t4569*t7023 + t7459 + t7461 + t8225 + t8226) + t4893*(t2859*t6295 + t1743*t7023 + t7490 + t7492 + t8234 + t8237))*var2[14] + (t8074 + t3424*(-1.*t4569*t6499 + t7225 + t8088) + t4893*(t1743*t6499 + t7164 + t7249 + t8075 + t8076 + t8114))*var2[15] + (0. + t8074 + t4893*(0. + t7164 + t8075 + t8076))*var2[16];
  p_output1[26]=(t4407*(-1.*t2653*t6295 - 1.*t1743*t6771 + t7652 + t7654) + t3424*(t3988*t6295 + t3775*t6771 + t7683 + t7685) + t3942*t8290 + t2361*t8312)*var2[5] + (t4407*(-1.*t2237*t6295 - 1.*t1743*t6692 + t7547 + t7548) + t3424*(t3893*t6295 + t3775*t6692 + t7587 + t7599) + t3858*t8290 + t2156*t8312)*var2[13] + (t4407*(-1.*t2859*t6295 - 1.*t1743*t7023 + t7712 + t7719 + t8264 + t8267) + t4043*t8290 + t3424*(t4142*t6295 + t3775*t7023 + t7742 + t7747 + t8293 + t8297) + t2782*t8312)*var2[14] + (t8350 + t8352 + t4407*(-1.*t1743*t6499 + t7786 + t7852 + t8334 + t8343 + t8359) + t3424*(t3775*t6499 + t7773 + t7865 + t8326 + t8327 + t8370))*var2[15] + (t3424*(0. + t7773 + t8326 + t8327) + t4407*(0. + t7786 + t8334 + t8343) + t8350 + t8352)*var2[16];
  p_output1[27]=t2361*var2[5] + t2156*var2[13] + t2782*var2[14] + t3207*var2[15] + t3207*var2[16];
  p_output1[28]=t3942*var2[5] + t3858*var2[13] + t4043*var2[14] + t4337*var2[15] + t4337*var2[16];
  p_output1[29]=t4829*var2[5] + t4618*var2[13] + t4984*var2[14];
  p_output1[30]=(t4464*(-1.*t3826*t6198 - 1.*t3849*t6241 - 1.*t3766*t6619 - 1.*t3723*t6627) + t3649*(-1.*t1376*t4478*t6198 + t1220*t4478*t6241 + t4535*t6619 + t4523*t6627))*var2[13] + (t101*(-1.*t3766*t6198 - 1.*t3723*t6241 + t7987) + t3649*(t1220*t1393*t6198 + t1376*t1393*t6241 + t1376*t4523*t6970 + t1220*t4535*t6970 + t8040 + t8041) + t4464*(-1.*t101*t1220*t3618*t6198 - 1.*t101*t1376*t3618*t6241 - 1.*t1376*t3723*t6970 - 1.*t1220*t3766*t6970 + t8047 + t8050) - 1.*t1393*t3618*t8507)*var2[14] + (t3649*(t4535*t6448 + t4523*t6466 + t7941) + t8508 + t4464*(-1.*t3766*t6448 - 1.*t3723*t6466 + t7928 + t7951 + t8512 + t8517))*var2[15] + (0. + t8508 + t4464*(0. + t7928 + t8512 + t8517))*var2[16];
  p_output1[31]=(t4464*(t1999*t6198 + t2011*t6241 + t1691*t6619 + t1491*t6627) + t1009*(t1376*t4478*t6198 - 1.*t1220*t4478*t6241 - 1.*t4535*t6619 - 1.*t4523*t6627))*var2[13] + (t101*(t1691*t6198 + t1491*t6241 + t8162) + t1009*(-1.*t1220*t1393*t6198 - 1.*t1376*t1393*t6241 - 1.*t1376*t4523*t6970 - 1.*t1220*t4535*t6970 + t8225 + t8226) - 1.*t1393*t8634*t905 + t4464*(t1376*t1491*t6970 + t1220*t1691*t6970 + t8234 + t8237 + t101*t1220*t6198*t905 + t101*t1376*t6241*t905))*var2[14] + (t1009*(-1.*t4535*t6448 - 1.*t4523*t6466 + t8088) + t8637 + t4464*(t1691*t6448 + t1491*t6466 + t8075 + t8114 + t8642 + t8645))*var2[15] + (0. + t8637 + t4464*(0. + t8075 + t8642 + t8645))*var2[16];
  p_output1[32]=(t3649*(-1.*t1999*t6198 - 1.*t2011*t6241 - 1.*t1691*t6619 - 1.*t1491*t6627) + t1009*(t3826*t6198 + t3849*t6241 + t3766*t6619 + t3723*t6627))*var2[13] + (t1009*(t101*t1220*t3618*t6198 + t101*t1376*t3618*t6241 + t1376*t3723*t6970 + t1220*t3766*t6970 + t8293 + t8297) - 1.*t1393*t3618*t8784 - 1.*t1393*t8800*t905 + t3649*(-1.*t1376*t1491*t6970 - 1.*t1220*t1691*t6970 + t8264 + t8267 - 1.*t101*t1220*t6198*t905 - 1.*t101*t1376*t6241*t905))*var2[14] + (t1009*(t3766*t6448 + t3723*t6466 + t8326 + t8370 + t8809 + t8810) + t3649*(-1.*t1691*t6448 - 1.*t1491*t6466 + t8334 + t8359 + t8813 + t8817) + t8820 + t8823)*var2[15] + (t1009*(0. + t8326 + t8809 + t8810) + t3649*(0. + t8334 + t8813 + t8817) + t8820 + t8823)*var2[16];
  p_output1[33]=t8864;
  p_output1[34]=t8870;
  p_output1[35]=t8876;
  p_output1[36]=0;
  p_output1[37]=0;
  p_output1[38]=0;
  p_output1[39]=0;
  p_output1[40]=0;
  p_output1[41]=0;
  p_output1[42]=0;
  p_output1[43]=0;
  p_output1[44]=0;
  p_output1[45]=0;
  p_output1[46]=0;
  p_output1[47]=0;
  p_output1[48]=0;
  p_output1[49]=0;
  p_output1[50]=0;
  p_output1[51]=0;
  p_output1[52]=0;
  p_output1[53]=0;
  p_output1[54]=0;
  p_output1[55]=0;
  p_output1[56]=0;
  p_output1[57]=0;
  p_output1[58]=0;
  p_output1[59]=0;
  p_output1[60]=0;
  p_output1[61]=0;
  p_output1[62]=0;
  p_output1[63]=0;
  p_output1[64]=0;
  p_output1[65]=0;
  p_output1[66]=0;
  p_output1[67]=0;
  p_output1[68]=0;
  p_output1[69]=0;
  p_output1[70]=0;
  p_output1[71]=0;
  p_output1[72]=0;
  p_output1[73]=0;
  p_output1[74]=0;
  p_output1[75]=0;
  p_output1[76]=0;
  p_output1[77]=0;
  p_output1[78]=(t3649*(t1393*t6185 + t4478*t6970 + t8040 + t8041) + t4464*(-1.*t101*t3618*t6185 - 1.*t3701*t6970 + t8047 + t8050) - 1.*t1393*t3618*t8878 + 0.07996*t101*t905 + t101*(-1.*t3701*t6185 + t7987 - 1.*t6146*t905))*var2[14] + (t3649*(t1393*t4478*t6435 + t7941) + t8879 + t8882 + t8884 + t4464*(-1.*t1393*t3701*t6435 + t7928 + t7951 + t8885 + t8886 - 1.*t6401*t905))*var2[15] + (0. + t8879 + t8882 + t8884 + t4464*(0. + t7928 + t8885 + t8886))*var2[16];
  p_output1[79]=(0.07996*t101*t3618 + t101*(t1233*t6146 + t1395*t6185 + t8162) + t1009*(-1.*t1393*t6185 - 1.*t4478*t6970 + t8225 + t8226) - 1.*t1393*t8951*t905 + t4464*(t1395*t6970 + t8234 + t8237 + t101*t6185*t905))*var2[14] + (t1009*(-1.*t1393*t4478*t6435 + t8088) + t8947 + t8949 + t8952 + t4464*(t1233*t6401 + t1393*t1395*t6435 + t8075 + t8114 + t8954 + t8955))*var2[15] + (0. + t8947 + t8949 + t8952 + t4464*(0. + t8075 + t8954 + t8955))*var2[16];
  p_output1[80]=(0.07996*t1393 + t1009*(t101*t3618*t6185 + t3701*t6970 + t8293 + t8297) - 1.*t1393*t3618*t9012 - 1.*t1393*t9032*t905 + t3649*(-1.*t1395*t6970 + t8264 + t8267 - 1.*t101*t6185*t905))*var2[14] + (t9060 + t9061 + t3649*(-1.*t1393*t1395*t6435 + t8334 + t8359 + t9056 + t9057 + t9065) + t1009*(t1393*t3701*t6435 + t8326 + t8370 + t9047 + t9051 + t9069))*var2[15] + (t1009*(0. + t8326 + t9047 + t9051) + t3649*(0. + t8334 + t9056 + t9057) + t9060 + t9061)*var2[16];
  p_output1[81]=t8864;
  p_output1[82]=t8870;
  p_output1[83]=t8876;
  p_output1[84]=-0.004500000000000004*t3074*var2[15] - 0.004500000000000004*t3074*var2[16];
  p_output1[85]=t9090*var2[15] + t9090*var2[16];
  p_output1[86]=(t905*(-1.*t6435*t905 + t9056 + t9065 + t9100) + t1233*(t3618*t6435 + t9051 + t9069 + t9105) + t9112 + t9116)*var2[15] + (t905*(0. + t9056 + t9100) + t1233*(0. + t9051 + t9105) + t9112 + t9116)*var2[16];
  p_output1[87]=t2980*var2[15] + t2980*var2[16];
  p_output1[88]=t3074*var2[15] + t3074*var2[16];
  p_output1[89]=0;
  p_output1[90]=(0. - 0.01004*t354 - 1.*t354*t6099 + 0.08055*t808 + t6140*t808)*var2[16];
  p_output1[91]=(0. + 0.08055*t354 + t354*t6140 + 0.01004*t808 + t6099*t808)*var2[16];
  p_output1[92]=0;
  p_output1[93]=0;
  p_output1[94]=0;
  p_output1[95]=0;
  p_output1[96]=0;
  p_output1[97]=0;
  p_output1[98]=0;
  p_output1[99]=0;
  p_output1[100]=0;
  p_output1[101]=0;
  p_output1[102]=0;
  p_output1[103]=0;
  p_output1[104]=0;
  p_output1[105]=0;
  p_output1[106]=0;
  p_output1[107]=0;
  p_output1[108]=0;
  p_output1[109]=0;
  p_output1[110]=0;
  p_output1[111]=0;
  p_output1[112]=0;
  p_output1[113]=0;
  p_output1[114]=0;
  p_output1[115]=0;
  p_output1[116]=0;
  p_output1[117]=0;
  p_output1[118]=0;
  p_output1[119]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 20 && ncols == 1) && 
      !(mrows == 1 && ncols == 20))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 20 && ncols == 1) && 
      !(mrows == 1 && ncols == 20))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 6, (mwSize) 20, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "dJb_RightKneeJoint_mex.hh"

namespace SymExpression
{

void dJb_RightKneeJoint_mex_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
