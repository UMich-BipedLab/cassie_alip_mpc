/*
 * Automatically Generated from Mathematica.
 * Mon 11 May 2020 22:18:59 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t245;
  double t1352;
  double t1534;
  double t1276;
  double t1584;
  double t316;
  double t1138;
  double t1271;
  double t1394;
  double t1724;
  double t1843;
  double t1935;
  double t1955;
  double t1968;
  double t2091;
  double t2100;
  double t2127;
  double t2181;
  double t124;
  double t2431;
  double t2444;
  double t2559;
  double t2357;
  double t3097;
  double t3913;
  double t3936;
  double t3946;
  double t3027;
  double t3032;
  double t3079;
  double t3107;
  double t3176;
  double t4258;
  double t4424;
  double t4474;
  double t5880;
  double t5932;
  double t3504;
  double t5751;
  double t5801;
  double t5826;
  double t6027;
  double t6047;
  double t3968;
  double t3997;
  double t3999;
  double t4015;
  double t4055;
  double t4495;
  double t4591;
  double t4722;
  double t6067;
  double t6068;
  double t5941;
  double t5975;
  double t5987;
  double t6016;
  double t6018;
  double t2188;
  double t6128;
  double t6129;
  double t6133;
  double t6159;
  double t6161;
  double t6162;
  double t6167;
  double t6168;
  double t6171;
  double t6188;
  double t6196;
  double t6203;
  double t6254;
  double t6255;
  double t6256;
  double t6241;
  double t6245;
  double t6250;
  double t6138;
  double t6139;
  double t6259;
  double t6261;
  double t6262;
  double t6277;
  double t6281;
  double t6282;
  double t6287;
  double t6288;
  double t6295;
  double t1122;
  double t1262;
  double t1263;
  double t2183;
  double t2306;
  double t6330;
  double t6332;
  double t6334;
  double t6335;
  double t6349;
  double t6351;
  double t6352;
  double t6354;
  double t6356;
  double t6362;
  double t6365;
  double t6366;
  double t6397;
  double t6398;
  double t6399;
  double t6411;
  double t6412;
  double t3352;
  double t3519;
  double t3596;
  double t3620;
  double t3722;
  double t6445;
  double t6446;
  double t6456;
  double t6457;
  double t6488;
  double t6489;
  double t6494;
  double t6503;
  double t6504;
  double t6506;
  double t6509;
  double t6510;
  double t6511;
  double t6225;
  double t6227;
  double t6228;
  double t6204;
  double t6205;
  double t6206;
  double t6209;
  double t6210;
  double t6555;
  double t6556;
  double t6557;
  double t6497;
  double t6498;
  double t6500;
  double t6604;
  double t6605;
  double t6607;
  double t6601;
  double t6602;
  double t6603;
  double t6608;
  double t6609;
  double t6610;
  double t6611;
  double t6612;
  double t6614;
  double t6616;
  double t6620;
  double t6621;
  double t6526;
  double t6527;
  double t6529;
  double t6120;
  double t6124;
  double t6135;
  double t6143;
  double t6145;
  double t6147;
  double t6153;
  double t6154;
  double t6165;
  double t6172;
  double t6174;
  double t6175;
  double t6176;
  double t6177;
  double t6178;
  double t6179;
  double t6180;
  double t6181;
  double t6183;
  double t6266;
  double t6648;
  double t6649;
  double t6652;
  double t6271;
  double t6657;
  double t6658;
  double t6660;
  double t6661;
  double t6662;
  double t6681;
  double t6682;
  double t6683;
  double t6685;
  double t6687;
  double t6689;
  double t6700;
  double t6701;
  double t6702;
  double t6703;
  double t6707;
  double t6708;
  double t6709;
  double t6711;
  double t6712;
  double t6713;
  double t6714;
  double t6715;
  double t6716;
  double t6717;
  double t6718;
  double t6485;
  double t6487;
  double t6495;
  double t6496;
  double t6501;
  double t6508;
  double t6512;
  double t6517;
  double t6520;
  double t6524;
  double t6525;
  double t6530;
  double t6531;
  double t6729;
  double t6731;
  double t6732;
  double t6539;
  double t6758;
  double t6760;
  double t6761;
  double t6771;
  double t6772;
  double t6774;
  double t6775;
  double t6776;
  double t6796;
  double t6797;
  double t6798;
  double t6801;
  double t6802;
  double t6804;
  double t6821;
  double t6823;
  double t6824;
  double t6829;
  double t6830;
  double t6831;
  double t6826;
  double t6827;
  double t6828;
  double t6832;
  double t6833;
  double t6834;
  double t6837;
  double t6838;
  double t6839;
  double t6842;
  double t6843;
  double t6844;
  double t6857;
  double t6858;
  double t6859;
  double t6869;
  double t6871;
  double t6873;
  double t6875;
  double t6876;
  double t6878;
  double t6895;
  double t6896;
  double t6897;
  double t6596;
  double t6598;
  double t6623;
  double t6252;
  double t6257;
  double t6265;
  double t6296;
  double t6300;
  double t6304;
  double t6947;
  double t6948;
  double t6430;
  double t6432;
  double t6433;
  double t5994;
  double t6021;
  double t6051;
  double t6063;
  double t6066;
  double t6071;
  double t6073;
  double t6096;
  double t6100;
  double t6101;
  double t6107;
  double t6109;
  double t6111;
  double t6112;
  double t6114;
  double t6980;
  double t6981;
  double t6982;
  double t6983;
  double t6984;
  double t6985;
  double t6698;
  double t6699;
  double t6719;
  double t7002;
  double t7003;
  double t7008;
  double t7009;
  double t6533;
  double t6536;
  double t6537;
  double t6544;
  double t6548;
  double t6389;
  double t6391;
  double t6406;
  double t6407;
  double t6409;
  double t6418;
  double t6419;
  double t6420;
  double t6428;
  double t6429;
  double t6436;
  double t6437;
  double t7056;
  double t7059;
  double t7060;
  double t6855;
  double t6856;
  double t6860;
  double t6879;
  double t6883;
  double t6889;
  double t7074;
  double t7075;
  double t7078;
  double t7079;
  double t7080;
  double t7082;
  double t7083;
  double t7084;
  double t6819;
  double t6820;
  double t6847;
  double t6625;
  double t6627;
  double t6628;
  double t6939;
  double t6940;
  double t6942;
  double t6944;
  double t6945;
  double t6950;
  double t6951;
  double t6952;
  double t6953;
  double t6954;
  double t6955;
  double t6956;
  double t6958;
  double t6959;
  double t6960;
  double t7136;
  double t7137;
  double t6472;
  double t6473;
  double t6474;
  double t3586;
  double t3790;
  double t3958;
  double t4165;
  double t4213;
  double t4737;
  double t4793;
  double t4979;
  double t5112;
  double t5316;
  double t5364;
  double t5476;
  double t5505;
  double t5602;
  double t5706;
  double t7165;
  double t7167;
  double t6721;
  double t6722;
  double t6723;
  double t6997;
  double t7001;
  double t7004;
  double t7006;
  double t7007;
  double t7011;
  double t7012;
  double t7014;
  double t7015;
  double t7016;
  double t7018;
  double t7019;
  double t7021;
  double t7022;
  double t7023;
  double t7128;
  double t7129;
  double t7130;
  double t7182;
  double t7183;
  double t7188;
  double t6441;
  double t6444;
  double t6447;
  double t6451;
  double t6454;
  double t6466;
  double t6467;
  double t6468;
  double t6469;
  double t6470;
  double t6475;
  double t6479;
  double t7063;
  double t7064;
  double t7065;
  double t7067;
  double t7069;
  double t7070;
  double t7073;
  double t7090;
  double t7088;
  double t7091;
  double t7093;
  double t7094;
  double t7095;
  double t7098;
  double t7100;
  double t7104;
  double t7105;
  double t7106;
  double t7107;
  double t7108;
  double t7110;
  double t7111;
  double t6849;
  double t6851;
  double t6852;
  double t6914;
  double t6916;
  double t6917;
  double t6918;
  double t6919;
  double t6920;
  double t7114;
  double t7116;
  double t7118;
  double t7119;
  double t7120;
  double t7121;
  double t1269;
  double t2311;
  double t2692;
  double t2806;
  double t2851;
  double t2865;
  double t2964;
  double t3230;
  double t3286;
  double t3290;
  double t6581;
  double t6582;
  double t6583;
  double t6584;
  double t6587;
  double t6588;
  double t6589;
  double t6591;
  double t6592;
  double t6593;
  double t6370;
  double t6371;
  double t6986;
  double t6987;
  double t6991;
  double t6992;
  double t6993;
  double t6994;
  double t7168;
  double t7169;
  double t7170;
  double t7171;
  double t7175;
  double t7176;
  double t6329;
  double t6361;
  double t6367;
  double t6372;
  double t6382;
  double t6384;
  double t6386;
  double t7257;
  double t7258;
  double t7259;
  double t7261;
  double t7262;
  double t6680;
  double t6684;
  double t6690;
  double t6691;
  double t6692;
  double t6693;
  double t6694;
  double t6695;
  double t6696;
  double t7236;
  double t7237;
  double t7238;
  double t7278;
  double t7279;
  double t6795;
  double t6800;
  double t6805;
  double t6807;
  double t6808;
  double t6809;
  double t6811;
  double t6812;
  double t6813;
  double t6814;
  double t7290;
  double t7292;
  double t7293;
  double t7295;
  double t7296;
  double t7297;
  double t6864;
  double t7313;
  double t7314;
  double t7228;
  double t7230;
  double t7231;
  double t7232;
  double t6962;
  double t6964;
  double t6965;
  double t6967;
  double t6969;
  double t6970;
  double t6971;
  double t6972;
  double t7153;
  double t7155;
  double t7156;
  double t7157;
  double t7158;
  double t7159;
  double t7160;
  double t7161;
  double t6631;
  double t6632;
  double t6633;
  double t6634;
  double t6635;
  double t6637;
  double t6639;
  double t6640;
  double t6208;
  double t6211;
  double t6213;
  double t6215;
  double t6216;
  double t6224;
  double t6230;
  double t6232;
  double t6560;
  double t6565;
  double t6566;
  double t7263;
  double t7264;
  double t7265;
  double t7266;
  double t7039;
  double t7040;
  double t7042;
  double t7043;
  double t7044;
  double t7045;
  double t7046;
  double t7047;
  double t7048;
  double t7049;
  double t7051;
  double t7204;
  double t7205;
  double t7206;
  double t7207;
  double t7209;
  double t7210;
  double t7211;
  double t7212;
  double t7213;
  double t7214;
  double t7215;
  double t6733;
  double t6734;
  double t6735;
  double t6737;
  double t6738;
  double t6741;
  double t6743;
  double t6744;
  double t6747;
  double t6748;
  double t6751;
  double t7331;
  double t7332;
  double t7333;
  double t7351;
  double t7352;
  double t6558;
  double t6559;
  double t6569;
  double t6570;
  double t6571;
  double t6572;
  double t6574;
  double t6575;
  double t7298;
  double t7300;
  double t7301;
  double t7302;
  double t7376;
  double t7377;
  double t7379;
  double t6899;
  double t6900;
  double t6901;
  double t6902;
  double t6904;
  double t6905;
  double t6906;
  double t6908;
  double t6909;
  double t6910;
  double t6911;
  t245 = Sin(var1[3]);
  t1352 = Cos(var1[5]);
  t1534 = Sin(var1[4]);
  t1276 = Cos(var1[3]);
  t1584 = Sin(var1[5]);
  t316 = Cos(var1[7]);
  t1138 = Sin(var1[7]);
  t1271 = Cos(var1[6]);
  t1394 = -1.*t1276*t1352;
  t1724 = -1.*t245*t1534*t1584;
  t1843 = t1394 + t1724;
  t1935 = t1271*t1843;
  t1955 = -1.*t1352*t245*t1534;
  t1968 = t1276*t1584;
  t2091 = t1955 + t1968;
  t2100 = Sin(var1[6]);
  t2127 = t2091*t2100;
  t2181 = t1935 + t2127;
  t124 = Cos(var1[4]);
  t2431 = t316*t2181;
  t2444 = t124*t245*t1138;
  t2559 = t2431 + t2444;
  t2357 = Cos(var1[8]);
  t3097 = Sin(var1[8]);
  t3913 = t1271*t2091;
  t3936 = -1.*t1843*t2100;
  t3946 = t3913 + t3936;
  t3027 = -1.*t2357;
  t3032 = 1. + t3027;
  t3079 = -0.08055*t3032;
  t3107 = -0.01004*t3097;
  t3176 = 0. + t3079 + t3107;
  t4258 = -1.*t1271*t1843;
  t4424 = -1.*t2091*t2100;
  t4474 = t4258 + t4424;
  t5880 = -1.*t1271;
  t5932 = 1. + t5880;
  t3504 = 0.07996*t2100;
  t5751 = t1276*t1352;
  t5801 = t245*t1534*t1584;
  t5826 = t5751 + t5801;
  t6027 = t5826*t2100;
  t6047 = t3913 + t6027;
  t3968 = -1.*t316;
  t3997 = 1. + t3968;
  t3999 = 0.135*t3997;
  t4015 = 0.08055*t1138;
  t4055 = 0. + t3999 + t4015;
  t4495 = -0.01004*t3032;
  t4591 = 0.08055*t3097;
  t4722 = 0. + t4495 + t4591;
  t6067 = t1271*t5826;
  t6068 = t6067 + t4424;
  t5941 = 0.07996*t5932;
  t5975 = -0.135*t2100;
  t5987 = 0. + t5941 + t5975;
  t6016 = 0.135*t5932;
  t6018 = 0. + t6016 + t3504;
  t2188 = 0.135*t1138;
  t6128 = -1.*t124*t1271*t245*t1584;
  t6129 = -1.*t124*t1352*t245*t2100;
  t6133 = t6128 + t6129;
  t6159 = t316*t245*t1534;
  t6161 = t6133*t1138;
  t6162 = t6159 + t6161;
  t6167 = -1.*t124*t1352*t1271*t245;
  t6168 = t124*t245*t1584*t2100;
  t6171 = t6167 + t6168;
  t6188 = -1.*t124*t316*t245;
  t6196 = t2181*t1138;
  t6203 = t6188 + t6196;
  t6254 = t1352*t245;
  t6255 = -1.*t1276*t1534*t1584;
  t6256 = t6254 + t6255;
  t6241 = -1.*t1276*t1352*t1534;
  t6245 = -1.*t245*t1584;
  t6250 = t6241 + t6245;
  t6138 = -0.08055*t3997;
  t6139 = 0. + t6138 + t2188;
  t6259 = t1271*t6256;
  t6261 = t6250*t2100;
  t6262 = t6259 + t6261;
  t6277 = -1.*t1276*t124*t316;
  t6281 = t6262*t1138;
  t6282 = t6277 + t6281;
  t6287 = t1271*t6250;
  t6288 = -1.*t6256*t2100;
  t6295 = t6287 + t6288;
  t1122 = 0.135*t316;
  t1262 = -0.08055*t1138;
  t1263 = t1122 + t1262;
  t2183 = 0.08055*t316;
  t2306 = t2183 + t2188;
  t6330 = -1.*t1352*t245;
  t6332 = t1276*t1534*t1584;
  t6334 = t6330 + t6332;
  t6335 = t1271*t6334;
  t6349 = t1276*t1352*t1534;
  t6351 = t245*t1584;
  t6352 = t6349 + t6351;
  t6354 = t6352*t2100;
  t6356 = t6335 + t6354;
  t6362 = t316*t6356;
  t6365 = -1.*t1276*t124*t1138;
  t6366 = t6362 + t6365;
  t6397 = t1271*t6352;
  t6398 = t6256*t2100;
  t6399 = t6397 + t6398;
  t6411 = -1.*t6352*t2100;
  t6412 = t6259 + t6411;
  t3352 = -0.135*t1271;
  t3519 = t3352 + t3504;
  t3596 = 0.07996*t1271;
  t3620 = 0.135*t2100;
  t3722 = t3596 + t3620;
  t6445 = -1.*t6334*t2100;
  t6446 = t6397 + t6445;
  t6456 = -1.*t1271*t6334;
  t6457 = t6456 + t6411;
  t6488 = t1276*t124*t1271*t1584;
  t6489 = t1276*t124*t1352*t2100;
  t6494 = t6488 + t6489;
  t6503 = -1.*t1276*t316*t1534;
  t6504 = t6494*t1138;
  t6506 = t6503 + t6504;
  t6509 = t1276*t124*t1352*t1271;
  t6510 = -1.*t1276*t124*t1584*t2100;
  t6511 = t6509 + t6510;
  t6225 = t2357*t3946;
  t6227 = -1.*t6203*t3097;
  t6228 = t6225 + t6227;
  t6204 = -0.01004*t2357;
  t6205 = -0.08055*t3097;
  t6206 = t6204 + t6205;
  t6209 = 0.08055*t2357;
  t6210 = t6209 + t3107;
  t6555 = t1276*t124*t316;
  t6556 = t6356*t1138;
  t6557 = t6555 + t6556;
  t6497 = t316*t6494;
  t6498 = t1276*t1534*t1138;
  t6500 = t6497 + t6498;
  t6604 = -1.*t1276*t124*t1271*t1584;
  t6605 = -1.*t1276*t124*t1352*t2100;
  t6607 = t6604 + t6605;
  t6601 = 0.135*t316*t6511;
  t6602 = t6511*t4055;
  t6603 = t6511*t1138*t3176;
  t6608 = t6607*t4722;
  t6609 = t2357*t6511*t1138;
  t6610 = t6607*t3097;
  t6611 = t6609 + t6610;
  t6612 = -0.08055*t6611;
  t6614 = t2357*t6607;
  t6616 = -1.*t6511*t1138*t3097;
  t6620 = t6614 + t6616;
  t6621 = -0.01004*t6620;
  t6526 = t2357*t6511;
  t6527 = -1.*t6506*t3097;
  t6529 = t6526 + t6527;
  t6120 = -1.*t124*t1352*t245*t5987;
  t6124 = -1.*t124*t245*t1584*t6018;
  t6135 = t6133*t4055;
  t6143 = t245*t1534*t6139;
  t6145 = t316*t6133;
  t6147 = -1.*t245*t1534*t1138;
  t6153 = t6145 + t6147;
  t6154 = 0.135*t6153;
  t6165 = t6162*t3176;
  t6172 = t6171*t4722;
  t6174 = t2357*t6162;
  t6175 = t6171*t3097;
  t6176 = t6174 + t6175;
  t6177 = -0.08055*t6176;
  t6178 = t2357*t6171;
  t6179 = -1.*t6162*t3097;
  t6180 = t6178 + t6179;
  t6181 = -0.01004*t6180;
  t6183 = t6120 + t6124 + t6135 + t6143 + t6154 + t6165 + t6172 + t6177 + t6181;
  t6266 = -1.*t1276*t124*t6139;
  t6648 = -1.*t1276*t1271*t1534*t1584;
  t6649 = -1.*t1276*t1352*t1534*t2100;
  t6652 = t6648 + t6649;
  t6271 = t1276*t124*t1138;
  t6657 = t6652*t1138;
  t6658 = t6277 + t6657;
  t6660 = -1.*t1276*t1352*t1271*t1534;
  t6661 = t1276*t1534*t1584*t2100;
  t6662 = t6660 + t6661;
  t6681 = t124*t1271*t245*t1584;
  t6682 = t124*t1352*t245*t2100;
  t6683 = t6681 + t6682;
  t6685 = t316*t6683;
  t6687 = t245*t1534*t1138;
  t6689 = t6685 + t6687;
  t6700 = t124*t1352*t1271*t245;
  t6701 = -1.*t124*t245*t1584*t2100;
  t6702 = t6700 + t6701;
  t6703 = 0.135*t316*t6702;
  t6707 = t6702*t4055;
  t6708 = t6702*t1138*t3176;
  t6709 = t6133*t4722;
  t6711 = t2357*t6702*t1138;
  t6712 = t6133*t3097;
  t6713 = t6711 + t6712;
  t6714 = -0.08055*t6713;
  t6715 = t2357*t6133;
  t6716 = -1.*t6702*t1138*t3097;
  t6717 = t6715 + t6716;
  t6718 = -0.01004*t6717;
  t6485 = t1276*t124*t1352*t5987;
  t6487 = t1276*t124*t1584*t6018;
  t6495 = t6494*t4055;
  t6496 = -1.*t1276*t1534*t6139;
  t6501 = 0.135*t6500;
  t6508 = t6506*t3176;
  t6512 = t6511*t4722;
  t6517 = t2357*t6506;
  t6520 = t6511*t3097;
  t6524 = t6517 + t6520;
  t6525 = -0.08055*t6524;
  t6530 = -0.01004*t6529;
  t6531 = t6485 + t6487 + t6495 + t6496 + t6501 + t6508 + t6512 + t6525 + t6530;
  t6729 = -1.*t316*t245*t1534;
  t6731 = t6683*t1138;
  t6732 = t6729 + t6731;
  t6539 = -1.*t124*t245*t6139;
  t6758 = -1.*t1271*t245*t1534*t1584;
  t6760 = -1.*t1352*t245*t1534*t2100;
  t6761 = t6758 + t6760;
  t6771 = t6761*t1138;
  t6772 = t6188 + t6771;
  t6774 = -1.*t1352*t1271*t245*t1534;
  t6775 = t245*t1534*t1584*t2100;
  t6776 = t6774 + t6775;
  t6796 = -1.*t1271*t1534*t1584;
  t6797 = -1.*t1352*t1534*t2100;
  t6798 = t6796 + t6797;
  t6801 = t316*t6798;
  t6802 = t124*t1138;
  t6804 = t6801 + t6802;
  t6821 = -1.*t1352*t1271*t1534;
  t6823 = t1534*t1584*t2100;
  t6824 = t6821 + t6823;
  t6829 = t1271*t1534*t1584;
  t6830 = t1352*t1534*t2100;
  t6831 = t6829 + t6830;
  t6826 = 0.135*t316*t6824;
  t6827 = t6824*t4055;
  t6828 = t6824*t1138*t3176;
  t6832 = t6831*t4722;
  t6833 = t2357*t6824*t1138;
  t6834 = t6831*t3097;
  t6837 = t6833 + t6834;
  t6838 = -0.08055*t6837;
  t6839 = t2357*t6831;
  t6842 = -1.*t6824*t1138*t3097;
  t6843 = t6839 + t6842;
  t6844 = -0.01004*t6843;
  t6857 = -1.*t124*t1271*t1584;
  t6858 = -1.*t124*t1352*t2100;
  t6859 = t6857 + t6858;
  t6869 = t316*t1534;
  t6871 = t6859*t1138;
  t6873 = t6869 + t6871;
  t6875 = -1.*t124*t1352*t1271;
  t6876 = t124*t1584*t2100;
  t6878 = t6875 + t6876;
  t6895 = -1.*t124*t316;
  t6896 = t6798*t1138;
  t6897 = t6895 + t6896;
  t6596 = -1.*t1276*t124*t1584*t5987;
  t6598 = t1276*t124*t1352*t6018;
  t6623 = t6596 + t6598 + t6601 + t6602 + t6603 + t6608 + t6612 + t6621;
  t6252 = t6250*t5987;
  t6257 = t6256*t6018;
  t6265 = t6262*t4055;
  t6296 = t6295*t4722;
  t6300 = t6295*t3097;
  t6304 = t2357*t6295;
  t6947 = -1.*t1271*t6352;
  t6948 = t6947 + t6288;
  t6430 = t2357*t6412;
  t6432 = -1.*t6399*t1138*t3097;
  t6433 = t6430 + t6432;
  t5994 = t5826*t5987;
  t6021 = t2091*t6018;
  t6051 = 0.135*t316*t6047;
  t6063 = t6047*t4055;
  t6066 = t6047*t1138*t3176;
  t6071 = t6068*t4722;
  t6073 = t2357*t6047*t1138;
  t6096 = t6068*t3097;
  t6100 = t6073 + t6096;
  t6101 = -0.08055*t6100;
  t6107 = t2357*t6068;
  t6109 = -1.*t6047*t1138*t3097;
  t6111 = t6107 + t6109;
  t6112 = -0.01004*t6111;
  t6114 = t5994 + t6021 + t6051 + t6063 + t6066 + t6071 + t6101 + t6112;
  t6980 = t1352*t245*t1534;
  t6981 = -1.*t1276*t1584;
  t6982 = t6980 + t6981;
  t6983 = t1271*t6982;
  t6984 = t1843*t2100;
  t6985 = t6983 + t6984;
  t6698 = -1.*t124*t245*t1584*t5987;
  t6699 = t124*t1352*t245*t6018;
  t6719 = t6698 + t6699 + t6703 + t6707 + t6708 + t6709 + t6714 + t6718;
  t7002 = -1.*t6982*t2100;
  t7003 = t1935 + t7002;
  t7008 = -1.*t1271*t6982;
  t7009 = t7008 + t3936;
  t6533 = t2091*t5987;
  t6536 = t1843*t6018;
  t6537 = t2181*t4055;
  t6544 = t3946*t4722;
  t6548 = t3946*t3097;
  t6389 = t6256*t5987;
  t6391 = t6352*t6018;
  t6406 = 0.135*t316*t6399;
  t6407 = t6399*t4055;
  t6409 = t6399*t1138*t3176;
  t6418 = t6412*t4722;
  t6419 = t2357*t6399*t1138;
  t6420 = t6412*t3097;
  t6428 = t6419 + t6420;
  t6429 = -0.08055*t6428;
  t6436 = -0.01004*t6433;
  t6437 = t6389 + t6391 + t6406 + t6407 + t6409 + t6418 + t6429 + t6436;
  t7056 = t124*t1352*t1271;
  t7059 = -1.*t124*t1584*t2100;
  t7060 = t7056 + t7059;
  t6855 = -1.*t124*t1352*t5987;
  t6856 = -1.*t124*t1584*t6018;
  t6860 = t6859*t4055;
  t6879 = t6878*t4722;
  t6883 = t6878*t3097;
  t6889 = t2357*t6878;
  t7074 = 0.135*t316*t6859;
  t7075 = t6859*t1138*t3176;
  t7078 = t2357*t6859*t1138;
  t7079 = t7078 + t6883;
  t7080 = -0.08055*t7079;
  t7082 = -1.*t6859*t1138*t3097;
  t7083 = t6889 + t7082;
  t7084 = -0.01004*t7083;
  t6819 = t1534*t1584*t5987;
  t6820 = -1.*t1352*t1534*t6018;
  t6847 = t6819 + t6820 + t6826 + t6827 + t6828 + t6832 + t6838 + t6844;
  t6625 = t1276*t124*t1352*t3519;
  t6627 = t1276*t124*t1584*t3722;
  t6628 = t6625 + t6627 + t6601 + t6602 + t6603 + t6608 + t6612 + t6621;
  t6939 = t6256*t3519;
  t6940 = t6352*t3722;
  t6942 = 0.135*t316*t6412;
  t6944 = t6412*t4055;
  t6945 = t6412*t1138*t3176;
  t6950 = t6948*t4722;
  t6951 = t2357*t6412*t1138;
  t6952 = t6948*t3097;
  t6953 = t6951 + t6952;
  t6954 = -0.08055*t6953;
  t6955 = t2357*t6948;
  t6956 = -1.*t6412*t1138*t3097;
  t6958 = t6955 + t6956;
  t6959 = -0.01004*t6958;
  t6960 = t6939 + t6940 + t6942 + t6944 + t6945 + t6950 + t6954 + t6959;
  t7136 = t6334*t2100;
  t7137 = t6947 + t7136;
  t6472 = t2357*t6457;
  t6473 = -1.*t6446*t1138*t3097;
  t6474 = t6472 + t6473;
  t3586 = t2091*t3519;
  t3790 = t1843*t3722;
  t3958 = 0.135*t316*t3946;
  t4165 = t3946*t4055;
  t4213 = t3946*t1138*t3176;
  t4737 = t4474*t4722;
  t4793 = t2357*t3946*t1138;
  t4979 = t4474*t3097;
  t5112 = t4793 + t4979;
  t5316 = -0.08055*t5112;
  t5364 = t2357*t4474;
  t5476 = -1.*t3946*t1138*t3097;
  t5505 = t5364 + t5476;
  t5602 = -0.01004*t5505;
  t5706 = t3586 + t3790 + t3958 + t4165 + t4213 + t4737 + t5316 + t5602;
  t7165 = -1.*t5826*t2100;
  t7167 = t6983 + t7165;
  t6721 = t124*t1352*t245*t3519;
  t6722 = t124*t245*t1584*t3722;
  t6723 = t6721 + t6722 + t6703 + t6707 + t6708 + t6709 + t6714 + t6718;
  t6997 = t1843*t3519;
  t7001 = t6982*t3722;
  t7004 = 0.135*t316*t7003;
  t7006 = t7003*t4055;
  t7007 = t7003*t1138*t3176;
  t7011 = t7009*t4722;
  t7012 = t2357*t7003*t1138;
  t7014 = t7009*t3097;
  t7015 = t7012 + t7014;
  t7016 = -0.08055*t7015;
  t7018 = t2357*t7009;
  t7019 = -1.*t7003*t1138*t3097;
  t7021 = t7018 + t7019;
  t7022 = -0.01004*t7021;
  t7023 = t6997 + t7001 + t7004 + t7006 + t7007 + t7011 + t7016 + t7022;
  t7128 = 0.135*t1271;
  t7129 = -0.07996*t2100;
  t7130 = t7128 + t7129;
  t7182 = -1.*t1271*t5826;
  t7183 = t7182 + t7002;
  t7188 = t7008 + t6027;
  t6441 = t6352*t3519;
  t6444 = t6334*t3722;
  t6447 = 0.135*t316*t6446;
  t6451 = t6446*t4055;
  t6454 = t6446*t1138*t3176;
  t6466 = t6457*t4722;
  t6467 = t2357*t6446*t1138;
  t6468 = t6457*t3097;
  t6469 = t6467 + t6468;
  t6470 = -0.08055*t6469;
  t6475 = -0.01004*t6474;
  t6479 = t6441 + t6444 + t6447 + t6451 + t6454 + t6466 + t6470 + t6475;
  t7063 = -0.08055*t316*t2357*t7060;
  t7064 = t7060*t2306;
  t7065 = -0.135*t7060*t1138;
  t7067 = t316*t7060*t3176;
  t7069 = 0.01004*t316*t7060*t3097;
  t7070 = t7063 + t7064 + t7065 + t7067 + t7069;
  t7073 = var2[7]*t7070;
  t7090 = t124*t1352*t3722;
  t7088 = -1.*t124*t1584*t3519;
  t7091 = t7088 + t7090 + t7074 + t6860 + t7075 + t6879 + t7080 + t7084;
  t7093 = t7060*t1138*t6206;
  t7094 = t6859*t6210;
  t7095 = -1.*t2357*t7060*t1138;
  t7098 = -1.*t6859*t3097;
  t7100 = t7095 + t7098;
  t7104 = -0.01004*t7100;
  t7105 = t2357*t6859;
  t7106 = -1.*t7060*t1138*t3097;
  t7107 = t7105 + t7106;
  t7108 = -0.08055*t7107;
  t7110 = t7093 + t7094 + t7104 + t7108;
  t7111 = var2[8]*t7110;
  t6849 = -1.*t1352*t1534*t3519;
  t6851 = -1.*t1534*t1584*t3722;
  t6852 = t6849 + t6851 + t6826 + t6827 + t6828 + t6832 + t6838 + t6844;
  t6914 = -0.08055*t316*t2357*t6399;
  t6916 = t6399*t2306;
  t6917 = -0.135*t6399*t1138;
  t6918 = t316*t6399*t3176;
  t6919 = 0.01004*t316*t6399*t3097;
  t6920 = t6914 + t6916 + t6917 + t6918 + t6919;
  t7114 = -0.08055*t316*t2357*t6446;
  t7116 = t6446*t2306;
  t7118 = -0.135*t6446*t1138;
  t7119 = t316*t6446*t3176;
  t7120 = 0.01004*t316*t6446*t3097;
  t7121 = t7114 + t7116 + t7118 + t7119 + t7120;
  t1269 = -1.*t124*t245*t1263;
  t2311 = t2181*t2306;
  t2692 = -0.08055*t2357*t2559;
  t2806 = t124*t316*t245;
  t2851 = -1.*t2181*t1138;
  t2865 = t2806 + t2851;
  t2964 = 0.135*t2865;
  t3230 = t2559*t3176;
  t3286 = 0.01004*t2559*t3097;
  t3290 = t1269 + t2311 + t2692 + t2964 + t3230 + t3286;
  t6581 = -1.*t1276*t1534*t1263;
  t6582 = t6494*t2306;
  t6583 = -0.08055*t2357*t6500;
  t6584 = t1276*t316*t1534;
  t6587 = -1.*t6494*t1138;
  t6588 = t6584 + t6587;
  t6589 = 0.135*t6588;
  t6591 = t6500*t3176;
  t6592 = 0.01004*t6500*t3097;
  t6593 = t6581 + t6582 + t6583 + t6589 + t6591 + t6592;
  t6370 = -1.*t6356*t1138;
  t6371 = t6277 + t6370;
  t6986 = -0.08055*t316*t2357*t6985;
  t6987 = t6985*t2306;
  t6991 = -0.135*t6985*t1138;
  t6992 = t316*t6985*t3176;
  t6993 = 0.01004*t316*t6985*t3097;
  t6994 = t6986 + t6987 + t6991 + t6992 + t6993;
  t7168 = -0.08055*t316*t2357*t7167;
  t7169 = t7167*t2306;
  t7170 = -0.135*t7167*t1138;
  t7171 = t316*t7167*t3176;
  t7175 = 0.01004*t316*t7167*t3097;
  t7176 = t7168 + t7169 + t7170 + t7171 + t7175;
  t6329 = t1276*t124*t1263;
  t6361 = t6356*t2306;
  t6367 = -0.08055*t2357*t6366;
  t6372 = 0.135*t6371;
  t6382 = t6366*t3176;
  t6384 = 0.01004*t6366*t3097;
  t6386 = t6329 + t6361 + t6367 + t6372 + t6382 + t6384;
  t7257 = t6982*t2100;
  t7258 = t6067 + t7257;
  t7259 = t316*t7258;
  t7261 = -1.*t124*t245*t1138;
  t7262 = t7259 + t7261;
  t6680 = -1.*t245*t1534*t1263;
  t6684 = t6683*t2306;
  t6690 = -0.08055*t2357*t6689;
  t6691 = -1.*t6683*t1138;
  t6692 = t6159 + t6691;
  t6693 = 0.135*t6692;
  t6694 = t6689*t3176;
  t6695 = 0.01004*t6689*t3097;
  t6696 = t6680 + t6684 + t6690 + t6693 + t6694 + t6695;
  t7236 = -0.08055*t316;
  t7237 = -0.135*t1138;
  t7238 = t7236 + t7237;
  t7278 = -1.*t7258*t1138;
  t7279 = t6188 + t7278;
  t6795 = -1.*t124*t1263;
  t6800 = t6798*t2306;
  t6805 = -0.08055*t2357*t6804;
  t6807 = t124*t316;
  t6808 = -1.*t6798*t1138;
  t6809 = t6807 + t6808;
  t6811 = 0.135*t6809;
  t6812 = t6804*t3176;
  t6813 = 0.01004*t6804*t3097;
  t6814 = t6795 + t6800 + t6805 + t6811 + t6812 + t6813;
  t7290 = t124*t1271*t1584;
  t7292 = t124*t1352*t2100;
  t7293 = t7290 + t7292;
  t7295 = t316*t7293;
  t7296 = t1534*t1138;
  t7297 = t7295 + t7296;
  t6864 = -1.*t1534*t1138;
  t7313 = -1.*t7293*t1138;
  t7314 = t6869 + t7313;
  t7228 = 0.01004*t2357*t6366;
  t7230 = t6366*t6206;
  t7231 = 0.08055*t6366*t3097;
  t7232 = t7228 + t7230 + t7231;
  t6962 = t6399*t1138*t6206;
  t6964 = t6412*t6210;
  t6965 = -1.*t2357*t6399*t1138;
  t6967 = -1.*t6412*t3097;
  t6969 = t6965 + t6967;
  t6970 = -0.01004*t6969;
  t6971 = -0.08055*t6433;
  t6972 = t6962 + t6964 + t6970 + t6971;
  t7153 = t6446*t1138*t6206;
  t7155 = t6457*t6210;
  t7156 = -1.*t2357*t6446*t1138;
  t7157 = -1.*t6457*t3097;
  t7158 = t7156 + t7157;
  t7159 = -0.01004*t7158;
  t7160 = -0.08055*t6474;
  t7161 = t7153 + t7155 + t7159 + t7160;
  t6631 = t6506*t6206;
  t6632 = t6511*t6210;
  t6633 = -1.*t2357*t6506;
  t6634 = -1.*t6511*t3097;
  t6635 = t6633 + t6634;
  t6637 = -0.01004*t6635;
  t6639 = -0.08055*t6529;
  t6640 = t6631 + t6632 + t6637 + t6639;
  t6208 = t6203*t6206;
  t6211 = t3946*t6210;
  t6213 = -1.*t2357*t6203;
  t6215 = -1.*t3946*t3097;
  t6216 = t6213 + t6215;
  t6224 = -0.01004*t6216;
  t6230 = -0.08055*t6228;
  t6232 = t6208 + t6211 + t6224 + t6230;
  t6560 = -1.*t2357*t6557;
  t6565 = -1.*t6446*t3097;
  t6566 = t6560 + t6565;
  t7263 = 0.01004*t2357*t7262;
  t7264 = t7262*t6206;
  t7265 = 0.08055*t7262*t3097;
  t7266 = t7263 + t7264 + t7265;
  t7039 = t6985*t1138*t6206;
  t7040 = t7003*t6210;
  t7042 = -1.*t2357*t6985*t1138;
  t7043 = -1.*t7003*t3097;
  t7044 = t7042 + t7043;
  t7045 = -0.01004*t7044;
  t7046 = t2357*t7003;
  t7047 = -1.*t6985*t1138*t3097;
  t7048 = t7046 + t7047;
  t7049 = -0.08055*t7048;
  t7051 = t7039 + t7040 + t7045 + t7049;
  t7204 = t7167*t1138*t6206;
  t7205 = t7183*t6210;
  t7206 = -1.*t2357*t7167*t1138;
  t7207 = -1.*t7183*t3097;
  t7209 = t7206 + t7207;
  t7210 = -0.01004*t7209;
  t7211 = t2357*t7183;
  t7212 = -1.*t7167*t1138*t3097;
  t7213 = t7211 + t7212;
  t7214 = -0.08055*t7213;
  t7215 = t7204 + t7205 + t7210 + t7214;
  t6733 = t6732*t6206;
  t6734 = t6702*t6210;
  t6735 = -1.*t2357*t6732;
  t6737 = -1.*t6702*t3097;
  t6738 = t6735 + t6737;
  t6741 = -0.01004*t6738;
  t6743 = t2357*t6702;
  t6744 = -1.*t6732*t3097;
  t6747 = t6743 + t6744;
  t6748 = -0.08055*t6747;
  t6751 = t6733 + t6734 + t6741 + t6748;
  t7331 = -0.08055*t2357;
  t7332 = 0.01004*t3097;
  t7333 = t7331 + t7332;
  t7351 = t7258*t1138;
  t7352 = t2806 + t7351;
  t6558 = t6557*t6206;
  t6559 = t6446*t6210;
  t6569 = -0.01004*t6566;
  t6570 = t2357*t6446;
  t6571 = -1.*t6557*t3097;
  t6572 = t6570 + t6571;
  t6574 = -0.08055*t6572;
  t6575 = t6558 + t6559 + t6569 + t6574;
  t7298 = 0.01004*t2357*t7297;
  t7300 = t7297*t6206;
  t7301 = 0.08055*t7297*t3097;
  t7302 = t7298 + t7300 + t7301;
  t7376 = -1.*t316*t1534;
  t7377 = t7293*t1138;
  t7379 = t7376 + t7377;
  t6899 = t6897*t6206;
  t6900 = t6824*t6210;
  t6901 = -1.*t2357*t6897;
  t6902 = -1.*t6824*t3097;
  t6904 = t6901 + t6902;
  t6905 = -0.01004*t6904;
  t6906 = t2357*t6824;
  t6908 = -1.*t6897*t3097;
  t6909 = t6906 + t6908;
  t6910 = -0.08055*t6909;
  t6911 = t6899 + t6900 + t6905 + t6910;
  p_output1[0]=0;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=0;
  p_output1[4]=0;
  p_output1[5]=0;
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=(t6252 + t6257 + t6265 + t6266 + 0.135*(t316*t6262 + t6271) + t3176*t6282 + t6296 - 0.08055*(t2357*t6282 + t6300) - 0.01004*(-1.*t3097*t6282 + t6304))*var2[3] + t6183*var2[4] + t6114*var2[5] + t5706*var2[6] + t3290*var2[7] + t6232*var2[8];
  p_output1[10]=(0.135*t2559 + t3176*t6203 - 0.01004*t6228 + t6533 + t6536 + t6537 + t6539 + t6544 - 0.08055*(t2357*t6203 + t6548))*var2[3] + t6531*var2[4] + t6437*var2[5] + t6479*var2[6] + t6386*var2[7] + t6575*var2[8];
  p_output1[11]=0;
  p_output1[12]=t6183*var2[3] + (-1.*t1276*t1352*t1534*t5987 - 1.*t1276*t1534*t1584*t6018 + t6266 + t4055*t6652 + 0.135*(t6271 + t316*t6652) + t3176*t6658 + t4722*t6662 - 0.01004*(-1.*t3097*t6658 + t2357*t6662) - 0.08055*(t2357*t6658 + t3097*t6662))*var2[4] + t6623*var2[5] + t6628*var2[6] + t6593*var2[7] + t6640*var2[8];
  p_output1[13]=t6531*var2[3] + (-1.*t1352*t1534*t245*t5987 - 1.*t1534*t1584*t245*t6018 + t6539 + t4055*t6761 + 0.135*(t2444 + t316*t6761) + t3176*t6772 + t4722*t6776 - 0.01004*(-1.*t3097*t6772 + t2357*t6776) - 0.08055*(t2357*t6772 + t3097*t6776))*var2[4] + t6719*var2[5] + t6723*var2[6] + t6696*var2[7] + t6751*var2[8];
  p_output1[14]=(t1534*t6139 + t6855 + t6856 + t6860 + 0.135*(t316*t6859 + t6864) + t3176*t6873 + t6879 - 0.08055*(t2357*t6873 + t6883) - 0.01004*(-1.*t3097*t6873 + t6889))*var2[4] + t6847*var2[5] + t6852*var2[6] + t6814*var2[7] + t6911*var2[8];
  p_output1[15]=t6114*var2[3] + t6623*var2[4] + (t6252 + t6257 + 0.135*t316*t6262 + t1138*t3176*t6262 + t6265 + t6296 - 0.08055*(t1138*t2357*t6262 + t6300) - 0.01004*(-1.*t1138*t3097*t6262 + t6304))*var2[5] + t6960*var2[6] + t6920*var2[7] + t6972*var2[8];
  p_output1[16]=t6437*var2[3] + t6719*var2[4] + (0.135*t2181*t316 + t1138*t2181*t3176 - 0.01004*(-1.*t1138*t2181*t3097 + t6225) + t6533 + t6536 + t6537 + t6544 - 0.08055*(t1138*t2181*t2357 + t6548))*var2[5] + t7023*var2[6] + t6994*var2[7] + t7051*var2[8];
  p_output1[17]=t7073 + t7111 + t6847*var2[4] + (t6855 + t6856 + t6860 + t6879 + t7074 + t7075 + t7080 + t7084)*var2[5] + t7091*var2[6];
  p_output1[18]=t5706*var2[3] + t6628*var2[4] + t6960*var2[5] + (0.135*t316*t6457 + t1138*t3176*t6457 + t4055*t6457 + t6940 + t6334*t7130 + t4722*t7137 - 0.01004*(-1.*t1138*t3097*t6457 + t2357*t7137) - 0.08055*(t1138*t2357*t6457 + t3097*t7137))*var2[6] + t7121*var2[7] + t7161*var2[8];
  p_output1[19]=t6479*var2[3] + t6723*var2[4] + t7023*var2[5] + (t7001 + t5826*t7130 + 0.135*t316*t7183 + t1138*t3176*t7183 + t4055*t7183 + t4722*t7188 - 0.01004*(-1.*t1138*t3097*t7183 + t2357*t7188) - 0.08055*(t1138*t2357*t7183 + t3097*t7188))*var2[6] + t7176*var2[7] + t7215*var2[8];
  p_output1[20]=t7073 + t7111 + t6852*var2[4] + t7091*var2[5] + (t6860 + t6879 + t7074 + t7075 + t7080 + t7084 + t7090 + t124*t1584*t7130)*var2[6];
  p_output1[21]=t3290*var2[3] + t6593*var2[4] + t6920*var2[5] + t7121*var2[6] + (t1263*t6356 + 0.135*(t6271 - 1.*t316*t6356) - 0.08055*t2357*t6371 + 0.01004*t3097*t6371 + t3176*t6371 + t124*t1276*t7238)*var2[7] + t7232*var2[8];
  p_output1[22]=t6386*var2[3] + t6696*var2[4] + t6994*var2[5] + t7176*var2[6] + (t124*t245*t7238 + t1263*t7258 + 0.135*(t2444 - 1.*t316*t7258) - 0.08055*t2357*t7279 + 0.01004*t3097*t7279 + t3176*t7279)*var2[7] + t7266*var2[8];
  p_output1[23]=t6814*var2[4] + t7070*var2[5] + t7070*var2[6] + (-1.*t1534*t7238 + t1263*t7293 + 0.135*(t6864 - 1.*t316*t7293) - 0.08055*t2357*t7314 + 0.01004*t3097*t7314 + t3176*t7314)*var2[7] + t7302*var2[8];
  p_output1[24]=t6232*var2[3] + t6640*var2[4] + t6972*var2[5] + t7161*var2[6] + t7232*var2[7] + (t6206*t6446 - 0.01004*(-1.*t2357*t6446 + t3097*t6557) - 0.08055*t6566 + t6557*t7333)*var2[8];
  p_output1[25]=t6575*var2[3] + t6751*var2[4] + t7051*var2[5] + t7215*var2[6] + t7266*var2[7] + (t6206*t7167 + t7333*t7352 - 0.08055*(-1.*t3097*t7167 - 1.*t2357*t7352) - 0.01004*(-1.*t2357*t7167 + t3097*t7352))*var2[8];
  p_output1[26]=t6911*var2[4] + t7110*var2[5] + t7110*var2[6] + t7302*var2[7] + (t6206*t7060 + t7333*t7379 - 0.08055*(-1.*t3097*t7060 - 1.*t2357*t7379) - 0.01004*(-1.*t2357*t7060 + t3097*t7379))*var2[8];
  p_output1[27]=0;
  p_output1[28]=0;
  p_output1[29]=0;
  p_output1[30]=0;
  p_output1[31]=0;
  p_output1[32]=0;
  p_output1[33]=0;
  p_output1[34]=0;
  p_output1[35]=0;
  p_output1[36]=0;
  p_output1[37]=0;
  p_output1[38]=0;
  p_output1[39]=0;
  p_output1[40]=0;
  p_output1[41]=0;
  p_output1[42]=0;
  p_output1[43]=0;
  p_output1[44]=0;
  p_output1[45]=0;
  p_output1[46]=0;
  p_output1[47]=0;
  p_output1[48]=0;
  p_output1[49]=0;
  p_output1[50]=0;
  p_output1[51]=0;
  p_output1[52]=0;
  p_output1[53]=0;
  p_output1[54]=0;
  p_output1[55]=0;
  p_output1[56]=0;
  p_output1[57]=0;
  p_output1[58]=0;
  p_output1[59]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 20 && ncols == 1) && 
      !(mrows == 1 && ncols == 20))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 20 && ncols == 1) && 
      !(mrows == 1 && ncols == 20))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 3, (mwSize) 20, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "dJp_LeftThighJoint_mex.hh"

namespace SymExpression
{

void dJp_LeftThighJoint_mex_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
