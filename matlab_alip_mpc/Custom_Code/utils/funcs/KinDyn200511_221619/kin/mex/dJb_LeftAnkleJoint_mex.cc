/*
 * Automatically Generated from Mathematica.
 * Mon 11 May 2020 22:20:03 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t598;
  double t507;
  double t526;
  double t648;
  double t843;
  double t542;
  double t655;
  double t684;
  double t501;
  double t845;
  double t867;
  double t872;
  double t227;
  double t367;
  double t723;
  double t896;
  double t899;
  double t901;
  double t907;
  double t950;
  double t965;
  double t969;
  double t990;
  double t1039;
  double t149;
  double t1080;
  double t110;
  double t1087;
  double t82;
  double t1476;
  double t1500;
  double t1543;
  double t1557;
  double t1226;
  double t1644;
  double t1694;
  double t1707;
  double t1497;
  double t1563;
  double t1615;
  double t1625;
  double t1738;
  double t1747;
  double t1764;
  double t1767;
  double t1791;
  double t1204;
  double t1224;
  double t1257;
  double t1753;
  double t1830;
  double t1833;
  double t1859;
  double t1866;
  double t1894;
  double t1853;
  double t1918;
  double t1920;
  double t1926;
  double t1929;
  double t1932;
  double t1937;
  double t1953;
  double t1955;
  double t1963;
  double t1973;
  double t1986;
  double t2064;
  double t2093;
  double t2128;
  double t2144;
  double t2161;
  double t2134;
  double t2162;
  double t2169;
  double t2186;
  double t2196;
  double t2201;
  double t2276;
  double t2290;
  double t2313;
  double t2322;
  double t2458;
  double t2462;
  double t2470;
  double t2443;
  double t2446;
  double t2471;
  double t2475;
  double t2497;
  double t2498;
  double t2509;
  double t2484;
  double t2511;
  double t2516;
  double t2529;
  double t2532;
  double t2533;
  double t2589;
  double t2594;
  double t2595;
  double t2605;
  double t2593;
  double t2613;
  double t2617;
  double t2624;
  double t2627;
  double t2637;
  double t2415;
  double t2416;
  double t2261;
  double t2272;
  double t2278;
  double t2329;
  double t2331;
  double t2730;
  double t2744;
  double t2746;
  double t2747;
  double t2749;
  double t2753;
  double t2757;
  double t2762;
  double t2822;
  double t2833;
  double t2835;
  double t2847;
  double t2848;
  double t2837;
  double t2838;
  double t2839;
  double t2845;
  double t2855;
  double t2858;
  double t2867;
  double t2870;
  double t2876;
  double t2866;
  double t2884;
  double t2885;
  double t2889;
  double t2900;
  double t2911;
  double t2886;
  double t2916;
  double t2928;
  double t2933;
  double t2943;
  double t2954;
  double t2955;
  double t2957;
  double t2961;
  double t2963;
  double t2965;
  double t2968;
  double t3012;
  double t3000;
  double t3003;
  double t3005;
  double t3008;
  double t3018;
  double t3030;
  double t3039;
  double t3050;
  double t3058;
  double t3032;
  double t3060;
  double t3074;
  double t3081;
  double t3082;
  double t3085;
  double t3148;
  double t3149;
  double t3150;
  double t3155;
  double t3151;
  double t3159;
  double t3161;
  double t3171;
  double t3172;
  double t3178;
  double t3265;
  double t3266;
  double t3272;
  double t3278;
  double t3288;
  double t3276;
  double t3292;
  double t3296;
  double t3312;
  double t3335;
  double t3337;
  double t3470;
  double t3483;
  double t3494;
  double t3495;
  double t3530;
  double t3533;
  double t3444;
  double t3447;
  double t3481;
  double t3498;
  double t3501;
  double t3668;
  double t3682;
  double t3734;
  double t3735;
  double t3757;
  double t3761;
  double t3810;
  double t3833;
  double t3862;
  double t3869;
  double t3872;
  double t3879;
  double t1052;
  double t1119;
  double t1142;
  double t1236;
  double t1270;
  double t1281;
  double t1327;
  double t1395;
  double t1454;
  double t4044;
  double t4048;
  double t4049;
  double t2181;
  double t2208;
  double t2209;
  double t2243;
  double t2247;
  double t2248;
  double t2273;
  double t2334;
  double t2351;
  double t2364;
  double t2371;
  double t2377;
  double t2423;
  double t2524;
  double t2535;
  double t2536;
  double t2546;
  double t2555;
  double t2558;
  double t2560;
  double t2563;
  double t2570;
  double t2619;
  double t2640;
  double t2645;
  double t2652;
  double t2658;
  double t2659;
  double t2662;
  double t2664;
  double t2667;
  double t2681;
  double t2689;
  double t2692;
  double t2703;
  double t2765;
  double t2768;
  double t2770;
  double t2776;
  double t2781;
  double t2787;
  double t2796;
  double t2800;
  double t2804;
  double t4284;
  double t4290;
  double t4300;
  double t3077;
  double t3092;
  double t3096;
  double t3100;
  double t3107;
  double t3108;
  double t3127;
  double t3128;
  double t3133;
  double t3164;
  double t3183;
  double t3193;
  double t3206;
  double t3212;
  double t3222;
  double t3226;
  double t3238;
  double t3241;
  double t3307;
  double t3338;
  double t3351;
  double t3355;
  double t3363;
  double t3387;
  double t3452;
  double t3504;
  double t3506;
  double t3509;
  double t3515;
  double t3521;
  double t3537;
  double t3601;
  double t3617;
  double t3620;
  double t3625;
  double t3687;
  double t3690;
  double t3692;
  double t3704;
  double t3708;
  double t3709;
  double t3751;
  double t3770;
  double t3788;
  double t3845;
  double t3876;
  double t3880;
  double t3882;
  double t3897;
  double t3906;
  double t3907;
  double t3908;
  double t3921;
  double t3927;
  double t3930;
  double t3934;
  double t3936;
  double t3941;
  double t3944;
  double t3948;
  double t3952;
  double t4632;
  double t4636;
  double t4639;
  double t4793;
  double t4837;
  double t4838;
  double t5170;
  double t5186;
  double t5145;
  double t5166;
  double t5254;
  double t5255;
  double t5259;
  double t5191;
  double t5206;
  double t5228;
  double t5109;
  double t5113;
  double t5169;
  double t5231;
  double t5248;
  double t5264;
  double t5267;
  double t5281;
  double t5282;
  double t5287;
  double t5291;
  double t5292;
  double t5095;
  double t5099;
  double t5322;
  double t5323;
  double t5325;
  double t5330;
  double t5332;
  double t5116;
  double t5142;
  double t5279;
  double t5297;
  double t5309;
  double t5060;
  double t5085;
  double t5100;
  double t5317;
  double t5320;
  double t5345;
  double t5353;
  double t5375;
  double t5377;
  double t5394;
  double t5411;
  double t5420;
  double t5425;
  double t5432;
  double t5434;
  double t5443;
  double t5450;
  double t5454;
  double t5457;
  double t5091;
  double t5093;
  double t5368;
  double t5459;
  double t5460;
  double t5475;
  double t5479;
  double t5482;
  double t5484;
  double t5489;
  double t5513;
  double t5519;
  double t5520;
  double t5541;
  double t5551;
  double t5578;
  double t5579;
  double t5508;
  double t5466;
  double t5490;
  double t5491;
  double t5550;
  double t5581;
  double t5584;
  double t5597;
  double t5598;
  double t5603;
  double t5720;
  double t5723;
  double t5744;
  double t5746;
  double t5747;
  double t5748;
  double t5752;
  double t5767;
  double t5775;
  double t5780;
  double t5741;
  double t5753;
  double t5756;
  double t5759;
  double t5787;
  double t5788;
  double t5793;
  double t5795;
  double t5799;
  double t5792;
  double t5803;
  double t5804;
  double t5809;
  double t5810;
  double t5814;
  double t5829;
  double t5835;
  double t5839;
  double t5494;
  double t5587;
  double t5607;
  double t5617;
  double t5627;
  double t5629;
  double t5807;
  double t5816;
  double t5817;
  double t5631;
  double t5634;
  double t5820;
  double t5845;
  double t5854;
  double t5912;
  double t5866;
  double t5873;
  double t5876;
  double t5978;
  double t5979;
  double t5991;
  double t6010;
  double t6020;
  double t6025;
  double t6026;
  double t5985;
  double t6035;
  double t6038;
  double t6079;
  double t6091;
  double t6094;
  double t6111;
  double t6115;
  double t6118;
  double t4901;
  double t4907;
  double t4912;
  double t6056;
  double t6095;
  double t6098;
  double t6110;
  double t6119;
  double t6156;
  double t6202;
  double t6207;
  double t6208;
  double t6293;
  double t6296;
  double t6306;
  double t6316;
  double t6339;
  double t6285;
  double t6287;
  double t6289;
  double t6344;
  double t6347;
  double t6356;
  double t6357;
  double t6371;
  double t6354;
  double t6375;
  double t6379;
  double t6387;
  double t6400;
  double t6409;
  double t6440;
  double t6447;
  double t6466;
  double t4875;
  double t4884;
  double t4887;
  double t6384;
  double t6412;
  double t6421;
  double t6437;
  double t6468;
  double t6478;
  double t6502;
  double t6514;
  double t6518;
  double t6634;
  double t6637;
  double t6639;
  double t6669;
  double t6672;
  double t6683;
  double t6690;
  double t6709;
  double t6711;
  double t6712;
  double t6638;
  double t6692;
  double t6696;
  double t6899;
  double t6887;
  double t6889;
  double t6895;
  double t6835;
  double t6844;
  double t6848;
  double t6857;
  double t4918;
  double t4924;
  double t4929;
  double t4985;
  double t4990;
  double t4993;
  double t7064;
  double t7066;
  double t7075;
  double t7051;
  double t4763;
  double t4767;
  double t4768;
  double t7160;
  double t7167;
  double t7224;
  double t7228;
  double t7230;
  double t7236;
  double t7249;
  double t7250;
  double t7253;
  double t5002;
  double t5024;
  double t5036;
  double t7175;
  double t7201;
  double t7205;
  double t7246;
  double t7255;
  double t7256;
  double t7276;
  double t7294;
  double t7296;
  double t7415;
  double t7421;
  double t7423;
  double t7427;
  double t7431;
  double t7436;
  double t7448;
  double t7450;
  double t7501;
  double t4697;
  double t4700;
  double t4701;
  double t4668;
  double t4675;
  double t4681;
  double t7790;
  double t7792;
  double t7795;
  double t7797;
  double t4711;
  double t4729;
  double t4747;
  double t4582;
  double t4607;
  double t4620;
  double t8168;
  double t8184;
  double t8187;
  double t8197;
  double t8247;
  double t8251;
  double t8253;
  double t8254;
  double t8262;
  double t8264;
  double t8267;
  double t8292;
  double t8275;
  double t8276;
  double t8278;
  double t8296;
  double t4623;
  double t4643;
  double t4645;
  double t4664;
  double t4666;
  double t4692;
  double t4710;
  double t4754;
  double t4762;
  double t4785;
  double t4842;
  double t4864;
  double t4894;
  double t4913;
  double t4916;
  double t4917;
  double t4935;
  double t4955;
  double t4969;
  double t4984;
  double t4996;
  double t5039;
  double t5042;
  double t5818;
  double t8714;
  double t8720;
  double t8721;
  double t8726;
  double t8731;
  double t8732;
  double t5929;
  double t6109;
  double t6228;
  double t6243;
  double t6427;
  double t6550;
  double t6551;
  double t6706;
  double t6720;
  double t6760;
  double t6765;
  double t6898;
  double t6932;
  double t6989;
  double t6992;
  double t8923;
  double t8924;
  double t8928;
  double t7212;
  double t7322;
  double t7346;
  double t7351;
  double t7475;
  double t9050;
  double t9051;
  double t9052;
  double t9056;
  double t9057;
  double t9059;
  double t7506;
  double t7545;
  double t7559;
  double t7571;
  double t7647;
  double t7673;
  double t7679;
  double t7718;
  double t7729;
  double t7758;
  double t7769;
  double t7814;
  double t7834;
  double t7854;
  double t7855;
  double t9168;
  double t9170;
  double t9172;
  double t8016;
  double t8035;
  double t8075;
  double t8081;
  double t8143;
  double t8147;
  double t8210;
  double t8211;
  double t9278;
  double t9281;
  double t9282;
  double t9300;
  double t9302;
  double t9304;
  double t9316;
  double t9320;
  double t8319;
  double t9328;
  double t9324;
  double t9325;
  double t8330;
  double t9329;
  double t8343;
  double t8344;
  double t8368;
  double t8390;
  double t8425;
  double t8434;
  double t8475;
  double t8479;
  double t8510;
  double t8511;
  double t8552;
  double t8555;
  double t8593;
  double t8596;
  double t8613;
  double t8615;
  double t8745;
  double t9535;
  double t9536;
  double t9537;
  double t9538;
  double t8766;
  double t9541;
  double t9542;
  double t8793;
  double t8814;
  double t8817;
  double t8855;
  double t8875;
  double t8876;
  double t8988;
  double t8995;
  double t9010;
  double t9013;
  double t9068;
  double t9739;
  double t9744;
  double t9745;
  double t9746;
  double t9075;
  double t9747;
  double t9749;
  double t9082;
  double t9091;
  double t9096;
  double t9117;
  double t9132;
  double t9134;
  double t9219;
  double t9222;
  double t9234;
  double t9235;
  double t9335;
  double t9953;
  double t9954;
  double t9969;
  double t9970;
  double t9974;
  double t9975;
  double t9348;
  double t9957;
  double t9960;
  double t9976;
  double t9977;
  double t9978;
  double t9980;
  double t9366;
  double t9367;
  double t9385;
  double t9386;
  double t9401;
  double t9402;
  double t9418;
  double t9420;
  double t9257;
  double t9261;
  double t9286;
  double t9288;
  double t10137;
  double t10142;
  double t10144;
  double t10145;
  double t10147;
  double t10149;
  double t10150;
  double t10291;
  double t10292;
  double t10297;
  double t10300;
  double t10301;
  double t10303;
  double t10304;
  double t10430;
  double t10432;
  double t10449;
  double t10450;
  double t10452;
  double t10459;
  double t10437;
  double t10439;
  double t10462;
  double t10463;
  double t10466;
  double t10467;
  double t10114;
  double t10115;
  double t10118;
  double t10119;
  double t10121;
  double t10125;
  double t10127;
  double t10128;
  double t10131;
  double t10132;
  double t10133;
  double t10134;
  double t10136;
  double t10604;
  double t10606;
  double t10608;
  double t10629;
  double t10630;
  double t10633;
  double t10668;
  double t10475;
  double t10683;
  double t10684;
  double t10688;
  double t10674;
  double t10482;
  double t10691;
  double t10693;
  double t10694;
  double t10496;
  double t10498;
  double t10514;
  double t10515;
  double t10528;
  double t10531;
  double t10540;
  double t10542;
  double t10820;
  double t10821;
  double t10825;
  double t10827;
  double t10860;
  double t10861;
  double t10863;
  double t10865;
  double t10901;
  double t10902;
  double t10904;
  double t10905;
  double t10918;
  double t10919;
  double t10920;
  double t10923;
  t598 = Cos(var1[10]);
  t507 = Cos(var1[11]);
  t526 = Sin(var1[10]);
  t648 = Sin(var1[11]);
  t843 = Sin(var1[9]);
  t542 = t507*t526;
  t655 = t598*t648;
  t684 = 0. + t542 + t655;
  t501 = Cos(var1[9]);
  t845 = -1.*t598*t507;
  t867 = t526*t648;
  t872 = 0. + t845 + t867;
  t227 = Cos(var1[7]);
  t367 = Cos(var1[8]);
  t723 = t501*t684;
  t896 = -1.*t843*t872;
  t899 = 0. + t723 + t896;
  t901 = t367*t899;
  t907 = t843*t684;
  t950 = t501*t872;
  t965 = 0. + t907 + t950;
  t969 = Sin(var1[8]);
  t990 = -1.*t965*t969;
  t1039 = 0. + t901 + t990;
  t149 = Cos(var1[6]);
  t1080 = Sin(var1[5]);
  t110 = Cos(var1[5]);
  t1087 = Sin(var1[6]);
  t82 = Sin(var1[3]);
  t1476 = t542 + t655;
  t1500 = t598*t507;
  t1543 = -1.*t526*t648;
  t1557 = t1500 + t1543;
  t1226 = Sin(var1[7]);
  t1644 = -1.*t843*t1476;
  t1694 = t501*t1557;
  t1707 = t1644 + t1694;
  t1497 = t501*t1476;
  t1563 = t843*t1557;
  t1615 = t1497 + t1563;
  t1625 = t367*t1615;
  t1738 = t1707*t969;
  t1747 = t1625 + t1738;
  t1764 = t367*t1707;
  t1767 = -1.*t1615*t969;
  t1791 = t1764 + t1767;
  t1204 = Cos(var1[3]);
  t1224 = Cos(var1[4]);
  t1257 = Sin(var1[4]);
  t1753 = -1.*t1087*t1747;
  t1830 = t149*t1226*t1791;
  t1833 = t1753 + t1830;
  t1859 = t149*t1747;
  t1866 = t1087*t1226*t1791;
  t1894 = t1859 + t1866;
  t1853 = t110*t1833;
  t1918 = -1.*t1080*t1894;
  t1920 = t1853 + t1918;
  t1926 = -1.*t82*t1920;
  t1929 = t1224*t227*t1791;
  t1932 = t1080*t1833;
  t1937 = t110*t1894;
  t1953 = t1932 + t1937;
  t1955 = t1257*t1953;
  t1963 = t1929 + t1955;
  t1973 = t1204*t1963;
  t1986 = t1926 + t1973;
  t2064 = t367*t965;
  t2093 = t899*t969;
  t2128 = 0. + t2064 + t2093;
  t2144 = t1226*t1039;
  t2161 = 0. + t2144;
  t2134 = -1.*t1087*t2128;
  t2162 = t149*t2161;
  t2169 = t2134 + t2162;
  t2186 = -1.*t149*t2128;
  t2196 = -1.*t1087*t2161;
  t2201 = t2186 + t2196;
  t2276 = 0. + t2134 + t2162;
  t2290 = t149*t2128;
  t2313 = t1087*t2161;
  t2322 = 0. + t2290 + t2313;
  t2458 = -1.*t843*t684;
  t2462 = -1.*t501*t872;
  t2470 = t2458 + t2462;
  t2443 = t723 + t896;
  t2446 = t367*t2443;
  t2471 = t2470*t969;
  t2475 = t2446 + t2471;
  t2497 = t367*t2470;
  t2498 = -1.*t2443*t969;
  t2509 = t2497 + t2498;
  t2484 = -1.*t1087*t2475;
  t2511 = t149*t1226*t2509;
  t2516 = t2484 + t2511;
  t2529 = t149*t2475;
  t2532 = t1087*t1226*t2509;
  t2533 = t2529 + t2532;
  t2589 = t901 + t990;
  t2594 = -1.*t367*t965;
  t2595 = -1.*t899*t969;
  t2605 = t2594 + t2595;
  t2593 = -1.*t1087*t2589;
  t2613 = t149*t1226*t2605;
  t2617 = t2593 + t2613;
  t2624 = t149*t2589;
  t2627 = t1087*t1226*t2605;
  t2637 = t2624 + t2627;
  t2415 = t110*t2276;
  t2416 = -1.*t1080*t2322;
  t2261 = t227*t1039;
  t2272 = 0. + t2261;
  t2278 = t1080*t2276;
  t2329 = t110*t2322;
  t2331 = 0. + t2278 + t2329;
  t2730 = 0. + t1500 + t1543;
  t2744 = t501*t2730;
  t2746 = 0. + t2458 + t2744;
  t2747 = t367*t2746;
  t2749 = t843*t2730;
  t2753 = 0. + t723 + t2749;
  t2757 = -1.*t2753*t969;
  t2762 = 0. + t2747 + t2757;
  t2822 = -1.*t507*t526;
  t2833 = -1.*t598*t648;
  t2835 = t2822 + t2833;
  t2847 = t843*t2835;
  t2848 = t2847 + t1694;
  t2837 = t501*t2835;
  t2838 = -1.*t843*t1557;
  t2839 = t2837 + t2838;
  t2845 = t367*t2839;
  t2855 = -1.*t2848*t969;
  t2858 = t2845 + t2855;
  t2867 = t367*t2848;
  t2870 = t2839*t969;
  t2876 = t2867 + t2870;
  t2866 = t1087*t1226*t2858;
  t2884 = t149*t2876;
  t2885 = t2866 + t2884;
  t2889 = t149*t1226*t2858;
  t2900 = -1.*t1087*t2876;
  t2911 = t2889 + t2900;
  t2886 = -1.*t1080*t2885;
  t2916 = t110*t2911;
  t2928 = t2886 + t2916;
  t2933 = -1.*t82*t2928;
  t2943 = t1224*t227*t2858;
  t2954 = t110*t2885;
  t2955 = t1080*t2911;
  t2957 = t2954 + t2955;
  t2961 = t1257*t2957;
  t2963 = t2943 + t2961;
  t2965 = t1204*t2963;
  t2968 = t2933 + t2965;
  t3012 = t2458 + t2744;
  t3000 = -1.*t501*t684;
  t3003 = -1.*t843*t2730;
  t3005 = t3000 + t3003;
  t3008 = t367*t3005;
  t3018 = -1.*t3012*t969;
  t3030 = t3008 + t3018;
  t3039 = t367*t3012;
  t3050 = t3005*t969;
  t3058 = t3039 + t3050;
  t3032 = t1087*t1226*t3030;
  t3060 = t149*t3058;
  t3074 = t3032 + t3060;
  t3081 = t149*t1226*t3030;
  t3082 = -1.*t1087*t3058;
  t3085 = t3081 + t3082;
  t3148 = -1.*t367*t2753;
  t3149 = -1.*t2746*t969;
  t3150 = t3148 + t3149;
  t3155 = t2747 + t2757;
  t3151 = t1087*t1226*t3150;
  t3159 = t149*t3155;
  t3161 = t3151 + t3159;
  t3171 = t149*t1226*t3150;
  t3172 = -1.*t1087*t3155;
  t3178 = t3171 + t3172;
  t3265 = t367*t2753;
  t3266 = t2746*t969;
  t3272 = 0. + t3265 + t3266;
  t3278 = t1226*t2762;
  t3288 = 0. + t3278;
  t3276 = -1.*t1087*t3272;
  t3292 = t149*t3288;
  t3296 = t3276 + t3292;
  t3312 = -1.*t149*t3272;
  t3335 = -1.*t1087*t3288;
  t3337 = t3312 + t3335;
  t3470 = 0. + t3276 + t3292;
  t3483 = t149*t3272;
  t3494 = t1087*t3288;
  t3495 = 0. + t3483 + t3494;
  t3530 = t110*t3470;
  t3533 = -1.*t1080*t3495;
  t3444 = t227*t2762;
  t3447 = 0. + t3444;
  t3481 = t1080*t3470;
  t3498 = t110*t3495;
  t3501 = 0. + t3481 + t3498;
  t3668 = -1.*t227;
  t3682 = 0. + t3668;
  t3734 = t149*t3682;
  t3735 = 0. + t3734;
  t3757 = t3682*t1087;
  t3761 = 0. + t3757;
  t3810 = t110*t3735;
  t3833 = -1.*t1080*t3761;
  t3862 = t3735*t1080;
  t3869 = t110*t3761;
  t3872 = 0. + t3862 + t3869;
  t3879 = 0. + t1226;
  t1052 = t110*t149*t227*t1039;
  t1119 = -1.*t227*t1080*t1087*t1039;
  t1142 = t1052 + t1119;
  t1236 = -1.*t1224*t1226*t1039;
  t1270 = t149*t227*t1080*t1039;
  t1281 = t110*t227*t1087*t1039;
  t1327 = t1270 + t1281;
  t1395 = t1257*t1327;
  t1454 = t1236 + t1395;
  t4044 = t1204*t1920;
  t4048 = t82*t1963;
  t4049 = t4044 + t4048;
  t2181 = -1.*t1080*t2169;
  t2208 = t110*t2201;
  t2209 = t2181 + t2208;
  t2243 = t110*t2169;
  t2247 = t1080*t2201;
  t2248 = t2243 + t2247;
  t2273 = -1.*t1257*t2272;
  t2334 = t1224*t2331;
  t2351 = t2273 + t2334;
  t2364 = -1.*t1080*t2276;
  t2371 = -1.*t110*t2322;
  t2377 = t2364 + t2371;
  t2423 = t2415 + t2416;
  t2524 = t110*t2516;
  t2535 = -1.*t1080*t2533;
  t2536 = t2524 + t2535;
  t2546 = t1224*t227*t2509;
  t2555 = t1080*t2516;
  t2558 = t110*t2533;
  t2560 = t2555 + t2558;
  t2563 = t1257*t2560;
  t2570 = t2546 + t2563;
  t2619 = t110*t2617;
  t2640 = -1.*t1080*t2637;
  t2645 = t2619 + t2640;
  t2652 = t1224*t227*t2605;
  t2658 = t1080*t2617;
  t2659 = t110*t2637;
  t2662 = t2658 + t2659;
  t2664 = t1257*t2662;
  t2667 = t2652 + t2664;
  t2681 = 0. + t2415 + t2416;
  t2689 = t1224*t2272;
  t2692 = t1257*t2331;
  t2703 = 0. + t2689 + t2692;
  t2765 = t110*t149*t227*t2762;
  t2768 = -1.*t227*t1080*t1087*t2762;
  t2770 = t2765 + t2768;
  t2776 = -1.*t1224*t1226*t2762;
  t2781 = t149*t227*t1080*t2762;
  t2787 = t110*t227*t1087*t2762;
  t2796 = t2781 + t2787;
  t2800 = t1257*t2796;
  t2804 = t2776 + t2800;
  t4284 = t1204*t2928;
  t4290 = t82*t2963;
  t4300 = t4284 + t4290;
  t3077 = -1.*t1080*t3074;
  t3092 = t110*t3085;
  t3096 = t3077 + t3092;
  t3100 = t1224*t227*t3030;
  t3107 = t110*t3074;
  t3108 = t1080*t3085;
  t3127 = t3107 + t3108;
  t3128 = t1257*t3127;
  t3133 = t3100 + t3128;
  t3164 = -1.*t1080*t3161;
  t3183 = t110*t3178;
  t3193 = t3164 + t3183;
  t3206 = t1224*t227*t3150;
  t3212 = t110*t3161;
  t3222 = t1080*t3178;
  t3226 = t3212 + t3222;
  t3238 = t1257*t3226;
  t3241 = t3206 + t3238;
  t3307 = -1.*t1080*t3296;
  t3338 = t110*t3337;
  t3351 = t3307 + t3338;
  t3355 = t110*t3296;
  t3363 = t1080*t3337;
  t3387 = t3355 + t3363;
  t3452 = -1.*t1257*t3447;
  t3504 = t1224*t3501;
  t3506 = t3452 + t3504;
  t3509 = -1.*t1080*t3470;
  t3515 = -1.*t110*t3495;
  t3521 = t3509 + t3515;
  t3537 = t3530 + t3533;
  t3601 = 0. + t3530 + t3533;
  t3617 = t1224*t3447;
  t3620 = t1257*t3501;
  t3625 = 0. + t3617 + t3620;
  t3687 = -1.*t149*t3682*t1080;
  t3690 = -1.*t110*t3682*t1087;
  t3692 = t3687 + t3690;
  t3704 = t110*t149*t3682;
  t3708 = -1.*t3682*t1080*t1087;
  t3709 = t3704 + t3708;
  t3751 = -1.*t3735*t1080;
  t3770 = -1.*t110*t3761;
  t3788 = t3751 + t3770;
  t3845 = t3810 + t3833;
  t3876 = t1224*t3872;
  t3880 = -1.*t1257*t3879;
  t3882 = t3876 + t3880;
  t3897 = 0. + t3810 + t3833;
  t3906 = t1257*t3872;
  t3907 = t1224*t3879;
  t3908 = 0. + t3906 + t3907;
  t3921 = t110*t149*t1226;
  t3927 = -1.*t1080*t1087*t1226;
  t3930 = t3921 + t3927;
  t3934 = t1224*t227;
  t3936 = t149*t1080*t1226;
  t3941 = t110*t1087*t1226;
  t3944 = t3936 + t3941;
  t3948 = t1257*t3944;
  t3952 = t3934 + t3948;
  t4632 = -1.*t227*t1257*t1791;
  t4636 = t1224*t1953;
  t4639 = t4632 + t4636;
  t4793 = -1.*t227*t1257*t2858;
  t4837 = t1224*t2957;
  t4838 = t4793 + t4837;
  t5170 = -1.*t507;
  t5186 = 1. + t5170;
  t5145 = -1.*t598;
  t5166 = 1. + t5145;
  t5254 = -0.62554*t5186;
  t5255 = -0.62554*t507;
  t5259 = 0. + t5254 + t5255;
  t5191 = -0.01315*t5186;
  t5206 = -0.01315*t507;
  t5228 = 0. + t5191 + t5206;
  t5109 = -1.*t501;
  t5113 = 1. + t5109;
  t5169 = -0.03315*t5166;
  t5231 = t598*t5228;
  t5248 = -0.19074*t526;
  t5264 = -1.*t5259*t526;
  t5267 = 0. + t5169 + t5231 + t5248 + t5264;
  t5281 = -0.19074*t5166;
  t5282 = t598*t5259;
  t5287 = 0.03315*t526;
  t5291 = t5228*t526;
  t5292 = 0. + t5281 + t5282 + t5287 + t5291;
  t5095 = -1.*t367;
  t5099 = 1. + t5095;
  t5322 = -0.08055*t5113;
  t5323 = -0.13004*t843;
  t5325 = t501*t5267;
  t5330 = -1.*t843*t5292;
  t5332 = 0. + t5322 + t5323 + t5325 + t5330;
  t5116 = -0.13004*t5113;
  t5142 = 0.08055*t843;
  t5279 = t843*t5267;
  t5297 = t501*t5292;
  t5309 = 0. + t5116 + t5142 + t5279 + t5297;
  t5060 = -1.*t149;
  t5085 = 1. + t5060;
  t5100 = -0.01004*t5099;
  t5317 = t367*t5309;
  t5320 = 0.08055*t969;
  t5345 = t5332*t969;
  t5353 = 0. + t5100 + t5317 + t5320 + t5345;
  t5375 = -1.*t227;
  t5377 = 1. + t5375;
  t5394 = 0.135*t5377;
  t5411 = 0.1305*t227;
  t5420 = 0.08055*t1226;
  t5425 = -0.08055*t5099;
  t5432 = t367*t5332;
  t5434 = -0.01004*t969;
  t5443 = -1.*t5309*t969;
  t5450 = 0. + t5425 + t5432 + t5434 + t5443;
  t5454 = t1226*t5450;
  t5457 = 0. + t5394 + t5411 + t5420 + t5454;
  t5091 = 0.135*t5085;
  t5093 = 0.07996*t1087;
  t5368 = -1.*t1087*t5353;
  t5459 = t149*t5457;
  t5460 = 0. + t5091 + t5093 + t5368 + t5459;
  t5475 = 0.07996*t5085;
  t5479 = -0.135*t1087;
  t5482 = t149*t5353;
  t5484 = t1087*t5457;
  t5489 = 0. + t5475 + t5479 + t5482 + t5484;
  t5513 = -0.08055*t5377;
  t5519 = 0.004500000000000004*t1226;
  t5520 = t227*t5450;
  t5541 = 0. + t5513 + t5519 + t5520;
  t5551 = t1080*t5460;
  t5578 = t110*t5489;
  t5579 = 0. + t5551 + t5578;
  t5508 = 0. + t3876 + t3880;
  t5466 = t110*t5460;
  t5490 = -1.*t1080*t5489;
  t5491 = 0. + t5466 + t5490;
  t5550 = -1.*t1257*t5541;
  t5581 = t1224*t5579;
  t5584 = 0. + t5550 + t5581;
  t5597 = t1224*t5541;
  t5598 = t1257*t5579;
  t5603 = 0. + t5597 + t5598;
  t5720 = 0.03315*t598;
  t5723 = t5720 + t5231 + t5248 + t5264;
  t5744 = -0.19074*t598;
  t5746 = -1.*t598*t5259;
  t5747 = -0.03315*t526;
  t5748 = -1.*t5228*t526;
  t5752 = t5744 + t5746 + t5747 + t5748;
  t5767 = -1.*t843*t5723;
  t5775 = t501*t5752;
  t5780 = t5767 + t5775;
  t5741 = t501*t5723;
  t5753 = t843*t5752;
  t5756 = t5741 + t5753;
  t5759 = t367*t5756;
  t5787 = t5780*t969;
  t5788 = t5759 + t5787;
  t5793 = t367*t5780;
  t5795 = -1.*t5756*t969;
  t5799 = t5793 + t5795;
  t5792 = -1.*t1087*t5788;
  t5803 = t149*t1226*t5799;
  t5804 = t5792 + t5803;
  t5809 = t149*t5788;
  t5810 = t1087*t1226*t5799;
  t5814 = t5809 + t5810;
  t5829 = t1080*t5804;
  t5835 = t110*t5814;
  t5839 = t5829 + t5835;
  t5494 = t3897*t5491;
  t5587 = t5508*t5584;
  t5607 = t3908*t5603;
  t5617 = t5494 + t5587 + t5607;
  t5627 = t4838*t5617;
  t5629 = -1.*t2928*t5491;
  t5807 = t110*t5804;
  t5816 = -1.*t1080*t5814;
  t5817 = t5807 + t5816;
  t5631 = -1.*t4838*t5584;
  t5634 = -1.*t2963*t5603;
  t5820 = -1.*t227*t1257*t5799;
  t5845 = t1224*t5839;
  t5854 = t5820 + t5845;
  t5912 = 0. + t3452 + t3504;
  t5866 = t1224*t227*t5799;
  t5873 = t1257*t5839;
  t5876 = t5866 + t5873;
  t5978 = 0.08055*t367;
  t5979 = t5978 + t5432 + t5434 + t5443;
  t5991 = -0.01004*t367;
  t6010 = -1.*t367*t5309;
  t6020 = -0.08055*t969;
  t6025 = -1.*t5332*t969;
  t6026 = t5991 + t6010 + t6020 + t6025;
  t5985 = -1.*t1087*t5979;
  t6035 = t149*t1226*t6026;
  t6038 = t5985 + t6035;
  t6079 = t149*t5979;
  t6091 = t1087*t1226*t6026;
  t6094 = t6079 + t6091;
  t6111 = t1080*t6038;
  t6115 = t110*t6094;
  t6118 = t6111 + t6115;
  t4901 = -1.*t227*t1257*t3150;
  t4907 = t1224*t3226;
  t4912 = t4901 + t4907;
  t6056 = t110*t6038;
  t6095 = -1.*t1080*t6094;
  t6098 = t6056 + t6095;
  t6110 = -1.*t227*t1257*t6026;
  t6119 = t1224*t6118;
  t6156 = t6110 + t6119;
  t6202 = t1224*t227*t6026;
  t6207 = t1257*t6118;
  t6208 = t6202 + t6207;
  t6293 = -0.13004*t501;
  t6296 = -0.08055*t843;
  t6306 = -1.*t843*t5267;
  t6316 = -1.*t501*t5292;
  t6339 = t6293 + t6296 + t6306 + t6316;
  t6285 = 0.08055*t501;
  t6287 = t6285 + t5323 + t5325 + t5330;
  t6289 = t367*t6287;
  t6344 = t6339*t969;
  t6347 = t6289 + t6344;
  t6356 = t367*t6339;
  t6357 = -1.*t6287*t969;
  t6371 = t6356 + t6357;
  t6354 = -1.*t1087*t6347;
  t6375 = t149*t1226*t6371;
  t6379 = t6354 + t6375;
  t6387 = t149*t6347;
  t6400 = t1087*t1226*t6371;
  t6409 = t6387 + t6400;
  t6440 = t1080*t6379;
  t6447 = t110*t6409;
  t6466 = t6440 + t6447;
  t4875 = -1.*t227*t1257*t3030;
  t4884 = t1224*t3127;
  t4887 = t4875 + t4884;
  t6384 = t110*t6379;
  t6412 = -1.*t1080*t6409;
  t6421 = t6384 + t6412;
  t6437 = -1.*t227*t1257*t6371;
  t6468 = t1224*t6466;
  t6478 = t6437 + t6468;
  t6502 = t1224*t227*t6371;
  t6514 = t1257*t6466;
  t6518 = t6502 + t6514;
  t6634 = -0.135*t149;
  t6637 = t6634 + t5093 + t5368 + t5459;
  t6639 = 0.07996*t149;
  t6669 = 0.135*t1087;
  t6672 = -1.*t149*t5353;
  t6683 = -1.*t1087*t5457;
  t6690 = t6639 + t6669 + t6672 + t6683;
  t6709 = t110*t6637;
  t6711 = t1080*t6690;
  t6712 = t6709 + t6711;
  t6638 = -1.*t1080*t6637;
  t6692 = t110*t6690;
  t6696 = t6638 + t6692;
  t6899 = t5466 + t5490;
  t6887 = -1.*t1080*t5460;
  t6889 = -1.*t110*t5489;
  t6895 = t6887 + t6889;
  t6835 = -1.*t5491*t3601;
  t6844 = -1.*t5584*t5912;
  t6848 = -1.*t5603*t3625;
  t6857 = t6835 + t6844 + t6848;
  t4918 = -1.*t1224*t3447;
  t4924 = -1.*t1257*t3501;
  t4929 = t4918 + t4924;
  t4985 = -1.*t1257*t3872;
  t4990 = -1.*t1224*t3879;
  t4993 = t4985 + t4990;
  t7064 = -1.*t1224*t5541;
  t7066 = -1.*t1257*t5579;
  t7075 = t7064 + t7066;
  t7051 = t5550 + t5581;
  t4763 = t1257*t1226*t2762;
  t4767 = t1224*t2796;
  t4768 = t4763 + t4767;
  t7160 = 0.08055*t227;
  t7167 = t7160 + t5519 + t5520;
  t7224 = 0.004500000000000004*t227;
  t7228 = -0.08055*t1226;
  t7230 = -1.*t1226*t5450;
  t7236 = t7224 + t7228 + t7230;
  t7249 = t149*t1080*t7167;
  t7250 = t110*t1087*t7167;
  t7253 = t7249 + t7250;
  t5002 = -1.*t227*t1257;
  t5024 = t1224*t3944;
  t5036 = t5002 + t5024;
  t7175 = t110*t149*t7167;
  t7201 = -1.*t1080*t1087*t7167;
  t7205 = t7175 + t7201;
  t7246 = -1.*t1257*t7236;
  t7255 = t1224*t7253;
  t7256 = t7246 + t7255;
  t7276 = t1224*t7236;
  t7294 = t1257*t7253;
  t7296 = t7276 + t7294;
  t7415 = -1.*t3897*t5491;
  t7421 = -1.*t5508*t5584;
  t7423 = -1.*t3908*t5603;
  t7427 = t7415 + t7421 + t7423;
  t7431 = t4639*t7427;
  t7436 = t1920*t5491;
  t7448 = t4639*t5584;
  t7450 = t1963*t5603;
  t7501 = 0. + t2273 + t2334;
  t4697 = -1.*t227*t1257*t2605;
  t4700 = t1224*t2662;
  t4701 = t4697 + t4700;
  t4668 = -1.*t227*t1257*t2509;
  t4675 = t1224*t2560;
  t4681 = t4668 + t4675;
  t7790 = t5491*t2681;
  t7792 = t5584*t7501;
  t7795 = t5603*t2703;
  t7797 = t7790 + t7792 + t7795;
  t4711 = -1.*t1224*t2272;
  t4729 = -1.*t1257*t2331;
  t4747 = t4711 + t4729;
  t4582 = t1257*t1226*t1039;
  t4607 = t1224*t1327;
  t4620 = t4582 + t4607;
  t8168 = t5491*t3601;
  t8184 = t5584*t5912;
  t8187 = t5603*t3625;
  t8197 = t8168 + t8184 + t8187;
  t8247 = -1.*t5491*t2681;
  t8251 = -1.*t5584*t7501;
  t8253 = -1.*t5603*t2703;
  t8254 = t8247 + t8251 + t8253;
  t8262 = t2928*t5491;
  t8264 = t4838*t5584;
  t8267 = t2963*t5603;
  t8292 = t4639*t8197;
  t8275 = -1.*t1920*t5491;
  t8276 = -1.*t4639*t5584;
  t8278 = -1.*t1963*t5603;
  t8296 = t4838*t8254;
  t4623 = var2[7]*t4620;
  t4643 = var2[10]*t4639;
  t4645 = var2[11]*t4639;
  t4664 = var2[6]*t1224*t2248;
  t4666 = var2[5]*t1224*t2423;
  t4692 = var2[9]*t4681;
  t4710 = var2[8]*t4701;
  t4754 = var2[4]*t4747;
  t4762 = t4623 + t4643 + t4645 + t4664 + t4666 + t4692 + t4710 + t4754;
  t4785 = var2[7]*t4768;
  t4842 = var2[10]*t4838;
  t4864 = var2[11]*t4838;
  t4894 = var2[9]*t4887;
  t4913 = var2[8]*t4912;
  t4916 = var2[6]*t1224*t3387;
  t4917 = var2[5]*t1224*t3537;
  t4935 = var2[4]*t4929;
  t4955 = t4785 + t4842 + t4864 + t4894 + t4913 + t4916 + t4917 + t4935;
  t4969 = var2[6]*t1224*t3709;
  t4984 = var2[5]*t1224*t3845;
  t4996 = var2[4]*t4993;
  t5039 = var2[7]*t5036;
  t5042 = t4969 + t4984 + t4996 + t5039;
  t5818 = t3897*t5817;
  t8714 = t3879*t5541;
  t8720 = t3872*t5579;
  t8721 = t8714 + t8720 + t5494;
  t8726 = t2928*t8721;
  t8731 = -1.*t227*t2858*t5541;
  t8732 = -1.*t2957*t5579;
  t5929 = -1.*t5817*t3601;
  t6109 = t3897*t6098;
  t6228 = -1.*t3193*t5491;
  t6243 = -1.*t6098*t3601;
  t6427 = t3897*t6421;
  t6550 = -1.*t3096*t5491;
  t6551 = -1.*t6421*t3601;
  t6706 = t3897*t6696;
  t6720 = t3692*t5491;
  t6760 = -1.*t5491*t3351;
  t6765 = -1.*t6696*t3601;
  t6898 = t3897*t6895;
  t6932 = t3788*t5491;
  t6989 = -1.*t5491*t3521;
  t6992 = -1.*t6895*t3601;
  t8923 = -1.*t5541*t3447;
  t8924 = -1.*t5579*t3501;
  t8928 = t8923 + t8924 + t6835;
  t7212 = t3897*t7205;
  t7322 = t3930*t5491;
  t7346 = -1.*t2770*t5491;
  t7351 = -1.*t7205*t3601;
  t7475 = -1.*t3897*t5817;
  t9050 = -1.*t3879*t5541;
  t9051 = -1.*t3872*t5579;
  t9052 = t9050 + t9051 + t7415;
  t9056 = t1920*t9052;
  t9057 = t227*t1791*t5541;
  t9059 = t1953*t5579;
  t7506 = t5817*t2681;
  t7545 = -1.*t3897*t6098;
  t7559 = t2645*t5491;
  t7571 = t6098*t2681;
  t7647 = -1.*t3897*t6421;
  t7673 = t2536*t5491;
  t7679 = t6421*t2681;
  t7718 = -1.*t3897*t6696;
  t7729 = -1.*t3692*t5491;
  t7758 = t5491*t2209;
  t7769 = t6696*t2681;
  t7814 = -1.*t3897*t6895;
  t7834 = -1.*t3788*t5491;
  t7854 = t5491*t2377;
  t7855 = t6895*t2681;
  t9168 = t5541*t2272;
  t9170 = t5579*t2331;
  t9172 = t9168 + t9170 + t7790;
  t8016 = -1.*t3897*t7205;
  t8035 = -1.*t3930*t5491;
  t8075 = t1142*t5491;
  t8081 = t7205*t2681;
  t8143 = t2770*t5491;
  t8147 = t7205*t3601;
  t8210 = -1.*t1142*t5491;
  t8211 = -1.*t7205*t2681;
  t9278 = t5541*t3447;
  t9281 = t5579*t3501;
  t9282 = t9278 + t9281 + t8168;
  t9300 = -1.*t5541*t2272;
  t9302 = -1.*t5579*t2331;
  t9304 = t9300 + t9302 + t8247;
  t9316 = t227*t2858*t5541;
  t9320 = t2957*t5579;
  t8319 = t5817*t3601;
  t9328 = t1920*t9282;
  t9324 = -1.*t227*t1791*t5541;
  t9325 = -1.*t1953*t5579;
  t8330 = -1.*t5817*t2681;
  t9329 = t2928*t9304;
  t8343 = t3096*t5491;
  t8344 = t6421*t3601;
  t8368 = -1.*t2536*t5491;
  t8390 = -1.*t6421*t2681;
  t8425 = t3193*t5491;
  t8434 = t6098*t3601;
  t8475 = -1.*t2645*t5491;
  t8479 = -1.*t6098*t2681;
  t8510 = t5491*t3351;
  t8511 = t6696*t3601;
  t8552 = -1.*t5491*t2209;
  t8555 = -1.*t6696*t2681;
  t8593 = t5491*t3521;
  t8596 = t6895*t3601;
  t8613 = -1.*t5491*t2377;
  t8615 = -1.*t6895*t2681;
  t8745 = t227*t3879*t5799;
  t9535 = t3735*t5460;
  t9536 = t3761*t5489;
  t9537 = t8714 + t9535 + t9536;
  t9538 = t227*t2858*t9537;
  t8766 = -1.*t227*t5799*t3447;
  t9541 = -1.*t2911*t5460;
  t9542 = -1.*t2885*t5489;
  t8793 = t227*t3879*t6026;
  t8814 = -1.*t227*t3150*t5541;
  t8817 = -1.*t227*t6026*t3447;
  t8855 = t227*t3879*t6371;
  t8875 = -1.*t227*t3030*t5541;
  t8876 = -1.*t227*t6371*t3447;
  t8988 = t227*t5541;
  t8995 = t3879*t7236;
  t9010 = t1226*t2762*t5541;
  t9013 = -1.*t7236*t3447;
  t9068 = -1.*t227*t3879*t5799;
  t9739 = -1.*t3735*t5460;
  t9744 = -1.*t3761*t5489;
  t9745 = t9050 + t9739 + t9744;
  t9746 = t227*t1791*t9745;
  t9075 = t227*t5799*t2272;
  t9747 = t1833*t5460;
  t9749 = t1894*t5489;
  t9082 = -1.*t227*t3879*t6026;
  t9091 = t227*t2605*t5541;
  t9096 = t227*t6026*t2272;
  t9117 = -1.*t227*t3879*t6371;
  t9132 = t227*t2509*t5541;
  t9134 = t227*t6371*t2272;
  t9219 = -1.*t227*t5541;
  t9222 = -1.*t3879*t7236;
  t9234 = -1.*t1226*t1039*t5541;
  t9235 = t7236*t2272;
  t9335 = t227*t5799*t3447;
  t9953 = t2911*t5460;
  t9954 = t2885*t5489;
  t9969 = t5460*t3470;
  t9970 = t5489*t3495;
  t9974 = t9278 + t9969 + t9970;
  t9975 = t227*t1791*t9974;
  t9348 = -1.*t227*t5799*t2272;
  t9957 = -1.*t1833*t5460;
  t9960 = -1.*t1894*t5489;
  t9976 = -1.*t5460*t2276;
  t9977 = -1.*t5489*t2322;
  t9978 = t9300 + t9976 + t9977;
  t9980 = t227*t2858*t9978;
  t9366 = t227*t3030*t5541;
  t9367 = t227*t6371*t3447;
  t9385 = -1.*t227*t2509*t5541;
  t9386 = -1.*t227*t6371*t2272;
  t9401 = t227*t3150*t5541;
  t9402 = t227*t6026*t3447;
  t9418 = -1.*t227*t2605*t5541;
  t9420 = -1.*t227*t6026*t2272;
  t9257 = -1.*t1226*t2762*t5541;
  t9261 = t7236*t3447;
  t9286 = t1226*t1039*t5541;
  t9288 = -1.*t7236*t2272;
  t10137 = -0.135*t1747;
  t10142 = 0.07996*t1226*t1791;
  t10144 = t3682*t5457;
  t10145 = 0. + t8714 + t10144;
  t10147 = t227*t2858*t10145;
  t10149 = -1.*t5353*t2876;
  t10150 = -1.*t1226*t2858*t5457;
  t10291 = 0.07996*t1226*t2858;
  t10292 = -0.135*t2876;
  t10297 = -1.*t3682*t5457;
  t10300 = 0. + t9050 + t10297;
  t10301 = t227*t1791*t10300;
  t10303 = t5353*t1747;
  t10304 = t1226*t1791*t5457;
  t10430 = t5353*t2876;
  t10432 = t1226*t2858*t5457;
  t10449 = t5353*t3272;
  t10450 = t5457*t3288;
  t10452 = t10449 + t9278 + t10450;
  t10459 = t227*t1791*t10452;
  t10437 = -1.*t5353*t1747;
  t10439 = -1.*t1226*t1791*t5457;
  t10462 = -1.*t5353*t2128;
  t10463 = -1.*t5457*t2161;
  t10466 = t10462 + t9300 + t10463;
  t10467 = t227*t2858*t10466;
  t10114 = var2[10]*t227*t1791;
  t10115 = var2[11]*t227*t1791;
  t10118 = -1.*var2[7]*t1226*t1039;
  t10119 = var2[9]*t227*t2509;
  t10121 = var2[8]*t227*t2605;
  t10125 = t10114 + t10115 + t10118 + t10119 + t10121;
  t10127 = var2[10]*t227*t2858;
  t10128 = var2[11]*t227*t2858;
  t10131 = var2[9]*t227*t3030;
  t10132 = var2[8]*t227*t3150;
  t10133 = -1.*var2[7]*t1226*t2762;
  t10134 = t10127 + t10128 + t10131 + t10132 + t10133;
  t10136 = var2[7]*t227;
  t10604 = -0.1305*t2876;
  t10606 = 0.135*t1791;
  t10608 = t10604 + t10606;
  t10629 = 0.135*t2858;
  t10630 = 0.1305*t1747;
  t10633 = t10629 + t10630;
  t10668 = t5450*t2858;
  t10475 = t5788*t3272;
  t10683 = t5450*t2762;
  t10684 = 0. + t10449 + t10683;
  t10688 = t1747*t10684;
  t10674 = -1.*t5450*t1791;
  t10482 = -1.*t5788*t2128;
  t10691 = -1.*t5450*t1039;
  t10693 = 0. + t10691 + t10462;
  t10694 = t2876*t10693;
  t10496 = t6347*t3272;
  t10498 = t5353*t3058;
  t10514 = -1.*t5353*t2475;
  t10515 = -1.*t6347*t2128;
  t10528 = t5979*t3272;
  t10531 = t5353*t3155;
  t10540 = -1.*t5353*t2589;
  t10542 = -1.*t5979*t2128;
  t10820 = -1.*t5309*t2848;
  t10821 = -0.01004*t1707;
  t10825 = -1.*t5332*t2839;
  t10827 = 0.08055*t1615;
  t10860 = 0.08055*t2848;
  t10861 = t5332*t1707;
  t10863 = -0.01004*t2839;
  t10865 = t5309*t1615;
  t10901 = -1.*t5267*t2835;
  t10902 = 0.08055*t1476;
  t10904 = -0.13004*t1557;
  t10905 = -1.*t5292*t1557;
  t10918 = -0.13004*t2835;
  t10919 = t5292*t1476;
  t10920 = 0.08055*t1557;
  t10923 = t5267*t1557;
  p_output1[0]=(-1.*t1204*t2681 - 1.*t2703*t82)*var2[3] + t1204*t2351*var2[4] + (t1204*t1257*t2423 - 1.*t2377*t82)*var2[5] + (t1204*t1257*t2248 - 1.*t2209*t82)*var2[6] + (t1204*t1454 - 1.*t1142*t82)*var2[7] + (t1204*t2667 - 1.*t2645*t82)*var2[8] + (t1204*t2570 - 1.*t2536*t82)*var2[9] + t1986*var2[10] + t1986*var2[11];
  p_output1[1]=(-1.*t1204*t3601 - 1.*t3625*t82)*var2[3] + t1204*t3506*var2[4] + (t1204*t1257*t3537 - 1.*t3521*t82)*var2[5] + (t1204*t1257*t3387 - 1.*t3351*t82)*var2[6] + (t1204*t2804 - 1.*t2770*t82)*var2[7] + (t1204*t3241 - 1.*t3193*t82)*var2[8] + (t1204*t3133 - 1.*t3096*t82)*var2[9] + t2968*var2[10] + t2968*var2[11];
  p_output1[2]=(-1.*t1204*t3897 - 1.*t3908*t82)*var2[3] + t1204*t3882*var2[4] + (t1204*t1257*t3845 - 1.*t3788*t82)*var2[5] + (t1204*t1257*t3709 - 1.*t3692*t82)*var2[6] + (t1204*t3952 - 1.*t3930*t82)*var2[7];
  p_output1[3]=0;
  p_output1[4]=0;
  p_output1[5]=0;
  p_output1[6]=(t1204*t2703 - 1.*t2681*t82)*var2[3] + t2351*t82*var2[4] + (t1204*t2377 + t1257*t2423*t82)*var2[5] + (t1204*t2209 + t1257*t2248*t82)*var2[6] + (t1142*t1204 + t1454*t82)*var2[7] + (t1204*t2645 + t2667*t82)*var2[8] + (t1204*t2536 + t2570*t82)*var2[9] + t4049*var2[10] + t4049*var2[11];
  p_output1[7]=(t1204*t3625 - 1.*t3601*t82)*var2[3] + t3506*t82*var2[4] + (t1204*t3521 + t1257*t3537*t82)*var2[5] + (t1204*t3351 + t1257*t3387*t82)*var2[6] + (t1204*t2770 + t2804*t82)*var2[7] + (t1204*t3193 + t3241*t82)*var2[8] + (t1204*t3096 + t3133*t82)*var2[9] + t4300*var2[10] + t4300*var2[11];
  p_output1[8]=(t1204*t3908 - 1.*t3897*t82)*var2[3] + t3882*t82*var2[4] + (t1204*t3788 + t1257*t3845*t82)*var2[5] + (t1204*t3692 + t1257*t3709*t82)*var2[6] + (t1204*t3930 + t3952*t82)*var2[7];
  p_output1[9]=0;
  p_output1[10]=0;
  p_output1[11]=0;
  p_output1[12]=t4762;
  p_output1[13]=t4955;
  p_output1[14]=t5042;
  p_output1[15]=0;
  p_output1[16]=0;
  p_output1[17]=0;
  p_output1[18]=(t4929*t5617 + t4993*t6857 + t5912*(t4993*t5584 + t3882*t5603 + t3908*t7051 + t5508*t7075) + t5508*(-1.*t4929*t5584 - 1.*t3506*t5603 - 1.*t3625*t7051 - 1.*t5912*t7075))*var2[4] + (t1224*t3537*t5617 + t1224*t3845*t6857 + t5912*(t1224*t3845*t5584 + t1257*t3845*t5603 + t6898 + t1257*t3908*t6899 + t1224*t5508*t6899 + t6932) + t5508*(-1.*t1224*t3537*t5584 - 1.*t1257*t3537*t5603 - 1.*t1257*t3625*t6899 - 1.*t1224*t5912*t6899 + t6989 + t6992))*var2[5] + (t1224*t3387*t5617 + t5912*(t1224*t3709*t5584 + t1257*t3709*t5603 + t6706 + t1257*t3908*t6712 + t1224*t5508*t6712 + t6720) + t5508*(-1.*t1224*t3387*t5584 - 1.*t1257*t3387*t5603 - 1.*t1257*t3625*t6712 - 1.*t1224*t5912*t6712 + t6760 + t6765) + t1224*t3709*t6857)*var2[6] + (t4768*t5617 + t5036*t6857 + t5912*(t5036*t5584 + t3952*t5603 + t7212 + t5508*t7256 + t3908*t7296 + t7322) + t5508*(-1.*t4768*t5584 - 1.*t2804*t5603 - 1.*t5912*t7256 - 1.*t3625*t7296 + t7346 + t7351))*var2[7] + (t4912*t5617 + t5912*(t6109 + t5508*t6156 + t3908*t6208) + t5508*(-1.*t4912*t5584 - 1.*t3241*t5603 - 1.*t5912*t6156 - 1.*t3625*t6208 + t6228 + t6243))*var2[8] + (t4887*t5617 + t5912*(t6427 + t5508*t6478 + t3908*t6518) + t5508*(-1.*t4887*t5584 - 1.*t3133*t5603 - 1.*t5912*t6478 - 1.*t3625*t6518 + t6550 + t6551))*var2[9] + (t5627 + (t5818 + t5508*t5854 + t3908*t5876)*t5912 + t5508*(t5629 + t5631 + t5634 - 1.*t3625*t5876 - 1.*t5854*t5912 + t5929))*var2[10] + (0. + t5627 + t5508*(0. + t5629 + t5631 + t5634))*var2[11];
  p_output1[19]=(t4747*t7427 + (-1.*t4993*t5584 - 1.*t3882*t5603 - 1.*t3908*t7051 - 1.*t5508*t7075)*t7501 + t5508*(t4747*t5584 + t2351*t5603 + t2703*t7051 + t7075*t7501) + t4993*t7797)*var2[4] + (t1224*t2423*t7427 + t1224*t3845*t7797 + t7501*(-1.*t1224*t3845*t5584 - 1.*t1257*t3845*t5603 - 1.*t1257*t3908*t6899 - 1.*t1224*t5508*t6899 + t7814 + t7834) + t5508*(t1224*t2423*t5584 + t1257*t2423*t5603 + t1257*t2703*t6899 + t1224*t6899*t7501 + t7854 + t7855))*var2[5] + (t1224*t2248*t7427 + t7501*(-1.*t1224*t3709*t5584 - 1.*t1257*t3709*t5603 - 1.*t1257*t3908*t6712 - 1.*t1224*t5508*t6712 + t7718 + t7729) + t5508*(t1224*t2248*t5584 + t1257*t2248*t5603 + t1257*t2703*t6712 + t1224*t6712*t7501 + t7758 + t7769) + t1224*t3709*t7797)*var2[6] + (t4620*t7427 + t5036*t7797 + t7501*(-1.*t5036*t5584 - 1.*t3952*t5603 - 1.*t5508*t7256 - 1.*t3908*t7296 + t8016 + t8035) + t5508*(t4620*t5584 + t1454*t5603 + t2703*t7296 + t7256*t7501 + t8075 + t8081))*var2[7] + (t4701*t7427 + t7501*(-1.*t5508*t6156 - 1.*t3908*t6208 + t7545) + t5508*(t4701*t5584 + t2667*t5603 + t2703*t6208 + t6156*t7501 + t7559 + t7571))*var2[8] + (t4681*t7427 + t7501*(-1.*t5508*t6478 - 1.*t3908*t6518 + t7647) + t5508*(t4681*t5584 + t2570*t5603 + t2703*t6518 + t6478*t7501 + t7673 + t7679))*var2[9] + (t7431 + (-1.*t5508*t5854 - 1.*t3908*t5876 + t7475)*t7501 + t5508*(t2703*t5876 + t7436 + t7448 + t7450 + t5854*t7501 + t7506))*var2[10] + (0. + t7431 + t5508*(0. + t7436 + t7448 + t7450))*var2[11];
  p_output1[20]=((t4929*t5584 + t3506*t5603 + t3625*t7051 + t5912*t7075)*t7501 + t5912*(-1.*t4747*t5584 - 1.*t2351*t5603 - 1.*t2703*t7051 - 1.*t7075*t7501) + t4747*t8197 + t4929*t8254)*var2[4] + (t1224*t2423*t8197 + t1224*t3537*t8254 + t7501*(t1224*t3537*t5584 + t1257*t3537*t5603 + t1257*t3625*t6899 + t1224*t5912*t6899 + t8593 + t8596) + t5912*(-1.*t1224*t2423*t5584 - 1.*t1257*t2423*t5603 - 1.*t1257*t2703*t6899 - 1.*t1224*t6899*t7501 + t8613 + t8615))*var2[5] + (t1224*t2248*t8197 + t1224*t3387*t8254 + t7501*(t1224*t3387*t5584 + t1257*t3387*t5603 + t1257*t3625*t6712 + t1224*t5912*t6712 + t8510 + t8511) + t5912*(-1.*t1224*t2248*t5584 - 1.*t1257*t2248*t5603 - 1.*t1257*t2703*t6712 - 1.*t1224*t6712*t7501 + t8552 + t8555))*var2[6] + (t7501*(t4768*t5584 + t2804*t5603 + t5912*t7256 + t3625*t7296 + t8143 + t8147) + t4620*t8197 + t5912*(-1.*t4620*t5584 - 1.*t1454*t5603 - 1.*t2703*t7296 - 1.*t7256*t7501 + t8210 + t8211) + t4768*t8254)*var2[7] + (t4701*t8197 + t4912*t8254 + t7501*(t4912*t5584 + t3241*t5603 + t5912*t6156 + t3625*t6208 + t8425 + t8434) + t5912*(-1.*t4701*t5584 - 1.*t2667*t5603 - 1.*t2703*t6208 - 1.*t6156*t7501 + t8475 + t8479))*var2[8] + (t4681*t8197 + t4887*t8254 + t7501*(t4887*t5584 + t3133*t5603 + t5912*t6478 + t3625*t6518 + t8343 + t8344) + t5912*(-1.*t4681*t5584 - 1.*t2570*t5603 - 1.*t2703*t6518 - 1.*t6478*t7501 + t8368 + t8390))*var2[9] + (t8292 + t8296 + t7501*(t3625*t5876 + t5854*t5912 + t8262 + t8264 + t8267 + t8319) + t5912*(-1.*t2703*t5876 - 1.*t5854*t7501 + t8275 + t8276 + t8278 + t8330))*var2[10] + (t7501*(0. + t8262 + t8264 + t8267) + t5912*(0. + t8275 + t8276 + t8278) + t8292 + t8296)*var2[11];
  p_output1[21]=t4762;
  p_output1[22]=t4955;
  p_output1[23]=t5042;
  p_output1[24]=(t3601*(t3845*t5579 + t6898 + t3872*t6899 + t6932) + t3897*(-1.*t3537*t5579 - 1.*t3501*t6899 + t6989 + t6992) + t3521*t8721 + t3788*t8928)*var2[5] + (t3601*(t3709*t5579 + t6706 + t3872*t6712 + t6720) + t3897*(-1.*t3387*t5579 - 1.*t3501*t6712 + t6760 + t6765) + t3351*t8721 + t3692*t8928)*var2[6] + (t2770*t8721 + t3930*t8928 + t3601*(t3944*t5579 + t7212 + t3872*t7253 + t7322 + t8988 + t8995) + t3897*(-1.*t2796*t5579 - 1.*t3501*t7253 + t7346 + t7351 + t9010 + t9013))*var2[7] + (t3193*t8721 + t3601*(t6109 + t3872*t6118 + t8793) + t3897*(-1.*t3226*t5579 - 1.*t3501*t6118 + t6228 + t6243 + t8814 + t8817))*var2[8] + (t3096*t8721 + t3601*(t6427 + t3872*t6466 + t8855) + t3897*(-1.*t3127*t5579 - 1.*t3501*t6466 + t6550 + t6551 + t8875 + t8876))*var2[9] + (t8726 + t3601*(t5818 + t3872*t5839 + t8745) + t3897*(t5629 - 1.*t3501*t5839 + t5929 + t8731 + t8732 + t8766))*var2[10] + (0. + t8726 + t3897*(0. + t5629 + t8731 + t8732))*var2[11];
  p_output1[25]=(t2681*(-1.*t3845*t5579 - 1.*t3872*t6899 + t7814 + t7834) + t3897*(t2423*t5579 + t2331*t6899 + t7854 + t7855) + t2377*t9052 + t3788*t9172)*var2[5] + (t2681*(-1.*t3709*t5579 - 1.*t3872*t6712 + t7718 + t7729) + t3897*(t2248*t5579 + t2331*t6712 + t7758 + t7769) + t2209*t9052 + t3692*t9172)*var2[6] + (t1142*t9052 + t3930*t9172 + t2681*(-1.*t3944*t5579 - 1.*t3872*t7253 + t8016 + t8035 + t9219 + t9222) + t3897*(t1327*t5579 + t2331*t7253 + t8075 + t8081 + t9234 + t9235))*var2[7] + (t2645*t9052 + t2681*(-1.*t3872*t6118 + t7545 + t9082) + t3897*(t2662*t5579 + t2331*t6118 + t7559 + t7571 + t9091 + t9096))*var2[8] + (t2536*t9052 + t2681*(-1.*t3872*t6466 + t7647 + t9117) + t3897*(t2560*t5579 + t2331*t6466 + t7673 + t7679 + t9132 + t9134))*var2[9] + (t9056 + t2681*(-1.*t3872*t5839 + t7475 + t9068) + t3897*(t2331*t5839 + t7436 + t7506 + t9057 + t9059 + t9075))*var2[10] + (0. + t9056 + t3897*(0. + t7436 + t9057 + t9059))*var2[11];
  p_output1[26]=(t2681*(t3537*t5579 + t3501*t6899 + t8593 + t8596) + t3601*(-1.*t2423*t5579 - 1.*t2331*t6899 + t8613 + t8615) + t2377*t9282 + t3521*t9304)*var2[5] + (t2681*(t3387*t5579 + t3501*t6712 + t8510 + t8511) + t3601*(-1.*t2248*t5579 - 1.*t2331*t6712 + t8552 + t8555) + t2209*t9282 + t3351*t9304)*var2[6] + (t2681*(t2796*t5579 + t3501*t7253 + t8143 + t8147 + t9257 + t9261) + t1142*t9282 + t3601*(-1.*t1327*t5579 - 1.*t2331*t7253 + t8210 + t8211 + t9286 + t9288) + t2770*t9304)*var2[7] + (t2645*t9282 + t3193*t9304 + t2681*(t3226*t5579 + t3501*t6118 + t8425 + t8434 + t9401 + t9402) + t3601*(-1.*t2662*t5579 - 1.*t2331*t6118 + t8475 + t8479 + t9418 + t9420))*var2[8] + (t2536*t9282 + t3096*t9304 + t2681*(t3127*t5579 + t3501*t6466 + t8343 + t8344 + t9366 + t9367) + t3601*(-1.*t2560*t5579 - 1.*t2331*t6466 + t8368 + t8390 + t9385 + t9386))*var2[9] + (t9328 + t9329 + t2681*(t3501*t5839 + t8262 + t8319 + t9316 + t9320 + t9335) + t3601*(-1.*t2331*t5839 + t8275 + t8330 + t9324 + t9325 + t9348))*var2[10] + (t2681*(0. + t8262 + t9316 + t9320) + t3601*(0. + t8275 + t9324 + t9325) + t9328 + t9329)*var2[11];
  p_output1[27]=t2377*var2[5] + t2209*var2[6] + t1142*var2[7] + t2645*var2[8] + t2536*var2[9] + t1920*var2[10] + t1920*var2[11];
  p_output1[28]=t3521*var2[5] + t3351*var2[6] + t2770*var2[7] + t3193*var2[8] + t3096*var2[9] + t2928*var2[10] + t2928*var2[11];
  p_output1[29]=t3788*var2[5] + t3692*var2[6] + t3930*var2[7];
  p_output1[30]=(t3879*(-1.*t3337*t5460 - 1.*t3296*t5489 - 1.*t3495*t6637 - 1.*t3470*t6690) + t3447*(-1.*t1087*t3682*t5460 + t149*t3682*t5489 + t3761*t6637 + t3735*t6690))*var2[6] + (t227*(-1.*t3470*t5460 - 1.*t3495*t5489 + t8923) + t3447*(t1226*t149*t5460 + t1087*t1226*t5489 + t149*t3735*t7167 + t1087*t3761*t7167 + t8988 + t8995) + t3879*(-1.*t149*t227*t2762*t5460 - 1.*t1087*t227*t2762*t5489 - 1.*t149*t3470*t7167 - 1.*t1087*t3495*t7167 + t9010 + t9013) - 1.*t1226*t2762*t9537)*var2[7] + (t3447*(t3735*t6038 + t3761*t6094 + t8793) + t3879*(-1.*t3178*t5460 - 1.*t3161*t5489 - 1.*t3470*t6038 - 1.*t3495*t6094 + t8814 + t8817) + t227*t3150*t9537)*var2[8] + (t3447*(t3735*t6379 + t3761*t6409 + t8855) + t3879*(-1.*t3085*t5460 - 1.*t3074*t5489 - 1.*t3470*t6379 - 1.*t3495*t6409 + t8875 + t8876) + t227*t3030*t9537)*var2[9] + (t3447*(t3735*t5804 + t3761*t5814 + t8745) + t9538 + t3879*(-1.*t3470*t5804 - 1.*t3495*t5814 + t8731 + t8766 + t9541 + t9542))*var2[10] + (0. + t9538 + t3879*(0. + t8731 + t9541 + t9542))*var2[11];
  p_output1[31]=(t3879*(t2201*t5460 + t2169*t5489 + t2322*t6637 + t2276*t6690) + t2272*(t1087*t3682*t5460 - 1.*t149*t3682*t5489 - 1.*t3761*t6637 - 1.*t3735*t6690))*var2[6] + (t227*(t2276*t5460 + t2322*t5489 + t9168) + t2272*(-1.*t1226*t149*t5460 - 1.*t1087*t1226*t5489 - 1.*t149*t3735*t7167 - 1.*t1087*t3761*t7167 + t9219 + t9222) + t3879*(t1039*t149*t227*t5460 + t1039*t1087*t227*t5489 + t149*t2276*t7167 + t1087*t2322*t7167 + t9234 + t9235) - 1.*t1039*t1226*t9745)*var2[7] + (t2272*(-1.*t3735*t6038 - 1.*t3761*t6094 + t9082) + t3879*(t2617*t5460 + t2637*t5489 + t2276*t6038 + t2322*t6094 + t9091 + t9096) + t227*t2605*t9745)*var2[8] + (t2272*(-1.*t3735*t6379 - 1.*t3761*t6409 + t9117) + t3879*(t2516*t5460 + t2533*t5489 + t2276*t6379 + t2322*t6409 + t9132 + t9134) + t227*t2509*t9745)*var2[9] + (t2272*(-1.*t3735*t5804 - 1.*t3761*t5814 + t9068) + t9746 + t3879*(t2276*t5804 + t2322*t5814 + t9057 + t9075 + t9747 + t9749))*var2[10] + (0. + t9746 + t3879*(0. + t9057 + t9747 + t9749))*var2[11];
  p_output1[32]=(t3447*(-1.*t2201*t5460 - 1.*t2169*t5489 - 1.*t2322*t6637 - 1.*t2276*t6690) + t2272*(t3337*t5460 + t3296*t5489 + t3495*t6637 + t3470*t6690))*var2[6] + (t2272*(t149*t227*t2762*t5460 + t1087*t227*t2762*t5489 + t149*t3470*t7167 + t1087*t3495*t7167 + t9257 + t9261) + t3447*(-1.*t1039*t149*t227*t5460 - 1.*t1039*t1087*t227*t5489 - 1.*t149*t2276*t7167 - 1.*t1087*t2322*t7167 + t9286 + t9288) - 1.*t1039*t1226*t9974 - 1.*t1226*t2762*t9978)*var2[7] + (t2272*(t3178*t5460 + t3161*t5489 + t3470*t6038 + t3495*t6094 + t9401 + t9402) + t3447*(-1.*t2617*t5460 - 1.*t2637*t5489 - 1.*t2276*t6038 - 1.*t2322*t6094 + t9418 + t9420) + t227*t2605*t9974 + t227*t3150*t9978)*var2[8] + (t2272*(t3085*t5460 + t3074*t5489 + t3470*t6379 + t3495*t6409 + t9366 + t9367) + t3447*(-1.*t2516*t5460 - 1.*t2533*t5489 - 1.*t2276*t6379 - 1.*t2322*t6409 + t9385 + t9386) + t227*t2509*t9974 + t227*t3030*t9978)*var2[9] + (t2272*(t3470*t5804 + t3495*t5814 + t9316 + t9335 + t9953 + t9954) + t3447*(-1.*t2276*t5804 - 1.*t2322*t5814 + t9324 + t9348 + t9957 + t9960) + t9975 + t9980)*var2[10] + (t2272*(0. + t9316 + t9953 + t9954) + t3447*(0. + t9324 + t9957 + t9960) + t9975 + t9980)*var2[11];
  p_output1[33]=t10125;
  p_output1[34]=t10134;
  p_output1[35]=t10136;
  p_output1[36]=(0.07996*t1039*t227 - 1.*t10145*t1226*t2762 + t227*(-1.*t3272*t5353 - 1.*t3288*t5457 + t8923) + t3447*(t1226*t5457 + t3682*t7167 + t8988 + t8995) + t3879*(-1.*t227*t2762*t5457 - 1.*t3288*t7167 + t9010 + t9013))*var2[7] + (-0.135*t2589 + 0.07996*t1226*t2605 + t10145*t227*t3150 + t3447*(t1226*t3682*t6026 + t8793) + t3879*(-1.*t3155*t5353 - 1.*t1226*t3150*t5457 - 1.*t3272*t5979 - 1.*t1226*t3288*t6026 + t8814 + t8817))*var2[8] + (-0.135*t2475 + 0.07996*t1226*t2509 + t10145*t227*t3030 + t3447*(t1226*t3682*t6371 + t8855) + t3879*(-1.*t3058*t5353 - 1.*t1226*t3030*t5457 - 1.*t3272*t6347 - 1.*t1226*t3288*t6371 + t8875 + t8876))*var2[9] + (t10137 + t10142 + t10147 + t3447*(t1226*t3682*t5799 + t8745) + t3879*(t10149 + t10150 - 1.*t3272*t5788 - 1.*t1226*t3288*t5799 + t8731 + t8766))*var2[10] + (0. + t10137 + t10142 + t10147 + t3879*(0. + t10149 + t10150 + t8731))*var2[11];
  p_output1[37]=(-1.*t10300*t1039*t1226 + 0.07996*t227*t2762 + t227*(t2128*t5353 + t2161*t5457 + t9168) + t2272*(-1.*t1226*t5457 - 1.*t3682*t7167 + t9219 + t9222) + t3879*(t1039*t227*t5457 + t2161*t7167 + t9234 + t9235))*var2[7] + (t10300*t227*t2605 + 0.07996*t1226*t3150 - 0.135*t3155 + t2272*(-1.*t1226*t3682*t6026 + t9082) + t3879*(t2589*t5353 + t1226*t2605*t5457 + t2128*t5979 + t1226*t2161*t6026 + t9091 + t9096))*var2[8] + (t10300*t227*t2509 + 0.07996*t1226*t3030 - 0.135*t3058 + t2272*(-1.*t1226*t3682*t6371 + t9117) + t3879*(t2475*t5353 + t1226*t2509*t5457 + t2128*t6347 + t1226*t2161*t6371 + t9132 + t9134))*var2[9] + (t10291 + t10292 + t10301 + t2272*(-1.*t1226*t3682*t5799 + t9068) + t3879*(t10303 + t10304 + t2128*t5788 + t1226*t2161*t5799 + t9057 + t9075))*var2[10] + (0. + t10291 + t10292 + t10301 + t3879*(0. + t10303 + t10304 + t9057))*var2[11];
  p_output1[38]=(0.07996*t1226 - 1.*t1039*t10452*t1226 - 1.*t10466*t1226*t2762 + t2272*(t227*t2762*t5457 + t3288*t7167 + t9257 + t9261) + t3447*(-1.*t1039*t227*t5457 - 1.*t2161*t7167 + t9286 + t9288))*var2[7] + (t10452*t227*t2605 + t10466*t227*t3150 + t2272*(t10528 + t10531 + t1226*t3150*t5457 + t1226*t3288*t6026 + t9401 + t9402) + t3447*(t10540 + t10542 - 1.*t1226*t2605*t5457 - 1.*t1226*t2161*t6026 + t9418 + t9420))*var2[8] + (t10452*t227*t2509 + t10466*t227*t3030 + t2272*(t10496 + t10498 + t1226*t3030*t5457 + t1226*t3288*t6371 + t9366 + t9367) + t3447*(t10514 + t10515 - 1.*t1226*t2509*t5457 - 1.*t1226*t2161*t6371 + t9385 + t9386))*var2[9] + (t10459 + t10467 + t2272*(t10430 + t10432 + t10475 + t1226*t3288*t5799 + t9316 + t9335) + t3447*(t10437 + t10439 + t10482 - 1.*t1226*t2161*t5799 + t9324 + t9348))*var2[10] + (t10459 + t10467 + t2272*(0. + t10430 + t10432 + t9316) + t3447*(0. + t10437 + t10439 + t9324))*var2[11];
  p_output1[39]=t10125;
  p_output1[40]=t10134;
  p_output1[41]=t10136;
  p_output1[42]=(0.135*t2605 - 0.1305*t3155)*var2[8] + (0.135*t2509 - 0.1305*t3058)*var2[9] + t10608*var2[10] + t10608*var2[11];
  p_output1[43]=(0.1305*t2589 + 0.135*t3150)*var2[8] + (0.1305*t2475 + 0.135*t3030)*var2[9] + t10633*var2[10] + t10633*var2[11];
  p_output1[44]=(t10684*t2589 + t10693*t3155 + t3272*(t10540 + t10542 - 1.*t2605*t5450 - 1.*t1039*t6026) + t2128*(t10528 + t10531 + t3150*t5450 + t2762*t6026))*var2[8] + (t10684*t2475 + t10693*t3058 + t3272*(t10514 + t10515 - 1.*t2509*t5450 - 1.*t1039*t6371) + t2128*(t10496 + t10498 + t3030*t5450 + t2762*t6371))*var2[9] + (t10688 + t10694 + t3272*(t10437 + t10482 + t10674 - 1.*t1039*t5799) + t2128*(t10430 + t10475 + t10668 + t2762*t5799))*var2[10] + (t10688 + t10694 + (0. + t10430 + t10668)*t2128 + (0. + t10437 + t10674)*t3272)*var2[11];
  p_output1[45]=t2589*var2[8] + t2475*var2[9] + t1747*var2[10] + t1747*var2[11];
  p_output1[46]=t3155*var2[8] + t3058*var2[9] + t2876*var2[10] + t2876*var2[11];
  p_output1[47]=0;
  p_output1[48]=(0.08055*t2443 - 0.01004*t2470 - 1.*t3012*t5309 - 1.*t3005*t5332 - 1.*t2753*t6287 - 1.*t2746*t6339)*var2[9] + (t10820 + t10821 + t10825 + t10827 - 1.*t2753*t5756 - 1.*t2746*t5780)*var2[10] + (0. + t10820 + t10821 + t10825 + t10827)*var2[11];
  p_output1[49]=(-0.01004*t3005 + 0.08055*t3012 + t2443*t5309 + t2470*t5332 + t6339*t899 + t6287*t965)*var2[9] + (t10860 + t10861 + t10863 + t10865 + t5780*t899 + t5756*t965)*var2[10] + (0. + t10860 + t10861 + t10863 + t10865)*var2[11];
  p_output1[50]=0;
  p_output1[51]=0;
  p_output1[52]=0;
  p_output1[53]=0;
  p_output1[54]=(t10901 + t10902 + t10904 + t10905 - 1.*t2730*t5752 - 1.*t5723*t684)*var2[10] + (0. + t10901 + t10902 + t10904 + t10905)*var2[11];
  p_output1[55]=(t10918 + t10919 + t10920 + t10923 + t5752*t684 + t5723*t872)*var2[10] + (0. + t10918 + t10919 + t10920 + t10923)*var2[11];
  p_output1[56]=0;
  p_output1[57]=0;
  p_output1[58]=0;
  p_output1[59]=0;
  p_output1[60]=(0. - 0.19074*t507 - 1.*t507*t5259 + 0.03315*t648 + t5228*t648)*var2[11];
  p_output1[61]=(0. + 0.03315*t507 + t507*t5228 + 0.19074*t648 + t5259*t648)*var2[11];
  p_output1[62]=0;
  p_output1[63]=0;
  p_output1[64]=0;
  p_output1[65]=0;
  p_output1[66]=0;
  p_output1[67]=0;
  p_output1[68]=0;
  p_output1[69]=0;
  p_output1[70]=0;
  p_output1[71]=0;
  p_output1[72]=0;
  p_output1[73]=0;
  p_output1[74]=0;
  p_output1[75]=0;
  p_output1[76]=0;
  p_output1[77]=0;
  p_output1[78]=0;
  p_output1[79]=0;
  p_output1[80]=0;
  p_output1[81]=0;
  p_output1[82]=0;
  p_output1[83]=0;
  p_output1[84]=0;
  p_output1[85]=0;
  p_output1[86]=0;
  p_output1[87]=0;
  p_output1[88]=0;
  p_output1[89]=0;
  p_output1[90]=0;
  p_output1[91]=0;
  p_output1[92]=0;
  p_output1[93]=0;
  p_output1[94]=0;
  p_output1[95]=0;
  p_output1[96]=0;
  p_output1[97]=0;
  p_output1[98]=0;
  p_output1[99]=0;
  p_output1[100]=0;
  p_output1[101]=0;
  p_output1[102]=0;
  p_output1[103]=0;
  p_output1[104]=0;
  p_output1[105]=0;
  p_output1[106]=0;
  p_output1[107]=0;
  p_output1[108]=0;
  p_output1[109]=0;
  p_output1[110]=0;
  p_output1[111]=0;
  p_output1[112]=0;
  p_output1[113]=0;
  p_output1[114]=0;
  p_output1[115]=0;
  p_output1[116]=0;
  p_output1[117]=0;
  p_output1[118]=0;
  p_output1[119]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 20 && ncols == 1) && 
      !(mrows == 1 && ncols == 20))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 20 && ncols == 1) && 
      !(mrows == 1 && ncols == 20))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 6, (mwSize) 20, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "dJb_LeftAnkleJoint_mex.hh"

namespace SymExpression
{

void dJb_LeftAnkleJoint_mex_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
