/*
 * Automatically Generated from Mathematica.
 * Mon 11 May 2020 22:20:07 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t108;
  double t130;
  double t499;
  double t563;
  double t553;
  double t580;
  double t602;
  double t610;
  double t1129;
  double t1219;
  double t746;
  double t767;
  double t768;
  double t782;
  double t1280;
  double t1281;
  double t1282;
  double t1563;
  double t1570;
  double t1571;
  double t818;
  double t833;
  double t837;
  double t913;
  double t942;
  double t943;
  double t964;
  double t984;
  double t1053;
  double t1055;
  double t1061;
  double t1070;
  double t1105;
  double t1108;
  double t1122;
  double t2100;
  double t1792;
  double t1818;
  double t1851;
  double t2175;
  double t1728;
  double t1742;
  double t1761;
  double t2335;
  double t2339;
  double t2112;
  double t2177;
  double t2193;
  double t1461;
  double t1469;
  double t1477;
  double t2342;
  double t2343;
  double t2360;
  double t2392;
  double t2396;
  double t2437;
  double t2246;
  double t2252;
  double t2278;
  double t2615;
  double t2623;
  double t2626;
  double t2631;
  double t2534;
  double t2639;
  double t1348;
  double t1359;
  double t1373;
  double t2687;
  double t2697;
  double t2717;
  double t2864;
  double t2866;
  double t2869;
  double t2726;
  double t2727;
  double t2734;
  double t2735;
  double t2785;
  double t2644;
  double t2654;
  double t3049;
  double t3052;
  double t3068;
  double t3075;
  double t3095;
  double t3011;
  double t3014;
  double t3022;
  double t3304;
  double t3306;
  double t3313;
  double t3338;
  double t3344;
  double t3348;
  double t3360;
  double t3504;
  double t3545;
  double t3314;
  double t3316;
  double t3321;
  double t2379;
  double t2457;
  double t2993;
  double t2994;
  double t2996;
  double t3809;
  double t2810;
  double t3757;
  double t3767;
  double t3768;
  double t3786;
  double t3541;
  double t3551;
  double t3450;
  double t3461;
  double t3462;
  double t3878;
  double t3123;
  double t3128;
  double t3638;
  double t3640;
  double t4104;
  double t4117;
  double t4106;
  double t4109;
  double t4112;
  double t4149;
  double t4151;
  double t3566;
  double t3572;
  double t4125;
  double t4133;
  double t4135;
  double t4157;
  double t4165;
  double t4174;
  double t4178;
  double t4197;
  double t4198;
  double t2824;
  double t2830;
  double t2837;
  double t2838;
  double t4114;
  double t4118;
  double t4119;
  double t2742;
  double t2772;
  double t4176;
  double t4203;
  double t4205;
  double t4207;
  double t4217;
  double t4219;
  double t4221;
  double t3137;
  double t3159;
  double t4248;
  double t3065;
  double t3100;
  double t4264;
  double t4267;
  double t4271;
  double t3741;
  double t3745;
  double t3750;
  double t3032;
  double t3036;
  double t2976;
  double t2979;
  double t3256;
  double t3268;
  double t3271;
  double t2906;
  double t2908;
  double t2950;
  double t3426;
  double t3430;
  double t3439;
  double t4456;
  double t4462;
  double t4465;
  double t4471;
  double t4473;
  double t4443;
  double t4451;
  double t4452;
  double t4509;
  double t2558;
  double t2577;
  double t3560;
  double t3563;
  double t3505;
  double t3512;
  double t4623;
  double t4624;
  double t4638;
  double t4643;
  double t4645;
  double t4656;
  double t4661;
  double t3648;
  double t3650;
  double t4666;
  double t3616;
  double t3617;
  double t4327;
  double t4328;
  double t4330;
  double t3369;
  double t3371;
  double t3292;
  double t3297;
  double t4493;
  double t4494;
  double t4506;
  double t3135;
  double t3394;
  double t3402;
  double t4917;
  double t4547;
  double t4565;
  double t3890;
  double t3905;
  double t3911;
  double t3915;
  double t5001;
  double t5003;
  double t5008;
  double t5012;
  double t5016;
  double t5034;
  double t3995;
  double t4000;
  double t4012;
  double t4016;
  double t3953;
  double t3960;
  double t4915;
  double t4926;
  double t3813;
  double t3826;
  double t3843;
  double t3848;
  double t4823;
  double t4837;
  double t4842;
  double t4383;
  double t4389;
  double t4391;
  double t4511;
  double t4512;
  double t4897;
  double t4898;
  double t4904;
  double t4950;
  double t4952;
  double t4955;
  double t4610;
  double t4611;
  double t4612;
  double t4121;
  double t4137;
  double t4140;
  double t4142;
  double t4144;
  double t4488;
  double t4490;
  double t5401;
  double t4466;
  double t4479;
  double t5404;
  double t5405;
  double t5406;
  double t5407;
  double t5414;
  double t5418;
  double t5390;
  double t5396;
  double t5397;
  double t5357;
  double t5358;
  double t5365;
  double t5445;
  double t5451;
  double t5456;
  double t5444;
  double t5459;
  double t5461;
  double t4253;
  double t5463;
  double t5465;
  double t5467;
  double t5480;
  double t5481;
  double t4303;
  double t5496;
  double t4362;
  double t4364;
  double t4846;
  double t4847;
  double t4850;
  double t4335;
  double t4340;
  double t5197;
  double t5199;
  double t5206;
  double t4413;
  double t4420;
  double t4429;
  double t4573;
  double t4579;
  double t5760;
  double t5770;
  double t5797;
  double t5802;
  double t5808;
  double t4615;
  double t4616;
  double t4875;
  double t4876;
  double t4864;
  double t4865;
  double t5974;
  double t5976;
  double t5977;
  double t4698;
  double t5996;
  double t5997;
  double t6007;
  double t6035;
  double t6047;
  double t4748;
  double t6089;
  double t4779;
  double t4783;
  double t4763;
  double t4765;
  double t4935;
  double t5893;
  double t5896;
  double t5904;
  double t4981;
  double t4983;
  double t4984;
  double t4999;
  double t5657;
  double t5663;
  double t5103;
  double t5271;
  double t5272;
  double t5231;
  double t5251;
  double t6490;
  double t6513;
  double t6514;
  double t6515;
  double t5035;
  double t5051;
  double t5069;
  double t5073;
  double t6612;
  double t6622;
  double t6626;
  double t6629;
  double t6630;
  double t6634;
  double t6635;
  double t6639;
  double t5154;
  double t5162;
  double t5126;
  double t5132;
  double t5287;
  double t5290;
  double t5291;
  double t5293;
  double t5296;
  double t5303;
  double t5306;
  double t5307;
  double t5317;
  double t5320;
  double t5325;
  double t5331;
  double t5346;
  double t5347;
  double t5349;
  double t5350;
  double t5351;
  double t5355;
  double t5366;
  double t5368;
  double t5372;
  double t5373;
  double t5382;
  double t5386;
  double t5388;
  double t5389;
  double t5399;
  double t5400;
  double t6872;
  double t6874;
  double t6878;
  double t6885;
  double t5497;
  double t5502;
  double t5503;
  double t5510;
  double t5513;
  double t5515;
  double t5488;
  double t5492;
  double t6883;
  double t6891;
  double t6896;
  double t6091;
  double t6092;
  double t6093;
  double t6906;
  double t6907;
  double t6912;
  double t6099;
  double t6115;
  double t6127;
  double t6756;
  double t6758;
  double t6762;
  double t6387;
  double t6398;
  double t6399;
  double t6902;
  double t6914;
  double t5546;
  double t5551;
  double t5552;
  double t5555;
  double t5569;
  double t5572;
  double t5536;
  double t5538;
  double t6201;
  double t6202;
  double t6205;
  double t6225;
  double t6227;
  double t6230;
  double t6972;
  double t6973;
  double t6976;
  double t6977;
  double t6979;
  double t6980;
  double t6986;
  double t6987;
  double t6997;
  double t7001;
  double t7004;
  double t7006;
  double t7008;
  double t5615;
  double t5618;
  double t5622;
  double t5638;
  double t5641;
  double t5643;
  double t5585;
  double t5587;
  double t6296;
  double t6299;
  double t6300;
  double t6303;
  double t6312;
  double t6327;
  double t5600;
  double t5602;
  double t6818;
  double t6820;
  double t6822;
  double t6827;
  double t6831;
  double t6854;
  double t5420;
  double t5438;
  double t5672;
  double t5674;
  double t5675;
  double t5718;
  double t5720;
  double t5722;
  double t6438;
  double t6439;
  double t6440;
  double t5801;
  double t5823;
  double t6748;
  double t6749;
  double t6750;
  double t5846;
  double t5866;
  double t6373;
  double t6375;
  double t6384;
  double t5878;
  double t5879;
  double t5886;
  double t7298;
  double t7302;
  double t7303;
  double t7312;
  double t7313;
  double t7270;
  double t7281;
  double t6334;
  double t6335;
  double t6344;
  double t6352;
  double t7387;
  double t7392;
  double t6072;
  double t6073;
  double t7443;
  double t7446;
  double t6171;
  double t6180;
  double t7509;
  double t7515;
  double t7520;
  double t7528;
  double t7531;
  double t7532;
  double t7533;
  double t6251;
  double t6256;
  double t6273;
  double t6283;
  double t5931;
  double t5952;
  double t6426;
  double t6430;
  double t7339;
  double t7344;
  double t6734;
  double t6735;
  double t6714;
  double t6725;
  double t7779;
  double t7786;
  double t6588;
  double t6589;
  double t6577;
  double t6583;
  double t7221;
  double t7224;
  double t7899;
  double t7900;
  double t7901;
  double t7903;
  double t7904;
  double t7911;
  double t7913;
  double t7914;
  double t6693;
  double t6694;
  double t6654;
  double t6657;
  double t7938;
  double t7939;
  double t7940;
  double t7944;
  double t6508;
  double t6509;
  double t6775;
  double t6788;
  double t6801;
  double t6805;
  double t6531;
  double t6545;
  double t8127;
  double t8131;
  double t8136;
  double t8146;
  double t6919;
  double t6926;
  double t6934;
  double t6941;
  double t6942;
  double t6944;
  double t6955;
  double t6956;
  double t8142;
  double t8148;
  double t8149;
  double t7464;
  double t7466;
  double t7478;
  double t8155;
  double t8160;
  double t8165;
  double t7481;
  double t7493;
  double t7500;
  double t7836;
  double t7841;
  double t7414;
  double t7416;
  double t8152;
  double t8167;
  double t7020;
  double t7021;
  double t7024;
  double t7028;
  double t7032;
  double t7035;
  double t7044;
  double t7049;
  double t7557;
  double t7568;
  double t7573;
  double t7582;
  double t7583;
  double t7590;
  double t8205;
  double t8209;
  double t8216;
  double t8217;
  double t8221;
  double t8227;
  double t8231;
  double t8236;
  double t8237;
  double t8239;
  double t8244;
  double t8250;
  double t8259;
  double t7073;
  double t7077;
  double t7078;
  double t7083;
  double t7084;
  double t7092;
  double t7095;
  double t7098;
  double t7637;
  double t7639;
  double t7641;
  double t7651;
  double t7654;
  double t7655;
  double t7105;
  double t7107;
  double t8030;
  double t8033;
  double t8037;
  double t8045;
  double t8048;
  double t8050;
  double t7122;
  double t7123;
  double t7126;
  double t7131;
  double t7133;
  double t7134;
  double t7138;
  double t7139;
  double t7694;
  double t7695;
  double t7699;
  double t7707;
  double t7708;
  double t7712;
  double t7146;
  double t7154;
  double t8092;
  double t8095;
  double t8099;
  double t8111;
  double t8113;
  double t8114;
  double t7237;
  double t7238;
  double t7775;
  double t7781;
  double t7783;
  double t7788;
  double t7241;
  double t7248;
  double t7380;
  double t7388;
  double t7391;
  double t7397;
  double t7263;
  double t7273;
  double t7280;
  double t7289;
  double t7310;
  double t7314;
  double t7845;
  double t7848;
  double t7328;
  double t7329;
  double t7418;
  double t7419;
  double t7347;
  double t7348;
  double t7187;
  double t7189;
  double t7192;
  double t7194;
  double t7195;
  double t7218;
  double t7759;
  double t7760;
  double t7763;
  double t8602;
  double t8605;
  double t8611;
  double t8618;
  double t8619;
  double t8541;
  double t8551;
  double t7367;
  double t7369;
  double t7400;
  double t7403;
  double t7410;
  double t7411;
  double t7424;
  double t7428;
  double t7453;
  double t7455;
  double t8807;
  double t8808;
  double t7546;
  double t7547;
  double t8853;
  double t8856;
  double t8857;
  double t8860;
  double t8861;
  double t8863;
  double t8864;
  double t7624;
  double t7628;
  double t7658;
  double t7666;
  double t7685;
  double t7686;
  double t7716;
  double t7724;
  double t8763;
  double t8771;
  double t7749;
  double t7751;
  double t8655;
  double t8660;
  double t7790;
  double t7791;
  double t7806;
  double t7810;
  double t7861;
  double t7866;
  double t7876;
  double t7877;
  double t7915;
  double t7916;
  double t7934;
  double t7935;
  double t8589;
  double t8590;
  double t9239;
  double t9245;
  double t9246;
  double t9249;
  double t9250;
  double t9254;
  double t9256;
  double t9262;
  double t7952;
  double t7957;
  double t7964;
  double t7965;
  double t9290;
  double t9291;
  double t9294;
  double t9298;
  double t7983;
  double t7986;
  double t8006;
  double t8007;
  double t8011;
  double t8017;
  double t8067;
  double t8069;
  double t8076;
  double t8084;
  double t9185;
  double t9192;
  t108 = Cos(var1[3]);
  t130 = Sin(var1[3]);
  t499 = Cos(var1[4]);
  t563 = Sin(var1[4]);
  t553 = -1.*var2[2]*t499*t130;
  t580 = -1.*var2[1]*t563;
  t602 = -1.*var1[1]*t499;
  t610 = var1[2]*t130*t563;
  t1129 = Cos(var1[5]);
  t1219 = Sin(var1[5]);
  t746 = var2[2]*t108*t499;
  t767 = var2[0]*t563;
  t768 = var1[0]*t499;
  t782 = -1.*var1[2]*t108*t563;
  t1280 = t108*t1129*t563;
  t1281 = t130*t1219;
  t1282 = t1280 + t1281;
  t1563 = -1.*t108*t1129;
  t1570 = -1.*t130*t563*t1219;
  t1571 = t1563 + t1570;
  t818 = -1.*var2[1]*t108*t499;
  t833 = var2[0]*t499*t130;
  t837 = var1[0]*t108*t499;
  t913 = var1[1]*t499*t130;
  t942 = t837 + t913;
  t943 = var2[3]*t942;
  t964 = var1[1]*t108*t563;
  t984 = -1.*var1[0]*t130*t563;
  t1053 = -1.*var2[3]*t499*t130;
  t1055 = -1.*var2[4]*t108*t563;
  t1061 = t1053 + t1055;
  t1070 = var2[3]*t108*t499;
  t1105 = -1.*var2[4]*t130*t563;
  t1108 = t1070 + t1105;
  t1122 = -1.*var2[4]*t499;
  t2100 = Cos(var1[6]);
  t1792 = t1129*t130*t563;
  t1818 = -1.*t108*t1219;
  t1851 = t1792 + t1818;
  t2175 = Sin(var1[6]);
  t1728 = -1.*t1129*t130;
  t1742 = t108*t563*t1219;
  t1761 = t1728 + t1742;
  t2335 = -1.*t2100;
  t2339 = 1. + t2335;
  t2112 = t499*t1129*t2100;
  t2177 = -1.*t499*t1219*t2175;
  t2193 = t2112 + t2177;
  t1461 = -1.*t1129*t130*t563;
  t1469 = t108*t1219;
  t1477 = t1461 + t1469;
  t2342 = 0.07996*t2339;
  t2343 = -0.135*t2175;
  t2360 = 0. + t2342 + t2343;
  t2392 = 0.135*t2339;
  t2396 = 0.07996*t2175;
  t2437 = 0. + t2392 + t2396;
  t2246 = t108*t1129;
  t2252 = t130*t563*t1219;
  t2278 = t2246 + t2252;
  t2615 = -1.*var1[2];
  t2623 = -1.*t499*t1129*t2360;
  t2626 = -1.*t499*t1219*t2437;
  t2631 = 0. + t2615 + t2623 + t2626;
  t2534 = t2100*t1571;
  t2639 = t2100*t1282;
  t1348 = t1129*t130;
  t1359 = -1.*t108*t563*t1219;
  t1373 = t1348 + t1359;
  t2687 = t1851*t2360;
  t2697 = t2278*t2437;
  t2717 = 0. + var1[1] + t2687 + t2697;
  t2864 = t2100*t1851;
  t2866 = -1.*t2278*t2175;
  t2869 = t2864 + t2866;
  t2726 = -1.*t499*t2100*t1219;
  t2727 = -1.*t499*t1129*t2175;
  t2734 = t2726 + t2727;
  t2735 = t2717*t2734;
  t2785 = -1.*t1851*t2175;
  t2644 = -1.*t1761*t2175;
  t2654 = t2639 + t2644;
  t3049 = -0.135*t2100;
  t3052 = t3049 + t2396;
  t3068 = 0.07996*t2100;
  t3075 = 0.135*t2175;
  t3095 = t3068 + t3075;
  t3011 = -1.*t1129*t2100*t563;
  t3014 = t563*t1219*t2175;
  t3022 = t3011 + t3014;
  t3304 = t499*t1129*t2360;
  t3306 = t499*t1219*t2437;
  t3313 = 0. + var1[2] + t3304 + t3306;
  t3338 = -1.*var1[0];
  t3344 = -1.*t1282*t2360;
  t3348 = -1.*t1761*t2437;
  t3360 = 0. + t3338 + t3344 + t3348;
  t3504 = t3360*t2734;
  t3545 = -1.*t1282*t2175;
  t3314 = t108*t499*t1129*t2100;
  t3316 = -1.*t108*t499*t1219*t2175;
  t3321 = t3314 + t3316;
  t2379 = t1282*t2360;
  t2457 = t1761*t2437;
  t2993 = t499*t1129*t2100*t130;
  t2994 = -1.*t499*t130*t1219*t2175;
  t2996 = t2993 + t2994;
  t3809 = 0. + var1[0] + t2379 + t2457;
  t2810 = t2534 + t2785;
  t3757 = -1.*var1[1];
  t3767 = -1.*t1851*t2360;
  t3768 = -1.*t2278*t2437;
  t3786 = 0. + t3757 + t3767 + t3768;
  t3541 = t2100*t1373;
  t3551 = t3541 + t3545;
  t3450 = t2100*t1477;
  t3461 = -1.*t1571*t2175;
  t3462 = t3450 + t3461;
  t3878 = 0.08055*t2193;
  t3123 = -1.*t2100*t2278;
  t3128 = t3123 + t2785;
  t3638 = -1.*t2100*t1761;
  t3640 = t3638 + t3545;
  t4104 = Cos(var1[7]);
  t4117 = Sin(var1[7]);
  t4106 = t2100*t2278;
  t4109 = t1851*t2175;
  t4112 = t4106 + t4109;
  t4149 = -1.*t4104;
  t4151 = 1. + t4149;
  t3566 = t1571*t2175;
  t3572 = t2864 + t3566;
  t4125 = t499*t2100*t1219;
  t4133 = t499*t1129*t2175;
  t4135 = t4125 + t4133;
  t4157 = 0.135*t4151;
  t4165 = 0.08055*t4117;
  t4174 = 0. + t4157 + t4165;
  t4178 = -0.08055*t4151;
  t4197 = 0.135*t4117;
  t4198 = 0. + t4178 + t4197;
  t2824 = t1373*t2175;
  t2830 = t2639 + t2824;
  t2837 = t499*t1219*t2360;
  t2838 = -1.*t499*t1129*t2437;
  t4114 = t4104*t4112;
  t4118 = -1.*t499*t130*t4117;
  t4119 = t4114 + t4118;
  t2742 = t1571*t2360;
  t2772 = t1851*t2437;
  t4176 = t4112*t4174;
  t4203 = t499*t130*t4198;
  t4205 = 0. + var1[1] + t2687 + t2697 + t4176 + t4203;
  t4207 = -1.*t4104*t2193*t4205;
  t4217 = -1.*t4135*t4174;
  t4219 = t563*t4198;
  t4221 = 0. + t2615 + t2623 + t2626 + t4217 + t4219;
  t3137 = -1.*t499*t1129*t3052;
  t3159 = -1.*t499*t1219*t3095;
  t4248 = -1.*t2193*t4174;
  t3065 = t1851*t3052;
  t3100 = t2278*t3095;
  t4264 = t4104*t4135;
  t4267 = t563*t4117;
  t4271 = t4264 + t4267;
  t3741 = -1.*t2100*t563*t1219;
  t3745 = -1.*t1129*t563*t2175;
  t3750 = t3741 + t3745;
  t3032 = t1129*t563*t2360;
  t3036 = t563*t1219*t2437;
  t2976 = t499*t1129*t130*t2360;
  t2979 = t499*t130*t1219*t2437;
  t3256 = t499*t2100*t130*t1219;
  t3268 = t499*t1129*t130*t2175;
  t3271 = t3256 + t3268;
  t2906 = t108*t499*t2100*t1219;
  t2908 = t108*t499*t1129*t2175;
  t2950 = t2906 + t2908;
  t3426 = t2100*t1761;
  t3430 = t1282*t2175;
  t3439 = t3426 + t3430;
  t4456 = 0.135*t4104;
  t4462 = -0.08055*t4117;
  t4465 = t4456 + t4462;
  t4471 = 0.08055*t4104;
  t4473 = t4471 + t4197;
  t4443 = t4104*t3439;
  t4451 = -1.*t108*t499*t4117;
  t4452 = t4443 + t4451;
  t4509 = -1.*t499*t4104*t130;
  t2558 = t1477*t2175;
  t2577 = t2534 + t2558;
  t3560 = -1.*t499*t1219*t2360;
  t3563 = t499*t1129*t2437;
  t3505 = -1.*t1373*t2360;
  t3512 = -1.*t1282*t2437;
  t4623 = -1.*t3439*t4174;
  t4624 = -1.*t108*t499*t4198;
  t4638 = 0. + t3338 + t3344 + t3348 + t4623 + t4624;
  t4643 = -1.*t4104*t2193*t4638;
  t4645 = t4135*t4174;
  t4656 = -1.*t563*t4198;
  t4661 = 0. + var1[2] + t3304 + t3306 + t4645 + t4656;
  t3648 = t499*t1129*t3052;
  t3650 = t499*t1219*t3095;
  t4666 = t2193*t4174;
  t3616 = -1.*t1282*t3052;
  t3617 = -1.*t1761*t3095;
  t4327 = t4104*t3750;
  t4328 = t499*t4117;
  t4330 = t4327 + t4328;
  t3369 = -1.*t1129*t563*t2360;
  t3371 = -1.*t563*t1219*t2437;
  t3292 = -1.*t108*t499*t1129*t2360;
  t3297 = -1.*t108*t499*t1219*t2437;
  t4493 = t4104*t563;
  t4494 = -1.*t4135*t4117;
  t4506 = t4493 + t4494;
  t3135 = 0.08055*t2654;
  t3394 = -1.*t1477*t2360;
  t3402 = -1.*t1571*t2437;
  t4917 = t499*t130*t4117;
  t4547 = t3439*t4174;
  t4565 = t108*t499*t4198;
  t3890 = -1.*t1571*t2360;
  t3905 = -1.*t1851*t2437;
  t3911 = t1373*t2360;
  t3915 = t1282*t2437;
  t5001 = 0.08055*t2734;
  t5003 = 0. + var1[0] + t2379 + t2457 + t4547 + t4565;
  t5008 = -1.*t4112*t4174;
  t5012 = -1.*t499*t130*t4198;
  t5016 = 0. + t3757 + t3767 + t3768 + t5008 + t5012;
  t5034 = -0.01004*t2193*t4117;
  t3995 = -1.*t1851*t3052;
  t4000 = -1.*t2278*t3095;
  t4012 = t1282*t3052;
  t4016 = t1761*t3095;
  t3953 = t1477*t2360;
  t3960 = t1571*t2437;
  t4915 = t4104*t2577;
  t4926 = t4915 + t4917;
  t3813 = -1.*t499*t1129*t130*t2360;
  t3826 = -1.*t499*t130*t1219*t2437;
  t3843 = t108*t499*t1129*t2360;
  t3848 = t108*t499*t1219*t2437;
  t4823 = t4104*t2950;
  t4837 = t108*t563*t4117;
  t4842 = t4823 + t4837;
  t4383 = t4104*t3271;
  t4389 = t130*t563*t4117;
  t4391 = t4383 + t4389;
  t4511 = -1.*t4112*t4117;
  t4512 = t4509 + t4511;
  t4897 = -1.*t108*t499*t4104;
  t4898 = -1.*t3439*t4117;
  t4904 = t4897 + t4898;
  t4950 = t108*t499*t4104;
  t4952 = t3439*t4117;
  t4955 = t4950 + t4952;
  t4610 = -1.*t4104*t3439;
  t4611 = t108*t499*t4117;
  t4612 = t4610 + t4611;
  t4121 = var2[2]*t4119;
  t4137 = -1.*t4104*t4135;
  t4140 = -1.*t563*t4117;
  t4142 = t4137 + t4140;
  t4144 = var2[1]*t4142;
  t4488 = t499*t130*t4465;
  t4490 = t4112*t4473;
  t5401 = Cos(var1[8]);
  t4466 = t563*t4465;
  t4479 = -1.*t4135*t4473;
  t5404 = -1.*t5401;
  t5405 = 1. + t5404;
  t5406 = -0.08055*t5405;
  t5407 = Sin(var1[8]);
  t5414 = -0.01004*t5407;
  t5418 = 0. + t5406 + t5414;
  t5390 = -1.*t4104*t563;
  t5396 = t4135*t4117;
  t5397 = t5390 + t5396;
  t5357 = t499*t4104*t130;
  t5358 = t4112*t4117;
  t5365 = t5357 + t5358;
  t5445 = -0.01004*t5405;
  t5451 = 0.08055*t5407;
  t5456 = 0. + t5445 + t5451;
  t5444 = -1.*t5397*t5418;
  t5459 = -1.*t2193*t5456;
  t5461 = 0. + t2615 + t2623 + t2626 + t4217 + t4219 + t5444 + t5459;
  t4253 = t3572*t4174;
  t5463 = t5365*t5418;
  t5465 = t2869*t5456;
  t5467 = 0. + var1[1] + t2687 + t2697 + t4176 + t4203 + t5463 + t5465;
  t5480 = -1.*t2193*t4117*t5418;
  t5481 = -1.*t2734*t5456;
  t4303 = t2869*t4174;
  t5496 = -1.*t4104*t2193*t5467;
  t4362 = t3271*t4174;
  t4364 = -1.*t130*t563*t4198;
  t4846 = -1.*t4104*t130*t563;
  t4847 = t3271*t4117;
  t4850 = t4846 + t4847;
  t4335 = -1.*t3750*t4174;
  t4340 = t499*t4198;
  t5197 = -1.*t499*t4104;
  t5199 = t3750*t4117;
  t5206 = t5197 + t5199;
  t4413 = -1.*t108*t4104*t563;
  t4420 = t2950*t4117;
  t4429 = t4413 + t4420;
  t4573 = t2577*t4117;
  t4579 = t4509 + t4573;
  t5760 = -0.01004*t5401;
  t5770 = -0.08055*t5407;
  t5797 = t5760 + t5770;
  t5802 = 0.08055*t5401;
  t5808 = t5802 + t5414;
  t4615 = var2[2]*t4612;
  t4616 = var2[0]*t4271;
  t4875 = -1.*t108*t499*t4465;
  t4876 = -1.*t3439*t4473;
  t4864 = -1.*t563*t4465;
  t4865 = t4135*t4473;
  t5974 = t5397*t5418;
  t5976 = t2193*t5456;
  t5977 = 0. + var1[2] + t3304 + t3306 + t4645 + t4656 + t5974 + t5976;
  t4698 = -1.*t2830*t4174;
  t5996 = -1.*t4955*t5418;
  t5997 = -1.*t2654*t5456;
  t6007 = 0. + t3338 + t3344 + t3348 + t4623 + t4624 + t5996 + t5997;
  t6035 = t2193*t4117*t5418;
  t6047 = t2734*t5456;
  t4748 = -1.*t2654*t4174;
  t6089 = -1.*t4104*t2193*t6007;
  t4779 = -1.*t2950*t4174;
  t4783 = t108*t563*t4198;
  t4763 = t3750*t4174;
  t4765 = -1.*t499*t4198;
  t4935 = -1.*t2577*t4174;
  t5893 = t5401*t2654;
  t5896 = -1.*t4955*t5407;
  t5904 = t5893 + t5896;
  t4981 = var2[1]*t4452;
  t4983 = -1.*t4104*t4112;
  t4984 = t4983 + t4917;
  t4999 = var2[0]*t4984;
  t5657 = t4955*t5418;
  t5663 = t2654*t5456;
  t5103 = t2577*t4174;
  t5271 = t108*t499*t4465;
  t5272 = t3439*t4473;
  t5231 = -1.*t499*t130*t4465;
  t5251 = -1.*t4112*t4473;
  t6490 = 0. + var1[0] + t2379 + t2457 + t4547 + t4565 + t5657 + t5663;
  t6513 = -1.*t5365*t5418;
  t6514 = -1.*t2869*t5456;
  t6515 = 0. + t3757 + t3767 + t3768 + t5008 + t5012 + t6513 + t6514;
  t5035 = -1.*t3572*t4174;
  t5051 = t2830*t4174;
  t5069 = -1.*t2869*t4174;
  t5073 = t2654*t4174;
  t6612 = t5401*t2193*t4117;
  t6622 = t2734*t5407;
  t6626 = t6612 + t6622;
  t6629 = -0.13004*t6626;
  t6630 = t5401*t2734;
  t6634 = -1.*t2193*t4117*t5407;
  t6635 = t6630 + t6634;
  t6639 = 0.08055*t6635;
  t5154 = t2950*t4174;
  t5162 = -1.*t108*t563*t4198;
  t5126 = -1.*t3271*t4174;
  t5132 = t130*t563*t4198;
  t5287 = -1.*var2[5]*t4104*t2830;
  t5290 = -1.*var2[6]*t4104*t2654;
  t5291 = -1.*t4104*t2577;
  t5293 = t5291 + t4118;
  t5296 = var2[3]*t5293;
  t5303 = -1.*t4104*t2950;
  t5306 = -1.*t108*t563*t4117;
  t5307 = t5303 + t5306;
  t5317 = var2[4]*t5307;
  t5320 = var2[7]*t4955;
  t5325 = t5287 + t5290 + t5296 + t5317 + t5320;
  t5331 = -1.*var2[5]*t4104*t3572;
  t5346 = -1.*var2[6]*t4104*t2869;
  t5347 = var2[3]*t4612;
  t5349 = -1.*t4104*t3271;
  t5350 = -1.*t130*t563*t4117;
  t5351 = t5349 + t5350;
  t5355 = var2[4]*t5351;
  t5366 = var2[7]*t5365;
  t5368 = t5331 + t5346 + t5347 + t5355 + t5366;
  t5372 = -1.*var2[5]*t4104*t2193;
  t5373 = -1.*var2[6]*t4104*t2193;
  t5382 = -1.*t4104*t3750;
  t5386 = -1.*t499*t4117;
  t5388 = t5382 + t5386;
  t5389 = var2[4]*t5388;
  t5399 = var2[7]*t5397;
  t5400 = t5372 + t5373 + t5389 + t5399;
  t6872 = Cos(var1[9]);
  t6874 = -1.*t6872;
  t6878 = 1. + t6874;
  t6885 = Sin(var1[9]);
  t5497 = t5401*t2830*t4117;
  t5502 = t3551*t5407;
  t5503 = t5497 + t5502;
  t5510 = t5401*t3551;
  t5513 = -1.*t2830*t4117*t5407;
  t5515 = t5510 + t5513;
  t5488 = t3572*t4117*t5418;
  t5492 = t2810*t5456;
  t6883 = -0.08055*t6878;
  t6891 = -0.13004*t6885;
  t6896 = 0. + t6883 + t6891;
  t6091 = t5401*t3572*t4117;
  t6092 = t2810*t5407;
  t6093 = t6091 + t6092;
  t6906 = -0.13004*t6878;
  t6907 = 0.08055*t6885;
  t6912 = 0. + t6906 + t6907;
  t6099 = t5401*t2810;
  t6115 = -1.*t3572*t4117*t5407;
  t6127 = t6099 + t6115;
  t6756 = t5401*t2193;
  t6758 = -1.*t5397*t5407;
  t6762 = t6756 + t6758;
  t6387 = t5401*t2869;
  t6398 = -1.*t5365*t5407;
  t6399 = t6387 + t6398;
  t6902 = -1.*t6896*t6626;
  t6914 = -1.*t6912*t6635;
  t5546 = t5401*t2654*t4117;
  t5551 = t3640*t5407;
  t5552 = t5546 + t5551;
  t5555 = t5401*t3640;
  t5569 = -1.*t2654*t4117*t5407;
  t5572 = t5555 + t5569;
  t5536 = t2869*t4117*t5418;
  t5538 = t3128*t5456;
  t6201 = t5401*t2869*t4117;
  t6202 = t3128*t5407;
  t6205 = t6201 + t6202;
  t6225 = t5401*t3128;
  t6227 = -1.*t2869*t4117*t5407;
  t6230 = t6225 + t6227;
  t6972 = t5401*t5397;
  t6973 = t2193*t5407;
  t6976 = t6972 + t6973;
  t6977 = -1.*t6896*t6976;
  t6979 = -1.*t6912*t6762;
  t6980 = 0. + t2615 + t2623 + t2626 + t4217 + t4219 + t5444 + t5459 + t6977 + t6979;
  t6986 = t5401*t5365;
  t6987 = t2869*t5407;
  t6997 = t6986 + t6987;
  t7001 = t6896*t6997;
  t7004 = t6912*t6399;
  t7006 = 0. + var1[1] + t2687 + t2697 + t4176 + t4203 + t5463 + t5465 + t7001 + t7004;
  t7008 = -1.*t4104*t2193*t7006;
  t5615 = t5401*t4429;
  t5618 = t3321*t5407;
  t5622 = t5615 + t5618;
  t5638 = t5401*t3321;
  t5641 = -1.*t4429*t5407;
  t5643 = t5638 + t5641;
  t5585 = t4850*t5418;
  t5587 = t2996*t5456;
  t6296 = t5401*t4850;
  t6299 = t2996*t5407;
  t6300 = t6296 + t6299;
  t6303 = t5401*t2996;
  t6312 = -1.*t4850*t5407;
  t6327 = t6303 + t6312;
  t5600 = -1.*t5206*t5418;
  t5602 = -1.*t3022*t5456;
  t6818 = t5401*t5206;
  t6820 = t3022*t5407;
  t6822 = t6818 + t6820;
  t6827 = t5401*t3022;
  t6831 = -1.*t5206*t5407;
  t6854 = t6827 + t6831;
  t5420 = t4119*t5418;
  t5438 = -1.*t4271*t5418;
  t5672 = t5401*t4579;
  t5674 = t3462*t5407;
  t5675 = t5672 + t5674;
  t5718 = t5401*t3462;
  t5720 = -1.*t4579*t5407;
  t5722 = t5718 + t5720;
  t6438 = t5401*t4955;
  t6439 = t2654*t5407;
  t6440 = t6438 + t6439;
  t5801 = -1.*t5397*t5797;
  t5823 = -1.*t2193*t5808;
  t6748 = -1.*t5401*t5397;
  t6749 = -1.*t2193*t5407;
  t6750 = t6748 + t6749;
  t5846 = t5365*t5797;
  t5866 = t2869*t5808;
  t6373 = -1.*t5401*t5365;
  t6375 = -1.*t2869*t5407;
  t6384 = t6373 + t6375;
  t5878 = -1.*t5401*t4955;
  t5879 = -1.*t2654*t5407;
  t5886 = t5878 + t5879;
  t7298 = -0.13004*t6872;
  t7302 = -0.08055*t6885;
  t7303 = t7298 + t7302;
  t7312 = 0.08055*t6872;
  t7313 = t7312 + t6891;
  t7270 = t6872*t5904;
  t7281 = -1.*t6885*t5904;
  t6334 = t5397*t5797;
  t6335 = t2193*t5808;
  t6344 = -1.*t4955*t5797;
  t6352 = -1.*t2654*t5808;
  t7387 = t6872*t6399;
  t7392 = -1.*t6885*t6399;
  t6072 = -1.*t2830*t4117*t5418;
  t6073 = -1.*t3551*t5456;
  t7443 = t6896*t6626;
  t7446 = t6912*t6635;
  t6171 = -1.*t2654*t4117*t5418;
  t6180 = -1.*t3640*t5456;
  t7509 = t6896*t6976;
  t7515 = t6912*t6762;
  t7520 = 0. + var1[2] + t3304 + t3306 + t4645 + t4656 + t5974 + t5976 + t7509 + t7515;
  t7528 = -1.*t6896*t6440;
  t7531 = -1.*t6912*t5904;
  t7532 = 0. + t3338 + t3344 + t3348 + t4623 + t4624 + t5996 + t5997 + t7528 + t7531;
  t7533 = -1.*t4104*t2193*t7532;
  t6251 = -1.*t4429*t5418;
  t6256 = -1.*t3321*t5456;
  t6273 = t5206*t5418;
  t6283 = t3022*t5456;
  t5931 = -1.*t4452*t5418;
  t5952 = t4271*t5418;
  t6426 = -1.*t4579*t5418;
  t6430 = -1.*t3462*t5456;
  t7339 = -1.*t6885*t6440;
  t7344 = t7339 + t7270;
  t6734 = -1.*t5365*t5797;
  t6735 = -1.*t2869*t5808;
  t6714 = t4955*t5797;
  t6725 = t2654*t5808;
  t7779 = t6872*t6762;
  t7786 = -1.*t6885*t6762;
  t6588 = t2830*t4117*t5418;
  t6589 = t3551*t5456;
  t6577 = -1.*t3572*t4117*t5418;
  t6583 = -1.*t2810*t5456;
  t7221 = t6896*t6440;
  t7224 = t6912*t5904;
  t7899 = -1.*t6885*t6626;
  t7900 = t6872*t6635;
  t7901 = t7899 + t7900;
  t7903 = 0.03315*t7901;
  t7904 = t6872*t6626;
  t7911 = t6885*t6635;
  t7913 = t7904 + t7911;
  t7914 = -0.19074*t7913;
  t6693 = t2654*t4117*t5418;
  t6694 = t3640*t5456;
  t6654 = -1.*t2869*t4117*t5418;
  t6657 = -1.*t3128*t5456;
  t7938 = -1.*t6896*t6997;
  t7939 = -1.*t6912*t6399;
  t7940 = 0. + t3757 + t3767 + t3768 + t5008 + t5012 + t6513 + t6514 + t7938 + t7939;
  t7944 = 0. + var1[0] + t2379 + t2457 + t4547 + t4565 + t5657 + t5663 + t7221 + t7224;
  t6508 = t4579*t5418;
  t6509 = t3462*t5456;
  t6775 = t4429*t5418;
  t6788 = t3321*t5456;
  t6801 = -1.*t4850*t5418;
  t6805 = -1.*t2996*t5456;
  t6531 = t4452*t5418;
  t6545 = -1.*t4119*t5418;
  t8127 = Cos(var1[10]);
  t8131 = -1.*t8127;
  t8136 = 1. + t8131;
  t8146 = Sin(var1[10]);
  t6919 = -1.*t6885*t5503;
  t6926 = t6872*t5515;
  t6934 = t6919 + t6926;
  t6941 = t6872*t5503;
  t6942 = t6885*t5515;
  t6944 = t6941 + t6942;
  t6955 = t6896*t6093;
  t6956 = t6912*t6127;
  t8142 = -0.19074*t8136;
  t8148 = 0.03315*t8146;
  t8149 = 0. + t8142 + t8148;
  t7464 = -1.*t6885*t6093;
  t7466 = t6872*t6127;
  t7478 = t7464 + t7466;
  t8155 = -0.03315*t8136;
  t8160 = -0.19074*t8146;
  t8165 = 0. + t8155 + t8160;
  t7481 = t6872*t6093;
  t7493 = t6885*t6127;
  t7500 = t7481 + t7493;
  t7836 = -1.*t6885*t6976;
  t7841 = t7836 + t7779;
  t7414 = -1.*t6885*t6997;
  t7416 = t7414 + t7387;
  t8152 = -1.*t8149*t7901;
  t8167 = -1.*t8165*t7913;
  t7020 = -1.*t6885*t5552;
  t7021 = t6872*t5572;
  t7024 = t7020 + t7021;
  t7028 = t6872*t5552;
  t7032 = t6885*t5572;
  t7035 = t7028 + t7032;
  t7044 = t6896*t6205;
  t7049 = t6912*t6230;
  t7557 = -1.*t6885*t6205;
  t7568 = t6872*t6230;
  t7573 = t7557 + t7568;
  t7582 = t6872*t6205;
  t7583 = t6885*t6230;
  t7590 = t7582 + t7583;
  t8205 = -1.*t8149*t7841;
  t8209 = t6872*t6976;
  t8216 = t6885*t6762;
  t8217 = t8209 + t8216;
  t8221 = -1.*t8165*t8217;
  t8227 = 0. + t2615 + t2623 + t2626 + t4217 + t4219 + t5444 + t5459 + t6977 + t6979 + t8205 + t8221;
  t8231 = t8149*t7416;
  t8236 = t6872*t6997;
  t8237 = t6885*t6399;
  t8239 = t8236 + t8237;
  t8244 = t8165*t8239;
  t8250 = 0. + var1[1] + t2687 + t2697 + t4176 + t4203 + t5463 + t5465 + t7001 + t7004 + t8231 + t8244;
  t8259 = -1.*t4104*t2193*t8250;
  t7073 = -1.*t6885*t5622;
  t7077 = t6872*t5643;
  t7078 = t7073 + t7077;
  t7083 = t6872*t5622;
  t7084 = t6885*t5643;
  t7092 = t7083 + t7084;
  t7095 = t6896*t6300;
  t7098 = t6912*t6327;
  t7637 = -1.*t6885*t6300;
  t7639 = t6872*t6327;
  t7641 = t7637 + t7639;
  t7651 = t6872*t6300;
  t7654 = t6885*t6327;
  t7655 = t7651 + t7654;
  t7105 = -1.*t6896*t6822;
  t7107 = -1.*t6912*t6854;
  t8030 = -1.*t6885*t6822;
  t8033 = t6872*t6854;
  t8037 = t8030 + t8033;
  t8045 = t6872*t6822;
  t8048 = t6885*t6854;
  t8050 = t8045 + t8048;
  t7122 = -1.*t5401*t6885*t4452;
  t7123 = -1.*t6872*t4452*t5407;
  t7126 = t7122 + t7123;
  t7131 = t6872*t5401*t4452;
  t7133 = -1.*t6885*t4452*t5407;
  t7134 = t7131 + t7133;
  t7138 = t5401*t6896*t4119;
  t7139 = -1.*t6912*t4119*t5407;
  t7694 = -1.*t5401*t6885*t4119;
  t7695 = -1.*t6872*t4119*t5407;
  t7699 = t7694 + t7695;
  t7707 = t6872*t5401*t4119;
  t7708 = -1.*t6885*t4119*t5407;
  t7712 = t7707 + t7708;
  t7146 = -1.*t5401*t6896*t4271;
  t7154 = t6912*t4271*t5407;
  t8092 = -1.*t5401*t6885*t4271;
  t8095 = -1.*t6872*t4271*t5407;
  t8099 = t8092 + t8095;
  t8111 = t6872*t5401*t4271;
  t8113 = -1.*t6885*t4271*t5407;
  t8114 = t8111 + t8113;
  t7237 = -1.*t6912*t6750;
  t7238 = -1.*t6896*t6762;
  t7775 = t6885*t6750;
  t7781 = t7775 + t7779;
  t7783 = t6872*t6750;
  t7788 = t7783 + t7786;
  t7241 = t6912*t6384;
  t7248 = t6896*t6399;
  t7380 = t6885*t6384;
  t7388 = t7380 + t7387;
  t7391 = t6872*t6384;
  t7397 = t7391 + t7392;
  t7263 = t6885*t5886;
  t7273 = t7263 + t7270;
  t7280 = t6872*t5886;
  t7289 = t7280 + t7281;
  t7310 = -1.*t7303*t6976;
  t7314 = -1.*t7313*t6762;
  t7845 = -1.*t6872*t6976;
  t7848 = t7845 + t7786;
  t7328 = t7303*t6997;
  t7329 = t7313*t6399;
  t7418 = -1.*t6872*t6997;
  t7419 = t7418 + t7392;
  t7347 = -1.*t6872*t6440;
  t7348 = t7347 + t7281;
  t7187 = -1.*t6885*t5675;
  t7189 = t6872*t5722;
  t7192 = t7187 + t7189;
  t7194 = t6872*t5675;
  t7195 = t6885*t5722;
  t7218 = t7194 + t7195;
  t7759 = t6872*t6440;
  t7760 = t6885*t5904;
  t7763 = t7759 + t7760;
  t8602 = 0.03315*t8127;
  t8605 = t8602 + t8160;
  t8611 = -0.19074*t8127;
  t8618 = -0.03315*t8146;
  t8619 = t8611 + t8618;
  t8541 = -1.*t8146*t7344;
  t8551 = t8127*t7344;
  t7367 = t6912*t6750;
  t7369 = t6896*t6762;
  t7400 = -1.*t6912*t5886;
  t7403 = -1.*t6896*t5904;
  t7410 = t7303*t6976;
  t7411 = t7313*t6762;
  t7424 = -1.*t7303*t6440;
  t7428 = -1.*t7313*t5904;
  t7453 = -1.*t6896*t5503;
  t7455 = -1.*t6912*t5515;
  t8807 = t8149*t7901;
  t8808 = t8165*t7913;
  t7546 = -1.*t6896*t5552;
  t7547 = -1.*t6912*t5572;
  t8853 = t8149*t7841;
  t8856 = t8165*t8217;
  t8857 = 0. + var1[2] + t3304 + t3306 + t4645 + t4656 + t5974 + t5976 + t7509 + t7515 + t8853 + t8856;
  t8860 = -1.*t8149*t7344;
  t8861 = -1.*t8165*t7763;
  t8863 = 0. + t3338 + t3344 + t3348 + t4623 + t4624 + t5996 + t5997 + t7528 + t7531 + t8860 + t8861;
  t8864 = -1.*t4104*t2193*t8863;
  t7624 = -1.*t6896*t5622;
  t7628 = -1.*t6912*t5643;
  t7658 = t6896*t6822;
  t7666 = t6912*t6854;
  t7685 = -1.*t5401*t6896*t4452;
  t7686 = t6912*t4452*t5407;
  t7716 = t5401*t6896*t4271;
  t7724 = -1.*t6912*t4271*t5407;
  t8763 = -1.*t8146*t7416;
  t8771 = t8127*t7416;
  t7749 = -1.*t6896*t5675;
  t7751 = -1.*t6912*t5722;
  t8655 = -1.*t8146*t7763;
  t8660 = t8551 + t8655;
  t7790 = -1.*t6912*t6384;
  t7791 = -1.*t6896*t6399;
  t7806 = t6912*t5886;
  t7810 = t6896*t5904;
  t7861 = -1.*t7303*t6997;
  t7866 = -1.*t7313*t6399;
  t7876 = t7303*t6440;
  t7877 = t7313*t5904;
  t7915 = t6896*t5503;
  t7916 = t6912*t5515;
  t7934 = -1.*t6896*t6093;
  t7935 = -1.*t6912*t6127;
  t8589 = t8149*t7344;
  t8590 = t8165*t7763;
  t9239 = t8146*t7901;
  t9245 = t8127*t7913;
  t9246 = t9239 + t9245;
  t9249 = -0.62554*t9246;
  t9250 = t8127*t7901;
  t9254 = -1.*t8146*t7913;
  t9256 = t9250 + t9254;
  t9262 = 0.01315*t9256;
  t7952 = t6896*t5552;
  t7957 = t6912*t5572;
  t7964 = -1.*t6896*t6205;
  t7965 = -1.*t6912*t6230;
  t9290 = -1.*t8149*t7416;
  t9291 = -1.*t8165*t8239;
  t9294 = 0. + t3757 + t3767 + t3768 + t5008 + t5012 + t6513 + t6514 + t7938 + t7939 + t9290 + t9291;
  t9298 = 0. + var1[0] + t2379 + t2457 + t4547 + t4565 + t5657 + t5663 + t7221 + t7224 + t8589 + t8590;
  t7983 = t6896*t5675;
  t7986 = t6912*t5722;
  t8006 = t6896*t5622;
  t8007 = t6912*t5643;
  t8011 = -1.*t6896*t6300;
  t8017 = -1.*t6912*t6327;
  t8067 = t5401*t6896*t4452;
  t8069 = -1.*t6912*t4452*t5407;
  t8076 = -1.*t5401*t6896*t4119;
  t8084 = t6912*t4119*t5407;
  t9185 = -1.*t8146*t7841;
  t9192 = t8127*t7841;
  p_output1[0]=0;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=0;
  p_output1[4]=0;
  p_output1[5]=0;
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=0;
  p_output1[10]=0;
  p_output1[11]=0;
  p_output1[12]=0;
  p_output1[13]=0;
  p_output1[14]=0;
  p_output1[15]=0;
  p_output1[16]=0;
  p_output1[17]=0;
  p_output1[18]=var2[1];
  p_output1[19]=-1.*var2[0];
  p_output1[20]=0;
  p_output1[21]=0;
  p_output1[22]=0;
  p_output1[23]=0;
  p_output1[24]=-1.*t108*var2[2] + t130*var1[2]*var2[3];
  p_output1[25]=-1.*t130*var2[2] - 1.*t108*var1[2]*var2[3];
  p_output1[26]=t108*var2[0] + t130*var2[1] + (-1.*t130*var1[0] + t108*var1[1])*var2[3];
  p_output1[27]=-1.*t108*var2[3];
  p_output1[28]=-1.*t130*var2[3];
  p_output1[29]=0;
  p_output1[30]=t553 + t580 - 1.*t108*t499*var1[2]*var2[3] + (t602 + t610)*var2[4];
  p_output1[31]=t746 + t767 - 1.*t130*t499*var1[2]*var2[3] + (t768 + t782)*var2[4];
  p_output1[32]=t818 + t833 + t943 + (t964 + t984)*var2[4];
  p_output1[33]=t1061;
  p_output1[34]=t1108;
  p_output1[35]=t1122;
  p_output1[36]=t553 + t580 + (-0.135*t1477 + 0.07996*t1571 - 1.*t108*t499*var1[2])*var2[3] + (-0.135*t108*t1129*t499 + 0.07996*t108*t1219*t499 + t602 + t610)*var2[4] + (0.07996*t1282 - 0.135*t1373)*var2[5];
  p_output1[37]=t746 + t767 + (-0.135*t1282 + 0.07996*t1761 - 1.*t130*t499*var1[2])*var2[3] + (-0.135*t1129*t130*t499 + 0.07996*t1219*t130*t499 + t768 + t782)*var2[4] + (-0.135*t1571 + 0.07996*t1851)*var2[5];
  p_output1[38]=t818 + t833 + t943 + (0.135*t1129*t563 - 0.07996*t1219*t563 + t964 + t984)*var2[4] + (0.07996*t1129*t499 + 0.135*t1219*t499)*var2[5];
  p_output1[39]=t1061;
  p_output1[40]=t1108;
  p_output1[41]=t1122;
  p_output1[42]=t2193*var2[1] + (-1.*t1851*t2100 + t2175*t2278)*var2[2] + (t2193*(t2379 + t2457) + 0.08055*t2577 + t2631*t2654 - 0.135*t130*t499)*var2[3] + (0.08055*t2950 + t2193*(t2976 + t2979) + t2631*t2996 + t2717*t3022 + t2869*(t3032 + t3036) - 0.135*t108*t563)*var2[4] + (t2735 + t2193*(t2742 + t2772) + t2631*t2810 + 0.08055*t2830 + (t2837 + t2838)*t2869)*var2[5] + (t2735 + t2193*(t3065 + t3100) + t2631*t3128 + t3135 + t2869*(t3137 + t3159))*var2[6];
  p_output1[43]=(-1.*t1129*t2100*t499 + t1219*t2175*t499)*var2[0] + t2654*var2[2] + (t2193*(t3394 + t3402) + 0.08055*t3439 + t3313*t3462 + 0.135*t108*t499)*var2[3] + (0.08055*t3271 + t2193*(t3292 + t3297) + t3313*t3321 + t3022*t3360 + t2654*(t3369 + t3371) - 0.135*t130*t563)*var2[4] + (t3504 + t2193*(t3505 + t3512) + t3313*t3551 + t2654*(t3560 + t3563) + 0.08055*t3572)*var2[5] + (0.08055*t2869 + t3504 + t2193*(t3616 + t3617) + t3313*t3640 + t2654*(t3648 + t3650))*var2[6];
  p_output1[44]=t2869*var2[0] + (-1.*t1282*t2100 + t1761*t2175)*var2[1] + (t2654*(t3344 + t3348) + t3462*t3786 + t2654*t3809 + t2869*(t3953 + t3960))*var2[3] + (0.08055*t3750 + t3321*t3786 + t2996*t3809 + t2654*(t3813 + t3826) + t2869*(t3843 + t3848) - 0.135*t499)*var2[4] + (t3551*t3786 + t2810*t3809 + t3878 + t2654*(t3890 + t3905) + t2869*(t3911 + t3915))*var2[5] + (t3640*t3786 + t3128*t3809 + t3878 + t2654*(t3995 + t4000) + t2869*(t4012 + t4016))*var2[6];
  p_output1[45]=t3462*var2[3] + t3321*var2[4] + t3551*var2[5] + t3640*var2[6];
  p_output1[46]=t2654*var2[3] + t2996*var2[4] + t2810*var2[5] + t3128*var2[6];
  p_output1[47]=t3022*var2[4] + t2734*var2[5] + t2734*var2[6];
  p_output1[48]=t4121 + t4144 + (0.08055*t3462 - 1.*t4221*t4452 - 1.*t4271*(t2379 + t2457 + t4547 + t4565) - 0.01004*t4579)*var2[3] + (0.08055*t3321 - 1.*t4205*t4330 - 1.*t4119*(t3032 + t3036 + t4335 + t4340) - 1.*t4271*(t2976 + t2979 + t4362 + t4364) - 1.*t4221*t4391 - 0.01004*t4429)*var2[4] + (0.08055*t3551 - 0.01004*t2830*t4117 + t4207 - 1.*t3572*t4104*t4221 - 1.*t4119*(t2837 + t2838 + t4248) - 1.*(t2742 + t2772 + t4253)*t4271)*var2[5] + (0.08055*t3640 - 0.01004*t2654*t4117 + t4207 - 1.*t2869*t4104*t4221 - 1.*t4119*(t3137 + t3159 + t4248) - 1.*t4271*(t3065 + t3100 + t4303))*var2[6] + (-0.01004*t4452 - 1.*t4119*(t4466 + t4479) - 1.*t4271*(t4488 + t4490) - 1.*t4205*t4506 - 1.*t4221*t4512)*var2[7];
  p_output1[49]=t4615 + t4616 + (t3135 - 1.*t4661*t4926 - 1.*t4271*(t3394 + t3402 + t4203 + t4935) - 0.01004*t4955)*var2[3] + (0.08055*t2996 - 1.*t4330*t4638 - 1.*t4452*(t3369 + t3371 + t4763 + t4765) - 1.*t4271*(t3292 + t3297 + t4779 + t4783) - 1.*t4661*t4842 - 0.01004*t4850)*var2[4] + (0.08055*t2810 - 0.01004*t3572*t4117 + t4643 - 1.*t2830*t4104*t4661 - 1.*t4452*(t3560 + t3563 + t4666) - 1.*t4271*(t3505 + t3512 + t4698))*var2[5] + (0.08055*t3128 - 0.01004*t2869*t4117 + t4643 - 1.*t2654*t4104*t4661 - 1.*t4452*(t3648 + t3650 + t4666) - 1.*t4271*(t3616 + t3617 + t4748))*var2[6] + (-0.01004*t4119 - 1.*t4506*t4638 - 1.*t4452*(t4864 + t4865) - 1.*t4271*(t4875 + t4876) - 1.*t4661*t4904)*var2[7];
  p_output1[50]=t4981 + t4999 + (-1.*t4452*(t3344 + t3348 + t4623 + t4624) - 1.*t4452*t5003 - 1.*t4926*t5016 - 1.*t4119*(t3953 + t3960 + t5012 + t5103))*var2[3] + (0.08055*t3022 - 1.*t4391*t5003 - 1.*t4842*t5016 - 1.*t4452*(t3813 + t3826 + t5126 + t5132) - 1.*t4119*(t3843 + t3848 + t5154 + t5162) - 0.01004*t5206)*var2[4] + (t5001 - 1.*t3572*t4104*t5003 - 1.*t2830*t4104*t5016 + t5034 - 1.*t4452*(t3890 + t3905 + t5035) - 1.*t4119*(t3911 + t3915 + t5051))*var2[5] + (t5001 - 1.*t2869*t4104*t5003 - 1.*t2654*t4104*t5016 + t5034 - 1.*t4452*(t3995 + t4000 + t5069) - 1.*t4119*(t4012 + t4016 + t5073))*var2[6] + (-0.01004*t4271 - 1.*t4512*t5003 - 1.*t4904*t5016 - 1.*t4452*(t5231 + t5251) - 1.*t4119*(t5271 + t5272))*var2[7];
  p_output1[51]=t5325;
  p_output1[52]=t5368;
  p_output1[53]=t5400;
  p_output1[54]=t4121 + t4144 + (-1.*t4452*t5461 - 1.*t4271*(t2379 + t2457 + t4547 + t4565 + t5657 + t5663) - 0.13004*t5675 + 0.08055*t5722)*var2[3] + (-1.*t4391*t5461 - 1.*t4330*t5467 - 1.*t4271*(t2976 + t2979 + t4362 + t4364 + t5585 + t5587) - 1.*t4119*(t3032 + t3036 + t4335 + t4340 + t5600 + t5602) - 0.13004*t5622 + 0.08055*t5643)*var2[4] + (-1.*t3572*t4104*t5461 - 1.*t4119*(t2837 + t2838 + t4248 + t5480 + t5481) - 1.*t4271*(t2742 + t2772 + t4253 + t5488 + t5492) + t5496 - 0.13004*t5503 + 0.08055*t5515)*var2[5] + (-1.*t2869*t4104*t5461 - 1.*t4119*(t3137 + t3159 + t4248 + t5480 + t5481) + t5496 - 1.*t4271*(t3065 + t3100 + t4303 + t5536 + t5538) - 0.13004*t5552 + 0.08055*t5572)*var2[6] + (-0.13004*t4452*t5401 - 0.08055*t4452*t5407 - 1.*t4271*(t4488 + t4490 + t5420) - 1.*t4119*(t4466 + t4479 + t5438) - 1.*t4512*t5461 - 1.*t4506*t5467)*var2[7] + (-1.*t4119*(t5801 + t5823) - 1.*t4271*(t5846 + t5866) + 0.08055*t5886 - 0.13004*t5904)*var2[8];
  p_output1[55]=t4615 + t4616 + (0.08055*t5904 - 1.*t4926*t5977 - 1.*t4271*(t3394 + t3402 + t4203 + t4935 + t6426 + t6430) - 0.13004*t6440)*var2[3] + (-1.*t4842*t5977 - 1.*t4330*t6007 - 1.*t4271*(t3292 + t3297 + t4779 + t4783 + t6251 + t6256) - 1.*t4452*(t3369 + t3371 + t4763 + t4765 + t6273 + t6283) - 0.13004*t6300 + 0.08055*t6327)*var2[4] + (-1.*t2830*t4104*t5977 - 1.*t4452*(t3560 + t3563 + t4666 + t6035 + t6047) - 1.*t4271*(t3505 + t3512 + t4698 + t6072 + t6073) + t6089 - 0.13004*t6093 + 0.08055*t6127)*var2[5] + (-1.*t2654*t4104*t5977 - 1.*t4452*(t3648 + t3650 + t4666 + t6035 + t6047) + t6089 - 1.*t4271*(t3616 + t3617 + t4748 + t6171 + t6180) - 0.13004*t6205 + 0.08055*t6230)*var2[6] + (-0.13004*t4119*t5401 - 0.08055*t4119*t5407 - 1.*t4271*(t4875 + t4876 + t5931) - 1.*t4452*(t4864 + t4865 + t5952) - 1.*t4904*t5977 - 1.*t4506*t6007)*var2[7] + (-1.*t4452*(t6334 + t6335) - 1.*t4271*(t6344 + t6352) + 0.08055*t6384 - 0.13004*t6399)*var2[8];
  p_output1[56]=t4981 + t4999 + (-1.*t4452*(t3344 + t3348 + t4623 + t4624 + t5996 + t5997) - 1.*t4452*t6490 - 1.*t4119*(t3953 + t3960 + t5012 + t5103 + t6508 + t6509) - 1.*t4926*t6515)*var2[3] + (-1.*t4391*t6490 - 1.*t4842*t6515 - 1.*t4119*(t3843 + t3848 + t5154 + t5162 + t6775 + t6788) - 1.*t4452*(t3813 + t3826 + t5126 + t5132 + t6801 + t6805) - 0.13004*t6822 + 0.08055*t6854)*var2[4] + (-1.*t3572*t4104*t6490 - 1.*t2830*t4104*t6515 - 1.*t4452*(t3890 + t3905 + t5035 + t6577 + t6583) - 1.*t4119*(t3911 + t3915 + t5051 + t6588 + t6589) + t6629 + t6639)*var2[5] + (-1.*t2869*t4104*t6490 - 1.*t2654*t4104*t6515 + t6629 + t6639 - 1.*t4452*(t3995 + t4000 + t5069 + t6654 + t6657) - 1.*t4119*(t4012 + t4016 + t5073 + t6693 + t6694))*var2[6] + (-0.13004*t4271*t5401 - 0.08055*t4271*t5407 - 1.*t4512*t6490 - 1.*t4904*t6515 - 1.*t4119*(t5271 + t5272 + t6531) - 1.*t4452*(t5231 + t5251 + t6545))*var2[7] + (-1.*t4119*(t6714 + t6725) - 1.*t4452*(t6734 + t6735) + 0.08055*t6750 - 0.13004*t6762)*var2[8];
  p_output1[57]=t5325;
  p_output1[58]=t5368;
  p_output1[59]=t5400;
  p_output1[60]=t4121 + t4144 + (-1.*t4452*t6980 + 0.03315*t7192 - 0.19074*t7218 - 1.*t4271*(t2379 + t2457 + t4547 + t4565 + t5657 + t5663 + t7221 + t7224))*var2[3] + (-1.*t4391*t6980 - 1.*t4330*t7006 + 0.03315*t7078 - 0.19074*t7092 - 1.*t4271*(t2976 + t2979 + t4362 + t4364 + t5585 + t5587 + t7095 + t7098) - 1.*t4119*(t3032 + t3036 + t4335 + t4340 + t5600 + t5602 + t7105 + t7107))*var2[4] + (-1.*t4119*(t2837 + t2838 + t4248 + t5480 + t5481 + t6902 + t6914) + 0.03315*t6934 - 0.19074*t6944 - 1.*t4271*(t2742 + t2772 + t4253 + t5488 + t5492 + t6955 + t6956) - 1.*t3572*t4104*t6980 + t7008)*var2[5] + (-1.*t4119*(t3137 + t3159 + t4248 + t5480 + t5481 + t6902 + t6914) - 1.*t2869*t4104*t6980 + t7008 + 0.03315*t7024 - 0.19074*t7035 - 1.*t4271*(t3065 + t3100 + t4303 + t5536 + t5538 + t7044 + t7049))*var2[6] + (-1.*t4512*t6980 - 1.*t4506*t7006 + 0.03315*t7126 - 0.19074*t7134 - 1.*t4271*(t4488 + t4490 + t5420 + t7138 + t7139) - 1.*t4119*(t4466 + t4479 + t5438 + t7146 + t7154))*var2[7] + (-1.*t4119*(t5801 + t5823 + t7237 + t7238) - 1.*t4271*(t5846 + t5866 + t7241 + t7248) - 0.19074*t7273 + 0.03315*t7289)*var2[8] + (-1.*t4119*(t7310 + t7314) - 1.*t4271*(t7328 + t7329) - 0.19074*t7344 + 0.03315*t7348)*var2[9];
  p_output1[61]=t4615 + t4616 + (0.03315*t7344 - 1.*t4926*t7520 - 1.*t4271*(t3394 + t3402 + t4203 + t4935 + t6426 + t6430 + t7749 + t7751) - 0.19074*t7763)*var2[3] + (-1.*t4842*t7520 - 1.*t4330*t7532 - 1.*t4271*(t3292 + t3297 + t4779 + t4783 + t6251 + t6256 + t7624 + t7628) + 0.03315*t7641 - 0.19074*t7655 - 1.*t4452*(t3369 + t3371 + t4763 + t4765 + t6273 + t6283 + t7658 + t7666))*var2[4] + (-1.*t4452*(t3560 + t3563 + t4666 + t6035 + t6047 + t7443 + t7446) - 1.*t4271*(t3505 + t3512 + t4698 + t6072 + t6073 + t7453 + t7455) + 0.03315*t7478 - 0.19074*t7500 - 1.*t2830*t4104*t7520 + t7533)*var2[5] + (-1.*t4452*(t3648 + t3650 + t4666 + t6035 + t6047 + t7443 + t7446) - 1.*t2654*t4104*t7520 + t7533 - 1.*t4271*(t3616 + t3617 + t4748 + t6171 + t6180 + t7546 + t7547) + 0.03315*t7573 - 0.19074*t7590)*var2[6] + (-1.*t4904*t7520 - 1.*t4506*t7532 - 1.*t4271*(t4875 + t4876 + t5931 + t7685 + t7686) + 0.03315*t7699 - 0.19074*t7712 - 1.*t4452*(t4864 + t4865 + t5952 + t7716 + t7724))*var2[7] + (-1.*t4452*(t6334 + t6335 + t7367 + t7369) - 0.19074*t7388 + 0.03315*t7397 - 1.*t4271*(t6344 + t6352 + t7400 + t7403))*var2[8] + (-1.*t4452*(t7410 + t7411) - 0.19074*t7416 + 0.03315*t7419 - 1.*t4271*(t7424 + t7428))*var2[9];
  p_output1[62]=t4981 + t4999 + (-1.*t4452*(t3344 + t3348 + t4623 + t4624 + t5996 + t5997 + t7528 + t7531) - 1.*t4926*t7940 - 1.*t4452*t7944 - 1.*t4119*(t3953 + t3960 + t5012 + t5103 + t6508 + t6509 + t7983 + t7986))*var2[3] + (-1.*t4842*t7940 - 1.*t4391*t7944 - 1.*t4119*(t3843 + t3848 + t5154 + t5162 + t6775 + t6788 + t8006 + t8007) - 1.*t4452*(t3813 + t3826 + t5126 + t5132 + t6801 + t6805 + t8011 + t8017) + 0.03315*t8037 - 0.19074*t8050)*var2[4] + (t7903 + t7914 - 1.*t4119*(t3911 + t3915 + t5051 + t6588 + t6589 + t7915 + t7916) - 1.*t4452*(t3890 + t3905 + t5035 + t6577 + t6583 + t7934 + t7935) - 1.*t2830*t4104*t7940 - 1.*t3572*t4104*t7944)*var2[5] + (t7903 + t7914 - 1.*t2654*t4104*t7940 - 1.*t2869*t4104*t7944 - 1.*t4119*(t4012 + t4016 + t5073 + t6693 + t6694 + t7952 + t7957) - 1.*t4452*(t3995 + t4000 + t5069 + t6654 + t6657 + t7964 + t7965))*var2[6] + (-1.*t4904*t7940 - 1.*t4512*t7944 - 1.*t4119*(t5271 + t5272 + t6531 + t8067 + t8069) - 1.*t4452*(t5231 + t5251 + t6545 + t8076 + t8084) + 0.03315*t8099 - 0.19074*t8114)*var2[7] + (-0.19074*t7781 + 0.03315*t7788 - 1.*t4452*(t6734 + t6735 + t7790 + t7791) - 1.*t4119*(t6714 + t6725 + t7806 + t7810))*var2[8] + (-0.19074*t7841 + 0.03315*t7848 - 1.*t4452*(t7861 + t7866) - 1.*t4119*(t7876 + t7877))*var2[9];
  p_output1[63]=t5325;
  p_output1[64]=t5368;
  p_output1[65]=t5400;
  p_output1[66]=t4121 + t4144 + (-0.62554*(t7218*t8127 + t7192*t8146) + 0.01315*(t7192*t8127 - 1.*t7218*t8146) - 1.*t4452*t8227 - 1.*t4271*(t2379 + t2457 + t4547 + t4565 + t5657 + t5663 + t7221 + t7224 + t8589 + t8590))*var2[3] + (-0.62554*(t7092*t8127 + t7078*t8146) + 0.01315*(t7078*t8127 - 1.*t7092*t8146) - 1.*t4271*(t2976 + t2979 + t4362 + t4364 + t5585 + t5587 + t7095 + t7098 + t7641*t8149 + t7655*t8165) - 1.*t4119*(t3032 + t3036 + t4335 + t4340 + t5600 + t5602 + t7105 + t7107 - 1.*t8037*t8149 - 1.*t8050*t8165) - 1.*t4391*t8227 - 1.*t4330*t8250)*var2[4] + (-0.62554*(t6944*t8127 + t6934*t8146) + 0.01315*(t6934*t8127 - 1.*t6944*t8146) - 1.*t4271*(t2742 + t2772 + t4253 + t5488 + t5492 + t6955 + t6956 + t7478*t8149 + t7500*t8165) - 1.*t4119*(t2837 + t2838 + t4248 + t5480 + t5481 + t6902 + t6914 + t8152 + t8167) - 1.*t3572*t4104*t8227 + t8259)*var2[5] + (-0.62554*(t7035*t8127 + t7024*t8146) + 0.01315*(t7024*t8127 - 1.*t7035*t8146) - 1.*t4271*(t3065 + t3100 + t4303 + t5536 + t5538 + t7044 + t7049 + t7573*t8149 + t7590*t8165) - 1.*t4119*(t3137 + t3159 + t4248 + t5480 + t5481 + t6902 + t6914 + t8152 + t8167) - 1.*t2869*t4104*t8227 + t8259)*var2[6] + (-0.62554*(t7134*t8127 + t7126*t8146) + 0.01315*(t7126*t8127 - 1.*t7134*t8146) - 1.*t4271*(t4488 + t4490 + t5420 + t7138 + t7139 + t7699*t8149 + t7712*t8165) - 1.*t4119*(t4466 + t4479 + t5438 + t7146 + t7154 - 1.*t8099*t8149 - 1.*t8114*t8165) - 1.*t4512*t8227 - 1.*t4506*t8250)*var2[7] + (0.01315*(t7289*t8127 - 1.*t7273*t8146) - 0.62554*(t7273*t8127 + t7289*t8146) - 1.*t4271*(t5846 + t5866 + t7241 + t7248 + t7397*t8149 + t7388*t8165) - 1.*t4119*(t5801 + t5823 + t7237 + t7238 - 1.*t7788*t8149 - 1.*t7781*t8165))*var2[8] + (-1.*t4271*(t7328 + t7329 + t7419*t8149 + t7416*t8165) - 1.*t4119*(t7310 + t7314 - 1.*t7848*t8149 - 1.*t7841*t8165) + 0.01315*(t7348*t8127 + t8541) - 0.62554*(t7348*t8146 + t8551))*var2[9] + (0.01315*(-1.*t7763*t8127 + t8541) - 1.*t4119*(-1.*t7841*t8605 - 1.*t8217*t8619) - 1.*t4271*(t7416*t8605 + t8239*t8619) - 0.62554*t8660)*var2[10];
  p_output1[67]=t4615 + t4616 + (-0.62554*(t7763*t8127 + t7344*t8146) - 1.*t4271*(t3394 + t3402 + t4203 + t4935 + t6426 + t6430 + t7749 + t7751 - 1.*t7192*t8149 - 1.*t7218*t8165) + 0.01315*t8660 - 1.*t4926*t8857)*var2[3] + (-0.62554*(t7655*t8127 + t7641*t8146) + 0.01315*(t7641*t8127 - 1.*t7655*t8146) - 1.*t4271*(t3292 + t3297 + t4779 + t4783 + t6251 + t6256 + t7624 + t7628 - 1.*t7078*t8149 - 1.*t7092*t8165) - 1.*t4452*(t3369 + t3371 + t4763 + t4765 + t6273 + t6283 + t7658 + t7666 + t8037*t8149 + t8050*t8165) - 1.*t4842*t8857 - 1.*t4330*t8863)*var2[4] + (-0.62554*(t7500*t8127 + t7478*t8146) + 0.01315*(t7478*t8127 - 1.*t7500*t8146) - 1.*t4271*(t3505 + t3512 + t4698 + t6072 + t6073 + t7453 + t7455 - 1.*t6934*t8149 - 1.*t6944*t8165) - 1.*t4452*(t3560 + t3563 + t4666 + t6035 + t6047 + t7443 + t7446 + t8807 + t8808) - 1.*t2830*t4104*t8857 + t8864)*var2[5] + (-0.62554*(t7590*t8127 + t7573*t8146) + 0.01315*(t7573*t8127 - 1.*t7590*t8146) - 1.*t4271*(t3616 + t3617 + t4748 + t6171 + t6180 + t7546 + t7547 - 1.*t7024*t8149 - 1.*t7035*t8165) - 1.*t4452*(t3648 + t3650 + t4666 + t6035 + t6047 + t7443 + t7446 + t8807 + t8808) - 1.*t2654*t4104*t8857 + t8864)*var2[6] + (-0.62554*(t7712*t8127 + t7699*t8146) + 0.01315*(t7699*t8127 - 1.*t7712*t8146) - 1.*t4271*(t4875 + t4876 + t5931 + t7685 + t7686 - 1.*t7126*t8149 - 1.*t7134*t8165) - 1.*t4452*(t4864 + t4865 + t5952 + t7716 + t7724 + t8099*t8149 + t8114*t8165) - 1.*t4904*t8857 - 1.*t4506*t8863)*var2[7] + (0.01315*(t7397*t8127 - 1.*t7388*t8146) - 0.62554*(t7388*t8127 + t7397*t8146) - 1.*t4271*(t6344 + t6352 + t7400 + t7403 - 1.*t7289*t8149 - 1.*t7273*t8165) - 1.*t4452*(t6334 + t6335 + t7367 + t7369 + t7788*t8149 + t7781*t8165))*var2[8] + (-1.*t4271*(t7424 + t7428 - 1.*t7348*t8149 - 1.*t7344*t8165) - 1.*t4452*(t7410 + t7411 + t7848*t8149 + t7841*t8165) + 0.01315*(t7419*t8127 + t8763) - 0.62554*(t7419*t8146 + t8771))*var2[9] + (-1.*t4271*(-1.*t7344*t8605 - 1.*t7763*t8619) - 1.*t4452*(t7841*t8605 + t8217*t8619) + 0.01315*(-1.*t8127*t8239 + t8763) - 0.62554*(-1.*t8146*t8239 + t8771))*var2[10];
  p_output1[68]=t4981 + t4999 + (-1.*t4119*(t3953 + t3960 + t5012 + t5103 + t6508 + t6509 + t7983 + t7986 + t7192*t8149 + t7218*t8165) - 1.*t4452*(t3344 + t3348 + t4623 + t4624 + t5996 + t5997 + t7528 + t7531 + t8860 + t8861) - 1.*t4926*t9294 - 1.*t4452*t9298)*var2[3] + (-0.62554*(t8050*t8127 + t8037*t8146) + 0.01315*(t8037*t8127 - 1.*t8050*t8146) - 1.*t4119*(t3843 + t3848 + t5154 + t5162 + t6775 + t6788 + t8006 + t8007 + t7078*t8149 + t7092*t8165) - 1.*t4452*(t3813 + t3826 + t5126 + t5132 + t6801 + t6805 + t8011 + t8017 - 1.*t7641*t8149 - 1.*t7655*t8165) - 1.*t4842*t9294 - 1.*t4391*t9298)*var2[4] + (-1.*t4119*(t3911 + t3915 + t5051 + t6588 + t6589 + t7915 + t7916 + t6934*t8149 + t6944*t8165) - 1.*t4452*(t3890 + t3905 + t5035 + t6577 + t6583 + t7934 + t7935 - 1.*t7478*t8149 - 1.*t7500*t8165) + t9249 + t9262 - 1.*t2830*t4104*t9294 - 1.*t3572*t4104*t9298)*var2[5] + (-1.*t4119*(t4012 + t4016 + t5073 + t6693 + t6694 + t7952 + t7957 + t7024*t8149 + t7035*t8165) - 1.*t4452*(t3995 + t4000 + t5069 + t6654 + t6657 + t7964 + t7965 - 1.*t7573*t8149 - 1.*t7590*t8165) + t9249 + t9262 - 1.*t2654*t4104*t9294 - 1.*t2869*t4104*t9298)*var2[6] + (-0.62554*(t8114*t8127 + t8099*t8146) + 0.01315*(t8099*t8127 - 1.*t8114*t8146) - 1.*t4119*(t5271 + t5272 + t6531 + t8067 + t8069 + t7126*t8149 + t7134*t8165) - 1.*t4452*(t5231 + t5251 + t6545 + t8076 + t8084 - 1.*t7699*t8149 - 1.*t7712*t8165) - 1.*t4904*t9294 - 1.*t4512*t9298)*var2[7] + (0.01315*(t7788*t8127 - 1.*t7781*t8146) - 0.62554*(t7781*t8127 + t7788*t8146) - 1.*t4119*(t6714 + t6725 + t7806 + t7810 + t7289*t8149 + t7273*t8165) - 1.*t4452*(t6734 + t6735 + t7790 + t7791 - 1.*t7397*t8149 - 1.*t7388*t8165))*var2[8] + (-1.*t4119*(t7876 + t7877 + t7348*t8149 + t7344*t8165) - 1.*t4452*(t7861 + t7866 - 1.*t7419*t8149 - 1.*t7416*t8165) + 0.01315*(t7848*t8127 + t9185) - 0.62554*(t7848*t8146 + t9192))*var2[9] + (-1.*t4119*(t7344*t8605 + t7763*t8619) - 1.*t4452*(-1.*t7416*t8605 - 1.*t8239*t8619) + 0.01315*(-1.*t8127*t8217 + t9185) - 0.62554*(-1.*t8146*t8217 + t9192))*var2[10];
  p_output1[69]=t5325;
  p_output1[70]=t5368;
  p_output1[71]=t5400;
  p_output1[72]=0;
  p_output1[73]=0;
  p_output1[74]=0;
  p_output1[75]=0;
  p_output1[76]=0;
  p_output1[77]=0;
  p_output1[78]=0;
  p_output1[79]=0;
  p_output1[80]=0;
  p_output1[81]=0;
  p_output1[82]=0;
  p_output1[83]=0;
  p_output1[84]=0;
  p_output1[85]=0;
  p_output1[86]=0;
  p_output1[87]=0;
  p_output1[88]=0;
  p_output1[89]=0;
  p_output1[90]=0;
  p_output1[91]=0;
  p_output1[92]=0;
  p_output1[93]=0;
  p_output1[94]=0;
  p_output1[95]=0;
  p_output1[96]=0;
  p_output1[97]=0;
  p_output1[98]=0;
  p_output1[99]=0;
  p_output1[100]=0;
  p_output1[101]=0;
  p_output1[102]=0;
  p_output1[103]=0;
  p_output1[104]=0;
  p_output1[105]=0;
  p_output1[106]=0;
  p_output1[107]=0;
  p_output1[108]=0;
  p_output1[109]=0;
  p_output1[110]=0;
  p_output1[111]=0;
  p_output1[112]=0;
  p_output1[113]=0;
  p_output1[114]=0;
  p_output1[115]=0;
  p_output1[116]=0;
  p_output1[117]=0;
  p_output1[118]=0;
  p_output1[119]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 20 && ncols == 1) && 
      !(mrows == 1 && ncols == 20))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 20 && ncols == 1) && 
      !(mrows == 1 && ncols == 20))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 6, (mwSize) 20, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "dJs_LeftAnkleJoint_mex.hh"

namespace SymExpression
{

void dJs_LeftAnkleJoint_mex_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
