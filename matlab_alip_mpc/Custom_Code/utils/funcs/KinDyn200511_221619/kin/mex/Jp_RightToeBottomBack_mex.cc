/*
 * Automatically Generated from Mathematica.
 * Mon 11 May 2020 22:33:31 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t937;
  double t1058;
  double t1136;
  double t1181;
  double t1244;
  double t1338;
  double t1318;
  double t1323;
  double t1390;
  double t142;
  double t491;
  double t529;
  double t632;
  double t1332;
  double t1479;
  double t1487;
  double t1597;
  double t1645;
  double t1684;
  double t84;
  double t1849;
  double t1852;
  double t1861;
  double t1877;
  double t1878;
  double t1890;
  double t1904;
  double t1941;
  double t1975;
  double t2122;
  double t2445;
  double t2447;
  double t2494;
  double t2554;
  double t2575;
  double t2602;
  double t2646;
  double t2810;
  double t2837;
  double t2893;
  double t3025;
  double t3048;
  double t3051;
  double t3110;
  double t3243;
  double t3259;
  double t3308;
  double t3396;
  double t3408;
  double t3444;
  double t3517;
  double t3520;
  double t3526;
  double t3610;
  double t3634;
  double t3662;
  double t3717;
  double t3756;
  double t3814;
  double t3825;
  double t3836;
  double t3859;
  double t3866;
  double t3897;
  double t3898;
  double t3908;
  double t3942;
  double t3997;
  double t4017;
  double t4048;
  double t4132;
  double t4137;
  double t4160;
  double t589;
  double t670;
  double t705;
  double t1229;
  double t1271;
  double t1304;
  double t1557;
  double t1581;
  double t1591;
  double t1803;
  double t1819;
  double t1829;
  double t4457;
  double t4464;
  double t4474;
  double t4486;
  double t4494;
  double t4555;
  double t1900;
  double t1914;
  double t1928;
  double t4614;
  double t4621;
  double t4627;
  double t2410;
  double t2427;
  double t2444;
  double t2611;
  double t2648;
  double t2779;
  double t4638;
  double t4648;
  double t4680;
  double t4892;
  double t4893;
  double t4895;
  double t3013;
  double t3017;
  double t3024;
  double t3298;
  double t3322;
  double t3356;
  double t4914;
  double t4925;
  double t4935;
  double t4993;
  double t5016;
  double t5024;
  double t3476;
  double t3486;
  double t3487;
  double t3689;
  double t3722;
  double t3749;
  double t5057;
  double t5066;
  double t5069;
  double t5129;
  double t5147;
  double t5150;
  double t3832;
  double t3833;
  double t3834;
  double t3926;
  double t3959;
  double t3996;
  double t5164;
  double t5182;
  double t5183;
  double t5260;
  double t5274;
  double t5287;
  double t4059;
  double t4092;
  double t4112;
  double t5299;
  double t5308;
  double t5311;
  double t5326;
  double t5350;
  double t5374;
  double t5591;
  double t5596;
  double t5601;
  double t5628;
  double t5653;
  double t5671;
  double t5733;
  double t5734;
  double t5752;
  double t5756;
  double t5776;
  double t5783;
  double t5812;
  double t5817;
  double t5826;
  double t5834;
  double t5846;
  double t5851;
  double t5913;
  double t5916;
  double t5917;
  double t5930;
  double t5938;
  double t5947;
  double t5965;
  double t5973;
  double t5976;
  double t5984;
  double t5989;
  double t5991;
  double t6002;
  double t6014;
  double t6029;
  double t6137;
  double t6151;
  double t6154;
  double t6164;
  double t6167;
  double t6178;
  double t6239;
  double t6264;
  double t6280;
  double t6323;
  double t6359;
  double t6381;
  double t6411;
  double t6425;
  double t6439;
  double t6470;
  double t6477;
  double t6478;
  double t6486;
  double t6508;
  double t6514;
  double t6519;
  double t6523;
  double t6554;
  double t6589;
  double t6615;
  double t6626;
  double t6645;
  double t6659;
  double t6660;
  double t6687;
  double t6702;
  double t6708;
  double t6814;
  double t6820;
  double t6827;
  double t6859;
  double t6861;
  double t6867;
  double t6890;
  double t6916;
  double t6930;
  double t6992;
  double t7021;
  double t7023;
  double t7026;
  double t7027;
  double t7030;
  double t7063;
  double t7075;
  double t7093;
  double t7108;
  double t7111;
  double t7112;
  double t7120;
  double t7131;
  double t7138;
  double t7151;
  double t7153;
  double t7154;
  double t7183;
  double t7186;
  double t7196;
  double t7200;
  double t7220;
  double t7226;
  double t7318;
  double t7321;
  double t7324;
  double t7394;
  double t7414;
  double t7333;
  double t7349;
  double t7353;
  double t7447;
  double t7448;
  double t7450;
  double t7456;
  double t7459;
  double t7463;
  double t7471;
  double t7479;
  double t7489;
  double t7510;
  double t7529;
  double t7543;
  double t7568;
  double t7578;
  double t7591;
  double t7603;
  double t7609;
  double t7615;
  double t7631;
  double t7638;
  double t7643;
  double t7661;
  double t7667;
  double t7668;
  double t7727;
  double t7760;
  double t7762;
  double t7810;
  double t7821;
  double t7825;
  double t7804;
  double t7807;
  double t7836;
  double t7838;
  double t7845;
  double t7857;
  double t7859;
  double t7860;
  double t7869;
  double t7871;
  double t7881;
  double t7919;
  double t7920;
  double t7922;
  double t7924;
  double t7927;
  double t7934;
  double t7954;
  double t7958;
  double t7961;
  double t7967;
  double t7969;
  double t7975;
  double t7985;
  double t7989;
  double t7990;
  double t8054;
  double t8058;
  double t8065;
  double t8048;
  double t8049;
  double t8050;
  double t8084;
  double t8085;
  double t8089;
  double t8091;
  double t8092;
  double t8093;
  double t8095;
  double t8098;
  double t8111;
  double t8115;
  double t8116;
  double t8117;
  double t8129;
  double t8135;
  double t8138;
  double t8142;
  double t8143;
  double t8148;
  double t8152;
  double t8162;
  double t8163;
  double t8165;
  double t8168;
  double t8172;
  double t8244;
  double t8245;
  double t8253;
  double t8256;
  double t8257;
  double t8261;
  double t8262;
  double t8265;
  double t8270;
  double t8274;
  double t8275;
  double t8278;
  double t8280;
  double t8281;
  double t8287;
  double t8292;
  double t8300;
  double t8308;
  double t8309;
  double t8313;
  double t8315;
  double t8318;
  double t8322;
  double t8326;
  double t8327;
  double t8329;
  double t8229;
  double t8230;
  double t8233;
  double t8234;
  double t8235;
  double t8360;
  double t8361;
  double t8363;
  double t8369;
  double t8370;
  double t8365;
  double t8367;
  double t8374;
  double t8375;
  double t8376;
  double t8378;
  double t8379;
  double t8380;
  double t8382;
  double t8383;
  double t8384;
  double t8388;
  double t8389;
  double t8390;
  double t8393;
  double t8394;
  double t8395;
  double t8397;
  double t8399;
  double t8400;
  double t8402;
  double t8403;
  double t8404;
  double t8406;
  double t8407;
  double t8408;
  double t8053;
  double t8071;
  double t8074;
  double t8078;
  double t8090;
  double t8094;
  double t8113;
  double t8120;
  double t8140;
  double t8149;
  double t8164;
  double t8174;
  double t8178;
  double t8186;
  double t8192;
  double t8194;
  double t8198;
  double t8199;
  double t8200;
  double t8227;
  double t4696;
  double t4753;
  double t4769;
  double t8443;
  double t8444;
  double t8445;
  double t8448;
  double t8449;
  double t8450;
  double t8453;
  double t8455;
  double t8456;
  double t8458;
  double t8460;
  double t8461;
  double t8464;
  double t8474;
  double t8477;
  double t8487;
  double t8489;
  double t8492;
  double t8425;
  double t8426;
  double t8427;
  double t8429;
  double t8430;
  double t8508;
  double t8509;
  double t8511;
  double t8515;
  double t8517;
  double t8521;
  double t8534;
  double t8537;
  double t8538;
  double t8543;
  double t8544;
  double t8546;
  double t8548;
  double t8549;
  double t8550;
  double t8552;
  double t8554;
  double t8555;
  double t8558;
  double t8560;
  double t8561;
  double t8563;
  double t8564;
  double t8565;
  double t8582;
  double t8584;
  double t8585;
  double t8587;
  double t8588;
  double t8590;
  double t8598;
  double t8599;
  double t8600;
  double t8602;
  double t8603;
  double t8604;
  double t8607;
  double t8608;
  double t8609;
  double t8612;
  double t8614;
  double t8615;
  double t8619;
  double t8620;
  double t8622;
  double t8624;
  double t8625;
  double t8626;
  double t8663;
  double t8665;
  double t8666;
  double t8670;
  double t8671;
  double t8673;
  double t8674;
  double t8677;
  double t8680;
  double t8681;
  double t8682;
  double t8684;
  double t8685;
  double t8687;
  double t8693;
  double t8695;
  double t8696;
  double t8699;
  double t8700;
  double t8701;
  double t8646;
  double t8649;
  double t8653;
  double t8656;
  double t8661;
  double t8716;
  double t8717;
  double t8718;
  double t8721;
  double t8722;
  double t8723;
  double t8725;
  double t8726;
  double t8727;
  double t8730;
  double t8731;
  double t8732;
  double t8734;
  double t8735;
  double t8736;
  double t8739;
  double t8740;
  double t8741;
  double t8744;
  double t8745;
  double t8746;
  double t8748;
  double t8751;
  double t8752;
  double t8754;
  double t8755;
  double t8757;
  double t8772;
  double t8774;
  double t8775;
  double t8777;
  double t8779;
  double t8780;
  double t8782;
  double t8783;
  double t8784;
  double t8786;
  double t8787;
  double t8788;
  double t8793;
  double t8796;
  double t8797;
  double t8810;
  double t8811;
  double t8814;
  double t8816;
  double t8819;
  double t8821;
  double t8823;
  double t8824;
  double t8827;
  double t8830;
  double t8831;
  double t8833;
  double t8854;
  double t8855;
  double t8857;
  double t8858;
  double t8859;
  double t8861;
  double t8862;
  double t8865;
  double t8866;
  double t8869;
  double t8871;
  double t8872;
  double t8873;
  double t8846;
  double t8847;
  double t8848;
  double t8850;
  double t8851;
  double t8885;
  double t8886;
  double t8888;
  double t8893;
  double t8894;
  double t8897;
  double t8898;
  double t8900;
  double t8901;
  double t8902;
  double t8904;
  double t8905;
  double t8906;
  double t8910;
  double t8911;
  double t8913;
  double t8916;
  double t8917;
  double t8918;
  double t8932;
  double t8933;
  double t8934;
  double t8938;
  double t8939;
  double t8944;
  double t8945;
  double t8950;
  double t8951;
  double t8952;
  double t8956;
  double t8957;
  double t8959;
  double t8962;
  double t8963;
  double t8964;
  double t8966;
  double t8967;
  double t8968;
  double t8991;
  double t8992;
  double t8996;
  double t8997;
  double t8999;
  double t9000;
  double t9002;
  double t8983;
  double t8984;
  double t8987;
  double t8988;
  double t8989;
  double t9016;
  double t9018;
  double t9021;
  double t9023;
  double t9024;
  double t9027;
  double t9028;
  double t9030;
  double t9031;
  double t9034;
  double t9036;
  double t9037;
  double t9039;
  double t9054;
  double t9056;
  double t9057;
  double t9059;
  double t9060;
  double t9063;
  double t9064;
  double t9067;
  double t9068;
  double t9069;
  double t9071;
  double t9072;
  double t9073;
  double t9108;
  double t9109;
  double t5433;
  double t9093;
  double t9094;
  double t9095;
  double t9098;
  double t9099;
  double t9123;
  double t9124;
  double t9125;
  double t9128;
  double t9129;
  double t9131;
  double t9132;
  double t9148;
  double t9149;
  double t9150;
  double t9153;
  double t9154;
  double t9158;
  double t9159;
  double t9111;
  double t5437;
  double t5449;
  double t9175;
  double t9176;
  double t9178;
  double t9179;
  double t9182;
  double t9136;
  double t9191;
  double t9192;
  double t9194;
  double t9140;
  double t9163;
  double t9206;
  double t9207;
  double t9208;
  double t9168;
  t937 = Sin(var1[3]);
  t1058 = Cos(var1[13]);
  t1136 = -1.*t1058;
  t1181 = 1. + t1136;
  t1244 = Sin(var1[13]);
  t1338 = Cos(var1[3]);
  t1318 = Cos(var1[5]);
  t1323 = Sin(var1[4]);
  t1390 = Sin(var1[5]);
  t142 = Cos(var1[14]);
  t491 = -1.*t142;
  t529 = 1. + t491;
  t632 = Sin(var1[14]);
  t1332 = -1.*t1318*t937*t1323;
  t1479 = t1338*t1390;
  t1487 = t1332 + t1479;
  t1597 = -1.*t1338*t1318;
  t1645 = -1.*t937*t1323*t1390;
  t1684 = t1597 + t1645;
  t84 = Cos(var1[4]);
  t1849 = t1244*t1487;
  t1852 = t1058*t1684;
  t1861 = t1849 + t1852;
  t1877 = Cos(var1[15]);
  t1878 = -1.*t1877;
  t1890 = 1. + t1878;
  t1904 = Sin(var1[15]);
  t1941 = t1058*t1487;
  t1975 = -1.*t1244*t1684;
  t2122 = t1941 + t1975;
  t2445 = -1.*t142*t84*t937;
  t2447 = t632*t1861;
  t2494 = t2445 + t2447;
  t2554 = Cos(var1[16]);
  t2575 = -1.*t2554;
  t2602 = 1. + t2575;
  t2646 = Sin(var1[16]);
  t2810 = t1904*t2122;
  t2837 = t1877*t2494;
  t2893 = t2810 + t2837;
  t3025 = t1877*t2122;
  t3048 = -1.*t1904*t2494;
  t3051 = t3025 + t3048;
  t3110 = Cos(var1[17]);
  t3243 = -1.*t3110;
  t3259 = 1. + t3243;
  t3308 = Sin(var1[17]);
  t3396 = -1.*t2646*t2893;
  t3408 = t2554*t3051;
  t3444 = t3396 + t3408;
  t3517 = t2554*t2893;
  t3520 = t2646*t3051;
  t3526 = t3517 + t3520;
  t3610 = Cos(var1[18]);
  t3634 = -1.*t3610;
  t3662 = 1. + t3634;
  t3717 = Sin(var1[18]);
  t3756 = t3308*t3444;
  t3814 = t3110*t3526;
  t3825 = t3756 + t3814;
  t3836 = t3110*t3444;
  t3859 = -1.*t3308*t3526;
  t3866 = t3836 + t3859;
  t3897 = Cos(var1[19]);
  t3898 = -1.*t3897;
  t3908 = 1. + t3898;
  t3942 = Sin(var1[19]);
  t3997 = -1.*t3717*t3825;
  t4017 = t3610*t3866;
  t4048 = t3997 + t4017;
  t4132 = t3610*t3825;
  t4137 = t3717*t3866;
  t4160 = t4132 + t4137;
  t589 = -0.08055*t529;
  t670 = -0.135*t632;
  t705 = 0. + t589 + t670;
  t1229 = 0.07996*t1181;
  t1271 = 0.135*t1244;
  t1304 = 0. + t1229 + t1271;
  t1557 = -0.135*t1181;
  t1581 = 0.07996*t1244;
  t1591 = 0. + t1557 + t1581;
  t1803 = -0.135*t529;
  t1819 = 0.08055*t632;
  t1829 = 0. + t1803 + t1819;
  t4457 = t1338*t1318*t1323;
  t4464 = t937*t1390;
  t4474 = t4457 + t4464;
  t4486 = -1.*t1318*t937;
  t4494 = t1338*t1323*t1390;
  t4555 = t4486 + t4494;
  t1900 = -0.01004*t1890;
  t1914 = 0.08055*t1904;
  t1928 = 0. + t1900 + t1914;
  t4614 = t1244*t4474;
  t4621 = t1058*t4555;
  t4627 = t4614 + t4621;
  t2410 = -0.08055*t1890;
  t2427 = -0.01004*t1904;
  t2444 = 0. + t2410 + t2427;
  t2611 = -0.08055*t2602;
  t2648 = -0.13004*t2646;
  t2779 = 0. + t2611 + t2648;
  t4638 = t1058*t4474;
  t4648 = -1.*t1244*t4555;
  t4680 = t4638 + t4648;
  t4892 = t142*t1338*t84;
  t4893 = t632*t4627;
  t4895 = t4892 + t4893;
  t3013 = -0.13004*t2602;
  t3017 = 0.08055*t2646;
  t3024 = 0. + t3013 + t3017;
  t3298 = -0.19074*t3259;
  t3322 = 0.03315*t3308;
  t3356 = 0. + t3298 + t3322;
  t4914 = t1904*t4680;
  t4925 = t1877*t4895;
  t4935 = t4914 + t4925;
  t4993 = t1877*t4680;
  t5016 = -1.*t1904*t4895;
  t5024 = t4993 + t5016;
  t3476 = -0.03315*t3259;
  t3486 = -0.19074*t3308;
  t3487 = 0. + t3476 + t3486;
  t3689 = -0.01315*t3662;
  t3722 = -0.62554*t3717;
  t3749 = 0. + t3689 + t3722;
  t5057 = -1.*t2646*t4935;
  t5066 = t2554*t5024;
  t5069 = t5057 + t5066;
  t5129 = t2554*t4935;
  t5147 = t2646*t5024;
  t5150 = t5129 + t5147;
  t3832 = -0.62554*t3662;
  t3833 = 0.01315*t3717;
  t3834 = 0. + t3832 + t3833;
  t3926 = -1.03354*t3908;
  t3959 = 0.05315*t3942;
  t3996 = 0. + t3926 + t3959;
  t5164 = t3308*t5069;
  t5182 = t3110*t5150;
  t5183 = t5164 + t5182;
  t5260 = t3110*t5069;
  t5274 = -1.*t3308*t5150;
  t5287 = t5260 + t5274;
  t4059 = -0.05315*t3908;
  t4092 = -1.03354*t3942;
  t4112 = 0. + t4059 + t4092;
  t5299 = -1.*t3717*t5183;
  t5308 = t3610*t5287;
  t5311 = t5299 + t5308;
  t5326 = t3610*t5183;
  t5350 = t3717*t5287;
  t5374 = t5326 + t5350;
  t5591 = t1338*t84*t1318*t1244;
  t5596 = t1058*t1338*t84*t1390;
  t5601 = t5591 + t5596;
  t5628 = t1058*t1338*t84*t1318;
  t5653 = -1.*t1338*t84*t1244*t1390;
  t5671 = t5628 + t5653;
  t5733 = -1.*t142*t1338*t1323;
  t5734 = t632*t5601;
  t5752 = t5733 + t5734;
  t5756 = t1904*t5671;
  t5776 = t1877*t5752;
  t5783 = t5756 + t5776;
  t5812 = t1877*t5671;
  t5817 = -1.*t1904*t5752;
  t5826 = t5812 + t5817;
  t5834 = -1.*t2646*t5783;
  t5846 = t2554*t5826;
  t5851 = t5834 + t5846;
  t5913 = t2554*t5783;
  t5916 = t2646*t5826;
  t5917 = t5913 + t5916;
  t5930 = t3308*t5851;
  t5938 = t3110*t5917;
  t5947 = t5930 + t5938;
  t5965 = t3110*t5851;
  t5973 = -1.*t3308*t5917;
  t5976 = t5965 + t5973;
  t5984 = -1.*t3717*t5947;
  t5989 = t3610*t5976;
  t5991 = t5984 + t5989;
  t6002 = t3610*t5947;
  t6014 = t3717*t5976;
  t6029 = t6002 + t6014;
  t6137 = t84*t1318*t1244*t937;
  t6151 = t1058*t84*t937*t1390;
  t6154 = t6137 + t6151;
  t6164 = t1058*t84*t1318*t937;
  t6167 = -1.*t84*t1244*t937*t1390;
  t6178 = t6164 + t6167;
  t6239 = -1.*t142*t937*t1323;
  t6264 = t632*t6154;
  t6280 = t6239 + t6264;
  t6323 = t1904*t6178;
  t6359 = t1877*t6280;
  t6381 = t6323 + t6359;
  t6411 = t1877*t6178;
  t6425 = -1.*t1904*t6280;
  t6439 = t6411 + t6425;
  t6470 = -1.*t2646*t6381;
  t6477 = t2554*t6439;
  t6478 = t6470 + t6477;
  t6486 = t2554*t6381;
  t6508 = t2646*t6439;
  t6514 = t6486 + t6508;
  t6519 = t3308*t6478;
  t6523 = t3110*t6514;
  t6554 = t6519 + t6523;
  t6589 = t3110*t6478;
  t6615 = -1.*t3308*t6514;
  t6626 = t6589 + t6615;
  t6645 = -1.*t3717*t6554;
  t6659 = t3610*t6626;
  t6660 = t6645 + t6659;
  t6687 = t3610*t6554;
  t6702 = t3717*t6626;
  t6708 = t6687 + t6702;
  t6814 = -1.*t1318*t1244*t1323;
  t6820 = -1.*t1058*t1323*t1390;
  t6827 = t6814 + t6820;
  t6859 = -1.*t1058*t1318*t1323;
  t6861 = t1244*t1323*t1390;
  t6867 = t6859 + t6861;
  t6890 = -1.*t142*t84;
  t6916 = t632*t6827;
  t6930 = t6890 + t6916;
  t6992 = t1904*t6867;
  t7021 = t1877*t6930;
  t7023 = t6992 + t7021;
  t7026 = t1877*t6867;
  t7027 = -1.*t1904*t6930;
  t7030 = t7026 + t7027;
  t7063 = -1.*t2646*t7023;
  t7075 = t2554*t7030;
  t7093 = t7063 + t7075;
  t7108 = t2554*t7023;
  t7111 = t2646*t7030;
  t7112 = t7108 + t7111;
  t7120 = t3308*t7093;
  t7131 = t3110*t7112;
  t7138 = t7120 + t7131;
  t7151 = t3110*t7093;
  t7153 = -1.*t3308*t7112;
  t7154 = t7151 + t7153;
  t7183 = -1.*t3717*t7138;
  t7186 = t3610*t7154;
  t7196 = t7183 + t7186;
  t7200 = t3610*t7138;
  t7220 = t3717*t7154;
  t7226 = t7200 + t7220;
  t7318 = t1318*t937;
  t7321 = -1.*t1338*t1323*t1390;
  t7324 = t7318 + t7321;
  t7394 = t1244*t7324;
  t7414 = t4638 + t7394;
  t7333 = -1.*t1244*t4474;
  t7349 = t1058*t7324;
  t7353 = t7333 + t7349;
  t7447 = t1904*t7353;
  t7448 = t1877*t632*t7414;
  t7450 = t7447 + t7448;
  t7456 = t1877*t7353;
  t7459 = -1.*t632*t1904*t7414;
  t7463 = t7456 + t7459;
  t7471 = -1.*t2646*t7450;
  t7479 = t2554*t7463;
  t7489 = t7471 + t7479;
  t7510 = t2554*t7450;
  t7529 = t2646*t7463;
  t7543 = t7510 + t7529;
  t7568 = t3308*t7489;
  t7578 = t3110*t7543;
  t7591 = t7568 + t7578;
  t7603 = t3110*t7489;
  t7609 = -1.*t3308*t7543;
  t7615 = t7603 + t7609;
  t7631 = -1.*t3717*t7591;
  t7638 = t3610*t7615;
  t7643 = t7631 + t7638;
  t7661 = t3610*t7591;
  t7667 = t3717*t7615;
  t7668 = t7661 + t7667;
  t7727 = t1318*t937*t1323;
  t7760 = -1.*t1338*t1390;
  t7762 = t7727 + t7760;
  t7810 = t1058*t7762;
  t7821 = t1244*t1684;
  t7825 = t7810 + t7821;
  t7804 = -1.*t1244*t7762;
  t7807 = t7804 + t1852;
  t7836 = t1904*t7807;
  t7838 = t1877*t632*t7825;
  t7845 = t7836 + t7838;
  t7857 = t1877*t7807;
  t7859 = -1.*t632*t1904*t7825;
  t7860 = t7857 + t7859;
  t7869 = -1.*t2646*t7845;
  t7871 = t2554*t7860;
  t7881 = t7869 + t7871;
  t7919 = t2554*t7845;
  t7920 = t2646*t7860;
  t7922 = t7919 + t7920;
  t7924 = t3308*t7881;
  t7927 = t3110*t7922;
  t7934 = t7924 + t7927;
  t7954 = t3110*t7881;
  t7958 = -1.*t3308*t7922;
  t7961 = t7954 + t7958;
  t7967 = -1.*t3717*t7934;
  t7969 = t3610*t7961;
  t7975 = t7967 + t7969;
  t7985 = t3610*t7934;
  t7989 = t3717*t7961;
  t7990 = t7985 + t7989;
  t8054 = t1058*t84*t1318;
  t8058 = -1.*t84*t1244*t1390;
  t8065 = t8054 + t8058;
  t8048 = -1.*t84*t1318*t1244;
  t8049 = -1.*t1058*t84*t1390;
  t8050 = t8048 + t8049;
  t8084 = t1904*t8050;
  t8085 = t1877*t632*t8065;
  t8089 = t8084 + t8085;
  t8091 = t1877*t8050;
  t8092 = -1.*t632*t1904*t8065;
  t8093 = t8091 + t8092;
  t8095 = -1.*t2646*t8089;
  t8098 = t2554*t8093;
  t8111 = t8095 + t8098;
  t8115 = t2554*t8089;
  t8116 = t2646*t8093;
  t8117 = t8115 + t8116;
  t8129 = t3308*t8111;
  t8135 = t3110*t8117;
  t8138 = t8129 + t8135;
  t8142 = t3110*t8111;
  t8143 = -1.*t3308*t8117;
  t8148 = t8142 + t8143;
  t8152 = -1.*t3717*t8138;
  t8162 = t3610*t8148;
  t8163 = t8152 + t8162;
  t8165 = t3610*t8138;
  t8168 = t3717*t8148;
  t8172 = t8165 + t8168;
  t8244 = -1.*t1058*t4555;
  t8245 = t7333 + t8244;
  t8253 = t1904*t8245;
  t8256 = t1877*t632*t4680;
  t8257 = t8253 + t8256;
  t8261 = t1877*t8245;
  t8262 = -1.*t632*t1904*t4680;
  t8265 = t8261 + t8262;
  t8270 = -1.*t2646*t8257;
  t8274 = t2554*t8265;
  t8275 = t8270 + t8274;
  t8278 = t2554*t8257;
  t8280 = t2646*t8265;
  t8281 = t8278 + t8280;
  t8287 = t3308*t8275;
  t8292 = t3110*t8281;
  t8300 = t8287 + t8292;
  t8308 = t3110*t8275;
  t8309 = -1.*t3308*t8281;
  t8313 = t8308 + t8309;
  t8315 = -1.*t3717*t8300;
  t8318 = t3610*t8313;
  t8322 = t8315 + t8318;
  t8326 = t3610*t8300;
  t8327 = t3717*t8313;
  t8329 = t8326 + t8327;
  t8229 = 0.135*t1058;
  t8230 = t8229 + t1581;
  t8233 = 0.07996*t1058;
  t8234 = -0.135*t1244;
  t8235 = t8233 + t8234;
  t8360 = t1338*t1318;
  t8361 = t937*t1323*t1390;
  t8363 = t8360 + t8361;
  t8369 = -1.*t1244*t8363;
  t8370 = t7810 + t8369;
  t8365 = -1.*t1058*t8363;
  t8367 = t7804 + t8365;
  t8374 = t1904*t8367;
  t8375 = t1877*t632*t8370;
  t8376 = t8374 + t8375;
  t8378 = t1877*t8367;
  t8379 = -1.*t632*t1904*t8370;
  t8380 = t8378 + t8379;
  t8382 = -1.*t2646*t8376;
  t8383 = t2554*t8380;
  t8384 = t8382 + t8383;
  t8388 = t2554*t8376;
  t8389 = t2646*t8380;
  t8390 = t8388 + t8389;
  t8393 = t3308*t8384;
  t8394 = t3110*t8390;
  t8395 = t8393 + t8394;
  t8397 = t3110*t8384;
  t8399 = -1.*t3308*t8390;
  t8400 = t8397 + t8399;
  t8402 = -1.*t3717*t8395;
  t8403 = t3610*t8400;
  t8404 = t8402 + t8403;
  t8406 = t3610*t8395;
  t8407 = t3717*t8400;
  t8408 = t8406 + t8407;
  t8053 = t1928*t8050;
  t8071 = -0.1305*t142*t8065;
  t8074 = t1829*t8065;
  t8078 = t632*t2444*t8065;
  t8090 = t2779*t8089;
  t8094 = t3024*t8093;
  t8113 = t3356*t8111;
  t8120 = t3487*t8117;
  t8140 = t3749*t8138;
  t8149 = t3834*t8148;
  t8164 = t3996*t8163;
  t8174 = t4112*t8172;
  t8178 = t3942*t8163;
  t8186 = t3897*t8172;
  t8192 = t8178 + t8186;
  t8194 = -0.063247*t8192;
  t8198 = t3897*t8163;
  t8199 = -1.*t3942*t8172;
  t8200 = t8198 + t8199;
  t8227 = -1.109926*t8200;
  t4696 = -1.*t1338*t84*t632;
  t4753 = t142*t4627;
  t4769 = t4696 + t4753;
  t8443 = -1.*t2554*t1904*t4769;
  t8444 = -1.*t1877*t2646*t4769;
  t8445 = t8443 + t8444;
  t8448 = t1877*t2554*t4769;
  t8449 = -1.*t1904*t2646*t4769;
  t8450 = t8448 + t8449;
  t8453 = t3308*t8445;
  t8455 = t3110*t8450;
  t8456 = t8453 + t8455;
  t8458 = t3110*t8445;
  t8460 = -1.*t3308*t8450;
  t8461 = t8458 + t8460;
  t8464 = -1.*t3717*t8456;
  t8474 = t3610*t8461;
  t8477 = t8464 + t8474;
  t8487 = t3610*t8456;
  t8489 = t3717*t8461;
  t8492 = t8487 + t8489;
  t8425 = -0.135*t142;
  t8426 = -0.08055*t632;
  t8427 = t8425 + t8426;
  t8429 = 0.08055*t142;
  t8430 = t8429 + t670;
  t8508 = t1244*t7762;
  t8509 = t1058*t8363;
  t8511 = t8508 + t8509;
  t8515 = -1.*t84*t632*t937;
  t8517 = t142*t8511;
  t8521 = t8515 + t8517;
  t8534 = -1.*t2554*t1904*t8521;
  t8537 = -1.*t1877*t2646*t8521;
  t8538 = t8534 + t8537;
  t8543 = t1877*t2554*t8521;
  t8544 = -1.*t1904*t2646*t8521;
  t8546 = t8543 + t8544;
  t8548 = t3308*t8538;
  t8549 = t3110*t8546;
  t8550 = t8548 + t8549;
  t8552 = t3110*t8538;
  t8554 = -1.*t3308*t8546;
  t8555 = t8552 + t8554;
  t8558 = -1.*t3717*t8550;
  t8560 = t3610*t8555;
  t8561 = t8558 + t8560;
  t8563 = t3610*t8550;
  t8564 = t3717*t8555;
  t8565 = t8563 + t8564;
  t8582 = t84*t1318*t1244;
  t8584 = t1058*t84*t1390;
  t8585 = t8582 + t8584;
  t8587 = t632*t1323;
  t8588 = t142*t8585;
  t8590 = t8587 + t8588;
  t8598 = -1.*t2554*t1904*t8590;
  t8599 = -1.*t1877*t2646*t8590;
  t8600 = t8598 + t8599;
  t8602 = t1877*t2554*t8590;
  t8603 = -1.*t1904*t2646*t8590;
  t8604 = t8602 + t8603;
  t8607 = t3308*t8600;
  t8608 = t3110*t8604;
  t8609 = t8607 + t8608;
  t8612 = t3110*t8600;
  t8614 = -1.*t3308*t8604;
  t8615 = t8612 + t8614;
  t8619 = -1.*t3717*t8609;
  t8620 = t3610*t8615;
  t8622 = t8619 + t8620;
  t8624 = t3610*t8609;
  t8625 = t3717*t8615;
  t8626 = t8624 + t8625;
  t8663 = -1.*t1904*t4680;
  t8665 = -1.*t1877*t4895;
  t8666 = t8663 + t8665;
  t8670 = t2646*t8666;
  t8671 = t8670 + t5066;
  t8673 = t2554*t8666;
  t8674 = -1.*t2646*t5024;
  t8677 = t8673 + t8674;
  t8680 = -1.*t3308*t8671;
  t8681 = t3110*t8677;
  t8682 = t8680 + t8681;
  t8684 = t3110*t8671;
  t8685 = t3308*t8677;
  t8687 = t8684 + t8685;
  t8693 = t3717*t8682;
  t8695 = t3610*t8687;
  t8696 = t8693 + t8695;
  t8699 = t3610*t8682;
  t8700 = -1.*t3717*t8687;
  t8701 = t8699 + t8700;
  t8646 = 0.08055*t1877;
  t8649 = t8646 + t2427;
  t8653 = -0.01004*t1877;
  t8656 = -0.08055*t1904;
  t8661 = t8653 + t8656;
  t8716 = t142*t84*t937;
  t8717 = t632*t8511;
  t8718 = t8716 + t8717;
  t8721 = -1.*t1904*t8370;
  t8722 = -1.*t1877*t8718;
  t8723 = t8721 + t8722;
  t8725 = t1877*t8370;
  t8726 = -1.*t1904*t8718;
  t8727 = t8725 + t8726;
  t8730 = t2646*t8723;
  t8731 = t2554*t8727;
  t8732 = t8730 + t8731;
  t8734 = t2554*t8723;
  t8735 = -1.*t2646*t8727;
  t8736 = t8734 + t8735;
  t8739 = -1.*t3308*t8732;
  t8740 = t3110*t8736;
  t8741 = t8739 + t8740;
  t8744 = t3110*t8732;
  t8745 = t3308*t8736;
  t8746 = t8744 + t8745;
  t8748 = t3717*t8741;
  t8751 = t3610*t8746;
  t8752 = t8748 + t8751;
  t8754 = t3610*t8741;
  t8755 = -1.*t3717*t8746;
  t8757 = t8754 + t8755;
  t8772 = -1.*t142*t1323;
  t8774 = t632*t8585;
  t8775 = t8772 + t8774;
  t8777 = -1.*t1904*t8065;
  t8779 = -1.*t1877*t8775;
  t8780 = t8777 + t8779;
  t8782 = t1877*t8065;
  t8783 = -1.*t1904*t8775;
  t8784 = t8782 + t8783;
  t8786 = t2646*t8780;
  t8787 = t2554*t8784;
  t8788 = t8786 + t8787;
  t8793 = t2554*t8780;
  t8796 = -1.*t2646*t8784;
  t8797 = t8793 + t8796;
  t8810 = -1.*t3308*t8788;
  t8811 = t3110*t8797;
  t8814 = t8810 + t8811;
  t8816 = t3110*t8788;
  t8819 = t3308*t8797;
  t8821 = t8816 + t8819;
  t8823 = t3717*t8814;
  t8824 = t3610*t8821;
  t8827 = t8823 + t8824;
  t8830 = t3610*t8814;
  t8831 = -1.*t3717*t8821;
  t8833 = t8830 + t8831;
  t8854 = -1.*t2554*t4935;
  t8855 = t8854 + t8674;
  t8857 = -1.*t3308*t5069;
  t8858 = t3110*t8855;
  t8859 = t8857 + t8858;
  t8861 = t3308*t8855;
  t8862 = t5260 + t8861;
  t8865 = t3717*t8859;
  t8866 = t3610*t8862;
  t8869 = t8865 + t8866;
  t8871 = t3610*t8859;
  t8872 = -1.*t3717*t8862;
  t8873 = t8871 + t8872;
  t8846 = -0.13004*t2554;
  t8847 = -0.08055*t2646;
  t8848 = t8846 + t8847;
  t8850 = 0.08055*t2554;
  t8851 = t8850 + t2648;
  t8885 = t1904*t8370;
  t8886 = t1877*t8718;
  t8888 = t8885 + t8886;
  t8893 = -1.*t2646*t8888;
  t8894 = t8893 + t8731;
  t8897 = -1.*t2554*t8888;
  t8898 = t8897 + t8735;
  t8900 = -1.*t3308*t8894;
  t8901 = t3110*t8898;
  t8902 = t8900 + t8901;
  t8904 = t3110*t8894;
  t8905 = t3308*t8898;
  t8906 = t8904 + t8905;
  t8910 = t3717*t8902;
  t8911 = t3610*t8906;
  t8913 = t8910 + t8911;
  t8916 = t3610*t8902;
  t8917 = -1.*t3717*t8906;
  t8918 = t8916 + t8917;
  t8932 = t1904*t8065;
  t8933 = t1877*t8775;
  t8934 = t8932 + t8933;
  t8938 = -1.*t2646*t8934;
  t8939 = t8938 + t8787;
  t8944 = -1.*t2554*t8934;
  t8945 = t8944 + t8796;
  t8950 = -1.*t3308*t8939;
  t8951 = t3110*t8945;
  t8952 = t8950 + t8951;
  t8956 = t3110*t8939;
  t8957 = t3308*t8945;
  t8959 = t8956 + t8957;
  t8962 = t3717*t8952;
  t8963 = t3610*t8959;
  t8964 = t8962 + t8963;
  t8966 = t3610*t8952;
  t8967 = -1.*t3717*t8959;
  t8968 = t8966 + t8967;
  t8991 = -1.*t3110*t5150;
  t8992 = t8857 + t8991;
  t8996 = t3717*t8992;
  t8997 = t8996 + t5308;
  t8999 = t3610*t8992;
  t9000 = -1.*t3717*t5287;
  t9002 = t8999 + t9000;
  t8983 = 0.03315*t3110;
  t8984 = t8983 + t3486;
  t8987 = -0.19074*t3110;
  t8988 = -0.03315*t3308;
  t8989 = t8987 + t8988;
  t9016 = t2554*t8888;
  t9018 = t2646*t8727;
  t9021 = t9016 + t9018;
  t9023 = -1.*t3110*t9021;
  t9024 = t8900 + t9023;
  t9027 = -1.*t3308*t9021;
  t9028 = t8904 + t9027;
  t9030 = t3717*t9024;
  t9031 = t3610*t9028;
  t9034 = t9030 + t9031;
  t9036 = t3610*t9024;
  t9037 = -1.*t3717*t9028;
  t9039 = t9036 + t9037;
  t9054 = t2554*t8934;
  t9056 = t2646*t8784;
  t9057 = t9054 + t9056;
  t9059 = -1.*t3110*t9057;
  t9060 = t8950 + t9059;
  t9063 = -1.*t3308*t9057;
  t9064 = t8956 + t9063;
  t9067 = t3717*t9060;
  t9068 = t3610*t9064;
  t9069 = t9067 + t9068;
  t9071 = t3610*t9060;
  t9072 = -1.*t3717*t9064;
  t9073 = t9071 + t9072;
  t9108 = -1.*t3610*t5183;
  t9109 = t9108 + t9000;
  t5433 = t3897*t5311;
  t9093 = -0.62554*t3610;
  t9094 = -0.01315*t3717;
  t9095 = t9093 + t9094;
  t9098 = 0.01315*t3610;
  t9099 = t9098 + t3722;
  t9123 = t3308*t8894;
  t9124 = t3110*t9021;
  t9125 = t9123 + t9124;
  t9128 = -1.*t3717*t9125;
  t9129 = t9128 + t9031;
  t9131 = -1.*t3610*t9125;
  t9132 = t9131 + t9037;
  t9148 = t3308*t8939;
  t9149 = t3110*t9057;
  t9150 = t9148 + t9149;
  t9153 = -1.*t3717*t9150;
  t9154 = t9153 + t9068;
  t9158 = -1.*t3610*t9150;
  t9159 = t9158 + t9072;
  t9111 = -1.*t3942*t5311;
  t5437 = -1.*t3942*t5374;
  t5449 = t5433 + t5437;
  t9175 = 0.05315*t3897;
  t9176 = t9175 + t4092;
  t9178 = -1.03354*t3897;
  t9179 = -0.05315*t3942;
  t9182 = t9178 + t9179;
  t9136 = -1.*t3942*t9129;
  t9191 = t3610*t9125;
  t9192 = t3717*t9028;
  t9194 = t9191 + t9192;
  t9140 = t3897*t9129;
  t9163 = -1.*t3942*t9154;
  t9206 = t3610*t9150;
  t9207 = t3717*t9064;
  t9208 = t9206 + t9207;
  t9168 = t3897*t9154;
  p_output1[0]=1.;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=0;
  p_output1[4]=1.;
  p_output1[5]=0;
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=1.;
  p_output1[9]=t1304*t1487 + t1591*t1684 + t1829*t1861 + t1928*t2122 + t2444*t2494 + t2779*t2893 + t3024*t3051 + t3356*t3444 + t3487*t3526 + t3749*t3825 + t3834*t3866 + t3996*t4048 + t4112*t4160 - 0.063247*(t3942*t4048 + t3897*t4160) - 1.109926*(t3897*t4048 - 1.*t3942*t4160) - 1.*t705*t84*t937 - 0.1305*(t142*t1861 + t632*t84*t937);
  p_output1[10]=t1304*t4474 + t1591*t4555 + t1829*t4627 + t1928*t4680 - 0.1305*t4769 + t2444*t4895 + t2779*t4935 + t3024*t5024 + t3356*t5069 + t3487*t5150 + t3749*t5183 + t3834*t5287 + t3996*t5311 + t4112*t5374 - 0.063247*(t3942*t5311 + t3897*t5374) - 1.109926*t5449 + t1338*t705*t84;
  p_output1[11]=0;
  p_output1[12]=t1829*t5601 + t1928*t5671 + t2444*t5752 + t2779*t5783 + t3024*t5826 + t3356*t5851 + t3487*t5917 + t3749*t5947 + t3834*t5976 + t3996*t5991 + t4112*t6029 - 0.063247*(t3942*t5991 + t3897*t6029) - 1.109926*(t3897*t5991 - 1.*t3942*t6029) - 0.1305*(t142*t5601 + t1323*t1338*t632) - 1.*t1323*t1338*t705 + t1304*t1318*t1338*t84 + t1338*t1390*t1591*t84;
  p_output1[13]=t1829*t6154 + t1928*t6178 + t2444*t6280 + t2779*t6381 + t3024*t6439 + t3356*t6478 + t3487*t6514 + t3749*t6554 + t3834*t6626 + t3996*t6660 + t4112*t6708 - 0.063247*(t3942*t6660 + t3897*t6708) - 1.109926*(t3897*t6660 - 1.*t3942*t6708) - 1.*t1323*t705*t937 + t1304*t1318*t84*t937 + t1390*t1591*t84*t937 - 0.1305*(t142*t6154 + t1323*t632*t937);
  p_output1[14]=-1.*t1304*t1318*t1323 - 1.*t1323*t1390*t1591 + t1829*t6827 + t1928*t6867 + t2444*t6930 + t2779*t7023 + t3024*t7030 + t3356*t7093 + t3487*t7112 + t3749*t7138 + t3834*t7154 + t3996*t7196 + t4112*t7226 - 0.063247*(t3942*t7196 + t3897*t7226) - 1.109926*(t3897*t7196 - 1.*t3942*t7226) - 1.*t705*t84 - 0.1305*(t142*t6827 + t632*t84);
  p_output1[15]=t1591*t4474 + t1304*t7324 + t1928*t7353 - 0.1305*t142*t7414 + t1829*t7414 + t2444*t632*t7414 + t2779*t7450 + t3024*t7463 + t3356*t7489 + t3487*t7543 + t3749*t7591 + t3834*t7615 + t3996*t7643 + t4112*t7668 - 0.063247*(t3942*t7643 + t3897*t7668) - 1.109926*(t3897*t7643 - 1.*t3942*t7668);
  p_output1[16]=t1304*t1684 + t1591*t7762 + t1928*t7807 - 0.1305*t142*t7825 + t1829*t7825 + t2444*t632*t7825 + t2779*t7845 + t3024*t7860 + t3356*t7881 + t3487*t7922 + t3749*t7934 + t3834*t7961 + t3996*t7975 + t4112*t7990 - 0.063247*(t3942*t7975 + t3897*t7990) - 1.109926*(t3897*t7975 - 1.*t3942*t7990);
  p_output1[17]=t8053 + t8071 + t8074 + t8078 + t8090 + t8094 + t8113 + t8120 + t8140 + t8149 + t8164 + t8174 + t8194 + t8227 - 1.*t1304*t1390*t84 + t1318*t1591*t84;
  p_output1[18]=0;
  p_output1[19]=0;
  p_output1[20]=0;
  p_output1[21]=0;
  p_output1[22]=0;
  p_output1[23]=0;
  p_output1[24]=0;
  p_output1[25]=0;
  p_output1[26]=0;
  p_output1[27]=0;
  p_output1[28]=0;
  p_output1[29]=0;
  p_output1[30]=0;
  p_output1[31]=0;
  p_output1[32]=0;
  p_output1[33]=0;
  p_output1[34]=0;
  p_output1[35]=0;
  p_output1[36]=0;
  p_output1[37]=0;
  p_output1[38]=0;
  p_output1[39]=-0.1305*t142*t4680 + t1829*t4680 + t2444*t4680*t632 + t4474*t8230 + t4555*t8235 + t1928*t8245 + t2779*t8257 + t3024*t8265 + t3356*t8275 + t3487*t8281 + t3749*t8300 + t3834*t8313 + t3996*t8322 + t4112*t8329 - 0.063247*(t3942*t8322 + t3897*t8329) - 1.109926*(t3897*t8322 - 1.*t3942*t8329);
  p_output1[40]=t7762*t8230 + t8235*t8363 + t1928*t8367 - 0.1305*t142*t8370 + t1829*t8370 + t2444*t632*t8370 + t2779*t8376 + t3024*t8380 + t3356*t8384 + t3487*t8390 + t3749*t8395 + t3834*t8400 + t3996*t8404 + t4112*t8408 - 0.063247*(t3942*t8404 + t3897*t8408) - 1.109926*(t3897*t8404 - 1.*t3942*t8408);
  p_output1[41]=t8053 + t8071 + t8074 + t8078 + t8090 + t8094 + t8113 + t8120 + t8140 + t8149 + t8164 + t8174 + t8194 + t8227 + t1318*t8230*t84 + t1390*t8235*t84;
  p_output1[42]=t2444*t4769 + t1877*t2779*t4769 - 1.*t1904*t3024*t4769 - 0.1305*(-1.*t4627*t632 - 1.*t1338*t142*t84) + t1338*t84*t8427 + t4627*t8430 + t3356*t8445 + t3487*t8450 + t3749*t8456 + t3834*t8461 + t3996*t8477 + t4112*t8492 - 0.063247*(t3942*t8477 + t3897*t8492) - 1.109926*(t3897*t8477 - 1.*t3942*t8492);
  p_output1[43]=t8430*t8511 - 0.1305*(t2445 - 1.*t632*t8511) + t2444*t8521 + t1877*t2779*t8521 - 1.*t1904*t3024*t8521 + t3356*t8538 + t3487*t8546 + t3749*t8550 + t3834*t8555 + t3996*t8561 + t4112*t8565 - 0.063247*(t3942*t8561 + t3897*t8565) - 1.109926*(t3897*t8561 - 1.*t3942*t8565) + t84*t8427*t937;
  p_output1[44]=-1.*t1323*t8427 + t8430*t8585 - 0.1305*(t1323*t142 - 1.*t632*t8585) + t2444*t8590 + t1877*t2779*t8590 - 1.*t1904*t3024*t8590 + t3356*t8600 + t3487*t8604 + t3749*t8609 + t3834*t8615 + t3996*t8622 + t4112*t8626 - 0.063247*(t3942*t8622 + t3897*t8626) - 1.109926*(t3897*t8622 - 1.*t3942*t8626);
  p_output1[45]=t2779*t5024 + t4680*t8649 + t4895*t8661 + t3024*t8666 + t3487*t8671 + t3356*t8677 + t3834*t8682 + t3749*t8687 + t4112*t8696 + t3996*t8701 - 1.109926*(-1.*t3942*t8696 + t3897*t8701) - 0.063247*(t3897*t8696 + t3942*t8701);
  p_output1[46]=t8370*t8649 + t8661*t8718 + t3024*t8723 + t2779*t8727 + t3487*t8732 + t3356*t8736 + t3834*t8741 + t3749*t8746 + t4112*t8752 + t3996*t8757 - 1.109926*(-1.*t3942*t8752 + t3897*t8757) - 0.063247*(t3897*t8752 + t3942*t8757);
  p_output1[47]=t8065*t8649 + t8661*t8775 + t3024*t8780 + t2779*t8784 + t3487*t8788 + t3356*t8797 + t3834*t8814 + t3749*t8821 + t4112*t8827 + t3996*t8833 - 1.109926*(-1.*t3942*t8827 + t3897*t8833) - 0.063247*(t3897*t8827 + t3942*t8833);
  p_output1[48]=t3487*t5069 + t4935*t8848 + t5024*t8851 + t3356*t8855 + t3834*t8859 + t3749*t8862 + t4112*t8869 + t3996*t8873 - 1.109926*(-1.*t3942*t8869 + t3897*t8873) - 0.063247*(t3897*t8869 + t3942*t8873);
  p_output1[49]=t8727*t8851 + t8848*t8888 + t3487*t8894 + t3356*t8898 + t3834*t8902 + t3749*t8906 + t4112*t8913 + t3996*t8918 - 1.109926*(-1.*t3942*t8913 + t3897*t8918) - 0.063247*(t3897*t8913 + t3942*t8918);
  p_output1[50]=t8784*t8851 + t8848*t8934 + t3487*t8939 + t3356*t8945 + t3834*t8952 + t3749*t8959 + t4112*t8964 + t3996*t8968 - 1.109926*(-1.*t3942*t8964 + t3897*t8968) - 0.063247*(t3897*t8964 + t3942*t8968);
  p_output1[51]=t3749*t5287 + t5069*t8984 + t5150*t8989 + t3834*t8992 + t4112*t8997 + t3996*t9002 - 1.109926*(-1.*t3942*t8997 + t3897*t9002) - 0.063247*(t3897*t8997 + t3942*t9002);
  p_output1[52]=t8894*t8984 + t8989*t9021 + t3834*t9024 + t3749*t9028 + t4112*t9034 + t3996*t9039 - 1.109926*(-1.*t3942*t9034 + t3897*t9039) - 0.063247*(t3897*t9034 + t3942*t9039);
  p_output1[53]=t8939*t8984 + t8989*t9057 + t3834*t9060 + t3749*t9064 + t4112*t9069 + t3996*t9073 - 1.109926*(-1.*t3942*t9069 + t3897*t9073) - 0.063247*(t3897*t9069 + t3942*t9073);
  p_output1[54]=t4112*t5311 + t5183*t9095 + t5287*t9099 + t3996*t9109 - 0.063247*(t5433 + t3942*t9109) - 1.109926*(t3897*t9109 + t9111);
  p_output1[55]=t9028*t9099 + t9095*t9125 + t4112*t9129 + t3996*t9132 - 1.109926*(t3897*t9132 + t9136) - 0.063247*(t3942*t9132 + t9140);
  p_output1[56]=t9064*t9099 + t9095*t9150 + t4112*t9154 + t3996*t9159 - 1.109926*(t3897*t9159 + t9163) - 0.063247*(t3942*t9159 + t9168);
  p_output1[57]=-0.063247*t5449 - 1.109926*(-1.*t3897*t5374 + t9111) + t5311*t9176 + t5374*t9182;
  p_output1[58]=t9129*t9176 + t9182*t9194 - 1.109926*(t9136 - 1.*t3897*t9194) - 0.063247*(t9140 - 1.*t3942*t9194);
  p_output1[59]=t9154*t9176 + t9182*t9208 - 1.109926*(t9163 - 1.*t3897*t9208) - 0.063247*(t9168 - 1.*t3942*t9208);
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "One input(s) required (var1).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 20 && ncols == 1) && 
      !(mrows == 1 && ncols == 20))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 3, (mwSize) 20, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1);


}

#else // MATLAB_MEX_FILE

#include "Jp_RightToeBottomBack_mex.hh"

namespace SymExpression
{

void Jp_RightToeBottomBack_mex_raw(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}

}

#endif // MATLAB_MEX_FILE
