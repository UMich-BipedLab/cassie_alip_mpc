/*
 * Automatically Generated from Mathematica.
 * Mon 11 May 2020 22:24:34 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t461;
  double t1691;
  double t1827;
  double t1650;
  double t1835;
  double t987;
  double t1226;
  double t1567;
  double t1804;
  double t1847;
  double t1926;
  double t2006;
  double t2213;
  double t2421;
  double t2598;
  double t2679;
  double t2761;
  double t2797;
  double t367;
  double t2950;
  double t3018;
  double t3019;
  double t2929;
  double t3752;
  double t4663;
  double t4700;
  double t4771;
  double t3529;
  double t3558;
  double t3629;
  double t3896;
  double t3928;
  double t5188;
  double t5284;
  double t5291;
  double t5971;
  double t6001;
  double t4119;
  double t5844;
  double t5931;
  double t5966;
  double t6097;
  double t6100;
  double t4875;
  double t4940;
  double t5008;
  double t5102;
  double t5116;
  double t5347;
  double t5430;
  double t5457;
  double t6141;
  double t6155;
  double t6053;
  double t6059;
  double t6064;
  double t6087;
  double t6089;
  double t2887;
  double t6382;
  double t6389;
  double t6391;
  double t6448;
  double t6474;
  double t6485;
  double t6511;
  double t6512;
  double t6514;
  double t6585;
  double t6587;
  double t6590;
  double t6739;
  double t6749;
  double t6765;
  double t6708;
  double t6713;
  double t6715;
  double t6395;
  double t6402;
  double t6769;
  double t6789;
  double t6790;
  double t6849;
  double t6850;
  double t6853;
  double t6878;
  double t6884;
  double t6888;
  double t1133;
  double t1228;
  double t1494;
  double t2886;
  double t2906;
  double t6928;
  double t6943;
  double t6949;
  double t6952;
  double t6958;
  double t6959;
  double t6963;
  double t6979;
  double t6983;
  double t6988;
  double t7003;
  double t7022;
  double t7074;
  double t7076;
  double t7078;
  double t7090;
  double t7128;
  double t4085;
  double t4170;
  double t4402;
  double t4403;
  double t4447;
  double t7254;
  double t7259;
  double t7282;
  double t7283;
  double t7330;
  double t7331;
  double t7337;
  double t7354;
  double t7359;
  double t7360;
  double t7385;
  double t7387;
  double t7389;
  double t6652;
  double t6660;
  double t6666;
  double t6591;
  double t6600;
  double t6603;
  double t6622;
  double t6623;
  double t7470;
  double t7472;
  double t7475;
  double t7343;
  double t7345;
  double t7348;
  double t7548;
  double t7550;
  double t7555;
  double t7541;
  double t7543;
  double t7545;
  double t7556;
  double t7558;
  double t7559;
  double t7560;
  double t7566;
  double t7569;
  double t7570;
  double t7577;
  double t7580;
  double t7408;
  double t7409;
  double t7410;
  double t6356;
  double t6358;
  double t6392;
  double t6417;
  double t6423;
  double t6436;
  double t6439;
  double t6445;
  double t6486;
  double t6518;
  double t6520;
  double t6528;
  double t6537;
  double t6542;
  double t6551;
  double t6562;
  double t6563;
  double t6580;
  double t6582;
  double t6792;
  double t7645;
  double t7655;
  double t7660;
  double t6815;
  double t7677;
  double t7685;
  double t7688;
  double t7689;
  double t7690;
  double t7722;
  double t7724;
  double t7725;
  double t7732;
  double t7735;
  double t7742;
  double t7756;
  double t7759;
  double t7761;
  double t7763;
  double t7764;
  double t7765;
  double t7766;
  double t7769;
  double t7776;
  double t7777;
  double t7779;
  double t7780;
  double t7782;
  double t7783;
  double t7784;
  double t7321;
  double t7329;
  double t7339;
  double t7342;
  double t7352;
  double t7383;
  double t7394;
  double t7398;
  double t7399;
  double t7402;
  double t7407;
  double t7411;
  double t7419;
  double t7800;
  double t7801;
  double t7804;
  double t7435;
  double t7884;
  double t7890;
  double t7894;
  double t7899;
  double t7900;
  double t7904;
  double t7906;
  double t7908;
  double t8011;
  double t8020;
  double t8022;
  double t8030;
  double t8055;
  double t8059;
  double t8139;
  double t8143;
  double t8146;
  double t8177;
  double t8183;
  double t8196;
  double t8148;
  double t8150;
  double t8154;
  double t8199;
  double t8203;
  double t8210;
  double t8211;
  double t8212;
  double t8213;
  double t8224;
  double t8225;
  double t8232;
  double t8253;
  double t8254;
  double t8268;
  double t8297;
  double t8298;
  double t8299;
  double t8306;
  double t8310;
  double t8320;
  double t8424;
  double t8431;
  double t8438;
  double t7539;
  double t7540;
  double t7592;
  double t6722;
  double t6766;
  double t6791;
  double t6889;
  double t6893;
  double t6901;
  double t8560;
  double t8561;
  double t7203;
  double t7212;
  double t7219;
  double t6076;
  double t6091;
  double t6102;
  double t6121;
  double t6140;
  double t6168;
  double t6180;
  double t6212;
  double t6216;
  double t6230;
  double t6263;
  double t6266;
  double t6270;
  double t6289;
  double t6293;
  double t8592;
  double t8594;
  double t8595;
  double t8596;
  double t8598;
  double t8599;
  double t7754;
  double t7755;
  double t7788;
  double t8614;
  double t8615;
  double t8624;
  double t8628;
  double t7428;
  double t7432;
  double t7433;
  double t7450;
  double t7457;
  double t7060;
  double t7068;
  double t7083;
  double t7084;
  double t7086;
  double t7144;
  double t7179;
  double t7185;
  double t7186;
  double t7187;
  double t7221;
  double t7222;
  double t8684;
  double t8686;
  double t8689;
  double t8250;
  double t8251;
  double t8273;
  double t8323;
  double t8338;
  double t8345;
  double t8698;
  double t8699;
  double t8700;
  double t8701;
  double t8702;
  double t8704;
  double t8705;
  double t8708;
  double t8122;
  double t8137;
  double t8234;
  double t7597;
  double t7604;
  double t7608;
  double t8554;
  double t8556;
  double t8557;
  double t8558;
  double t8559;
  double t8563;
  double t8564;
  double t8565;
  double t8566;
  double t8567;
  double t8568;
  double t8569;
  double t8571;
  double t8572;
  double t8573;
  double t8768;
  double t8769;
  double t7303;
  double t7306;
  double t7310;
  double t4236;
  double t4647;
  double t4848;
  double t5120;
  double t5187;
  double t5491;
  double t5538;
  double t5603;
  double t5642;
  double t5710;
  double t5711;
  double t5713;
  double t5722;
  double t5790;
  double t5791;
  double t8795;
  double t8798;
  double t7792;
  double t7795;
  double t7796;
  double t8612;
  double t8613;
  double t8618;
  double t8620;
  double t8621;
  double t8629;
  double t8631;
  double t8635;
  double t8636;
  double t8641;
  double t8642;
  double t8643;
  double t8644;
  double t8645;
  double t8646;
  double t8754;
  double t8757;
  double t8760;
  double t8814;
  double t8815;
  double t8821;
  double t7239;
  double t7248;
  double t7260;
  double t7264;
  double t7266;
  double t7286;
  double t7298;
  double t7299;
  double t7300;
  double t7302;
  double t7311;
  double t7313;
  double t8690;
  double t8691;
  double t8692;
  double t8693;
  double t8694;
  double t8696;
  double t8697;
  double t8713;
  double t8711;
  double t8714;
  double t8717;
  double t8722;
  double t8724;
  double t8725;
  double t8728;
  double t8729;
  double t8730;
  double t8731;
  double t8732;
  double t8733;
  double t8735;
  double t8736;
  double t8242;
  double t8243;
  double t8246;
  double t8525;
  double t8527;
  double t8528;
  double t8529;
  double t8530;
  double t8532;
  double t8739;
  double t8741;
  double t8742;
  double t8745;
  double t8746;
  double t8748;
  double t1516;
  double t2917;
  double t3245;
  double t3343;
  double t3360;
  double t3382;
  double t3391;
  double t3952;
  double t3990;
  double t3994;
  double t7516;
  double t7519;
  double t7522;
  double t7526;
  double t7529;
  double t7530;
  double t7532;
  double t7533;
  double t7534;
  double t7535;
  double t7030;
  double t7037;
  double t8601;
  double t8602;
  double t8603;
  double t8604;
  double t8605;
  double t8608;
  double t8801;
  double t8802;
  double t8804;
  double t8806;
  double t8807;
  double t8808;
  double t6927;
  double t6984;
  double t7023;
  double t7038;
  double t7051;
  double t7052;
  double t7054;
  double t8914;
  double t8915;
  double t8916;
  double t8917;
  double t8918;
  double t7719;
  double t7731;
  double t7744;
  double t7745;
  double t7746;
  double t7747;
  double t7748;
  double t7749;
  double t7750;
  double t8894;
  double t8895;
  double t8896;
  double t8932;
  double t8934;
  double t8009;
  double t8026;
  double t8061;
  double t8063;
  double t8076;
  double t8081;
  double t8091;
  double t8097;
  double t8098;
  double t8104;
  double t8944;
  double t8945;
  double t8946;
  double t8948;
  double t8949;
  double t8950;
  double t8280;
  double t8961;
  double t8963;
  double t8886;
  double t8888;
  double t8889;
  double t8890;
  double t8575;
  double t8577;
  double t8579;
  double t8580;
  double t8582;
  double t8586;
  double t8587;
  double t8588;
  double t8783;
  double t8784;
  double t8785;
  double t8786;
  double t8787;
  double t8788;
  double t8789;
  double t8790;
  double t7611;
  double t7613;
  double t7615;
  double t7616;
  double t7617;
  double t7619;
  double t7624;
  double t7629;
  double t6606;
  double t6627;
  double t6634;
  double t6639;
  double t6644;
  double t6651;
  double t6677;
  double t6700;
  double t7484;
  double t7485;
  double t7487;
  double t8919;
  double t8920;
  double t8921;
  double t8922;
  double t8662;
  double t8666;
  double t8667;
  double t8668;
  double t8669;
  double t8673;
  double t8675;
  double t8678;
  double t8679;
  double t8680;
  double t8681;
  double t8853;
  double t8854;
  double t8856;
  double t8857;
  double t8864;
  double t8865;
  double t8867;
  double t8870;
  double t8872;
  double t8873;
  double t8874;
  double t7807;
  double t7814;
  double t7815;
  double t7822;
  double t7831;
  double t7832;
  double t7852;
  double t7855;
  double t7866;
  double t7873;
  double t7874;
  double t8987;
  double t8990;
  double t8991;
  double t9011;
  double t9012;
  double t7478;
  double t7480;
  double t7500;
  double t7502;
  double t7506;
  double t7507;
  double t7508;
  double t7509;
  double t8951;
  double t8952;
  double t8953;
  double t8954;
  double t9045;
  double t9046;
  double t9050;
  double t8443;
  double t8446;
  double t8447;
  double t8459;
  double t8464;
  double t8466;
  double t8467;
  double t8484;
  double t8485;
  double t8486;
  double t8495;
  t461 = Sin(var1[3]);
  t1691 = Cos(var1[5]);
  t1827 = Sin(var1[4]);
  t1650 = Cos(var1[3]);
  t1835 = Sin(var1[5]);
  t987 = Cos(var1[7]);
  t1226 = Sin(var1[7]);
  t1567 = Cos(var1[6]);
  t1804 = -1.*t1650*t1691;
  t1847 = -1.*t461*t1827*t1835;
  t1926 = t1804 + t1847;
  t2006 = t1567*t1926;
  t2213 = -1.*t1691*t461*t1827;
  t2421 = t1650*t1835;
  t2598 = t2213 + t2421;
  t2679 = Sin(var1[6]);
  t2761 = t2598*t2679;
  t2797 = t2006 + t2761;
  t367 = Cos(var1[4]);
  t2950 = t987*t2797;
  t3018 = t367*t461*t1226;
  t3019 = t2950 + t3018;
  t2929 = Cos(var1[8]);
  t3752 = Sin(var1[8]);
  t4663 = t1567*t2598;
  t4700 = -1.*t1926*t2679;
  t4771 = t4663 + t4700;
  t3529 = -1.*t2929;
  t3558 = 1. + t3529;
  t3629 = -0.08055*t3558;
  t3896 = -0.01004*t3752;
  t3928 = 0. + t3629 + t3896;
  t5188 = -1.*t1567*t1926;
  t5284 = -1.*t2598*t2679;
  t5291 = t5188 + t5284;
  t5971 = -1.*t1567;
  t6001 = 1. + t5971;
  t4119 = 0.07996*t2679;
  t5844 = t1650*t1691;
  t5931 = t461*t1827*t1835;
  t5966 = t5844 + t5931;
  t6097 = t5966*t2679;
  t6100 = t4663 + t6097;
  t4875 = -1.*t987;
  t4940 = 1. + t4875;
  t5008 = 0.135*t4940;
  t5102 = 0.08055*t1226;
  t5116 = 0. + t5008 + t5102;
  t5347 = -0.01004*t3558;
  t5430 = 0.08055*t3752;
  t5457 = 0. + t5347 + t5430;
  t6141 = t1567*t5966;
  t6155 = t6141 + t5284;
  t6053 = 0.07996*t6001;
  t6059 = -0.135*t2679;
  t6064 = 0. + t6053 + t6059;
  t6087 = 0.135*t6001;
  t6089 = 0. + t6087 + t4119;
  t2887 = 0.135*t1226;
  t6382 = -1.*t367*t1567*t461*t1835;
  t6389 = -1.*t367*t1691*t461*t2679;
  t6391 = t6382 + t6389;
  t6448 = t987*t461*t1827;
  t6474 = t6391*t1226;
  t6485 = t6448 + t6474;
  t6511 = -1.*t367*t1691*t1567*t461;
  t6512 = t367*t461*t1835*t2679;
  t6514 = t6511 + t6512;
  t6585 = -1.*t367*t987*t461;
  t6587 = t2797*t1226;
  t6590 = t6585 + t6587;
  t6739 = t1691*t461;
  t6749 = -1.*t1650*t1827*t1835;
  t6765 = t6739 + t6749;
  t6708 = -1.*t1650*t1691*t1827;
  t6713 = -1.*t461*t1835;
  t6715 = t6708 + t6713;
  t6395 = -0.08055*t4940;
  t6402 = 0. + t6395 + t2887;
  t6769 = t1567*t6765;
  t6789 = t6715*t2679;
  t6790 = t6769 + t6789;
  t6849 = -1.*t1650*t367*t987;
  t6850 = t6790*t1226;
  t6853 = t6849 + t6850;
  t6878 = t1567*t6715;
  t6884 = -1.*t6765*t2679;
  t6888 = t6878 + t6884;
  t1133 = 0.135*t987;
  t1228 = -0.08055*t1226;
  t1494 = t1133 + t1228;
  t2886 = 0.08055*t987;
  t2906 = t2886 + t2887;
  t6928 = -1.*t1691*t461;
  t6943 = t1650*t1827*t1835;
  t6949 = t6928 + t6943;
  t6952 = t1567*t6949;
  t6958 = t1650*t1691*t1827;
  t6959 = t461*t1835;
  t6963 = t6958 + t6959;
  t6979 = t6963*t2679;
  t6983 = t6952 + t6979;
  t6988 = t987*t6983;
  t7003 = -1.*t1650*t367*t1226;
  t7022 = t6988 + t7003;
  t7074 = t1567*t6963;
  t7076 = t6765*t2679;
  t7078 = t7074 + t7076;
  t7090 = -1.*t6963*t2679;
  t7128 = t6769 + t7090;
  t4085 = -0.135*t1567;
  t4170 = t4085 + t4119;
  t4402 = 0.07996*t1567;
  t4403 = 0.135*t2679;
  t4447 = t4402 + t4403;
  t7254 = -1.*t6949*t2679;
  t7259 = t7074 + t7254;
  t7282 = -1.*t1567*t6949;
  t7283 = t7282 + t7090;
  t7330 = t1650*t367*t1567*t1835;
  t7331 = t1650*t367*t1691*t2679;
  t7337 = t7330 + t7331;
  t7354 = -1.*t1650*t987*t1827;
  t7359 = t7337*t1226;
  t7360 = t7354 + t7359;
  t7385 = t1650*t367*t1691*t1567;
  t7387 = -1.*t1650*t367*t1835*t2679;
  t7389 = t7385 + t7387;
  t6652 = t2929*t4771;
  t6660 = -1.*t6590*t3752;
  t6666 = t6652 + t6660;
  t6591 = -0.01004*t2929;
  t6600 = -0.08055*t3752;
  t6603 = t6591 + t6600;
  t6622 = 0.08055*t2929;
  t6623 = t6622 + t3896;
  t7470 = t1650*t367*t987;
  t7472 = t6983*t1226;
  t7475 = t7470 + t7472;
  t7343 = t987*t7337;
  t7345 = t1650*t1827*t1226;
  t7348 = t7343 + t7345;
  t7548 = -1.*t1650*t367*t1567*t1835;
  t7550 = -1.*t1650*t367*t1691*t2679;
  t7555 = t7548 + t7550;
  t7541 = 0.1708*t987*t7389;
  t7543 = t7389*t5116;
  t7545 = t7389*t1226*t3928;
  t7556 = t7555*t5457;
  t7558 = t2929*t7389*t1226;
  t7559 = t7555*t3752;
  t7560 = t7558 + t7559;
  t7566 = -0.08045*t7560;
  t7569 = t2929*t7555;
  t7570 = -1.*t7389*t1226*t3752;
  t7577 = t7569 + t7570;
  t7580 = -0.06984*t7577;
  t7408 = t2929*t7389;
  t7409 = -1.*t7360*t3752;
  t7410 = t7408 + t7409;
  t6356 = -1.*t367*t1691*t461*t6064;
  t6358 = -1.*t367*t461*t1835*t6089;
  t6392 = t6391*t5116;
  t6417 = t461*t1827*t6402;
  t6423 = t987*t6391;
  t6436 = -1.*t461*t1827*t1226;
  t6439 = t6423 + t6436;
  t6445 = 0.1708*t6439;
  t6486 = t6485*t3928;
  t6518 = t6514*t5457;
  t6520 = t2929*t6485;
  t6528 = t6514*t3752;
  t6537 = t6520 + t6528;
  t6542 = -0.08045*t6537;
  t6551 = t2929*t6514;
  t6562 = -1.*t6485*t3752;
  t6563 = t6551 + t6562;
  t6580 = -0.06984*t6563;
  t6582 = t6356 + t6358 + t6392 + t6417 + t6445 + t6486 + t6518 + t6542 + t6580;
  t6792 = -1.*t1650*t367*t6402;
  t7645 = -1.*t1650*t1567*t1827*t1835;
  t7655 = -1.*t1650*t1691*t1827*t2679;
  t7660 = t7645 + t7655;
  t6815 = t1650*t367*t1226;
  t7677 = t7660*t1226;
  t7685 = t6849 + t7677;
  t7688 = -1.*t1650*t1691*t1567*t1827;
  t7689 = t1650*t1827*t1835*t2679;
  t7690 = t7688 + t7689;
  t7722 = t367*t1567*t461*t1835;
  t7724 = t367*t1691*t461*t2679;
  t7725 = t7722 + t7724;
  t7732 = t987*t7725;
  t7735 = t461*t1827*t1226;
  t7742 = t7732 + t7735;
  t7756 = t367*t1691*t1567*t461;
  t7759 = -1.*t367*t461*t1835*t2679;
  t7761 = t7756 + t7759;
  t7763 = 0.1708*t987*t7761;
  t7764 = t7761*t5116;
  t7765 = t7761*t1226*t3928;
  t7766 = t6391*t5457;
  t7769 = t2929*t7761*t1226;
  t7776 = t6391*t3752;
  t7777 = t7769 + t7776;
  t7779 = -0.08045*t7777;
  t7780 = t2929*t6391;
  t7782 = -1.*t7761*t1226*t3752;
  t7783 = t7780 + t7782;
  t7784 = -0.06984*t7783;
  t7321 = t1650*t367*t1691*t6064;
  t7329 = t1650*t367*t1835*t6089;
  t7339 = t7337*t5116;
  t7342 = -1.*t1650*t1827*t6402;
  t7352 = 0.1708*t7348;
  t7383 = t7360*t3928;
  t7394 = t7389*t5457;
  t7398 = t2929*t7360;
  t7399 = t7389*t3752;
  t7402 = t7398 + t7399;
  t7407 = -0.08045*t7402;
  t7411 = -0.06984*t7410;
  t7419 = t7321 + t7329 + t7339 + t7342 + t7352 + t7383 + t7394 + t7407 + t7411;
  t7800 = -1.*t987*t461*t1827;
  t7801 = t7725*t1226;
  t7804 = t7800 + t7801;
  t7435 = -1.*t367*t461*t6402;
  t7884 = -1.*t1567*t461*t1827*t1835;
  t7890 = -1.*t1691*t461*t1827*t2679;
  t7894 = t7884 + t7890;
  t7899 = t7894*t1226;
  t7900 = t6585 + t7899;
  t7904 = -1.*t1691*t1567*t461*t1827;
  t7906 = t461*t1827*t1835*t2679;
  t7908 = t7904 + t7906;
  t8011 = -1.*t1567*t1827*t1835;
  t8020 = -1.*t1691*t1827*t2679;
  t8022 = t8011 + t8020;
  t8030 = t987*t8022;
  t8055 = t367*t1226;
  t8059 = t8030 + t8055;
  t8139 = -1.*t1691*t1567*t1827;
  t8143 = t1827*t1835*t2679;
  t8146 = t8139 + t8143;
  t8177 = t1567*t1827*t1835;
  t8183 = t1691*t1827*t2679;
  t8196 = t8177 + t8183;
  t8148 = 0.1708*t987*t8146;
  t8150 = t8146*t5116;
  t8154 = t8146*t1226*t3928;
  t8199 = t8196*t5457;
  t8203 = t2929*t8146*t1226;
  t8210 = t8196*t3752;
  t8211 = t8203 + t8210;
  t8212 = -0.08045*t8211;
  t8213 = t2929*t8196;
  t8224 = -1.*t8146*t1226*t3752;
  t8225 = t8213 + t8224;
  t8232 = -0.06984*t8225;
  t8253 = -1.*t367*t1567*t1835;
  t8254 = -1.*t367*t1691*t2679;
  t8268 = t8253 + t8254;
  t8297 = t987*t1827;
  t8298 = t8268*t1226;
  t8299 = t8297 + t8298;
  t8306 = -1.*t367*t1691*t1567;
  t8310 = t367*t1835*t2679;
  t8320 = t8306 + t8310;
  t8424 = -1.*t367*t987;
  t8431 = t8022*t1226;
  t8438 = t8424 + t8431;
  t7539 = -1.*t1650*t367*t1835*t6064;
  t7540 = t1650*t367*t1691*t6089;
  t7592 = t7539 + t7540 + t7541 + t7543 + t7545 + t7556 + t7566 + t7580;
  t6722 = t6715*t6064;
  t6766 = t6765*t6089;
  t6791 = t6790*t5116;
  t6889 = t6888*t5457;
  t6893 = t6888*t3752;
  t6901 = t2929*t6888;
  t8560 = -1.*t1567*t6963;
  t8561 = t8560 + t6884;
  t7203 = t2929*t7128;
  t7212 = -1.*t7078*t1226*t3752;
  t7219 = t7203 + t7212;
  t6076 = t5966*t6064;
  t6091 = t2598*t6089;
  t6102 = 0.1708*t987*t6100;
  t6121 = t6100*t5116;
  t6140 = t6100*t1226*t3928;
  t6168 = t6155*t5457;
  t6180 = t2929*t6100*t1226;
  t6212 = t6155*t3752;
  t6216 = t6180 + t6212;
  t6230 = -0.08045*t6216;
  t6263 = t2929*t6155;
  t6266 = -1.*t6100*t1226*t3752;
  t6270 = t6263 + t6266;
  t6289 = -0.06984*t6270;
  t6293 = t6076 + t6091 + t6102 + t6121 + t6140 + t6168 + t6230 + t6289;
  t8592 = t1691*t461*t1827;
  t8594 = -1.*t1650*t1835;
  t8595 = t8592 + t8594;
  t8596 = t1567*t8595;
  t8598 = t1926*t2679;
  t8599 = t8596 + t8598;
  t7754 = -1.*t367*t461*t1835*t6064;
  t7755 = t367*t1691*t461*t6089;
  t7788 = t7754 + t7755 + t7763 + t7764 + t7765 + t7766 + t7779 + t7784;
  t8614 = -1.*t8595*t2679;
  t8615 = t2006 + t8614;
  t8624 = -1.*t1567*t8595;
  t8628 = t8624 + t4700;
  t7428 = t2598*t6064;
  t7432 = t1926*t6089;
  t7433 = t2797*t5116;
  t7450 = t4771*t5457;
  t7457 = t4771*t3752;
  t7060 = t6765*t6064;
  t7068 = t6963*t6089;
  t7083 = 0.1708*t987*t7078;
  t7084 = t7078*t5116;
  t7086 = t7078*t1226*t3928;
  t7144 = t7128*t5457;
  t7179 = t2929*t7078*t1226;
  t7185 = t7128*t3752;
  t7186 = t7179 + t7185;
  t7187 = -0.08045*t7186;
  t7221 = -0.06984*t7219;
  t7222 = t7060 + t7068 + t7083 + t7084 + t7086 + t7144 + t7187 + t7221;
  t8684 = t367*t1691*t1567;
  t8686 = -1.*t367*t1835*t2679;
  t8689 = t8684 + t8686;
  t8250 = -1.*t367*t1691*t6064;
  t8251 = -1.*t367*t1835*t6089;
  t8273 = t8268*t5116;
  t8323 = t8320*t5457;
  t8338 = t8320*t3752;
  t8345 = t2929*t8320;
  t8698 = 0.1708*t987*t8268;
  t8699 = t8268*t1226*t3928;
  t8700 = t2929*t8268*t1226;
  t8701 = t8700 + t8338;
  t8702 = -0.08045*t8701;
  t8704 = -1.*t8268*t1226*t3752;
  t8705 = t8345 + t8704;
  t8708 = -0.06984*t8705;
  t8122 = t1827*t1835*t6064;
  t8137 = -1.*t1691*t1827*t6089;
  t8234 = t8122 + t8137 + t8148 + t8150 + t8154 + t8199 + t8212 + t8232;
  t7597 = t1650*t367*t1691*t4170;
  t7604 = t1650*t367*t1835*t4447;
  t7608 = t7597 + t7604 + t7541 + t7543 + t7545 + t7556 + t7566 + t7580;
  t8554 = t6765*t4170;
  t8556 = t6963*t4447;
  t8557 = 0.1708*t987*t7128;
  t8558 = t7128*t5116;
  t8559 = t7128*t1226*t3928;
  t8563 = t8561*t5457;
  t8564 = t2929*t7128*t1226;
  t8565 = t8561*t3752;
  t8566 = t8564 + t8565;
  t8567 = -0.08045*t8566;
  t8568 = t2929*t8561;
  t8569 = -1.*t7128*t1226*t3752;
  t8571 = t8568 + t8569;
  t8572 = -0.06984*t8571;
  t8573 = t8554 + t8556 + t8557 + t8558 + t8559 + t8563 + t8567 + t8572;
  t8768 = t6949*t2679;
  t8769 = t8560 + t8768;
  t7303 = t2929*t7283;
  t7306 = -1.*t7259*t1226*t3752;
  t7310 = t7303 + t7306;
  t4236 = t2598*t4170;
  t4647 = t1926*t4447;
  t4848 = 0.1708*t987*t4771;
  t5120 = t4771*t5116;
  t5187 = t4771*t1226*t3928;
  t5491 = t5291*t5457;
  t5538 = t2929*t4771*t1226;
  t5603 = t5291*t3752;
  t5642 = t5538 + t5603;
  t5710 = -0.08045*t5642;
  t5711 = t2929*t5291;
  t5713 = -1.*t4771*t1226*t3752;
  t5722 = t5711 + t5713;
  t5790 = -0.06984*t5722;
  t5791 = t4236 + t4647 + t4848 + t5120 + t5187 + t5491 + t5710 + t5790;
  t8795 = -1.*t5966*t2679;
  t8798 = t8596 + t8795;
  t7792 = t367*t1691*t461*t4170;
  t7795 = t367*t461*t1835*t4447;
  t7796 = t7792 + t7795 + t7763 + t7764 + t7765 + t7766 + t7779 + t7784;
  t8612 = t1926*t4170;
  t8613 = t8595*t4447;
  t8618 = 0.1708*t987*t8615;
  t8620 = t8615*t5116;
  t8621 = t8615*t1226*t3928;
  t8629 = t8628*t5457;
  t8631 = t2929*t8615*t1226;
  t8635 = t8628*t3752;
  t8636 = t8631 + t8635;
  t8641 = -0.08045*t8636;
  t8642 = t2929*t8628;
  t8643 = -1.*t8615*t1226*t3752;
  t8644 = t8642 + t8643;
  t8645 = -0.06984*t8644;
  t8646 = t8612 + t8613 + t8618 + t8620 + t8621 + t8629 + t8641 + t8645;
  t8754 = 0.135*t1567;
  t8757 = -0.07996*t2679;
  t8760 = t8754 + t8757;
  t8814 = -1.*t1567*t5966;
  t8815 = t8814 + t8614;
  t8821 = t8624 + t6097;
  t7239 = t6963*t4170;
  t7248 = t6949*t4447;
  t7260 = 0.1708*t987*t7259;
  t7264 = t7259*t5116;
  t7266 = t7259*t1226*t3928;
  t7286 = t7283*t5457;
  t7298 = t2929*t7259*t1226;
  t7299 = t7283*t3752;
  t7300 = t7298 + t7299;
  t7302 = -0.08045*t7300;
  t7311 = -0.06984*t7310;
  t7313 = t7239 + t7248 + t7260 + t7264 + t7266 + t7286 + t7302 + t7311;
  t8690 = -0.08045*t987*t2929*t8689;
  t8691 = t8689*t2906;
  t8692 = -0.1708*t8689*t1226;
  t8693 = t987*t8689*t3928;
  t8694 = 0.06984*t987*t8689*t3752;
  t8696 = t8690 + t8691 + t8692 + t8693 + t8694;
  t8697 = var2[7]*t8696;
  t8713 = t367*t1691*t4447;
  t8711 = -1.*t367*t1835*t4170;
  t8714 = t8711 + t8713 + t8698 + t8273 + t8699 + t8323 + t8702 + t8708;
  t8717 = t8689*t1226*t6603;
  t8722 = t8268*t6623;
  t8724 = -1.*t2929*t8689*t1226;
  t8725 = -1.*t8268*t3752;
  t8728 = t8724 + t8725;
  t8729 = -0.06984*t8728;
  t8730 = t2929*t8268;
  t8731 = -1.*t8689*t1226*t3752;
  t8732 = t8730 + t8731;
  t8733 = -0.08045*t8732;
  t8735 = t8717 + t8722 + t8729 + t8733;
  t8736 = var2[8]*t8735;
  t8242 = -1.*t1691*t1827*t4170;
  t8243 = -1.*t1827*t1835*t4447;
  t8246 = t8242 + t8243 + t8148 + t8150 + t8154 + t8199 + t8212 + t8232;
  t8525 = -0.08045*t987*t2929*t7078;
  t8527 = t7078*t2906;
  t8528 = -0.1708*t7078*t1226;
  t8529 = t987*t7078*t3928;
  t8530 = 0.06984*t987*t7078*t3752;
  t8532 = t8525 + t8527 + t8528 + t8529 + t8530;
  t8739 = -0.08045*t987*t2929*t7259;
  t8741 = t7259*t2906;
  t8742 = -0.1708*t7259*t1226;
  t8745 = t987*t7259*t3928;
  t8746 = 0.06984*t987*t7259*t3752;
  t8748 = t8739 + t8741 + t8742 + t8745 + t8746;
  t1516 = -1.*t367*t461*t1494;
  t2917 = t2797*t2906;
  t3245 = -0.08045*t2929*t3019;
  t3343 = t367*t987*t461;
  t3360 = -1.*t2797*t1226;
  t3382 = t3343 + t3360;
  t3391 = 0.1708*t3382;
  t3952 = t3019*t3928;
  t3990 = 0.06984*t3019*t3752;
  t3994 = t1516 + t2917 + t3245 + t3391 + t3952 + t3990;
  t7516 = -1.*t1650*t1827*t1494;
  t7519 = t7337*t2906;
  t7522 = -0.08045*t2929*t7348;
  t7526 = t1650*t987*t1827;
  t7529 = -1.*t7337*t1226;
  t7530 = t7526 + t7529;
  t7532 = 0.1708*t7530;
  t7533 = t7348*t3928;
  t7534 = 0.06984*t7348*t3752;
  t7535 = t7516 + t7519 + t7522 + t7532 + t7533 + t7534;
  t7030 = -1.*t6983*t1226;
  t7037 = t6849 + t7030;
  t8601 = -0.08045*t987*t2929*t8599;
  t8602 = t8599*t2906;
  t8603 = -0.1708*t8599*t1226;
  t8604 = t987*t8599*t3928;
  t8605 = 0.06984*t987*t8599*t3752;
  t8608 = t8601 + t8602 + t8603 + t8604 + t8605;
  t8801 = -0.08045*t987*t2929*t8798;
  t8802 = t8798*t2906;
  t8804 = -0.1708*t8798*t1226;
  t8806 = t987*t8798*t3928;
  t8807 = 0.06984*t987*t8798*t3752;
  t8808 = t8801 + t8802 + t8804 + t8806 + t8807;
  t6927 = t1650*t367*t1494;
  t6984 = t6983*t2906;
  t7023 = -0.08045*t2929*t7022;
  t7038 = 0.1708*t7037;
  t7051 = t7022*t3928;
  t7052 = 0.06984*t7022*t3752;
  t7054 = t6927 + t6984 + t7023 + t7038 + t7051 + t7052;
  t8914 = t8595*t2679;
  t8915 = t6141 + t8914;
  t8916 = t987*t8915;
  t8917 = -1.*t367*t461*t1226;
  t8918 = t8916 + t8917;
  t7719 = -1.*t461*t1827*t1494;
  t7731 = t7725*t2906;
  t7744 = -0.08045*t2929*t7742;
  t7745 = -1.*t7725*t1226;
  t7746 = t6448 + t7745;
  t7747 = 0.1708*t7746;
  t7748 = t7742*t3928;
  t7749 = 0.06984*t7742*t3752;
  t7750 = t7719 + t7731 + t7744 + t7747 + t7748 + t7749;
  t8894 = -0.08055*t987;
  t8895 = -0.135*t1226;
  t8896 = t8894 + t8895;
  t8932 = -1.*t8915*t1226;
  t8934 = t6585 + t8932;
  t8009 = -1.*t367*t1494;
  t8026 = t8022*t2906;
  t8061 = -0.08045*t2929*t8059;
  t8063 = t367*t987;
  t8076 = -1.*t8022*t1226;
  t8081 = t8063 + t8076;
  t8091 = 0.1708*t8081;
  t8097 = t8059*t3928;
  t8098 = 0.06984*t8059*t3752;
  t8104 = t8009 + t8026 + t8061 + t8091 + t8097 + t8098;
  t8944 = t367*t1567*t1835;
  t8945 = t367*t1691*t2679;
  t8946 = t8944 + t8945;
  t8948 = t987*t8946;
  t8949 = t1827*t1226;
  t8950 = t8948 + t8949;
  t8280 = -1.*t1827*t1226;
  t8961 = -1.*t8946*t1226;
  t8963 = t8297 + t8961;
  t8886 = 0.06984*t2929*t7022;
  t8888 = t7022*t6603;
  t8889 = 0.08045*t7022*t3752;
  t8890 = t8886 + t8888 + t8889;
  t8575 = t7078*t1226*t6603;
  t8577 = t7128*t6623;
  t8579 = -1.*t2929*t7078*t1226;
  t8580 = -1.*t7128*t3752;
  t8582 = t8579 + t8580;
  t8586 = -0.06984*t8582;
  t8587 = -0.08045*t7219;
  t8588 = t8575 + t8577 + t8586 + t8587;
  t8783 = t7259*t1226*t6603;
  t8784 = t7283*t6623;
  t8785 = -1.*t2929*t7259*t1226;
  t8786 = -1.*t7283*t3752;
  t8787 = t8785 + t8786;
  t8788 = -0.06984*t8787;
  t8789 = -0.08045*t7310;
  t8790 = t8783 + t8784 + t8788 + t8789;
  t7611 = t7360*t6603;
  t7613 = t7389*t6623;
  t7615 = -1.*t2929*t7360;
  t7616 = -1.*t7389*t3752;
  t7617 = t7615 + t7616;
  t7619 = -0.06984*t7617;
  t7624 = -0.08045*t7410;
  t7629 = t7611 + t7613 + t7619 + t7624;
  t6606 = t6590*t6603;
  t6627 = t4771*t6623;
  t6634 = -1.*t2929*t6590;
  t6639 = -1.*t4771*t3752;
  t6644 = t6634 + t6639;
  t6651 = -0.06984*t6644;
  t6677 = -0.08045*t6666;
  t6700 = t6606 + t6627 + t6651 + t6677;
  t7484 = -1.*t2929*t7475;
  t7485 = -1.*t7259*t3752;
  t7487 = t7484 + t7485;
  t8919 = 0.06984*t2929*t8918;
  t8920 = t8918*t6603;
  t8921 = 0.08045*t8918*t3752;
  t8922 = t8919 + t8920 + t8921;
  t8662 = t8599*t1226*t6603;
  t8666 = t8615*t6623;
  t8667 = -1.*t2929*t8599*t1226;
  t8668 = -1.*t8615*t3752;
  t8669 = t8667 + t8668;
  t8673 = -0.06984*t8669;
  t8675 = t2929*t8615;
  t8678 = -1.*t8599*t1226*t3752;
  t8679 = t8675 + t8678;
  t8680 = -0.08045*t8679;
  t8681 = t8662 + t8666 + t8673 + t8680;
  t8853 = t8798*t1226*t6603;
  t8854 = t8815*t6623;
  t8856 = -1.*t2929*t8798*t1226;
  t8857 = -1.*t8815*t3752;
  t8864 = t8856 + t8857;
  t8865 = -0.06984*t8864;
  t8867 = t2929*t8815;
  t8870 = -1.*t8798*t1226*t3752;
  t8872 = t8867 + t8870;
  t8873 = -0.08045*t8872;
  t8874 = t8853 + t8854 + t8865 + t8873;
  t7807 = t7804*t6603;
  t7814 = t7761*t6623;
  t7815 = -1.*t2929*t7804;
  t7822 = -1.*t7761*t3752;
  t7831 = t7815 + t7822;
  t7832 = -0.06984*t7831;
  t7852 = t2929*t7761;
  t7855 = -1.*t7804*t3752;
  t7866 = t7852 + t7855;
  t7873 = -0.08045*t7866;
  t7874 = t7807 + t7814 + t7832 + t7873;
  t8987 = -0.08055*t2929;
  t8990 = 0.01004*t3752;
  t8991 = t8987 + t8990;
  t9011 = t8915*t1226;
  t9012 = t3343 + t9011;
  t7478 = t7475*t6603;
  t7480 = t7259*t6623;
  t7500 = -0.06984*t7487;
  t7502 = t2929*t7259;
  t7506 = -1.*t7475*t3752;
  t7507 = t7502 + t7506;
  t7508 = -0.08045*t7507;
  t7509 = t7478 + t7480 + t7500 + t7508;
  t8951 = 0.06984*t2929*t8950;
  t8952 = t8950*t6603;
  t8953 = 0.08045*t8950*t3752;
  t8954 = t8951 + t8952 + t8953;
  t9045 = -1.*t987*t1827;
  t9046 = t8946*t1226;
  t9050 = t9045 + t9046;
  t8443 = t8438*t6603;
  t8446 = t8146*t6623;
  t8447 = -1.*t2929*t8438;
  t8459 = -1.*t8146*t3752;
  t8464 = t8447 + t8459;
  t8466 = -0.06984*t8464;
  t8467 = t2929*t8146;
  t8484 = -1.*t8438*t3752;
  t8485 = t8467 + t8484;
  t8486 = -0.08045*t8485;
  t8495 = t8443 + t8446 + t8466 + t8486;
  p_output1[0]=0;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=0;
  p_output1[4]=0;
  p_output1[5]=0;
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=(t6722 + t6766 + t6791 + t6792 + t3928*t6853 + t6889 - 0.08045*(t2929*t6853 + t6893) - 0.06984*(-1.*t3752*t6853 + t6901) + 0.1708*(t6815 + t6790*t987))*var2[3] + t6582*var2[4] + t6293*var2[5] + t5791*var2[6] + t3994*var2[7] + t6700*var2[8];
  p_output1[10]=(0.1708*t3019 + t3928*t6590 - 0.06984*t6666 + t7428 + t7432 + t7433 + t7435 + t7450 - 0.08045*(t2929*t6590 + t7457))*var2[3] + t7419*var2[4] + t7222*var2[5] + t7313*var2[6] + t7054*var2[7] + t7509*var2[8];
  p_output1[11]=0;
  p_output1[12]=t6582*var2[3] + (-1.*t1650*t1691*t1827*t6064 - 1.*t1650*t1827*t1835*t6089 + t6792 + t5116*t7660 + t3928*t7685 + t5457*t7690 - 0.06984*(-1.*t3752*t7685 + t2929*t7690) - 0.08045*(t2929*t7685 + t3752*t7690) + 0.1708*(t6815 + t7660*t987))*var2[4] + t7592*var2[5] + t7608*var2[6] + t7535*var2[7] + t7629*var2[8];
  p_output1[13]=t7419*var2[3] + (-1.*t1691*t1827*t461*t6064 - 1.*t1827*t1835*t461*t6089 + t7435 + t5116*t7894 + t3928*t7900 + t5457*t7908 - 0.06984*(-1.*t3752*t7900 + t2929*t7908) - 0.08045*(t2929*t7900 + t3752*t7908) + 0.1708*(t3018 + t7894*t987))*var2[4] + t7788*var2[5] + t7796*var2[6] + t7750*var2[7] + t7874*var2[8];
  p_output1[14]=(t1827*t6402 + t8250 + t8251 + t8273 + t3928*t8299 + t8323 - 0.08045*(t2929*t8299 + t8338) - 0.06984*(-1.*t3752*t8299 + t8345) + 0.1708*(t8280 + t8268*t987))*var2[4] + t8234*var2[5] + t8246*var2[6] + t8104*var2[7] + t8495*var2[8];
  p_output1[15]=t6293*var2[3] + t7592*var2[4] + (t6722 + t6766 + t1226*t3928*t6790 + t6791 + t6889 - 0.08045*(t1226*t2929*t6790 + t6893) - 0.06984*(-1.*t1226*t3752*t6790 + t6901) + 0.1708*t6790*t987)*var2[5] + t8573*var2[6] + t8532*var2[7] + t8588*var2[8];
  p_output1[16]=t7222*var2[3] + t7788*var2[4] + (t1226*t2797*t3928 - 0.06984*(-1.*t1226*t2797*t3752 + t6652) + t7428 + t7432 + t7433 + t7450 - 0.08045*(t1226*t2797*t2929 + t7457) + 0.1708*t2797*t987)*var2[5] + t8646*var2[6] + t8608*var2[7] + t8681*var2[8];
  p_output1[17]=t8697 + t8736 + t8234*var2[4] + (t8250 + t8251 + t8273 + t8323 + t8698 + t8699 + t8702 + t8708)*var2[5] + t8714*var2[6];
  p_output1[18]=t5791*var2[3] + t7608*var2[4] + t8573*var2[5] + (t1226*t3928*t7283 + t5116*t7283 + t8556 + t6949*t8760 + t5457*t8769 - 0.06984*(-1.*t1226*t3752*t7283 + t2929*t8769) - 0.08045*(t1226*t2929*t7283 + t3752*t8769) + 0.1708*t7283*t987)*var2[6] + t8748*var2[7] + t8790*var2[8];
  p_output1[19]=t7313*var2[3] + t7796*var2[4] + t8646*var2[5] + (t8613 + t5966*t8760 + t1226*t3928*t8815 + t5116*t8815 + t5457*t8821 - 0.06984*(-1.*t1226*t3752*t8815 + t2929*t8821) - 0.08045*(t1226*t2929*t8815 + t3752*t8821) + 0.1708*t8815*t987)*var2[6] + t8808*var2[7] + t8874*var2[8];
  p_output1[20]=t8697 + t8736 + t8246*var2[4] + t8714*var2[5] + (t8273 + t8323 + t8698 + t8699 + t8702 + t8708 + t8713 + t1835*t367*t8760)*var2[6];
  p_output1[21]=t3994*var2[3] + t7535*var2[4] + t8532*var2[5] + t8748*var2[6] + (t1494*t6983 - 0.08045*t2929*t7037 + 0.06984*t3752*t7037 + t3928*t7037 + t1650*t367*t8896 + 0.1708*(t6815 - 1.*t6983*t987))*var2[7] + t8890*var2[8];
  p_output1[22]=t7054*var2[3] + t7750*var2[4] + t8608*var2[5] + t8808*var2[6] + (t367*t461*t8896 + t1494*t8915 - 0.08045*t2929*t8934 + 0.06984*t3752*t8934 + t3928*t8934 + 0.1708*(t3018 - 1.*t8915*t987))*var2[7] + t8922*var2[8];
  p_output1[23]=t8104*var2[4] + t8696*var2[5] + t8696*var2[6] + (-1.*t1827*t8896 + t1494*t8946 - 0.08045*t2929*t8963 + 0.06984*t3752*t8963 + t3928*t8963 + 0.1708*(t8280 - 1.*t8946*t987))*var2[7] + t8954*var2[8];
  p_output1[24]=t6700*var2[3] + t7629*var2[4] + t8588*var2[5] + t8790*var2[6] + t8890*var2[7] + (t6603*t7259 - 0.06984*(-1.*t2929*t7259 + t3752*t7475) - 0.08045*t7487 + t7475*t8991)*var2[8];
  p_output1[25]=t7509*var2[3] + t7874*var2[4] + t8681*var2[5] + t8874*var2[6] + t8922*var2[7] + (t6603*t8798 + t8991*t9012 - 0.08045*(-1.*t3752*t8798 - 1.*t2929*t9012) - 0.06984*(-1.*t2929*t8798 + t3752*t9012))*var2[8];
  p_output1[26]=t8495*var2[4] + t8735*var2[5] + t8735*var2[6] + t8954*var2[7] + (t6603*t8689 + t8991*t9050 - 0.08045*(-1.*t3752*t8689 - 1.*t2929*t9050) - 0.06984*(-1.*t2929*t8689 + t3752*t9050))*var2[8];
  p_output1[27]=0;
  p_output1[28]=0;
  p_output1[29]=0;
  p_output1[30]=0;
  p_output1[31]=0;
  p_output1[32]=0;
  p_output1[33]=0;
  p_output1[34]=0;
  p_output1[35]=0;
  p_output1[36]=0;
  p_output1[37]=0;
  p_output1[38]=0;
  p_output1[39]=0;
  p_output1[40]=0;
  p_output1[41]=0;
  p_output1[42]=0;
  p_output1[43]=0;
  p_output1[44]=0;
  p_output1[45]=0;
  p_output1[46]=0;
  p_output1[47]=0;
  p_output1[48]=0;
  p_output1[49]=0;
  p_output1[50]=0;
  p_output1[51]=0;
  p_output1[52]=0;
  p_output1[53]=0;
  p_output1[54]=0;
  p_output1[55]=0;
  p_output1[56]=0;
  p_output1[57]=0;
  p_output1[58]=0;
  p_output1[59]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 20 && ncols == 1) && 
      !(mrows == 1 && ncols == 20))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 20 && ncols == 1) && 
      !(mrows == 1 && ncols == 20))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 3, (mwSize) 20, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "dJp_LeftThigh_mex.hh"

namespace SymExpression
{

void dJp_LeftThigh_mex_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
