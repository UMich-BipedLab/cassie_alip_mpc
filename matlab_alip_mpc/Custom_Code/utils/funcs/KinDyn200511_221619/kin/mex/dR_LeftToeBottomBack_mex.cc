/*
 * Automatically Generated from Mathematica.
 * Mon 11 May 2020 22:32:17 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t1434;
  double t1374;
  double t1456;
  double t1382;
  double t1481;
  double t1161;
  double t1302;
  double t1432;
  double t1581;
  double t1593;
  double t1620;
  double t1642;
  double t1697;
  double t1743;
  double t1809;
  double t1810;
  double t1819;
  double t1822;
  double t1829;
  double t1853;
  double t1866;
  double t1887;
  double t1948;
  double t1027;
  double t1160;
  double t2008;
  double t2067;
  double t1937;
  double t2009;
  double t2026;
  double t799;
  double t2072;
  double t2074;
  double t2117;
  double t2196;
  double t2031;
  double t2132;
  double t2139;
  double t606;
  double t2219;
  double t2222;
  double t2223;
  double t2291;
  double t2172;
  double t2231;
  double t2245;
  double t283;
  double t2298;
  double t2315;
  double t2335;
  double t2564;
  double t2573;
  double t2619;
  double t2695;
  double t2703;
  double t2709;
  double t2560;
  double t2632;
  double t2645;
  double t2655;
  double t2712;
  double t2756;
  double t2769;
  double t2770;
  double t2780;
  double t2765;
  double t2787;
  double t2798;
  double t2821;
  double t2827;
  double t2847;
  double t2809;
  double t2855;
  double t2858;
  double t2897;
  double t2910;
  double t2955;
  double t2888;
  double t2963;
  double t2970;
  double t2984;
  double t2985;
  double t3001;
  double t3126;
  double t3127;
  double t3062;
  double t3063;
  double t3071;
  double t3130;
  double t3133;
  double t3161;
  double t3169;
  double t3176;
  double t3152;
  double t3178;
  double t3182;
  double t3208;
  double t3220;
  double t3221;
  double t3191;
  double t3222;
  double t3224;
  double t3233;
  double t3236;
  double t3240;
  double t3232;
  double t3241;
  double t3242;
  double t3247;
  double t3248;
  double t3264;
  double t3439;
  double t3446;
  double t3450;
  double t3384;
  double t3390;
  double t3402;
  double t3404;
  double t3406;
  double t3419;
  double t3430;
  double t3454;
  double t3470;
  double t3485;
  double t3486;
  double t3491;
  double t3472;
  double t3501;
  double t3505;
  double t3530;
  double t3531;
  double t3533;
  double t3522;
  double t3535;
  double t3538;
  double t3585;
  double t3599;
  double t3615;
  double t3570;
  double t3624;
  double t3631;
  double t3639;
  double t3644;
  double t3653;
  double t3747;
  double t3769;
  double t3771;
  double t3707;
  double t3711;
  double t3715;
  double t3805;
  double t3816;
  double t3818;
  double t3694;
  double t3743;
  double t3781;
  double t3784;
  double t3788;
  double t3790;
  double t3803;
  double t3830;
  double t3831;
  double t3840;
  double t3853;
  double t3854;
  double t3835;
  double t3870;
  double t3888;
  double t3908;
  double t3922;
  double t3923;
  double t3894;
  double t3928;
  double t3929;
  double t3942;
  double t3943;
  double t3948;
  double t3932;
  double t3950;
  double t3954;
  double t4002;
  double t4003;
  double t4005;
  double t4076;
  double t4082;
  double t4087;
  double t4099;
  double t4100;
  double t4101;
  double t4119;
  double t4120;
  double t4150;
  double t4105;
  double t4156;
  double t4160;
  double t4174;
  double t4182;
  double t4183;
  double t4171;
  double t4185;
  double t4191;
  double t4207;
  double t4212;
  double t4213;
  double t4197;
  double t4215;
  double t4217;
  double t4263;
  double t4268;
  double t4271;
  double t4376;
  double t4377;
  double t4383;
  double t4384;
  double t4386;
  double t4393;
  double t4402;
  double t4388;
  double t4405;
  double t4410;
  double t4429;
  double t4435;
  double t4465;
  double t4415;
  double t4478;
  double t4482;
  double t4501;
  double t4520;
  double t4522;
  double t4565;
  double t4578;
  double t4587;
  double t4590;
  double t4629;
  double t4641;
  double t4643;
  double t4633;
  double t4644;
  double t4655;
  double t4674;
  double t4690;
  double t4699;
  double t4742;
  double t4746;
  double t4747;
  double t4764;
  double t4796;
  double t4834;
  double t4836;
  double t4805;
  double t4850;
  double t4904;
  double t4905;
  double t4908;
  double t4962;
  double t4972;
  double t4974;
  double t4987;
  double t4988;
  double t4989;
  double t4990;
  double t4991;
  double t4999;
  double t5001;
  double t5006;
  double t5011;
  double t5013;
  double t5018;
  double t5027;
  double t5043;
  double t5047;
  double t5048;
  double t5028;
  double t5074;
  double t5096;
  double t5109;
  double t5114;
  double t5121;
  double t5100;
  double t5125;
  double t5131;
  double t5134;
  double t5153;
  double t5164;
  double t5307;
  double t5310;
  double t5287;
  double t5289;
  double t5299;
  double t5304;
  double t5320;
  double t5323;
  double t5354;
  double t5372;
  double t5378;
  double t5338;
  double t5391;
  double t5393;
  double t5400;
  double t5401;
  double t5416;
  double t5397;
  double t5421;
  double t5427;
  double t5443;
  double t5447;
  double t5449;
  double t5431;
  double t5467;
  double t5473;
  double t5488;
  double t5491;
  double t5492;
  double t5546;
  double t5548;
  double t5517;
  double t5522;
  double t5537;
  double t5551;
  double t5567;
  double t5579;
  double t5585;
  double t5593;
  double t5575;
  double t5602;
  double t5655;
  double t5657;
  double t5671;
  double t5673;
  double t5656;
  double t5675;
  double t5681;
  double t5692;
  double t5695;
  double t5704;
  double t5689;
  double t5705;
  double t5722;
  double t5725;
  double t5726;
  double t5727;
  double t5854;
  double t5857;
  double t5858;
  double t5810;
  double t5814;
  double t5827;
  double t5831;
  double t5833;
  double t5846;
  double t5849;
  double t5866;
  double t5867;
  double t5872;
  double t5877;
  double t5881;
  double t5869;
  double t5884;
  double t5892;
  double t5901;
  double t5916;
  double t5922;
  double t5893;
  double t5936;
  double t5948;
  double t5974;
  double t5995;
  double t6024;
  double t5956;
  double t6034;
  double t6036;
  double t6047;
  double t6048;
  double t6051;
  double t6137;
  double t6141;
  double t6143;
  double t6145;
  double t6155;
  double t6156;
  double t6158;
  double t6163;
  double t6178;
  double t6157;
  double t6183;
  double t6187;
  double t6193;
  double t6195;
  double t6202;
  double t6188;
  double t6219;
  double t6221;
  double t6237;
  double t6239;
  double t6244;
  double t6233;
  double t6249;
  double t6264;
  double t6277;
  double t6283;
  double t6295;
  double t6357;
  double t6358;
  double t6360;
  double t6365;
  double t6381;
  double t6388;
  double t6391;
  double t6387;
  double t6400;
  double t6404;
  double t6409;
  double t6435;
  double t6470;
  double t6406;
  double t6475;
  double t6476;
  double t6486;
  double t6492;
  double t6494;
  double t6553;
  double t6554;
  double t6559;
  double t6575;
  double t6579;
  double t6602;
  double t6607;
  double t6582;
  double t6609;
  double t6617;
  double t6621;
  double t6622;
  double t6623;
  double t6680;
  double t6686;
  double t6687;
  double t6698;
  double t6699;
  double t6711;
  double t6716;
  double t6705;
  double t6725;
  double t6756;
  double t6764;
  double t6766;
  double t4929;
  double t4933;
  double t6844;
  double t6845;
  double t6846;
  double t6856;
  double t6864;
  double t6867;
  double t6871;
  double t6875;
  double t6876;
  double t6885;
  double t6889;
  double t6892;
  double t6883;
  double t6895;
  double t6901;
  double t6913;
  double t6915;
  double t6916;
  double t6908;
  double t6917;
  double t6919;
  double t6922;
  double t6923;
  double t6925;
  double t6999;
  double t7001;
  double t7005;
  double t6982;
  double t6984;
  double t6994;
  double t6997;
  double t7010;
  double t7013;
  double t7026;
  double t7046;
  double t7059;
  double t7021;
  double t7061;
  double t7069;
  double t7072;
  double t7076;
  double t7083;
  double t7071;
  double t7096;
  double t7101;
  double t7103;
  double t7104;
  double t7105;
  double t7102;
  double t7108;
  double t7112;
  double t7122;
  double t7123;
  double t7124;
  double t7120;
  double t7126;
  double t7136;
  double t7142;
  double t7149;
  double t7151;
  double t7156;
  double t7157;
  double t7168;
  double t7185;
  double t7187;
  double t7191;
  double t7195;
  double t7199;
  double t7204;
  double t7219;
  double t7224;
  double t7227;
  double t7217;
  double t7228;
  double t7241;
  double t7245;
  double t7250;
  double t7251;
  double t7242;
  double t7255;
  double t7256;
  double t7260;
  double t7261;
  double t7263;
  double t7257;
  double t7268;
  double t7273;
  double t7280;
  double t7284;
  double t7285;
  double t7319;
  double t7324;
  double t7327;
  double t7345;
  double t7350;
  double t7358;
  double t7368;
  double t7357;
  double t7369;
  double t7374;
  double t7377;
  double t7378;
  double t7379;
  double t7376;
  double t7385;
  double t7390;
  double t7396;
  double t7398;
  double t7404;
  double t7435;
  double t7438;
  double t7441;
  double t7444;
  double t7445;
  double t7461;
  double t7464;
  double t7454;
  double t7469;
  double t7478;
  double t7491;
  double t7502;
  double t7504;
  double t7527;
  double t7531;
  double t7532;
  double t7534;
  double t7535;
  double t7546;
  double t7553;
  double t7538;
  double t7564;
  double t7572;
  double t7574;
  double t7575;
  double t7629;
  double t7630;
  double t7636;
  double t7613;
  double t7614;
  double t7615;
  double t7616;
  double t7618;
  double t7622;
  double t7625;
  double t7637;
  double t7641;
  double t7645;
  double t7646;
  double t7647;
  double t7644;
  double t7650;
  double t7653;
  double t7657;
  double t7660;
  double t7661;
  double t7655;
  double t7662;
  double t7663;
  double t7667;
  double t7676;
  double t7681;
  double t7666;
  double t7683;
  double t7685;
  double t7691;
  double t7692;
  double t7700;
  double t2275;
  double t2382;
  double t2394;
  double t2404;
  double t2439;
  double t2475;
  double t2976;
  double t3011;
  double t3018;
  double t3024;
  double t3029;
  double t3031;
  double t3243;
  double t3272;
  double t3300;
  double t3326;
  double t3332;
  double t3341;
  double t3635;
  double t3659;
  double t3660;
  double t3672;
  double t3679;
  double t3684;
  double t3961;
  double t4006;
  double t4009;
  double t4038;
  double t4042;
  double t4067;
  double t4222;
  double t4288;
  double t4300;
  double t4327;
  double t4328;
  double t4338;
  double t4496;
  double t4531;
  double t4532;
  double t4551;
  double t4552;
  double t4555;
  double t4662;
  double t4700;
  double t4701;
  double t4717;
  double t4720;
  double t4723;
  double t4838;
  double t4839;
  double t4861;
  double t4867;
  double t4918;
  double t4922;
  double t5133;
  double t5201;
  double t5202;
  double t5227;
  double t5239;
  double t5255;
  double t5484;
  double t5494;
  double t5495;
  double t5504;
  double t5505;
  double t5506;
  double t5723;
  double t5748;
  double t5759;
  double t5765;
  double t5778;
  double t5787;
  double t6040;
  double t6060;
  double t6067;
  double t6106;
  double t6117;
  double t6123;
  double t6275;
  double t6301;
  double t6302;
  double t6305;
  double t6318;
  double t6319;
  double t6477;
  double t6496;
  double t6498;
  double t6512;
  double t6513;
  double t6525;
  double t6620;
  double t6625;
  double t6629;
  double t6648;
  double t6651;
  double t6670;
  double t6718;
  double t6719;
  double t6728;
  double t6729;
  double t6768;
  double t6770;
  double t6781;
  double t6782;
  double t6809;
  double t6822;
  double t6823;
  double t4938;
  double t6920;
  double t6929;
  double t6932;
  double t6937;
  double t6938;
  double t6950;
  double t8139;
  double t8140;
  double t8141;
  double t7277;
  double t7295;
  double t7299;
  double t7310;
  double t7313;
  double t7314;
  double t7391;
  double t7406;
  double t7407;
  double t7409;
  double t7416;
  double t7418;
  double t7480;
  double t7505;
  double t7512;
  double t7516;
  double t7518;
  double t7520;
  double t7558;
  double t7560;
  double t7566;
  double t7568;
  double t7576;
  double t7586;
  double t7596;
  double t7597;
  double t7690;
  double t7704;
  double t7710;
  double t7713;
  double t7715;
  double t7717;
  t1434 = Cos(var1[3]);
  t1374 = Cos(var1[5]);
  t1456 = Sin(var1[4]);
  t1382 = Sin(var1[3]);
  t1481 = Sin(var1[5]);
  t1161 = Cos(var1[7]);
  t1302 = Cos(var1[6]);
  t1432 = -1.*t1374*t1382;
  t1581 = t1434*t1456*t1481;
  t1593 = t1432 + t1581;
  t1620 = t1302*t1593;
  t1642 = t1434*t1374*t1456;
  t1697 = t1382*t1481;
  t1743 = t1642 + t1697;
  t1809 = Sin(var1[6]);
  t1810 = t1743*t1809;
  t1819 = t1620 + t1810;
  t1822 = t1161*t1819;
  t1829 = Cos(var1[4]);
  t1853 = Sin(var1[7]);
  t1866 = -1.*t1434*t1829*t1853;
  t1887 = t1822 + t1866;
  t1948 = Cos(var1[9]);
  t1027 = Cos(var1[8]);
  t1160 = Sin(var1[9]);
  t2008 = Sin(var1[8]);
  t2067 = Cos(var1[10]);
  t1937 = -1.*t1027*t1160*t1887;
  t2009 = -1.*t1948*t1887*t2008;
  t2026 = t1937 + t2009;
  t799 = Sin(var1[10]);
  t2072 = t1948*t1027*t1887;
  t2074 = -1.*t1160*t1887*t2008;
  t2117 = t2072 + t2074;
  t2196 = Cos(var1[11]);
  t2031 = t799*t2026;
  t2132 = t2067*t2117;
  t2139 = t2031 + t2132;
  t606 = Sin(var1[11]);
  t2219 = t2067*t2026;
  t2222 = -1.*t799*t2117;
  t2223 = t2219 + t2222;
  t2291 = Cos(var1[12]);
  t2172 = -1.*t606*t2139;
  t2231 = t2196*t2223;
  t2245 = t2172 + t2231;
  t283 = Sin(var1[12]);
  t2298 = t2196*t2139;
  t2315 = t606*t2223;
  t2335 = t2298 + t2315;
  t2564 = t1374*t1382;
  t2573 = -1.*t1434*t1456*t1481;
  t2619 = t2564 + t2573;
  t2695 = t1302*t2619;
  t2703 = -1.*t1743*t1809;
  t2709 = t2695 + t2703;
  t2560 = t1302*t1743;
  t2632 = t2619*t1809;
  t2645 = t2560 + t2632;
  t2655 = t1027*t2645*t1853;
  t2712 = t2709*t2008;
  t2756 = t2655 + t2712;
  t2769 = t1027*t2709;
  t2770 = -1.*t2645*t1853*t2008;
  t2780 = t2769 + t2770;
  t2765 = -1.*t1160*t2756;
  t2787 = t1948*t2780;
  t2798 = t2765 + t2787;
  t2821 = t1948*t2756;
  t2827 = t1160*t2780;
  t2847 = t2821 + t2827;
  t2809 = t799*t2798;
  t2855 = t2067*t2847;
  t2858 = t2809 + t2855;
  t2897 = t2067*t2798;
  t2910 = -1.*t799*t2847;
  t2955 = t2897 + t2910;
  t2888 = -1.*t606*t2858;
  t2963 = t2196*t2955;
  t2970 = t2888 + t2963;
  t2984 = t2196*t2858;
  t2985 = t606*t2955;
  t3001 = t2984 + t2985;
  t3126 = -1.*t1302*t1593;
  t3127 = t3126 + t2703;
  t3062 = -1.*t1593*t1809;
  t3063 = t2560 + t3062;
  t3071 = t1027*t3063*t1853;
  t3130 = t3127*t2008;
  t3133 = t3071 + t3130;
  t3161 = t1027*t3127;
  t3169 = -1.*t3063*t1853*t2008;
  t3176 = t3161 + t3169;
  t3152 = -1.*t1160*t3133;
  t3178 = t1948*t3176;
  t3182 = t3152 + t3178;
  t3208 = t1948*t3133;
  t3220 = t1160*t3176;
  t3221 = t3208 + t3220;
  t3191 = t799*t3182;
  t3222 = t2067*t3221;
  t3224 = t3191 + t3222;
  t3233 = t2067*t3182;
  t3236 = -1.*t799*t3221;
  t3240 = t3233 + t3236;
  t3232 = -1.*t606*t3224;
  t3241 = t2196*t3240;
  t3242 = t3232 + t3241;
  t3247 = t2196*t3224;
  t3248 = t606*t3240;
  t3264 = t3247 + t3248;
  t3439 = t1434*t1829*t1374*t1302;
  t3446 = -1.*t1434*t1829*t1481*t1809;
  t3450 = t3439 + t3446;
  t3384 = -1.*t1434*t1161*t1456;
  t3390 = t1434*t1829*t1302*t1481;
  t3402 = t1434*t1829*t1374*t1809;
  t3404 = t3390 + t3402;
  t3406 = t3404*t1853;
  t3419 = t3384 + t3406;
  t3430 = t1027*t3419;
  t3454 = t3450*t2008;
  t3470 = t3430 + t3454;
  t3485 = t1027*t3450;
  t3486 = -1.*t3419*t2008;
  t3491 = t3485 + t3486;
  t3472 = -1.*t1160*t3470;
  t3501 = t1948*t3491;
  t3505 = t3472 + t3501;
  t3530 = t1948*t3470;
  t3531 = t1160*t3491;
  t3533 = t3530 + t3531;
  t3522 = t799*t3505;
  t3535 = t2067*t3533;
  t3538 = t3522 + t3535;
  t3585 = t2067*t3505;
  t3599 = -1.*t799*t3533;
  t3615 = t3585 + t3599;
  t3570 = -1.*t606*t3538;
  t3624 = t2196*t3615;
  t3631 = t3570 + t3624;
  t3639 = t2196*t3538;
  t3644 = t606*t3615;
  t3653 = t3639 + t3644;
  t3747 = -1.*t1374*t1382*t1456;
  t3769 = t1434*t1481;
  t3771 = t3747 + t3769;
  t3707 = -1.*t1434*t1374;
  t3711 = -1.*t1382*t1456*t1481;
  t3715 = t3707 + t3711;
  t3805 = t1302*t3771;
  t3816 = -1.*t3715*t1809;
  t3818 = t3805 + t3816;
  t3694 = -1.*t1829*t1161*t1382;
  t3743 = t1302*t3715;
  t3781 = t3771*t1809;
  t3784 = t3743 + t3781;
  t3788 = t3784*t1853;
  t3790 = t3694 + t3788;
  t3803 = t1027*t3790;
  t3830 = t3818*t2008;
  t3831 = t3803 + t3830;
  t3840 = t1027*t3818;
  t3853 = -1.*t3790*t2008;
  t3854 = t3840 + t3853;
  t3835 = -1.*t1160*t3831;
  t3870 = t1948*t3854;
  t3888 = t3835 + t3870;
  t3908 = t1948*t3831;
  t3922 = t1160*t3854;
  t3923 = t3908 + t3922;
  t3894 = t799*t3888;
  t3928 = t2067*t3923;
  t3929 = t3894 + t3928;
  t3942 = t2067*t3888;
  t3943 = -1.*t799*t3923;
  t3948 = t3942 + t3943;
  t3932 = -1.*t606*t3929;
  t3950 = t2196*t3948;
  t3954 = t3932 + t3950;
  t4002 = t2196*t3929;
  t4003 = t606*t3948;
  t4005 = t4002 + t4003;
  t4076 = t1434*t1829*t1161;
  t4082 = t1819*t1853;
  t4087 = t4076 + t4082;
  t4099 = -1.*t1027*t4087;
  t4100 = -1.*t3063*t2008;
  t4101 = t4099 + t4100;
  t4119 = t1027*t3063;
  t4120 = -1.*t4087*t2008;
  t4150 = t4119 + t4120;
  t4105 = t1160*t4101;
  t4156 = t1948*t4150;
  t4160 = t4105 + t4156;
  t4174 = t1948*t4101;
  t4182 = -1.*t1160*t4150;
  t4183 = t4174 + t4182;
  t4171 = -1.*t799*t4160;
  t4185 = t2067*t4183;
  t4191 = t4171 + t4185;
  t4207 = t2067*t4160;
  t4212 = t799*t4183;
  t4213 = t4207 + t4212;
  t4197 = t606*t4191;
  t4215 = t2196*t4213;
  t4217 = t4197 + t4215;
  t4263 = t2196*t4191;
  t4268 = -1.*t606*t4213;
  t4271 = t4263 + t4268;
  t4376 = t1027*t4087;
  t4377 = t3063*t2008;
  t4383 = t4376 + t4377;
  t4384 = -1.*t1160*t4383;
  t4386 = t4384 + t4156;
  t4393 = -1.*t1948*t4383;
  t4402 = t4393 + t4182;
  t4388 = -1.*t799*t4386;
  t4405 = t2067*t4402;
  t4410 = t4388 + t4405;
  t4429 = t2067*t4386;
  t4435 = t799*t4402;
  t4465 = t4429 + t4435;
  t4415 = t606*t4410;
  t4478 = t2196*t4465;
  t4482 = t4415 + t4478;
  t4501 = t2196*t4410;
  t4520 = -1.*t606*t4465;
  t4522 = t4501 + t4520;
  t4565 = t1948*t4383;
  t4578 = t1160*t4150;
  t4587 = t4565 + t4578;
  t4590 = -1.*t2067*t4587;
  t4629 = t4388 + t4590;
  t4641 = -1.*t799*t4587;
  t4643 = t4429 + t4641;
  t4633 = t606*t4629;
  t4644 = t2196*t4643;
  t4655 = t4633 + t4644;
  t4674 = t2196*t4629;
  t4690 = -1.*t606*t4643;
  t4699 = t4674 + t4690;
  t4742 = t799*t4386;
  t4746 = t2067*t4587;
  t4747 = t4742 + t4746;
  t4764 = -1.*t606*t4747;
  t4796 = t4764 + t4644;
  t4834 = -1.*t2196*t4747;
  t4836 = t4834 + t4690;
  t4805 = -1.*t283*t4796;
  t4850 = t2291*t4796;
  t4904 = t2196*t4747;
  t4905 = t606*t4643;
  t4908 = t4904 + t4905;
  t4962 = t1434*t1374;
  t4972 = t1382*t1456*t1481;
  t4974 = t4962 + t4972;
  t4987 = t1302*t4974;
  t4988 = t1374*t1382*t1456;
  t4989 = -1.*t1434*t1481;
  t4990 = t4988 + t4989;
  t4991 = t4990*t1809;
  t4999 = t4987 + t4991;
  t5001 = t1161*t4999;
  t5006 = -1.*t1829*t1382*t1853;
  t5011 = t5001 + t5006;
  t5013 = -1.*t1027*t1160*t5011;
  t5018 = -1.*t1948*t5011*t2008;
  t5027 = t5013 + t5018;
  t5043 = t1948*t1027*t5011;
  t5047 = -1.*t1160*t5011*t2008;
  t5048 = t5043 + t5047;
  t5028 = t799*t5027;
  t5074 = t2067*t5048;
  t5096 = t5028 + t5074;
  t5109 = t2067*t5027;
  t5114 = -1.*t799*t5048;
  t5121 = t5109 + t5114;
  t5100 = -1.*t606*t5096;
  t5125 = t2196*t5121;
  t5131 = t5100 + t5125;
  t5134 = t2196*t5096;
  t5153 = t606*t5121;
  t5164 = t5134 + t5153;
  t5307 = -1.*t4990*t1809;
  t5310 = t3743 + t5307;
  t5287 = t1302*t4990;
  t5289 = t3715*t1809;
  t5299 = t5287 + t5289;
  t5304 = t1027*t5299*t1853;
  t5320 = t5310*t2008;
  t5323 = t5304 + t5320;
  t5354 = t1027*t5310;
  t5372 = -1.*t5299*t1853*t2008;
  t5378 = t5354 + t5372;
  t5338 = -1.*t1160*t5323;
  t5391 = t1948*t5378;
  t5393 = t5338 + t5391;
  t5400 = t1948*t5323;
  t5401 = t1160*t5378;
  t5416 = t5400 + t5401;
  t5397 = t799*t5393;
  t5421 = t2067*t5416;
  t5427 = t5397 + t5421;
  t5443 = t2067*t5393;
  t5447 = -1.*t799*t5416;
  t5449 = t5443 + t5447;
  t5431 = -1.*t606*t5427;
  t5467 = t2196*t5449;
  t5473 = t5431 + t5467;
  t5488 = t2196*t5427;
  t5491 = t606*t5449;
  t5492 = t5488 + t5491;
  t5546 = -1.*t1302*t4974;
  t5548 = t5546 + t5307;
  t5517 = -1.*t4974*t1809;
  t5522 = t5287 + t5517;
  t5537 = t1027*t5522*t1853;
  t5551 = t5548*t2008;
  t5567 = t5537 + t5551;
  t5579 = t1027*t5548;
  t5585 = -1.*t5522*t1853*t2008;
  t5593 = t5579 + t5585;
  t5575 = -1.*t1160*t5567;
  t5602 = t1948*t5593;
  t5655 = t5575 + t5602;
  t5657 = t1948*t5567;
  t5671 = t1160*t5593;
  t5673 = t5657 + t5671;
  t5656 = t799*t5655;
  t5675 = t2067*t5673;
  t5681 = t5656 + t5675;
  t5692 = t2067*t5655;
  t5695 = -1.*t799*t5673;
  t5704 = t5692 + t5695;
  t5689 = -1.*t606*t5681;
  t5705 = t2196*t5704;
  t5722 = t5689 + t5705;
  t5725 = t2196*t5681;
  t5726 = t606*t5704;
  t5727 = t5725 + t5726;
  t5854 = t1829*t1374*t1302*t1382;
  t5857 = -1.*t1829*t1382*t1481*t1809;
  t5858 = t5854 + t5857;
  t5810 = -1.*t1161*t1382*t1456;
  t5814 = t1829*t1302*t1382*t1481;
  t5827 = t1829*t1374*t1382*t1809;
  t5831 = t5814 + t5827;
  t5833 = t5831*t1853;
  t5846 = t5810 + t5833;
  t5849 = t1027*t5846;
  t5866 = t5858*t2008;
  t5867 = t5849 + t5866;
  t5872 = t1027*t5858;
  t5877 = -1.*t5846*t2008;
  t5881 = t5872 + t5877;
  t5869 = -1.*t1160*t5867;
  t5884 = t1948*t5881;
  t5892 = t5869 + t5884;
  t5901 = t1948*t5867;
  t5916 = t1160*t5881;
  t5922 = t5901 + t5916;
  t5893 = t799*t5892;
  t5936 = t2067*t5922;
  t5948 = t5893 + t5936;
  t5974 = t2067*t5892;
  t5995 = -1.*t799*t5922;
  t6024 = t5974 + t5995;
  t5956 = -1.*t606*t5948;
  t6034 = t2196*t6024;
  t6036 = t5956 + t6034;
  t6047 = t2196*t5948;
  t6048 = t606*t6024;
  t6051 = t6047 + t6048;
  t6137 = t1829*t1161*t1382;
  t6141 = t4999*t1853;
  t6143 = t6137 + t6141;
  t6145 = -1.*t1027*t6143;
  t6155 = -1.*t5522*t2008;
  t6156 = t6145 + t6155;
  t6158 = t1027*t5522;
  t6163 = -1.*t6143*t2008;
  t6178 = t6158 + t6163;
  t6157 = t1160*t6156;
  t6183 = t1948*t6178;
  t6187 = t6157 + t6183;
  t6193 = t1948*t6156;
  t6195 = -1.*t1160*t6178;
  t6202 = t6193 + t6195;
  t6188 = -1.*t799*t6187;
  t6219 = t2067*t6202;
  t6221 = t6188 + t6219;
  t6237 = t2067*t6187;
  t6239 = t799*t6202;
  t6244 = t6237 + t6239;
  t6233 = t606*t6221;
  t6249 = t2196*t6244;
  t6264 = t6233 + t6249;
  t6277 = t2196*t6221;
  t6283 = -1.*t606*t6244;
  t6295 = t6277 + t6283;
  t6357 = t1027*t6143;
  t6358 = t5522*t2008;
  t6360 = t6357 + t6358;
  t6365 = -1.*t1160*t6360;
  t6381 = t6365 + t6183;
  t6388 = -1.*t1948*t6360;
  t6391 = t6388 + t6195;
  t6387 = -1.*t799*t6381;
  t6400 = t2067*t6391;
  t6404 = t6387 + t6400;
  t6409 = t2067*t6381;
  t6435 = t799*t6391;
  t6470 = t6409 + t6435;
  t6406 = t606*t6404;
  t6475 = t2196*t6470;
  t6476 = t6406 + t6475;
  t6486 = t2196*t6404;
  t6492 = -1.*t606*t6470;
  t6494 = t6486 + t6492;
  t6553 = t1948*t6360;
  t6554 = t1160*t6178;
  t6559 = t6553 + t6554;
  t6575 = -1.*t2067*t6559;
  t6579 = t6387 + t6575;
  t6602 = -1.*t799*t6559;
  t6607 = t6409 + t6602;
  t6582 = t606*t6579;
  t6609 = t2196*t6607;
  t6617 = t6582 + t6609;
  t6621 = t2196*t6579;
  t6622 = -1.*t606*t6607;
  t6623 = t6621 + t6622;
  t6680 = t799*t6381;
  t6686 = t2067*t6559;
  t6687 = t6680 + t6686;
  t6698 = -1.*t606*t6687;
  t6699 = t6698 + t6609;
  t6711 = -1.*t2196*t6687;
  t6716 = t6711 + t6622;
  t6705 = -1.*t283*t6699;
  t6725 = t2291*t6699;
  t6756 = t2196*t6687;
  t6764 = t606*t6607;
  t6766 = t6756 + t6764;
  t4929 = -1.*t283*t4908;
  t4933 = t4850 + t4929;
  t6844 = t1829*t1302*t1481;
  t6845 = t1829*t1374*t1809;
  t6846 = t6844 + t6845;
  t6856 = t1161*t6846;
  t6864 = t1456*t1853;
  t6867 = t6856 + t6864;
  t6871 = -1.*t1027*t1160*t6867;
  t6875 = -1.*t1948*t6867*t2008;
  t6876 = t6871 + t6875;
  t6885 = t1948*t1027*t6867;
  t6889 = -1.*t1160*t6867*t2008;
  t6892 = t6885 + t6889;
  t6883 = t799*t6876;
  t6895 = t2067*t6892;
  t6901 = t6883 + t6895;
  t6913 = t2067*t6876;
  t6915 = -1.*t799*t6892;
  t6916 = t6913 + t6915;
  t6908 = -1.*t606*t6901;
  t6917 = t2196*t6916;
  t6919 = t6908 + t6917;
  t6922 = t2196*t6901;
  t6923 = t606*t6916;
  t6925 = t6922 + t6923;
  t6999 = -1.*t1829*t1302*t1481;
  t7001 = -1.*t1829*t1374*t1809;
  t7005 = t6999 + t7001;
  t6982 = t1829*t1374*t1302;
  t6984 = -1.*t1829*t1481*t1809;
  t6994 = t6982 + t6984;
  t6997 = t1027*t6994*t1853;
  t7010 = t7005*t2008;
  t7013 = t6997 + t7010;
  t7026 = t1027*t7005;
  t7046 = -1.*t6994*t1853*t2008;
  t7059 = t7026 + t7046;
  t7021 = -1.*t1160*t7013;
  t7061 = t1948*t7059;
  t7069 = t7021 + t7061;
  t7072 = t1948*t7013;
  t7076 = t1160*t7059;
  t7083 = t7072 + t7076;
  t7071 = t799*t7069;
  t7096 = t2067*t7083;
  t7101 = t7071 + t7096;
  t7103 = t2067*t7069;
  t7104 = -1.*t799*t7083;
  t7105 = t7103 + t7104;
  t7102 = -1.*t606*t7101;
  t7108 = t2196*t7105;
  t7112 = t7102 + t7108;
  t7122 = t2196*t7101;
  t7123 = t606*t7105;
  t7124 = t7122 + t7123;
  t7120 = t283*t7112;
  t7126 = t2291*t7124;
  t7136 = t7120 + t7126;
  t7142 = 0.642788*t7136;
  t7149 = t2291*t7112;
  t7151 = -1.*t283*t7124;
  t7156 = t7149 + t7151;
  t7157 = 0.766044*t7156;
  t7168 = t7142 + t7157;
  t7185 = -1.*t1161*t1456;
  t7187 = t6846*t1853;
  t7191 = t7185 + t7187;
  t7195 = -1.*t1027*t7191;
  t7199 = -1.*t6994*t2008;
  t7204 = t7195 + t7199;
  t7219 = t1027*t6994;
  t7224 = -1.*t7191*t2008;
  t7227 = t7219 + t7224;
  t7217 = t1160*t7204;
  t7228 = t1948*t7227;
  t7241 = t7217 + t7228;
  t7245 = t1948*t7204;
  t7250 = -1.*t1160*t7227;
  t7251 = t7245 + t7250;
  t7242 = -1.*t799*t7241;
  t7255 = t2067*t7251;
  t7256 = t7242 + t7255;
  t7260 = t2067*t7241;
  t7261 = t799*t7251;
  t7263 = t7260 + t7261;
  t7257 = t606*t7256;
  t7268 = t2196*t7263;
  t7273 = t7257 + t7268;
  t7280 = t2196*t7256;
  t7284 = -1.*t606*t7263;
  t7285 = t7280 + t7284;
  t7319 = t1027*t7191;
  t7324 = t6994*t2008;
  t7327 = t7319 + t7324;
  t7345 = -1.*t1160*t7327;
  t7350 = t7345 + t7228;
  t7358 = -1.*t1948*t7327;
  t7368 = t7358 + t7250;
  t7357 = -1.*t799*t7350;
  t7369 = t2067*t7368;
  t7374 = t7357 + t7369;
  t7377 = t2067*t7350;
  t7378 = t799*t7368;
  t7379 = t7377 + t7378;
  t7376 = t606*t7374;
  t7385 = t2196*t7379;
  t7390 = t7376 + t7385;
  t7396 = t2196*t7374;
  t7398 = -1.*t606*t7379;
  t7404 = t7396 + t7398;
  t7435 = t1948*t7327;
  t7438 = t1160*t7227;
  t7441 = t7435 + t7438;
  t7444 = -1.*t2067*t7441;
  t7445 = t7357 + t7444;
  t7461 = -1.*t799*t7441;
  t7464 = t7377 + t7461;
  t7454 = t606*t7445;
  t7469 = t2196*t7464;
  t7478 = t7454 + t7469;
  t7491 = t2196*t7445;
  t7502 = -1.*t606*t7464;
  t7504 = t7491 + t7502;
  t7527 = t799*t7350;
  t7531 = t2067*t7441;
  t7532 = t7527 + t7531;
  t7534 = -1.*t606*t7532;
  t7535 = t7534 + t7469;
  t7546 = -1.*t2196*t7532;
  t7553 = t7546 + t7502;
  t7538 = -1.*t283*t7535;
  t7564 = t2291*t7535;
  t7572 = t2196*t7532;
  t7574 = t606*t7464;
  t7575 = t7572 + t7574;
  t7629 = -1.*t1374*t1302*t1456;
  t7630 = t1456*t1481*t1809;
  t7636 = t7629 + t7630;
  t7613 = -1.*t1829*t1161;
  t7614 = -1.*t1302*t1456*t1481;
  t7615 = -1.*t1374*t1456*t1809;
  t7616 = t7614 + t7615;
  t7618 = t7616*t1853;
  t7622 = t7613 + t7618;
  t7625 = t1027*t7622;
  t7637 = t7636*t2008;
  t7641 = t7625 + t7637;
  t7645 = t1027*t7636;
  t7646 = -1.*t7622*t2008;
  t7647 = t7645 + t7646;
  t7644 = -1.*t1160*t7641;
  t7650 = t1948*t7647;
  t7653 = t7644 + t7650;
  t7657 = t1948*t7641;
  t7660 = t1160*t7647;
  t7661 = t7657 + t7660;
  t7655 = t799*t7653;
  t7662 = t2067*t7661;
  t7663 = t7655 + t7662;
  t7667 = t2067*t7653;
  t7676 = -1.*t799*t7661;
  t7681 = t7667 + t7676;
  t7666 = -1.*t606*t7663;
  t7683 = t2196*t7681;
  t7685 = t7666 + t7683;
  t7691 = t2196*t7663;
  t7692 = t606*t7681;
  t7700 = t7691 + t7692;
  t2275 = t283*t2245;
  t2382 = t2291*t2335;
  t2394 = t2275 + t2382;
  t2404 = t2291*t2245;
  t2439 = -1.*t283*t2335;
  t2475 = t2404 + t2439;
  t2976 = t283*t2970;
  t3011 = t2291*t3001;
  t3018 = t2976 + t3011;
  t3024 = t2291*t2970;
  t3029 = -1.*t283*t3001;
  t3031 = t3024 + t3029;
  t3243 = t283*t3242;
  t3272 = t2291*t3264;
  t3300 = t3243 + t3272;
  t3326 = t2291*t3242;
  t3332 = -1.*t283*t3264;
  t3341 = t3326 + t3332;
  t3635 = t283*t3631;
  t3659 = t2291*t3653;
  t3660 = t3635 + t3659;
  t3672 = t2291*t3631;
  t3679 = -1.*t283*t3653;
  t3684 = t3672 + t3679;
  t3961 = t283*t3954;
  t4006 = t2291*t4005;
  t4009 = t3961 + t4006;
  t4038 = t2291*t3954;
  t4042 = -1.*t283*t4005;
  t4067 = t4038 + t4042;
  t4222 = -1.*t283*t4217;
  t4288 = t2291*t4271;
  t4300 = t4222 + t4288;
  t4327 = t2291*t4217;
  t4328 = t283*t4271;
  t4338 = t4327 + t4328;
  t4496 = -1.*t283*t4482;
  t4531 = t2291*t4522;
  t4532 = t4496 + t4531;
  t4551 = t2291*t4482;
  t4552 = t283*t4522;
  t4555 = t4551 + t4552;
  t4662 = -1.*t283*t4655;
  t4700 = t2291*t4699;
  t4701 = t4662 + t4700;
  t4717 = t2291*t4655;
  t4720 = t283*t4699;
  t4723 = t4717 + t4720;
  t4838 = t2291*t4836;
  t4839 = t4805 + t4838;
  t4861 = t283*t4836;
  t4867 = t4850 + t4861;
  t4918 = -1.*t2291*t4908;
  t4922 = t4805 + t4918;
  t5133 = t283*t5131;
  t5201 = t2291*t5164;
  t5202 = t5133 + t5201;
  t5227 = t2291*t5131;
  t5239 = -1.*t283*t5164;
  t5255 = t5227 + t5239;
  t5484 = t283*t5473;
  t5494 = t2291*t5492;
  t5495 = t5484 + t5494;
  t5504 = t2291*t5473;
  t5505 = -1.*t283*t5492;
  t5506 = t5504 + t5505;
  t5723 = t283*t5722;
  t5748 = t2291*t5727;
  t5759 = t5723 + t5748;
  t5765 = t2291*t5722;
  t5778 = -1.*t283*t5727;
  t5787 = t5765 + t5778;
  t6040 = t283*t6036;
  t6060 = t2291*t6051;
  t6067 = t6040 + t6060;
  t6106 = t2291*t6036;
  t6117 = -1.*t283*t6051;
  t6123 = t6106 + t6117;
  t6275 = -1.*t283*t6264;
  t6301 = t2291*t6295;
  t6302 = t6275 + t6301;
  t6305 = t2291*t6264;
  t6318 = t283*t6295;
  t6319 = t6305 + t6318;
  t6477 = -1.*t283*t6476;
  t6496 = t2291*t6494;
  t6498 = t6477 + t6496;
  t6512 = t2291*t6476;
  t6513 = t283*t6494;
  t6525 = t6512 + t6513;
  t6620 = -1.*t283*t6617;
  t6625 = t2291*t6623;
  t6629 = t6620 + t6625;
  t6648 = t2291*t6617;
  t6651 = t283*t6623;
  t6670 = t6648 + t6651;
  t6718 = t2291*t6716;
  t6719 = t6705 + t6718;
  t6728 = t283*t6716;
  t6729 = t6725 + t6728;
  t6768 = -1.*t2291*t6766;
  t6770 = t6705 + t6768;
  t6781 = -1.*t283*t6766;
  t6782 = t6725 + t6781;
  t6809 = t283*t4796;
  t6822 = t2291*t4908;
  t6823 = t6809 + t6822;
  t4938 = 0.642788*t4933;
  t6920 = t283*t6919;
  t6929 = t2291*t6925;
  t6932 = t6920 + t6929;
  t6937 = t2291*t6919;
  t6938 = -1.*t283*t6925;
  t6950 = t6937 + t6938;
  t8139 = -0.766044*t7136;
  t8140 = 0.642788*t7156;
  t8141 = t8139 + t8140;
  t7277 = -1.*t283*t7273;
  t7295 = t2291*t7285;
  t7299 = t7277 + t7295;
  t7310 = t2291*t7273;
  t7313 = t283*t7285;
  t7314 = t7310 + t7313;
  t7391 = -1.*t283*t7390;
  t7406 = t2291*t7404;
  t7407 = t7391 + t7406;
  t7409 = t2291*t7390;
  t7416 = t283*t7404;
  t7418 = t7409 + t7416;
  t7480 = -1.*t283*t7478;
  t7505 = t2291*t7504;
  t7512 = t7480 + t7505;
  t7516 = t2291*t7478;
  t7518 = t283*t7504;
  t7520 = t7516 + t7518;
  t7558 = t2291*t7553;
  t7560 = t7538 + t7558;
  t7566 = t283*t7553;
  t7568 = t7564 + t7566;
  t7576 = -1.*t2291*t7575;
  t7586 = t7538 + t7576;
  t7596 = -1.*t283*t7575;
  t7597 = t7564 + t7596;
  t7690 = t283*t7685;
  t7704 = t2291*t7700;
  t7710 = t7690 + t7704;
  t7713 = t2291*t7685;
  t7715 = -1.*t283*t7700;
  t7717 = t7713 + t7715;
  p_output1[0]=(0.642788*t4009 + 0.766044*t4067)*var2[3] + (0.642788*t3660 + 0.766044*t3684)*var2[4] + (0.642788*t3018 + 0.766044*t3031)*var2[5] + (0.642788*t3300 + 0.766044*t3341)*var2[6] + (0.642788*t2394 + 0.766044*t2475)*var2[7] + (0.766044*t4300 + 0.642788*t4338)*var2[8] + (0.766044*t4532 + 0.642788*t4555)*var2[9] + (0.766044*t4701 + 0.642788*t4723)*var2[10] + (0.766044*t4839 + 0.642788*t4867)*var2[11] + (0.766044*t4922 + t4938)*var2[12];
  p_output1[1]=(0.766044*t4933 + 0.642788*t6823)*var2[3] + (0.642788*t6067 + 0.766044*t6123)*var2[4] + (0.642788*t5495 + 0.766044*t5506)*var2[5] + (0.642788*t5759 + 0.766044*t5787)*var2[6] + (0.642788*t5202 + 0.766044*t5255)*var2[7] + (0.766044*t6302 + 0.642788*t6319)*var2[8] + (0.766044*t6498 + 0.642788*t6525)*var2[9] + (0.766044*t6629 + 0.642788*t6670)*var2[10] + (0.766044*t6719 + 0.642788*t6729)*var2[11] + (0.766044*t6770 + 0.642788*t6782)*var2[12];
  p_output1[2]=(0.642788*t7710 + 0.766044*t7717)*var2[4] + t7168*var2[5] + t7168*var2[6] + (0.642788*t6932 + 0.766044*t6950)*var2[7] + (0.766044*t7299 + 0.642788*t7314)*var2[8] + (0.766044*t7407 + 0.642788*t7418)*var2[9] + (0.766044*t7512 + 0.642788*t7520)*var2[10] + (0.766044*t7560 + 0.642788*t7568)*var2[11] + (0.766044*t7586 + 0.642788*t7597)*var2[12];
  p_output1[3]=(t1382*t1829*t1853 + t1161*t3784)*var2[3] + (t1434*t1456*t1853 + t1161*t3404)*var2[4] + t1161*t2645*var2[5] + t1161*t3063*var2[6] + (-1.*t1161*t1434*t1829 - 1.*t1819*t1853)*var2[7];
  p_output1[4]=t1887*var2[3] + (t1382*t1456*t1853 + t1161*t5831)*var2[4] + t1161*t5299*var2[5] + t1161*t5522*var2[6] + (t3694 - 1.*t1853*t4999)*var2[7];
  p_output1[5]=(t1829*t1853 + t1161*t7616)*var2[4] + t1161*t6994*var2[5] + t1161*t6994*var2[6] + (t1161*t1456 - 1.*t1853*t6846)*var2[7];
  p_output1[6]=(-0.766044*t4009 + 0.642788*t4067)*var2[3] + (-0.766044*t3660 + 0.642788*t3684)*var2[4] + (-0.766044*t3018 + 0.642788*t3031)*var2[5] + (-0.766044*t3300 + 0.642788*t3341)*var2[6] + (-0.766044*t2394 + 0.642788*t2475)*var2[7] + (0.642788*t4300 - 0.766044*t4338)*var2[8] + (0.642788*t4532 - 0.766044*t4555)*var2[9] + (0.642788*t4701 - 0.766044*t4723)*var2[10] + (0.642788*t4839 - 0.766044*t4867)*var2[11] + (0.642788*t4922 - 0.766044*t4933)*var2[12];
  p_output1[7]=(t4938 - 0.766044*t6823)*var2[3] + (-0.766044*t6067 + 0.642788*t6123)*var2[4] + (-0.766044*t5495 + 0.642788*t5506)*var2[5] + (-0.766044*t5759 + 0.642788*t5787)*var2[6] + (-0.766044*t5202 + 0.642788*t5255)*var2[7] + (0.642788*t6302 - 0.766044*t6319)*var2[8] + (0.642788*t6498 - 0.766044*t6525)*var2[9] + (0.642788*t6629 - 0.766044*t6670)*var2[10] + (0.642788*t6719 - 0.766044*t6729)*var2[11] + (0.642788*t6770 - 0.766044*t6782)*var2[12];
  p_output1[8]=(-0.766044*t7710 + 0.642788*t7717)*var2[4] + t8141*var2[5] + t8141*var2[6] + (-0.766044*t6932 + 0.642788*t6950)*var2[7] + (0.642788*t7299 - 0.766044*t7314)*var2[8] + (0.642788*t7407 - 0.766044*t7418)*var2[9] + (0.642788*t7512 - 0.766044*t7520)*var2[10] + (0.642788*t7560 - 0.766044*t7568)*var2[11] + (0.642788*t7586 - 0.766044*t7597)*var2[12];
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 20 && ncols == 1) && 
      !(mrows == 1 && ncols == 20))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 20 && ncols == 1) && 
      !(mrows == 1 && ncols == 20))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 3, (mwSize) 3, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "dR_LeftToeBottomBack_mex.hh"

namespace SymExpression
{

void dR_LeftToeBottomBack_mex_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
