/*
 * Automatically Generated from Mathematica.
 * Mon 11 May 2020 22:27:04 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t1018;
  double t912;
  double t1190;
  double t914;
  double t1236;
  double t878;
  double t889;
  double t996;
  double t1408;
  double t1415;
  double t1554;
  double t1563;
  double t1829;
  double t2287;
  double t2447;
  double t2845;
  double t3152;
  double t3167;
  double t3182;
  double t3313;
  double t3512;
  double t3658;
  double t3703;
  double t349;
  double t458;
  double t3744;
  double t4300;
  double t3701;
  double t3983;
  double t4034;
  double t344;
  double t4346;
  double t4383;
  double t4384;
  double t4415;
  double t4037;
  double t4396;
  double t4397;
  double t163;
  double t4432;
  double t4442;
  double t4481;
  double t56;
  double t4533;
  double t4544;
  double t4560;
  double t4583;
  double t4585;
  double t4591;
  double t4532;
  double t4563;
  double t4575;
  double t4581;
  double t4595;
  double t4603;
  double t4620;
  double t4627;
  double t4644;
  double t4618;
  double t4662;
  double t4667;
  double t4671;
  double t4673;
  double t4682;
  double t4499;
  double t4669;
  double t4686;
  double t4704;
  double t4733;
  double t4744;
  double t4746;
  double t4947;
  double t4953;
  double t4869;
  double t4918;
  double t4927;
  double t4954;
  double t4957;
  double t4998;
  double t5000;
  double t5001;
  double t4992;
  double t5012;
  double t5017;
  double t5031;
  double t5036;
  double t5039;
  double t5028;
  double t5044;
  double t5045;
  double t5056;
  double t5070;
  double t5079;
  double t5243;
  double t5246;
  double t5267;
  double t5179;
  double t5193;
  double t5195;
  double t5216;
  double t5217;
  double t5218;
  double t5226;
  double t5268;
  double t5275;
  double t5294;
  double t5302;
  double t5317;
  double t5281;
  double t5320;
  double t5344;
  double t5361;
  double t5365;
  double t5382;
  double t5359;
  double t5387;
  double t5405;
  double t5427;
  double t5429;
  double t5435;
  double t5575;
  double t5576;
  double t5578;
  double t5524;
  double t5530;
  double t5532;
  double t5627;
  double t5629;
  double t5632;
  double t5522;
  double t5557;
  double t5597;
  double t5606;
  double t5616;
  double t5617;
  double t5626;
  double t5638;
  double t5645;
  double t5656;
  double t5659;
  double t5681;
  double t5650;
  double t5683;
  double t5688;
  double t5692;
  double t5695;
  double t5698;
  double t5691;
  double t5710;
  double t5727;
  double t5739;
  double t5741;
  double t5754;
  double t5847;
  double t5852;
  double t5858;
  double t5868;
  double t5872;
  double t5894;
  double t5896;
  double t5897;
  double t5899;
  double t5895;
  double t5906;
  double t5939;
  double t5954;
  double t5955;
  double t5964;
  double t5953;
  double t5968;
  double t5970;
  double t5972;
  double t5981;
  double t5982;
  double t6053;
  double t6063;
  double t6072;
  double t6077;
  double t6081;
  double t6093;
  double t6096;
  double t6082;
  double t6100;
  double t6103;
  double t6107;
  double t6117;
  double t6119;
  double t6181;
  double t6195;
  double t6197;
  double t6211;
  double t6212;
  double t6220;
  double t6221;
  double t6226;
  double t6252;
  double t6254;
  double t6259;
  double t6239;
  double t6264;
  double t6266;
  double t6270;
  double t6354;
  double t6357;
  double t6363;
  double t6366;
  double t6372;
  double t6373;
  double t6374;
  double t6379;
  double t6380;
  double t6382;
  double t6389;
  double t6396;
  double t6399;
  double t6405;
  double t6406;
  double t6417;
  double t6424;
  double t6429;
  double t6415;
  double t6442;
  double t6446;
  double t6449;
  double t6456;
  double t6460;
  double t6531;
  double t6538;
  double t6513;
  double t6514;
  double t6518;
  double t6530;
  double t6550;
  double t6563;
  double t6568;
  double t6569;
  double t6570;
  double t6565;
  double t6577;
  double t6578;
  double t6584;
  double t6590;
  double t6599;
  double t6581;
  double t6600;
  double t6606;
  double t6610;
  double t6618;
  double t6621;
  double t6669;
  double t6670;
  double t6653;
  double t6660;
  double t6664;
  double t6677;
  double t6682;
  double t6699;
  double t6706;
  double t6708;
  double t6698;
  double t6715;
  double t6716;
  double t6727;
  double t6730;
  double t6735;
  double t6724;
  double t6736;
  double t6737;
  double t6742;
  double t6747;
  double t6753;
  double t6810;
  double t6811;
  double t6813;
  double t6781;
  double t6784;
  double t6786;
  double t6791;
  double t6796;
  double t6799;
  double t6803;
  double t6818;
  double t6826;
  double t6828;
  double t6831;
  double t6832;
  double t6827;
  double t6834;
  double t6835;
  double t6844;
  double t6845;
  double t6846;
  double t6839;
  double t6847;
  double t6849;
  double t6855;
  double t6857;
  double t6861;
  double t6886;
  double t6891;
  double t6893;
  double t6897;
  double t6898;
  double t6910;
  double t6914;
  double t6919;
  double t6928;
  double t6913;
  double t6929;
  double t6930;
  double t6938;
  double t6941;
  double t6944;
  double t6937;
  double t6951;
  double t6952;
  double t6960;
  double t6962;
  double t6965;
  double t7001;
  double t7002;
  double t7013;
  double t7017;
  double t7025;
  double t7029;
  double t7032;
  double t7027;
  double t7033;
  double t7034;
  double t7036;
  double t7037;
  double t7045;
  double t7085;
  double t7093;
  double t7094;
  double t7102;
  double t7109;
  double t7119;
  double t7120;
  double t7129;
  double t7177;
  double t7178;
  double t7185;
  double t7156;
  double t7187;
  double t7189;
  double t7191;
  double t6326;
  double t6327;
  double t6338;
  double t7237;
  double t7244;
  double t7246;
  double t7248;
  double t7250;
  double t7255;
  double t7256;
  double t7257;
  double t7260;
  double t7262;
  double t7274;
  double t7278;
  double t7261;
  double t7280;
  double t7281;
  double t7293;
  double t7299;
  double t7303;
  double t7348;
  double t7351;
  double t7353;
  double t7330;
  double t7336;
  double t7338;
  double t7339;
  double t7358;
  double t7362;
  double t7374;
  double t7375;
  double t7377;
  double t7363;
  double t7379;
  double t7383;
  double t7389;
  double t7393;
  double t7404;
  double t7386;
  double t7405;
  double t7412;
  double t7422;
  double t7423;
  double t7424;
  double t7414;
  double t7426;
  double t7430;
  double t7433;
  double t7434;
  double t7437;
  double t7438;
  double t7439;
  double t7440;
  double t7445;
  double t7448;
  double t7453;
  double t7459;
  double t7460;
  double t7461;
  double t7465;
  double t7467;
  double t7472;
  double t7464;
  double t7476;
  double t7479;
  double t7486;
  double t7488;
  double t7489;
  double t7480;
  double t7502;
  double t7503;
  double t7508;
  double t7511;
  double t7521;
  double t7556;
  double t7560;
  double t7567;
  double t7572;
  double t7574;
  double t7584;
  double t7585;
  double t7581;
  double t7591;
  double t7593;
  double t7599;
  double t7604;
  double t7605;
  double t7649;
  double t7650;
  double t7652;
  double t7653;
  double t7655;
  double t7667;
  double t7674;
  double t7675;
  double t7704;
  double t7705;
  double t7706;
  double t7693;
  double t7708;
  double t7711;
  double t7713;
  double t7774;
  double t7778;
  double t7784;
  double t7743;
  double t7745;
  double t7763;
  double t7765;
  double t7766;
  double t7770;
  double t7773;
  double t7785;
  double t7792;
  double t7794;
  double t7827;
  double t7833;
  double t7793;
  double t7836;
  double t7839;
  double t7848;
  double t7853;
  double t7855;
  double t7845;
  double t7858;
  double t7860;
  double t7865;
  double t7867;
  double t7868;
  double t4404;
  double t4492;
  double t4497;
  double t4500;
  double t4508;
  double t4512;
  double t4727;
  double t4750;
  double t4754;
  double t4771;
  double t4809;
  double t4836;
  double t5047;
  double t5084;
  double t5085;
  double t5109;
  double t5114;
  double t5156;
  double t5406;
  double t5437;
  double t5465;
  double t5474;
  double t5485;
  double t5488;
  double t5730;
  double t5758;
  double t5766;
  double t5786;
  double t5808;
  double t5816;
  double t5971;
  double t5984;
  double t5991;
  double t5997;
  double t6000;
  double t6019;
  double t6105;
  double t6123;
  double t6125;
  double t6130;
  double t6142;
  double t6152;
  double t6213;
  double t6227;
  double t6236;
  double t6243;
  double t6271;
  double t6282;
  double t7957;
  double t6447;
  double t6469;
  double t6474;
  double t6482;
  double t6489;
  double t6492;
  double t6608;
  double t6625;
  double t6630;
  double t6633;
  double t6634;
  double t6641;
  double t6741;
  double t6756;
  double t6757;
  double t6762;
  double t6765;
  double t6767;
  double t6854;
  double t6862;
  double t6864;
  double t6868;
  double t6871;
  double t6879;
  double t6955;
  double t6971;
  double t6975;
  double t6978;
  double t6979;
  double t6983;
  double t7035;
  double t7046;
  double t7050;
  double t7059;
  double t7066;
  double t7068;
  double t7111;
  double t7137;
  double t7144;
  double t7157;
  double t7192;
  double t7193;
  double t8028;
  double t7203;
  double t7206;
  double t7207;
  double t6340;
  double t6344;
  double t7292;
  double t7306;
  double t7309;
  double t7317;
  double t7321;
  double t7322;
  double t8046;
  double t8048;
  double t8049;
  double t7507;
  double t7523;
  double t7525;
  double t7540;
  double t7543;
  double t7545;
  double t7595;
  double t7612;
  double t7613;
  double t7625;
  double t7627;
  double t7632;
  double t7665;
  double t7678;
  double t7688;
  double t7699;
  double t7715;
  double t7717;
  double t8075;
  double t7733;
  double t7734;
  double t7735;
  double t7863;
  double t7869;
  double t7870;
  double t7873;
  double t7876;
  double t7877;
  t1018 = Cos(var1[3]);
  t912 = Cos(var1[5]);
  t1190 = Sin(var1[4]);
  t914 = Sin(var1[3]);
  t1236 = Sin(var1[5]);
  t878 = Cos(var1[7]);
  t889 = Cos(var1[6]);
  t996 = -1.*t912*t914;
  t1408 = t1018*t1190*t1236;
  t1415 = t996 + t1408;
  t1554 = t889*t1415;
  t1563 = t1018*t912*t1190;
  t1829 = t914*t1236;
  t2287 = t1563 + t1829;
  t2447 = Sin(var1[6]);
  t2845 = t2287*t2447;
  t3152 = t1554 + t2845;
  t3167 = t878*t3152;
  t3182 = Cos(var1[4]);
  t3313 = Sin(var1[7]);
  t3512 = -1.*t1018*t3182*t3313;
  t3658 = t3167 + t3512;
  t3703 = Cos(var1[9]);
  t349 = Cos(var1[8]);
  t458 = Sin(var1[9]);
  t3744 = Sin(var1[8]);
  t4300 = Cos(var1[10]);
  t3701 = -1.*t349*t458*t3658;
  t3983 = -1.*t3703*t3658*t3744;
  t4034 = t3701 + t3983;
  t344 = Sin(var1[10]);
  t4346 = t3703*t349*t3658;
  t4383 = -1.*t458*t3658*t3744;
  t4384 = t4346 + t4383;
  t4415 = Cos(var1[11]);
  t4037 = t344*t4034;
  t4396 = t4300*t4384;
  t4397 = t4037 + t4396;
  t163 = Sin(var1[11]);
  t4432 = t4300*t4034;
  t4442 = -1.*t344*t4384;
  t4481 = t4432 + t4442;
  t56 = Cos(var1[12]);
  t4533 = t912*t914;
  t4544 = -1.*t1018*t1190*t1236;
  t4560 = t4533 + t4544;
  t4583 = t889*t4560;
  t4585 = -1.*t2287*t2447;
  t4591 = t4583 + t4585;
  t4532 = t889*t2287;
  t4563 = t4560*t2447;
  t4575 = t4532 + t4563;
  t4581 = t349*t4575*t3313;
  t4595 = t4591*t3744;
  t4603 = t4581 + t4595;
  t4620 = t349*t4591;
  t4627 = -1.*t4575*t3313*t3744;
  t4644 = t4620 + t4627;
  t4618 = -1.*t458*t4603;
  t4662 = t3703*t4644;
  t4667 = t4618 + t4662;
  t4671 = t3703*t4603;
  t4673 = t458*t4644;
  t4682 = t4671 + t4673;
  t4499 = Sin(var1[12]);
  t4669 = t344*t4667;
  t4686 = t4300*t4682;
  t4704 = t4669 + t4686;
  t4733 = t4300*t4667;
  t4744 = -1.*t344*t4682;
  t4746 = t4733 + t4744;
  t4947 = -1.*t889*t1415;
  t4953 = t4947 + t4585;
  t4869 = -1.*t1415*t2447;
  t4918 = t4532 + t4869;
  t4927 = t349*t4918*t3313;
  t4954 = t4953*t3744;
  t4957 = t4927 + t4954;
  t4998 = t349*t4953;
  t5000 = -1.*t4918*t3313*t3744;
  t5001 = t4998 + t5000;
  t4992 = -1.*t458*t4957;
  t5012 = t3703*t5001;
  t5017 = t4992 + t5012;
  t5031 = t3703*t4957;
  t5036 = t458*t5001;
  t5039 = t5031 + t5036;
  t5028 = t344*t5017;
  t5044 = t4300*t5039;
  t5045 = t5028 + t5044;
  t5056 = t4300*t5017;
  t5070 = -1.*t344*t5039;
  t5079 = t5056 + t5070;
  t5243 = t1018*t3182*t912*t889;
  t5246 = -1.*t1018*t3182*t1236*t2447;
  t5267 = t5243 + t5246;
  t5179 = -1.*t1018*t878*t1190;
  t5193 = t1018*t3182*t889*t1236;
  t5195 = t1018*t3182*t912*t2447;
  t5216 = t5193 + t5195;
  t5217 = t5216*t3313;
  t5218 = t5179 + t5217;
  t5226 = t349*t5218;
  t5268 = t5267*t3744;
  t5275 = t5226 + t5268;
  t5294 = t349*t5267;
  t5302 = -1.*t5218*t3744;
  t5317 = t5294 + t5302;
  t5281 = -1.*t458*t5275;
  t5320 = t3703*t5317;
  t5344 = t5281 + t5320;
  t5361 = t3703*t5275;
  t5365 = t458*t5317;
  t5382 = t5361 + t5365;
  t5359 = t344*t5344;
  t5387 = t4300*t5382;
  t5405 = t5359 + t5387;
  t5427 = t4300*t5344;
  t5429 = -1.*t344*t5382;
  t5435 = t5427 + t5429;
  t5575 = -1.*t912*t914*t1190;
  t5576 = t1018*t1236;
  t5578 = t5575 + t5576;
  t5524 = -1.*t1018*t912;
  t5530 = -1.*t914*t1190*t1236;
  t5532 = t5524 + t5530;
  t5627 = t889*t5578;
  t5629 = -1.*t5532*t2447;
  t5632 = t5627 + t5629;
  t5522 = -1.*t3182*t878*t914;
  t5557 = t889*t5532;
  t5597 = t5578*t2447;
  t5606 = t5557 + t5597;
  t5616 = t5606*t3313;
  t5617 = t5522 + t5616;
  t5626 = t349*t5617;
  t5638 = t5632*t3744;
  t5645 = t5626 + t5638;
  t5656 = t349*t5632;
  t5659 = -1.*t5617*t3744;
  t5681 = t5656 + t5659;
  t5650 = -1.*t458*t5645;
  t5683 = t3703*t5681;
  t5688 = t5650 + t5683;
  t5692 = t3703*t5645;
  t5695 = t458*t5681;
  t5698 = t5692 + t5695;
  t5691 = t344*t5688;
  t5710 = t4300*t5698;
  t5727 = t5691 + t5710;
  t5739 = t4300*t5688;
  t5741 = -1.*t344*t5698;
  t5754 = t5739 + t5741;
  t5847 = t1018*t3182*t878;
  t5852 = t3152*t3313;
  t5858 = t5847 + t5852;
  t5868 = -1.*t349*t5858;
  t5872 = -1.*t4918*t3744;
  t5894 = t5868 + t5872;
  t5896 = t349*t4918;
  t5897 = -1.*t5858*t3744;
  t5899 = t5896 + t5897;
  t5895 = t458*t5894;
  t5906 = t3703*t5899;
  t5939 = t5895 + t5906;
  t5954 = t3703*t5894;
  t5955 = -1.*t458*t5899;
  t5964 = t5954 + t5955;
  t5953 = -1.*t344*t5939;
  t5968 = t4300*t5964;
  t5970 = t5953 + t5968;
  t5972 = t4300*t5939;
  t5981 = t344*t5964;
  t5982 = t5972 + t5981;
  t6053 = t349*t5858;
  t6063 = t4918*t3744;
  t6072 = t6053 + t6063;
  t6077 = -1.*t458*t6072;
  t6081 = t6077 + t5906;
  t6093 = -1.*t3703*t6072;
  t6096 = t6093 + t5955;
  t6082 = -1.*t344*t6081;
  t6100 = t4300*t6096;
  t6103 = t6082 + t6100;
  t6107 = t4300*t6081;
  t6117 = t344*t6096;
  t6119 = t6107 + t6117;
  t6181 = t3703*t6072;
  t6195 = t458*t5899;
  t6197 = t6181 + t6195;
  t6211 = -1.*t4300*t6197;
  t6212 = t6082 + t6211;
  t6220 = -1.*t344*t6197;
  t6221 = t6107 + t6220;
  t6226 = t4415*t6221;
  t6252 = t344*t6081;
  t6254 = t4300*t6197;
  t6259 = t6252 + t6254;
  t6239 = -1.*t163*t6221;
  t6264 = -1.*t163*t6259;
  t6266 = t6264 + t6226;
  t6270 = t4499*t6266;
  t6354 = t1018*t912;
  t6357 = t914*t1190*t1236;
  t6363 = t6354 + t6357;
  t6366 = t889*t6363;
  t6372 = t912*t914*t1190;
  t6373 = -1.*t1018*t1236;
  t6374 = t6372 + t6373;
  t6379 = t6374*t2447;
  t6380 = t6366 + t6379;
  t6382 = t878*t6380;
  t6389 = -1.*t3182*t914*t3313;
  t6396 = t6382 + t6389;
  t6399 = -1.*t349*t458*t6396;
  t6405 = -1.*t3703*t6396*t3744;
  t6406 = t6399 + t6405;
  t6417 = t3703*t349*t6396;
  t6424 = -1.*t458*t6396*t3744;
  t6429 = t6417 + t6424;
  t6415 = t344*t6406;
  t6442 = t4300*t6429;
  t6446 = t6415 + t6442;
  t6449 = t4300*t6406;
  t6456 = -1.*t344*t6429;
  t6460 = t6449 + t6456;
  t6531 = -1.*t6374*t2447;
  t6538 = t5557 + t6531;
  t6513 = t889*t6374;
  t6514 = t5532*t2447;
  t6518 = t6513 + t6514;
  t6530 = t349*t6518*t3313;
  t6550 = t6538*t3744;
  t6563 = t6530 + t6550;
  t6568 = t349*t6538;
  t6569 = -1.*t6518*t3313*t3744;
  t6570 = t6568 + t6569;
  t6565 = -1.*t458*t6563;
  t6577 = t3703*t6570;
  t6578 = t6565 + t6577;
  t6584 = t3703*t6563;
  t6590 = t458*t6570;
  t6599 = t6584 + t6590;
  t6581 = t344*t6578;
  t6600 = t4300*t6599;
  t6606 = t6581 + t6600;
  t6610 = t4300*t6578;
  t6618 = -1.*t344*t6599;
  t6621 = t6610 + t6618;
  t6669 = -1.*t889*t6363;
  t6670 = t6669 + t6531;
  t6653 = -1.*t6363*t2447;
  t6660 = t6513 + t6653;
  t6664 = t349*t6660*t3313;
  t6677 = t6670*t3744;
  t6682 = t6664 + t6677;
  t6699 = t349*t6670;
  t6706 = -1.*t6660*t3313*t3744;
  t6708 = t6699 + t6706;
  t6698 = -1.*t458*t6682;
  t6715 = t3703*t6708;
  t6716 = t6698 + t6715;
  t6727 = t3703*t6682;
  t6730 = t458*t6708;
  t6735 = t6727 + t6730;
  t6724 = t344*t6716;
  t6736 = t4300*t6735;
  t6737 = t6724 + t6736;
  t6742 = t4300*t6716;
  t6747 = -1.*t344*t6735;
  t6753 = t6742 + t6747;
  t6810 = t3182*t912*t889*t914;
  t6811 = -1.*t3182*t914*t1236*t2447;
  t6813 = t6810 + t6811;
  t6781 = -1.*t878*t914*t1190;
  t6784 = t3182*t889*t914*t1236;
  t6786 = t3182*t912*t914*t2447;
  t6791 = t6784 + t6786;
  t6796 = t6791*t3313;
  t6799 = t6781 + t6796;
  t6803 = t349*t6799;
  t6818 = t6813*t3744;
  t6826 = t6803 + t6818;
  t6828 = t349*t6813;
  t6831 = -1.*t6799*t3744;
  t6832 = t6828 + t6831;
  t6827 = -1.*t458*t6826;
  t6834 = t3703*t6832;
  t6835 = t6827 + t6834;
  t6844 = t3703*t6826;
  t6845 = t458*t6832;
  t6846 = t6844 + t6845;
  t6839 = t344*t6835;
  t6847 = t4300*t6846;
  t6849 = t6839 + t6847;
  t6855 = t4300*t6835;
  t6857 = -1.*t344*t6846;
  t6861 = t6855 + t6857;
  t6886 = t3182*t878*t914;
  t6891 = t6380*t3313;
  t6893 = t6886 + t6891;
  t6897 = -1.*t349*t6893;
  t6898 = -1.*t6660*t3744;
  t6910 = t6897 + t6898;
  t6914 = t349*t6660;
  t6919 = -1.*t6893*t3744;
  t6928 = t6914 + t6919;
  t6913 = t458*t6910;
  t6929 = t3703*t6928;
  t6930 = t6913 + t6929;
  t6938 = t3703*t6910;
  t6941 = -1.*t458*t6928;
  t6944 = t6938 + t6941;
  t6937 = -1.*t344*t6930;
  t6951 = t4300*t6944;
  t6952 = t6937 + t6951;
  t6960 = t4300*t6930;
  t6962 = t344*t6944;
  t6965 = t6960 + t6962;
  t7001 = t349*t6893;
  t7002 = t6660*t3744;
  t7013 = t7001 + t7002;
  t7017 = -1.*t458*t7013;
  t7025 = t7017 + t6929;
  t7029 = -1.*t3703*t7013;
  t7032 = t7029 + t6941;
  t7027 = -1.*t344*t7025;
  t7033 = t4300*t7032;
  t7034 = t7027 + t7033;
  t7036 = t4300*t7025;
  t7037 = t344*t7032;
  t7045 = t7036 + t7037;
  t7085 = t3703*t7013;
  t7093 = t458*t6928;
  t7094 = t7085 + t7093;
  t7102 = -1.*t4300*t7094;
  t7109 = t7027 + t7102;
  t7119 = -1.*t344*t7094;
  t7120 = t7036 + t7119;
  t7129 = t4415*t7120;
  t7177 = t344*t7025;
  t7178 = t4300*t7094;
  t7185 = t7177 + t7178;
  t7156 = -1.*t163*t7120;
  t7187 = -1.*t163*t7185;
  t7189 = t7187 + t7129;
  t7191 = t4499*t7189;
  t6326 = t4415*t6259;
  t6327 = t163*t6221;
  t6338 = t6326 + t6327;
  t7237 = t3182*t889*t1236;
  t7244 = t3182*t912*t2447;
  t7246 = t7237 + t7244;
  t7248 = t878*t7246;
  t7250 = t1190*t3313;
  t7255 = t7248 + t7250;
  t7256 = -1.*t349*t458*t7255;
  t7257 = -1.*t3703*t7255*t3744;
  t7260 = t7256 + t7257;
  t7262 = t3703*t349*t7255;
  t7274 = -1.*t458*t7255*t3744;
  t7278 = t7262 + t7274;
  t7261 = t344*t7260;
  t7280 = t4300*t7278;
  t7281 = t7261 + t7280;
  t7293 = t4300*t7260;
  t7299 = -1.*t344*t7278;
  t7303 = t7293 + t7299;
  t7348 = -1.*t3182*t889*t1236;
  t7351 = -1.*t3182*t912*t2447;
  t7353 = t7348 + t7351;
  t7330 = t3182*t912*t889;
  t7336 = -1.*t3182*t1236*t2447;
  t7338 = t7330 + t7336;
  t7339 = t349*t7338*t3313;
  t7358 = t7353*t3744;
  t7362 = t7339 + t7358;
  t7374 = t349*t7353;
  t7375 = -1.*t7338*t3313*t3744;
  t7377 = t7374 + t7375;
  t7363 = -1.*t458*t7362;
  t7379 = t3703*t7377;
  t7383 = t7363 + t7379;
  t7389 = t3703*t7362;
  t7393 = t458*t7377;
  t7404 = t7389 + t7393;
  t7386 = t344*t7383;
  t7405 = t4300*t7404;
  t7412 = t7386 + t7405;
  t7422 = t4300*t7383;
  t7423 = -1.*t344*t7404;
  t7424 = t7422 + t7423;
  t7414 = -1.*t163*t7412;
  t7426 = t4415*t7424;
  t7430 = t7414 + t7426;
  t7433 = -1.*t56*t7430;
  t7434 = t4415*t7412;
  t7437 = t163*t7424;
  t7438 = t7434 + t7437;
  t7439 = t4499*t7438;
  t7440 = t7433 + t7439;
  t7445 = -1.*t878*t1190;
  t7448 = t7246*t3313;
  t7453 = t7445 + t7448;
  t7459 = -1.*t349*t7453;
  t7460 = -1.*t7338*t3744;
  t7461 = t7459 + t7460;
  t7465 = t349*t7338;
  t7467 = -1.*t7453*t3744;
  t7472 = t7465 + t7467;
  t7464 = t458*t7461;
  t7476 = t3703*t7472;
  t7479 = t7464 + t7476;
  t7486 = t3703*t7461;
  t7488 = -1.*t458*t7472;
  t7489 = t7486 + t7488;
  t7480 = -1.*t344*t7479;
  t7502 = t4300*t7489;
  t7503 = t7480 + t7502;
  t7508 = t4300*t7479;
  t7511 = t344*t7489;
  t7521 = t7508 + t7511;
  t7556 = t349*t7453;
  t7560 = t7338*t3744;
  t7567 = t7556 + t7560;
  t7572 = -1.*t458*t7567;
  t7574 = t7572 + t7476;
  t7584 = -1.*t3703*t7567;
  t7585 = t7584 + t7488;
  t7581 = -1.*t344*t7574;
  t7591 = t4300*t7585;
  t7593 = t7581 + t7591;
  t7599 = t4300*t7574;
  t7604 = t344*t7585;
  t7605 = t7599 + t7604;
  t7649 = t3703*t7567;
  t7650 = t458*t7472;
  t7652 = t7649 + t7650;
  t7653 = -1.*t4300*t7652;
  t7655 = t7581 + t7653;
  t7667 = -1.*t344*t7652;
  t7674 = t7599 + t7667;
  t7675 = t4415*t7674;
  t7704 = t344*t7574;
  t7705 = t4300*t7652;
  t7706 = t7704 + t7705;
  t7693 = -1.*t163*t7674;
  t7708 = -1.*t163*t7706;
  t7711 = t7708 + t7675;
  t7713 = t4499*t7711;
  t7774 = -1.*t912*t889*t1190;
  t7778 = t1190*t1236*t2447;
  t7784 = t7774 + t7778;
  t7743 = -1.*t3182*t878;
  t7745 = -1.*t889*t1190*t1236;
  t7763 = -1.*t912*t1190*t2447;
  t7765 = t7745 + t7763;
  t7766 = t7765*t3313;
  t7770 = t7743 + t7766;
  t7773 = t349*t7770;
  t7785 = t7784*t3744;
  t7792 = t7773 + t7785;
  t7794 = t349*t7784;
  t7827 = -1.*t7770*t3744;
  t7833 = t7794 + t7827;
  t7793 = -1.*t458*t7792;
  t7836 = t3703*t7833;
  t7839 = t7793 + t7836;
  t7848 = t3703*t7792;
  t7853 = t458*t7833;
  t7855 = t7848 + t7853;
  t7845 = t344*t7839;
  t7858 = t4300*t7855;
  t7860 = t7845 + t7858;
  t7865 = t4300*t7839;
  t7867 = -1.*t344*t7855;
  t7868 = t7865 + t7867;
  t4404 = -1.*t163*t4397;
  t4492 = t4415*t4481;
  t4497 = t4404 + t4492;
  t4500 = t4415*t4397;
  t4508 = t163*t4481;
  t4512 = t4500 + t4508;
  t4727 = -1.*t163*t4704;
  t4750 = t4415*t4746;
  t4754 = t4727 + t4750;
  t4771 = t4415*t4704;
  t4809 = t163*t4746;
  t4836 = t4771 + t4809;
  t5047 = -1.*t163*t5045;
  t5084 = t4415*t5079;
  t5085 = t5047 + t5084;
  t5109 = t4415*t5045;
  t5114 = t163*t5079;
  t5156 = t5109 + t5114;
  t5406 = -1.*t163*t5405;
  t5437 = t4415*t5435;
  t5465 = t5406 + t5437;
  t5474 = t4415*t5405;
  t5485 = t163*t5435;
  t5488 = t5474 + t5485;
  t5730 = -1.*t163*t5727;
  t5758 = t4415*t5754;
  t5766 = t5730 + t5758;
  t5786 = t4415*t5727;
  t5808 = t163*t5754;
  t5816 = t5786 + t5808;
  t5971 = t163*t5970;
  t5984 = t4415*t5982;
  t5991 = t5971 + t5984;
  t5997 = t4415*t5970;
  t6000 = -1.*t163*t5982;
  t6019 = t5997 + t6000;
  t6105 = t163*t6103;
  t6123 = t4415*t6119;
  t6125 = t6105 + t6123;
  t6130 = t4415*t6103;
  t6142 = -1.*t163*t6119;
  t6152 = t6130 + t6142;
  t6213 = t163*t6212;
  t6227 = t6213 + t6226;
  t6236 = t4415*t6212;
  t6243 = t6236 + t6239;
  t6271 = -1.*t4415*t6259;
  t6282 = t6271 + t6239;
  t7957 = t56*t6266;
  t6447 = -1.*t163*t6446;
  t6469 = t4415*t6460;
  t6474 = t6447 + t6469;
  t6482 = t4415*t6446;
  t6489 = t163*t6460;
  t6492 = t6482 + t6489;
  t6608 = -1.*t163*t6606;
  t6625 = t4415*t6621;
  t6630 = t6608 + t6625;
  t6633 = t4415*t6606;
  t6634 = t163*t6621;
  t6641 = t6633 + t6634;
  t6741 = -1.*t163*t6737;
  t6756 = t4415*t6753;
  t6757 = t6741 + t6756;
  t6762 = t4415*t6737;
  t6765 = t163*t6753;
  t6767 = t6762 + t6765;
  t6854 = -1.*t163*t6849;
  t6862 = t4415*t6861;
  t6864 = t6854 + t6862;
  t6868 = t4415*t6849;
  t6871 = t163*t6861;
  t6879 = t6868 + t6871;
  t6955 = t163*t6952;
  t6971 = t4415*t6965;
  t6975 = t6955 + t6971;
  t6978 = t4415*t6952;
  t6979 = -1.*t163*t6965;
  t6983 = t6978 + t6979;
  t7035 = t163*t7034;
  t7046 = t4415*t7045;
  t7050 = t7035 + t7046;
  t7059 = t4415*t7034;
  t7066 = -1.*t163*t7045;
  t7068 = t7059 + t7066;
  t7111 = t163*t7109;
  t7137 = t7111 + t7129;
  t7144 = t4415*t7109;
  t7157 = t7144 + t7156;
  t7192 = -1.*t4415*t7185;
  t7193 = t7192 + t7156;
  t8028 = t56*t7189;
  t7203 = t4415*t7185;
  t7206 = t163*t7120;
  t7207 = t7203 + t7206;
  t6340 = t56*t6338;
  t6344 = t6270 + t6340;
  t7292 = -1.*t163*t7281;
  t7306 = t4415*t7303;
  t7309 = t7292 + t7306;
  t7317 = t4415*t7281;
  t7321 = t163*t7303;
  t7322 = t7317 + t7321;
  t8046 = t4499*t7430;
  t8048 = t56*t7438;
  t8049 = t8046 + t8048;
  t7507 = t163*t7503;
  t7523 = t4415*t7521;
  t7525 = t7507 + t7523;
  t7540 = t4415*t7503;
  t7543 = -1.*t163*t7521;
  t7545 = t7540 + t7543;
  t7595 = t163*t7593;
  t7612 = t4415*t7605;
  t7613 = t7595 + t7612;
  t7625 = t4415*t7593;
  t7627 = -1.*t163*t7605;
  t7632 = t7625 + t7627;
  t7665 = t163*t7655;
  t7678 = t7665 + t7675;
  t7688 = t4415*t7655;
  t7699 = t7688 + t7693;
  t7715 = -1.*t4415*t7706;
  t7717 = t7715 + t7693;
  t8075 = t56*t7711;
  t7733 = t4415*t7706;
  t7734 = t163*t7674;
  t7735 = t7733 + t7734;
  t7863 = -1.*t163*t7860;
  t7869 = t4415*t7868;
  t7870 = t7863 + t7869;
  t7873 = t4415*t7860;
  t7876 = t163*t7868;
  t7877 = t7873 + t7876;
  p_output1[0]=(-1.*t56*t5766 + t4499*t5816)*var2[3] + (t4499*t5488 - 1.*t5465*t56)*var2[4] + (t4499*t4836 - 1.*t4754*t56)*var2[5] + (t4499*t5156 - 1.*t5085*t56)*var2[6] + (t4499*t4512 - 1.*t4497*t56)*var2[7] + (t4499*t5991 - 1.*t56*t6019)*var2[8] + (t4499*t6125 - 1.*t56*t6152)*var2[9] + (t4499*t6227 - 1.*t56*t6243)*var2[10] + (t6270 - 1.*t56*t6282)*var2[11] + t6344*var2[12];
  p_output1[1]=(-1.*t56*t6266 + t4499*t6338)*var2[3] + (-1.*t56*t6864 + t4499*t6879)*var2[4] + (-1.*t56*t6630 + t4499*t6641)*var2[5] + (-1.*t56*t6757 + t4499*t6767)*var2[6] + (-1.*t56*t6474 + t4499*t6492)*var2[7] + (t4499*t6975 - 1.*t56*t6983)*var2[8] + (t4499*t7050 - 1.*t56*t7068)*var2[9] + (t4499*t7137 - 1.*t56*t7157)*var2[10] + (t7191 - 1.*t56*t7193)*var2[11] + (t7191 + t56*t7207)*var2[12];
  p_output1[2]=(-1.*t56*t7870 + t4499*t7877)*var2[4] + t7440*var2[5] + t7440*var2[6] + (-1.*t56*t7309 + t4499*t7322)*var2[7] + (t4499*t7525 - 1.*t56*t7545)*var2[8] + (t4499*t7613 - 1.*t56*t7632)*var2[9] + (t4499*t7678 - 1.*t56*t7699)*var2[10] + (t7713 - 1.*t56*t7717)*var2[11] + (t7713 + t56*t7735)*var2[12];
  p_output1[3]=(t4499*t5766 + t56*t5816)*var2[3] + (t4499*t5465 + t5488*t56)*var2[4] + (t4499*t4754 + t4836*t56)*var2[5] + (t4499*t5085 + t5156*t56)*var2[6] + (t4497*t4499 + t4512*t56)*var2[7] + (t56*t5991 + t4499*t6019)*var2[8] + (t56*t6125 + t4499*t6152)*var2[9] + (t56*t6227 + t4499*t6243)*var2[10] + (t4499*t6282 + t7957)*var2[11] + (-1.*t4499*t6338 + t7957)*var2[12];
  p_output1[4]=t6344*var2[3] + (t4499*t6864 + t56*t6879)*var2[4] + (t4499*t6630 + t56*t6641)*var2[5] + (t4499*t6757 + t56*t6767)*var2[6] + (t4499*t6474 + t56*t6492)*var2[7] + (t56*t6975 + t4499*t6983)*var2[8] + (t56*t7050 + t4499*t7068)*var2[9] + (t56*t7137 + t4499*t7157)*var2[10] + (t4499*t7193 + t8028)*var2[11] + (-1.*t4499*t7207 + t8028)*var2[12];
  p_output1[5]=(t4499*t7870 + t56*t7877)*var2[4] + t8049*var2[5] + t8049*var2[6] + (t4499*t7309 + t56*t7322)*var2[7] + (t56*t7525 + t4499*t7545)*var2[8] + (t56*t7613 + t4499*t7632)*var2[9] + (t56*t7678 + t4499*t7699)*var2[10] + (t4499*t7717 + t8075)*var2[11] + (-1.*t4499*t7735 + t8075)*var2[12];
  p_output1[6]=(t6389 - 1.*t5606*t878)*var2[3] + (-1.*t1018*t1190*t3313 - 1.*t5216*t878)*var2[4] - 1.*t4575*t878*var2[5] - 1.*t4918*t878*var2[6] + t5858*var2[7];
  p_output1[7]=(t1018*t3182*t3313 - 1.*t3152*t878)*var2[3] + (-1.*t6791*t878 - 1.*t1190*t3313*t914)*var2[4] - 1.*t6518*t878*var2[5] - 1.*t6660*t878*var2[6] + t6893*var2[7];
  p_output1[8]=(-1.*t3182*t3313 - 1.*t7765*t878)*var2[4] - 1.*t7338*t878*var2[5] - 1.*t7338*t878*var2[6] + t7453*var2[7];
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 20 && ncols == 1) && 
      !(mrows == 1 && ncols == 20))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 20 && ncols == 1) && 
      !(mrows == 1 && ncols == 20))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 3, (mwSize) 3, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "dR_LeftToe_mex.hh"

namespace SymExpression
{

void dR_LeftToe_mex_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
