/*
 * Automatically Generated from Mathematica.
 * Mon 11 May 2020 22:20:38 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t655;
  double t546;
  double t670;
  double t621;
  double t696;
  double t501;
  double t522;
  double t641;
  double t698;
  double t700;
  double t708;
  double t752;
  double t756;
  double t757;
  double t775;
  double t797;
  double t824;
  double t832;
  double t866;
  double t881;
  double t893;
  double t898;
  double t919;
  double t474;
  double t482;
  double t944;
  double t988;
  double t904;
  double t955;
  double t963;
  double t441;
  double t1024;
  double t1042;
  double t1062;
  double t1126;
  double t977;
  double t1075;
  double t1097;
  double t414;
  double t1132;
  double t1142;
  double t1154;
  double t336;
  double t1293;
  double t1300;
  double t1311;
  double t1347;
  double t1365;
  double t1377;
  double t1284;
  double t1326;
  double t1333;
  double t1344;
  double t1407;
  double t1416;
  double t1428;
  double t1437;
  double t1485;
  double t1423;
  double t1487;
  double t1504;
  double t1538;
  double t1545;
  double t1558;
  double t1209;
  double t1531;
  double t1563;
  double t1569;
  double t1597;
  double t1610;
  double t1619;
  double t1703;
  double t1713;
  double t1692;
  double t1693;
  double t1696;
  double t1714;
  double t1718;
  double t1732;
  double t1735;
  double t1737;
  double t1724;
  double t1741;
  double t1744;
  double t1753;
  double t1755;
  double t1780;
  double t1747;
  double t1792;
  double t1797;
  double t1836;
  double t1847;
  double t1854;
  double t1988;
  double t1990;
  double t1993;
  double t1930;
  double t1934;
  double t1951;
  double t1953;
  double t1969;
  double t1975;
  double t1982;
  double t1995;
  double t2006;
  double t2015;
  double t2017;
  double t2018;
  double t2011;
  double t2020;
  double t2024;
  double t2029;
  double t2056;
  double t2066;
  double t2027;
  double t2067;
  double t2070;
  double t2083;
  double t2084;
  double t2092;
  double t2212;
  double t2218;
  double t2221;
  double t2181;
  double t2184;
  double t2203;
  double t2286;
  double t2287;
  double t2292;
  double t2170;
  double t2208;
  double t2258;
  double t2259;
  double t2261;
  double t2263;
  double t2270;
  double t2303;
  double t2324;
  double t2333;
  double t2356;
  double t2369;
  double t2332;
  double t2374;
  double t2376;
  double t2385;
  double t2388;
  double t2392;
  double t2380;
  double t2394;
  double t2405;
  double t2427;
  double t2430;
  double t2433;
  double t2494;
  double t2502;
  double t2519;
  double t2523;
  double t2527;
  double t2529;
  double t2558;
  double t2559;
  double t2566;
  double t2557;
  double t2567;
  double t2571;
  double t2584;
  double t2597;
  double t2611;
  double t2577;
  double t2613;
  double t2616;
  double t2626;
  double t2631;
  double t2651;
  double t2706;
  double t2710;
  double t2716;
  double t2718;
  double t2724;
  double t2735;
  double t2738;
  double t2731;
  double t2743;
  double t2749;
  double t2755;
  double t2761;
  double t2765;
  double t2811;
  double t2816;
  double t2819;
  double t2820;
  double t2843;
  double t2859;
  double t2866;
  double t2876;
  double t2916;
  double t2924;
  double t2925;
  double t2890;
  double t2927;
  double t2928;
  double t2932;
  double t2971;
  double t2972;
  double t2973;
  double t2976;
  double t2979;
  double t2984;
  double t2991;
  double t2993;
  double t2997;
  double t3000;
  double t3005;
  double t3007;
  double t3029;
  double t3030;
  double t3034;
  double t3043;
  double t3049;
  double t3051;
  double t3040;
  double t3057;
  double t3065;
  double t3077;
  double t3082;
  double t3083;
  double t3145;
  double t3151;
  double t3134;
  double t3135;
  double t3140;
  double t3142;
  double t3152;
  double t3153;
  double t3156;
  double t3170;
  double t3172;
  double t3154;
  double t3179;
  double t3186;
  double t3193;
  double t3195;
  double t3198;
  double t3189;
  double t3200;
  double t3201;
  double t3207;
  double t3215;
  double t3217;
  double t3259;
  double t3262;
  double t3253;
  double t3254;
  double t3256;
  double t3263;
  double t3271;
  double t3302;
  double t3308;
  double t3323;
  double t3289;
  double t3327;
  double t3345;
  double t3349;
  double t3354;
  double t3356;
  double t3346;
  double t3364;
  double t3366;
  double t3373;
  double t3377;
  double t3378;
  double t3442;
  double t3444;
  double t3446;
  double t3423;
  double t3427;
  double t3431;
  double t3432;
  double t3435;
  double t3437;
  double t3439;
  double t3465;
  double t3476;
  double t3488;
  double t3491;
  double t3503;
  double t3477;
  double t3504;
  double t3514;
  double t3522;
  double t3523;
  double t3525;
  double t3521;
  double t3536;
  double t3538;
  double t3540;
  double t3541;
  double t3552;
  double t3603;
  double t3608;
  double t3610;
  double t3616;
  double t3627;
  double t3632;
  double t3642;
  double t3648;
  double t3650;
  double t3641;
  double t3653;
  double t3670;
  double t3672;
  double t3674;
  double t3678;
  double t3671;
  double t3680;
  double t3687;
  double t3693;
  double t3695;
  double t3698;
  double t3737;
  double t3752;
  double t3756;
  double t3759;
  double t3764;
  double t3783;
  double t3784;
  double t3768;
  double t3785;
  double t3790;
  double t3801;
  double t3806;
  double t3807;
  double t3857;
  double t3858;
  double t3860;
  double t3862;
  double t3863;
  double t3868;
  double t3871;
  double t3881;
  double t3922;
  double t3928;
  double t3931;
  double t3890;
  double t3936;
  double t3939;
  double t3949;
  double t2949;
  double t2950;
  double t2952;
  double t4035;
  double t4041;
  double t4043;
  double t4046;
  double t4049;
  double t4051;
  double t4056;
  double t4059;
  double t4066;
  double t4070;
  double t4077;
  double t4079;
  double t4069;
  double t4083;
  double t4089;
  double t4094;
  double t4102;
  double t4107;
  double t4180;
  double t4181;
  double t4187;
  double t4148;
  double t4152;
  double t4160;
  double t4164;
  double t4192;
  double t4195;
  double t4199;
  double t4204;
  double t4205;
  double t4198;
  double t4213;
  double t4217;
  double t4225;
  double t4226;
  double t4230;
  double t4223;
  double t4234;
  double t4235;
  double t4257;
  double t4261;
  double t4267;
  double t4238;
  double t4268;
  double t4273;
  double t4275;
  double t4280;
  double t4283;
  double t4284;
  double t4303;
  double t4308;
  double t4333;
  double t4337;
  double t4350;
  double t4355;
  double t4362;
  double t4364;
  double t4374;
  double t4377;
  double t4380;
  double t4366;
  double t4385;
  double t4388;
  double t4391;
  double t4396;
  double t4397;
  double t4389;
  double t4398;
  double t4402;
  double t4415;
  double t4429;
  double t4434;
  double t4471;
  double t4474;
  double t4485;
  double t4493;
  double t4495;
  double t4499;
  double t4501;
  double t4498;
  double t4502;
  double t4514;
  double t4516;
  double t4519;
  double t4523;
  double t4570;
  double t4573;
  double t4581;
  double t4586;
  double t4593;
  double t4604;
  double t4614;
  double t4632;
  double t4676;
  double t4683;
  double t4689;
  double t4663;
  double t4692;
  double t4705;
  double t4707;
  double t4816;
  double t4824;
  double t4825;
  double t4773;
  double t4790;
  double t4796;
  double t4801;
  double t4810;
  double t4811;
  double t4812;
  double t4830;
  double t4833;
  double t4842;
  double t4844;
  double t4849;
  double t4836;
  double t4852;
  double t4859;
  double t4873;
  double t4885;
  double t4887;
  double t4860;
  double t4888;
  double t4889;
  double t4892;
  double t4894;
  double t4895;
  double t1112;
  double t1164;
  double t1167;
  double t1210;
  double t1221;
  double t1225;
  double t1578;
  double t1624;
  double t1636;
  double t1658;
  double t1663;
  double t1672;
  double t1815;
  double t1855;
  double t1869;
  double t1874;
  double t1880;
  double t1897;
  double t2080;
  double t2098;
  double t2103;
  double t2121;
  double t2129;
  double t2130;
  double t2425;
  double t2438;
  double t2442;
  double t2462;
  double t2465;
  double t2470;
  double t2622;
  double t2658;
  double t2672;
  double t2680;
  double t2681;
  double t2683;
  double t2753;
  double t2773;
  double t2775;
  double t2786;
  double t2794;
  double t2800;
  double t2849;
  double t2885;
  double t2888;
  double t2906;
  double t2933;
  double t2937;
  double t5091;
  double t3066;
  double t3085;
  double t3087;
  double t3103;
  double t3113;
  double t3116;
  double t3203;
  double t3226;
  double t3229;
  double t3238;
  double t3242;
  double t3245;
  double t3367;
  double t3379;
  double t3383;
  double t3395;
  double t3396;
  double t3409;
  double t3539;
  double t3557;
  double t3566;
  double t3570;
  double t3577;
  double t3581;
  double t3690;
  double t3699;
  double t3705;
  double t3708;
  double t3715;
  double t3719;
  double t3798;
  double t3811;
  double t3813;
  double t3819;
  double t3823;
  double t3837;
  double t3864;
  double t3882;
  double t3889;
  double t3898;
  double t3955;
  double t3972;
  double t5251;
  double t3988;
  double t3991;
  double t4003;
  double t2953;
  double t2957;
  double t4093;
  double t4108;
  double t4109;
  double t4117;
  double t4121;
  double t4125;
  double t5303;
  double t5317;
  double t5318;
  double t4406;
  double t4440;
  double t4442;
  double t4444;
  double t4453;
  double t4455;
  double t4515;
  double t4526;
  double t4534;
  double t4541;
  double t4543;
  double t4550;
  double t4595;
  double t4648;
  double t4662;
  double t4664;
  double t4712;
  double t4716;
  double t5377;
  double t4742;
  double t4749;
  double t4750;
  double t4890;
  double t4901;
  double t4902;
  double t4910;
  double t4921;
  double t4922;
  double t5642;
  double t5648;
  double t5756;
  double t5768;
  double t5827;
  double t5842;
  double t5878;
  double t5880;
  double t4946;
  double t4948;
  double t4954;
  double t5977;
  double t5980;
  double t5692;
  double t5705;
  double t5709;
  double t5722;
  double t5726;
  double t5649;
  double t5652;
  double t5654;
  double t5747;
  double t5749;
  double t5750;
  double t5780;
  double t5781;
  double t5783;
  double t5812;
  double t5815;
  double t5817;
  double t5845;
  double t5856;
  double t5857;
  double t5863;
  double t5865;
  double t5869;
  double t5886;
  double t5898;
  double t5907;
  double t5915;
  double t5922;
  double t5931;
  double t4959;
  double t4966;
  double t4972;
  double t6009;
  double t6033;
  double t6034;
  double t6036;
  double t6037;
  double t6039;
  double t6043;
  double t6051;
  double t6053;
  double t4988;
  double t4989;
  double t4999;
  double t5981;
  double t5982;
  double t5988;
  double t5994;
  double t6016;
  double t5627;
  double t5006;
  double t5009;
  double t5014;
  double t6306;
  double t6307;
  double t5029;
  double t5033;
  double t5035;
  double t5042;
  double t5043;
  double t5049;
  double t5053;
  double t5054;
  double t5057;
  double t5065;
  double t5070;
  double t5080;
  double t5099;
  double t5105;
  double t6910;
  double t5109;
  double t5111;
  double t5602;
  double t5612;
  double t5618;
  double t5626;
  double t5638;
  double t5115;
  double t5121;
  double t5122;
  double t5128;
  double t5144;
  double t5149;
  double t6145;
  double t6146;
  double t6161;
  double t6163;
  double t6169;
  double t5151;
  double t5154;
  double t5157;
  double t5166;
  double t5169;
  double t5170;
  double t6574;
  double t6580;
  double t6602;
  double t6608;
  double t6609;
  double t5193;
  double t5198;
  double t5201;
  double t6676;
  double t6677;
  double t6678;
  double t6709;
  double t6713;
  double t5216;
  double t5223;
  double t5225;
  double t6803;
  double t6820;
  double t6823;
  double t6826;
  double t6832;
  double t5234;
  double t5237;
  double t5239;
  double t6887;
  double t6888;
  double t6889;
  double t6896;
  double t6899;
  double t5262;
  double t5268;
  double t6943;
  double t6944;
  double t6954;
  double t6960;
  double t6971;
  double t7578;
  double t5271;
  double t5272;
  double t5280;
  double t5283;
  double t5287;
  double t7794;
  double t7799;
  double t7804;
  double t7813;
  double t7814;
  double t7820;
  double t7822;
  double t7824;
  double t7825;
  double t7826;
  double t7836;
  double t7841;
  double t7842;
  double t7848;
  double t7856;
  double t7857;
  double t7858;
  double t5338;
  double t5341;
  double t5349;
  double t5353;
  double t5354;
  double t5363;
  double t5365;
  double t5371;
  double t5374;
  double t5381;
  double t5388;
  double t8048;
  double t5414;
  double t5415;
  double t5420;
  double t5421;
  double t5426;
  t655 = Cos(var1[3]);
  t546 = Cos(var1[5]);
  t670 = Sin(var1[4]);
  t621 = Sin(var1[3]);
  t696 = Sin(var1[5]);
  t501 = Cos(var1[7]);
  t522 = Cos(var1[6]);
  t641 = -1.*t546*t621;
  t698 = t655*t670*t696;
  t700 = t641 + t698;
  t708 = t522*t700;
  t752 = t655*t546*t670;
  t756 = t621*t696;
  t757 = t752 + t756;
  t775 = Sin(var1[6]);
  t797 = t757*t775;
  t824 = t708 + t797;
  t832 = t501*t824;
  t866 = Cos(var1[4]);
  t881 = Sin(var1[7]);
  t893 = -1.*t655*t866*t881;
  t898 = t832 + t893;
  t919 = Cos(var1[9]);
  t474 = Cos(var1[8]);
  t482 = Sin(var1[9]);
  t944 = Sin(var1[8]);
  t988 = Cos(var1[10]);
  t904 = -1.*t474*t482*t898;
  t955 = -1.*t919*t898*t944;
  t963 = t904 + t955;
  t441 = Sin(var1[10]);
  t1024 = t919*t474*t898;
  t1042 = -1.*t482*t898*t944;
  t1062 = t1024 + t1042;
  t1126 = Cos(var1[11]);
  t977 = t441*t963;
  t1075 = t988*t1062;
  t1097 = t977 + t1075;
  t414 = Sin(var1[11]);
  t1132 = t988*t963;
  t1142 = -1.*t441*t1062;
  t1154 = t1132 + t1142;
  t336 = Cos(var1[12]);
  t1293 = t546*t621;
  t1300 = -1.*t655*t670*t696;
  t1311 = t1293 + t1300;
  t1347 = t522*t1311;
  t1365 = -1.*t757*t775;
  t1377 = t1347 + t1365;
  t1284 = t522*t757;
  t1326 = t1311*t775;
  t1333 = t1284 + t1326;
  t1344 = t474*t1333*t881;
  t1407 = t1377*t944;
  t1416 = t1344 + t1407;
  t1428 = t474*t1377;
  t1437 = -1.*t1333*t881*t944;
  t1485 = t1428 + t1437;
  t1423 = -1.*t482*t1416;
  t1487 = t919*t1485;
  t1504 = t1423 + t1487;
  t1538 = t919*t1416;
  t1545 = t482*t1485;
  t1558 = t1538 + t1545;
  t1209 = Sin(var1[12]);
  t1531 = t441*t1504;
  t1563 = t988*t1558;
  t1569 = t1531 + t1563;
  t1597 = t988*t1504;
  t1610 = -1.*t441*t1558;
  t1619 = t1597 + t1610;
  t1703 = -1.*t522*t700;
  t1713 = t1703 + t1365;
  t1692 = -1.*t700*t775;
  t1693 = t1284 + t1692;
  t1696 = t474*t1693*t881;
  t1714 = t1713*t944;
  t1718 = t1696 + t1714;
  t1732 = t474*t1713;
  t1735 = -1.*t1693*t881*t944;
  t1737 = t1732 + t1735;
  t1724 = -1.*t482*t1718;
  t1741 = t919*t1737;
  t1744 = t1724 + t1741;
  t1753 = t919*t1718;
  t1755 = t482*t1737;
  t1780 = t1753 + t1755;
  t1747 = t441*t1744;
  t1792 = t988*t1780;
  t1797 = t1747 + t1792;
  t1836 = t988*t1744;
  t1847 = -1.*t441*t1780;
  t1854 = t1836 + t1847;
  t1988 = t655*t866*t546*t522;
  t1990 = -1.*t655*t866*t696*t775;
  t1993 = t1988 + t1990;
  t1930 = -1.*t655*t501*t670;
  t1934 = t655*t866*t522*t696;
  t1951 = t655*t866*t546*t775;
  t1953 = t1934 + t1951;
  t1969 = t1953*t881;
  t1975 = t1930 + t1969;
  t1982 = t474*t1975;
  t1995 = t1993*t944;
  t2006 = t1982 + t1995;
  t2015 = t474*t1993;
  t2017 = -1.*t1975*t944;
  t2018 = t2015 + t2017;
  t2011 = -1.*t482*t2006;
  t2020 = t919*t2018;
  t2024 = t2011 + t2020;
  t2029 = t919*t2006;
  t2056 = t482*t2018;
  t2066 = t2029 + t2056;
  t2027 = t441*t2024;
  t2067 = t988*t2066;
  t2070 = t2027 + t2067;
  t2083 = t988*t2024;
  t2084 = -1.*t441*t2066;
  t2092 = t2083 + t2084;
  t2212 = -1.*t546*t621*t670;
  t2218 = t655*t696;
  t2221 = t2212 + t2218;
  t2181 = -1.*t655*t546;
  t2184 = -1.*t621*t670*t696;
  t2203 = t2181 + t2184;
  t2286 = t522*t2221;
  t2287 = -1.*t2203*t775;
  t2292 = t2286 + t2287;
  t2170 = -1.*t866*t501*t621;
  t2208 = t522*t2203;
  t2258 = t2221*t775;
  t2259 = t2208 + t2258;
  t2261 = t2259*t881;
  t2263 = t2170 + t2261;
  t2270 = t474*t2263;
  t2303 = t2292*t944;
  t2324 = t2270 + t2303;
  t2333 = t474*t2292;
  t2356 = -1.*t2263*t944;
  t2369 = t2333 + t2356;
  t2332 = -1.*t482*t2324;
  t2374 = t919*t2369;
  t2376 = t2332 + t2374;
  t2385 = t919*t2324;
  t2388 = t482*t2369;
  t2392 = t2385 + t2388;
  t2380 = t441*t2376;
  t2394 = t988*t2392;
  t2405 = t2380 + t2394;
  t2427 = t988*t2376;
  t2430 = -1.*t441*t2392;
  t2433 = t2427 + t2430;
  t2494 = t655*t866*t501;
  t2502 = t824*t881;
  t2519 = t2494 + t2502;
  t2523 = -1.*t474*t2519;
  t2527 = -1.*t1693*t944;
  t2529 = t2523 + t2527;
  t2558 = t474*t1693;
  t2559 = -1.*t2519*t944;
  t2566 = t2558 + t2559;
  t2557 = t482*t2529;
  t2567 = t919*t2566;
  t2571 = t2557 + t2567;
  t2584 = t919*t2529;
  t2597 = -1.*t482*t2566;
  t2611 = t2584 + t2597;
  t2577 = -1.*t441*t2571;
  t2613 = t988*t2611;
  t2616 = t2577 + t2613;
  t2626 = t988*t2571;
  t2631 = t441*t2611;
  t2651 = t2626 + t2631;
  t2706 = t474*t2519;
  t2710 = t1693*t944;
  t2716 = t2706 + t2710;
  t2718 = -1.*t482*t2716;
  t2724 = t2718 + t2567;
  t2735 = -1.*t919*t2716;
  t2738 = t2735 + t2597;
  t2731 = -1.*t441*t2724;
  t2743 = t988*t2738;
  t2749 = t2731 + t2743;
  t2755 = t988*t2724;
  t2761 = t441*t2738;
  t2765 = t2755 + t2761;
  t2811 = t919*t2716;
  t2816 = t482*t2566;
  t2819 = t2811 + t2816;
  t2820 = -1.*t988*t2819;
  t2843 = t2731 + t2820;
  t2859 = -1.*t441*t2819;
  t2866 = t2755 + t2859;
  t2876 = t1126*t2866;
  t2916 = t441*t2724;
  t2924 = t988*t2819;
  t2925 = t2916 + t2924;
  t2890 = -1.*t414*t2866;
  t2927 = -1.*t414*t2925;
  t2928 = t2927 + t2876;
  t2932 = t1209*t2928;
  t2971 = t655*t546;
  t2972 = t621*t670*t696;
  t2973 = t2971 + t2972;
  t2976 = t522*t2973;
  t2979 = t546*t621*t670;
  t2984 = -1.*t655*t696;
  t2991 = t2979 + t2984;
  t2993 = t2991*t775;
  t2997 = t2976 + t2993;
  t3000 = t501*t2997;
  t3005 = -1.*t866*t621*t881;
  t3007 = t3000 + t3005;
  t3029 = -1.*t474*t482*t3007;
  t3030 = -1.*t919*t3007*t944;
  t3034 = t3029 + t3030;
  t3043 = t919*t474*t3007;
  t3049 = -1.*t482*t3007*t944;
  t3051 = t3043 + t3049;
  t3040 = t441*t3034;
  t3057 = t988*t3051;
  t3065 = t3040 + t3057;
  t3077 = t988*t3034;
  t3082 = -1.*t441*t3051;
  t3083 = t3077 + t3082;
  t3145 = -1.*t2991*t775;
  t3151 = t2208 + t3145;
  t3134 = t522*t2991;
  t3135 = t2203*t775;
  t3140 = t3134 + t3135;
  t3142 = t474*t3140*t881;
  t3152 = t3151*t944;
  t3153 = t3142 + t3152;
  t3156 = t474*t3151;
  t3170 = -1.*t3140*t881*t944;
  t3172 = t3156 + t3170;
  t3154 = -1.*t482*t3153;
  t3179 = t919*t3172;
  t3186 = t3154 + t3179;
  t3193 = t919*t3153;
  t3195 = t482*t3172;
  t3198 = t3193 + t3195;
  t3189 = t441*t3186;
  t3200 = t988*t3198;
  t3201 = t3189 + t3200;
  t3207 = t988*t3186;
  t3215 = -1.*t441*t3198;
  t3217 = t3207 + t3215;
  t3259 = -1.*t522*t2973;
  t3262 = t3259 + t3145;
  t3253 = -1.*t2973*t775;
  t3254 = t3134 + t3253;
  t3256 = t474*t3254*t881;
  t3263 = t3262*t944;
  t3271 = t3256 + t3263;
  t3302 = t474*t3262;
  t3308 = -1.*t3254*t881*t944;
  t3323 = t3302 + t3308;
  t3289 = -1.*t482*t3271;
  t3327 = t919*t3323;
  t3345 = t3289 + t3327;
  t3349 = t919*t3271;
  t3354 = t482*t3323;
  t3356 = t3349 + t3354;
  t3346 = t441*t3345;
  t3364 = t988*t3356;
  t3366 = t3346 + t3364;
  t3373 = t988*t3345;
  t3377 = -1.*t441*t3356;
  t3378 = t3373 + t3377;
  t3442 = t866*t546*t522*t621;
  t3444 = -1.*t866*t621*t696*t775;
  t3446 = t3442 + t3444;
  t3423 = -1.*t501*t621*t670;
  t3427 = t866*t522*t621*t696;
  t3431 = t866*t546*t621*t775;
  t3432 = t3427 + t3431;
  t3435 = t3432*t881;
  t3437 = t3423 + t3435;
  t3439 = t474*t3437;
  t3465 = t3446*t944;
  t3476 = t3439 + t3465;
  t3488 = t474*t3446;
  t3491 = -1.*t3437*t944;
  t3503 = t3488 + t3491;
  t3477 = -1.*t482*t3476;
  t3504 = t919*t3503;
  t3514 = t3477 + t3504;
  t3522 = t919*t3476;
  t3523 = t482*t3503;
  t3525 = t3522 + t3523;
  t3521 = t441*t3514;
  t3536 = t988*t3525;
  t3538 = t3521 + t3536;
  t3540 = t988*t3514;
  t3541 = -1.*t441*t3525;
  t3552 = t3540 + t3541;
  t3603 = t866*t501*t621;
  t3608 = t2997*t881;
  t3610 = t3603 + t3608;
  t3616 = -1.*t474*t3610;
  t3627 = -1.*t3254*t944;
  t3632 = t3616 + t3627;
  t3642 = t474*t3254;
  t3648 = -1.*t3610*t944;
  t3650 = t3642 + t3648;
  t3641 = t482*t3632;
  t3653 = t919*t3650;
  t3670 = t3641 + t3653;
  t3672 = t919*t3632;
  t3674 = -1.*t482*t3650;
  t3678 = t3672 + t3674;
  t3671 = -1.*t441*t3670;
  t3680 = t988*t3678;
  t3687 = t3671 + t3680;
  t3693 = t988*t3670;
  t3695 = t441*t3678;
  t3698 = t3693 + t3695;
  t3737 = t474*t3610;
  t3752 = t3254*t944;
  t3756 = t3737 + t3752;
  t3759 = -1.*t482*t3756;
  t3764 = t3759 + t3653;
  t3783 = -1.*t919*t3756;
  t3784 = t3783 + t3674;
  t3768 = -1.*t441*t3764;
  t3785 = t988*t3784;
  t3790 = t3768 + t3785;
  t3801 = t988*t3764;
  t3806 = t441*t3784;
  t3807 = t3801 + t3806;
  t3857 = t919*t3756;
  t3858 = t482*t3650;
  t3860 = t3857 + t3858;
  t3862 = -1.*t988*t3860;
  t3863 = t3768 + t3862;
  t3868 = -1.*t441*t3860;
  t3871 = t3801 + t3868;
  t3881 = t1126*t3871;
  t3922 = t441*t3764;
  t3928 = t988*t3860;
  t3931 = t3922 + t3928;
  t3890 = -1.*t414*t3871;
  t3936 = -1.*t414*t3931;
  t3939 = t3936 + t3881;
  t3949 = t1209*t3939;
  t2949 = t1126*t2925;
  t2950 = t414*t2866;
  t2952 = t2949 + t2950;
  t4035 = t866*t522*t696;
  t4041 = t866*t546*t775;
  t4043 = t4035 + t4041;
  t4046 = t501*t4043;
  t4049 = t670*t881;
  t4051 = t4046 + t4049;
  t4056 = -1.*t474*t482*t4051;
  t4059 = -1.*t919*t4051*t944;
  t4066 = t4056 + t4059;
  t4070 = t919*t474*t4051;
  t4077 = -1.*t482*t4051*t944;
  t4079 = t4070 + t4077;
  t4069 = t441*t4066;
  t4083 = t988*t4079;
  t4089 = t4069 + t4083;
  t4094 = t988*t4066;
  t4102 = -1.*t441*t4079;
  t4107 = t4094 + t4102;
  t4180 = -1.*t866*t522*t696;
  t4181 = -1.*t866*t546*t775;
  t4187 = t4180 + t4181;
  t4148 = t866*t546*t522;
  t4152 = -1.*t866*t696*t775;
  t4160 = t4148 + t4152;
  t4164 = t474*t4160*t881;
  t4192 = t4187*t944;
  t4195 = t4164 + t4192;
  t4199 = t474*t4187;
  t4204 = -1.*t4160*t881*t944;
  t4205 = t4199 + t4204;
  t4198 = -1.*t482*t4195;
  t4213 = t919*t4205;
  t4217 = t4198 + t4213;
  t4225 = t919*t4195;
  t4226 = t482*t4205;
  t4230 = t4225 + t4226;
  t4223 = t441*t4217;
  t4234 = t988*t4230;
  t4235 = t4223 + t4234;
  t4257 = t988*t4217;
  t4261 = -1.*t441*t4230;
  t4267 = t4257 + t4261;
  t4238 = -1.*t414*t4235;
  t4268 = t1126*t4267;
  t4273 = t4238 + t4268;
  t4275 = -1.*t336*t4273;
  t4280 = t1126*t4235;
  t4283 = t414*t4267;
  t4284 = t4280 + t4283;
  t4303 = t1209*t4284;
  t4308 = t4275 + t4303;
  t4333 = -1.*t501*t670;
  t4337 = t4043*t881;
  t4350 = t4333 + t4337;
  t4355 = -1.*t474*t4350;
  t4362 = -1.*t4160*t944;
  t4364 = t4355 + t4362;
  t4374 = t474*t4160;
  t4377 = -1.*t4350*t944;
  t4380 = t4374 + t4377;
  t4366 = t482*t4364;
  t4385 = t919*t4380;
  t4388 = t4366 + t4385;
  t4391 = t919*t4364;
  t4396 = -1.*t482*t4380;
  t4397 = t4391 + t4396;
  t4389 = -1.*t441*t4388;
  t4398 = t988*t4397;
  t4402 = t4389 + t4398;
  t4415 = t988*t4388;
  t4429 = t441*t4397;
  t4434 = t4415 + t4429;
  t4471 = t474*t4350;
  t4474 = t4160*t944;
  t4485 = t4471 + t4474;
  t4493 = -1.*t482*t4485;
  t4495 = t4493 + t4385;
  t4499 = -1.*t919*t4485;
  t4501 = t4499 + t4396;
  t4498 = -1.*t441*t4495;
  t4502 = t988*t4501;
  t4514 = t4498 + t4502;
  t4516 = t988*t4495;
  t4519 = t441*t4501;
  t4523 = t4516 + t4519;
  t4570 = t919*t4485;
  t4573 = t482*t4380;
  t4581 = t4570 + t4573;
  t4586 = -1.*t988*t4581;
  t4593 = t4498 + t4586;
  t4604 = -1.*t441*t4581;
  t4614 = t4516 + t4604;
  t4632 = t1126*t4614;
  t4676 = t441*t4495;
  t4683 = t988*t4581;
  t4689 = t4676 + t4683;
  t4663 = -1.*t414*t4614;
  t4692 = -1.*t414*t4689;
  t4705 = t4692 + t4632;
  t4707 = t1209*t4705;
  t4816 = -1.*t546*t522*t670;
  t4824 = t670*t696*t775;
  t4825 = t4816 + t4824;
  t4773 = -1.*t866*t501;
  t4790 = -1.*t522*t670*t696;
  t4796 = -1.*t546*t670*t775;
  t4801 = t4790 + t4796;
  t4810 = t4801*t881;
  t4811 = t4773 + t4810;
  t4812 = t474*t4811;
  t4830 = t4825*t944;
  t4833 = t4812 + t4830;
  t4842 = t474*t4825;
  t4844 = -1.*t4811*t944;
  t4849 = t4842 + t4844;
  t4836 = -1.*t482*t4833;
  t4852 = t919*t4849;
  t4859 = t4836 + t4852;
  t4873 = t919*t4833;
  t4885 = t482*t4849;
  t4887 = t4873 + t4885;
  t4860 = t441*t4859;
  t4888 = t988*t4887;
  t4889 = t4860 + t4888;
  t4892 = t988*t4859;
  t4894 = -1.*t441*t4887;
  t4895 = t4892 + t4894;
  t1112 = -1.*t414*t1097;
  t1164 = t1126*t1154;
  t1167 = t1112 + t1164;
  t1210 = t1126*t1097;
  t1221 = t414*t1154;
  t1225 = t1210 + t1221;
  t1578 = -1.*t414*t1569;
  t1624 = t1126*t1619;
  t1636 = t1578 + t1624;
  t1658 = t1126*t1569;
  t1663 = t414*t1619;
  t1672 = t1658 + t1663;
  t1815 = -1.*t414*t1797;
  t1855 = t1126*t1854;
  t1869 = t1815 + t1855;
  t1874 = t1126*t1797;
  t1880 = t414*t1854;
  t1897 = t1874 + t1880;
  t2080 = -1.*t414*t2070;
  t2098 = t1126*t2092;
  t2103 = t2080 + t2098;
  t2121 = t1126*t2070;
  t2129 = t414*t2092;
  t2130 = t2121 + t2129;
  t2425 = -1.*t414*t2405;
  t2438 = t1126*t2433;
  t2442 = t2425 + t2438;
  t2462 = t1126*t2405;
  t2465 = t414*t2433;
  t2470 = t2462 + t2465;
  t2622 = t414*t2616;
  t2658 = t1126*t2651;
  t2672 = t2622 + t2658;
  t2680 = t1126*t2616;
  t2681 = -1.*t414*t2651;
  t2683 = t2680 + t2681;
  t2753 = t414*t2749;
  t2773 = t1126*t2765;
  t2775 = t2753 + t2773;
  t2786 = t1126*t2749;
  t2794 = -1.*t414*t2765;
  t2800 = t2786 + t2794;
  t2849 = t414*t2843;
  t2885 = t2849 + t2876;
  t2888 = t1126*t2843;
  t2906 = t2888 + t2890;
  t2933 = -1.*t1126*t2925;
  t2937 = t2933 + t2890;
  t5091 = t336*t2928;
  t3066 = -1.*t414*t3065;
  t3085 = t1126*t3083;
  t3087 = t3066 + t3085;
  t3103 = t1126*t3065;
  t3113 = t414*t3083;
  t3116 = t3103 + t3113;
  t3203 = -1.*t414*t3201;
  t3226 = t1126*t3217;
  t3229 = t3203 + t3226;
  t3238 = t1126*t3201;
  t3242 = t414*t3217;
  t3245 = t3238 + t3242;
  t3367 = -1.*t414*t3366;
  t3379 = t1126*t3378;
  t3383 = t3367 + t3379;
  t3395 = t1126*t3366;
  t3396 = t414*t3378;
  t3409 = t3395 + t3396;
  t3539 = -1.*t414*t3538;
  t3557 = t1126*t3552;
  t3566 = t3539 + t3557;
  t3570 = t1126*t3538;
  t3577 = t414*t3552;
  t3581 = t3570 + t3577;
  t3690 = t414*t3687;
  t3699 = t1126*t3698;
  t3705 = t3690 + t3699;
  t3708 = t1126*t3687;
  t3715 = -1.*t414*t3698;
  t3719 = t3708 + t3715;
  t3798 = t414*t3790;
  t3811 = t1126*t3807;
  t3813 = t3798 + t3811;
  t3819 = t1126*t3790;
  t3823 = -1.*t414*t3807;
  t3837 = t3819 + t3823;
  t3864 = t414*t3863;
  t3882 = t3864 + t3881;
  t3889 = t1126*t3863;
  t3898 = t3889 + t3890;
  t3955 = -1.*t1126*t3931;
  t3972 = t3955 + t3890;
  t5251 = t336*t3939;
  t3988 = t1126*t3931;
  t3991 = t414*t3871;
  t4003 = t3988 + t3991;
  t2953 = t336*t2952;
  t2957 = t2932 + t2953;
  t4093 = -1.*t414*t4089;
  t4108 = t1126*t4107;
  t4109 = t4093 + t4108;
  t4117 = t1126*t4089;
  t4121 = t414*t4107;
  t4125 = t4117 + t4121;
  t5303 = t1209*t4273;
  t5317 = t336*t4284;
  t5318 = t5303 + t5317;
  t4406 = t414*t4402;
  t4440 = t1126*t4434;
  t4442 = t4406 + t4440;
  t4444 = t1126*t4402;
  t4453 = -1.*t414*t4434;
  t4455 = t4444 + t4453;
  t4515 = t414*t4514;
  t4526 = t1126*t4523;
  t4534 = t4515 + t4526;
  t4541 = t1126*t4514;
  t4543 = -1.*t414*t4523;
  t4550 = t4541 + t4543;
  t4595 = t414*t4593;
  t4648 = t4595 + t4632;
  t4662 = t1126*t4593;
  t4664 = t4662 + t4663;
  t4712 = -1.*t1126*t4689;
  t4716 = t4712 + t4663;
  t5377 = t336*t4705;
  t4742 = t1126*t4689;
  t4749 = t414*t4614;
  t4750 = t4742 + t4749;
  t4890 = -1.*t414*t4889;
  t4901 = t1126*t4895;
  t4902 = t4890 + t4901;
  t4910 = t1126*t4889;
  t4921 = t414*t4895;
  t4922 = t4910 + t4921;
  t5642 = -1.*t919;
  t5648 = 1. + t5642;
  t5756 = -1.*t988;
  t5768 = 1. + t5756;
  t5827 = -1.*t1126;
  t5842 = 1. + t5827;
  t5878 = -1.*t336;
  t5880 = 1. + t5878;
  t4946 = t1209*t1167;
  t4948 = t336*t1225;
  t4954 = t4946 + t4948;
  t5977 = -1.*t522;
  t5980 = 1. + t5977;
  t5692 = -1.*t474;
  t5705 = 1. + t5692;
  t5709 = -0.08055*t5705;
  t5722 = -0.01004*t944;
  t5726 = 0. + t5709 + t5722;
  t5649 = -0.08055*t5648;
  t5652 = -0.13004*t482;
  t5654 = 0. + t5649 + t5652;
  t5747 = -0.13004*t5648;
  t5749 = 0.08055*t482;
  t5750 = 0. + t5747 + t5749;
  t5780 = -0.19074*t5768;
  t5781 = 0.03315*t441;
  t5783 = 0. + t5780 + t5781;
  t5812 = -0.03315*t5768;
  t5815 = -0.19074*t441;
  t5817 = 0. + t5812 + t5815;
  t5845 = -0.01315*t5842;
  t5856 = -0.62554*t414;
  t5857 = 0. + t5845 + t5856;
  t5863 = -0.62554*t5842;
  t5865 = 0.01315*t414;
  t5869 = 0. + t5863 + t5865;
  t5886 = -1.03354*t5880;
  t5898 = 0.05315*t1209;
  t5907 = 0. + t5886 + t5898;
  t5915 = -0.05315*t5880;
  t5922 = -1.03354*t1209;
  t5931 = 0. + t5915 + t5922;
  t4959 = t1209*t1636;
  t4966 = t336*t1672;
  t4972 = t4959 + t4966;
  t6009 = 0.07996*t775;
  t6033 = -1.*t501;
  t6034 = 1. + t6033;
  t6036 = 0.135*t6034;
  t6037 = 0.08055*t881;
  t6039 = 0. + t6036 + t6037;
  t6043 = -0.01004*t5705;
  t6051 = 0.08055*t944;
  t6053 = 0. + t6043 + t6051;
  t4988 = t1209*t1869;
  t4989 = t336*t1897;
  t4999 = t4988 + t4989;
  t5981 = 0.07996*t5980;
  t5982 = -0.135*t775;
  t5988 = 0. + t5981 + t5982;
  t5994 = 0.135*t5980;
  t6016 = 0. + t5994 + t6009;
  t5627 = 0.135*t881;
  t5006 = t1209*t2103;
  t5009 = t336*t2130;
  t5014 = t5006 + t5009;
  t6306 = -0.08055*t6034;
  t6307 = 0. + t6306 + t5627;
  t5029 = t1209*t2442;
  t5033 = t336*t2470;
  t5035 = t5029 + t5033;
  t5042 = t336*t2672;
  t5043 = t1209*t2683;
  t5049 = t5042 + t5043;
  t5053 = t336*t2775;
  t5054 = t1209*t2800;
  t5057 = t5053 + t5054;
  t5065 = t336*t2885;
  t5070 = t1209*t2906;
  t5080 = t5065 + t5070;
  t5099 = t1209*t2937;
  t5105 = t5091 + t5099;
  t6910 = -1.*t1209*t2928;
  t5109 = -1.*t1209*t2952;
  t5111 = t5091 + t5109;
  t5602 = 0.135*t501;
  t5612 = -0.08055*t881;
  t5618 = t5602 + t5612;
  t5626 = 0.08055*t501;
  t5638 = t5626 + t5627;
  t5115 = t1209*t3087;
  t5121 = t336*t3116;
  t5122 = t5115 + t5121;
  t5128 = t1209*t3229;
  t5144 = t336*t3245;
  t5149 = t5128 + t5144;
  t6145 = -0.135*t522;
  t6146 = t6145 + t6009;
  t6161 = 0.07996*t522;
  t6163 = 0.135*t775;
  t6169 = t6161 + t6163;
  t5151 = t1209*t3383;
  t5154 = t336*t3409;
  t5157 = t5151 + t5154;
  t5166 = t1209*t3566;
  t5169 = t336*t3581;
  t5170 = t5166 + t5169;
  t6574 = -0.01004*t474;
  t6580 = -0.08055*t944;
  t6602 = t6574 + t6580;
  t6608 = 0.08055*t474;
  t6609 = t6608 + t5722;
  t5193 = t336*t3705;
  t5198 = t1209*t3719;
  t5201 = t5193 + t5198;
  t6676 = -0.13004*t919;
  t6677 = -0.08055*t482;
  t6678 = t6676 + t6677;
  t6709 = 0.08055*t919;
  t6713 = t6709 + t5652;
  t5216 = t336*t3813;
  t5223 = t1209*t3837;
  t5225 = t5216 + t5223;
  t6803 = 0.03315*t988;
  t6820 = t6803 + t5815;
  t6823 = -0.19074*t988;
  t6826 = -0.03315*t441;
  t6832 = t6823 + t6826;
  t5234 = t336*t3882;
  t5237 = t1209*t3898;
  t5239 = t5234 + t5237;
  t6887 = -0.62554*t1126;
  t6888 = -0.01315*t414;
  t6889 = t6887 + t6888;
  t6896 = 0.01315*t1126;
  t6899 = t6896 + t5856;
  t5262 = t1209*t3972;
  t5268 = t5251 + t5262;
  t6943 = 0.05315*t336;
  t6944 = t6943 + t5922;
  t6954 = -1.03354*t336;
  t6960 = -0.05315*t1209;
  t6971 = t6954 + t6960;
  t7578 = -1.*t1209*t3939;
  t5271 = -1.*t1209*t4003;
  t5272 = t5251 + t5271;
  t5280 = t1209*t4109;
  t5283 = t336*t4125;
  t5287 = t5280 + t5283;
  t7794 = 0.1305*t501*t4160;
  t7799 = t4160*t6039;
  t7804 = t4160*t881*t5726;
  t7813 = t4187*t6053;
  t7814 = t5654*t4195;
  t7820 = t5750*t4205;
  t7822 = t5783*t4217;
  t7824 = t5817*t4230;
  t7825 = t5857*t4235;
  t7826 = t5869*t4267;
  t7836 = t5907*t4273;
  t7841 = t5931*t4284;
  t7842 = -0.05315*t5318;
  t7848 = t336*t4273;
  t7856 = -1.*t1209*t4284;
  t7857 = t7848 + t7856;
  t7858 = -1.03354*t7857;
  t5338 = t336*t4442;
  t5341 = t1209*t4455;
  t5349 = t5338 + t5341;
  t5353 = t336*t4534;
  t5354 = t1209*t4550;
  t5363 = t5353 + t5354;
  t5365 = t336*t4648;
  t5371 = t1209*t4664;
  t5374 = t5365 + t5371;
  t5381 = t1209*t4716;
  t5388 = t5377 + t5381;
  t8048 = -1.*t1209*t4705;
  t5414 = -1.*t1209*t4750;
  t5415 = t5377 + t5414;
  t5420 = t1209*t4902;
  t5421 = t336*t4922;
  t5426 = t5420 + t5421;
  p_output1[0]=(t1209*t2470 - 1.*t2442*t336)*var2[3] + (t1209*t2130 - 1.*t2103*t336)*var2[4] + (t1209*t1672 - 1.*t1636*t336)*var2[5] + (t1209*t1897 - 1.*t1869*t336)*var2[6] + (t1209*t1225 - 1.*t1167*t336)*var2[7] + (t1209*t2672 - 1.*t2683*t336)*var2[8] + (t1209*t2775 - 1.*t2800*t336)*var2[9] + (t1209*t2885 - 1.*t2906*t336)*var2[10] + (t2932 - 1.*t2937*t336)*var2[11] + t2957*var2[12];
  p_output1[1]=(t1209*t2952 - 1.*t2928*t336)*var2[3] + (-1.*t336*t3566 + t1209*t3581)*var2[4] + (t1209*t3245 - 1.*t3229*t336)*var2[5] + (-1.*t336*t3383 + t1209*t3409)*var2[6] + (t1209*t3116 - 1.*t3087*t336)*var2[7] + (t1209*t3705 - 1.*t336*t3719)*var2[8] + (t1209*t3813 - 1.*t336*t3837)*var2[9] + (t1209*t3882 - 1.*t336*t3898)*var2[10] + (t3949 - 1.*t336*t3972)*var2[11] + (t3949 + t336*t4003)*var2[12];
  p_output1[2]=(-1.*t336*t4902 + t1209*t4922)*var2[4] + t4308*var2[5] + t4308*var2[6] + (-1.*t336*t4109 + t1209*t4125)*var2[7] + (t1209*t4442 - 1.*t336*t4455)*var2[8] + (t1209*t4534 - 1.*t336*t4550)*var2[9] + (t1209*t4648 - 1.*t336*t4664)*var2[10] + (t4707 - 1.*t336*t4716)*var2[11] + (t4707 + t336*t4750)*var2[12];
  p_output1[3]=0;
  p_output1[4]=t5035*var2[3] + t5014*var2[4] + t4972*var2[5] + t4999*var2[6] + t4954*var2[7] + t5049*var2[8] + t5057*var2[9] + t5080*var2[10] + t5105*var2[11] + t5111*var2[12];
  p_output1[5]=t2957*var2[3] + t5170*var2[4] + t5149*var2[5] + t5157*var2[6] + t5122*var2[7] + t5201*var2[8] + t5225*var2[9] + t5239*var2[10] + t5268*var2[11] + t5272*var2[12];
  p_output1[6]=t5426*var2[4] + t5318*var2[5] + t5318*var2[6] + t5287*var2[7] + t5349*var2[8] + t5363*var2[9] + t5374*var2[10] + t5388*var2[11] + t5415*var2[12];
  p_output1[7]=0;
  p_output1[8]=(t3005 - 1.*t2259*t501)*var2[3] + (-1.*t1953*t501 - 1.*t655*t670*t881)*var2[4] - 1.*t1333*t501*var2[5] - 1.*t1693*t501*var2[6] + t2519*var2[7];
  p_output1[9]=(-1.*t501*t824 + t655*t866*t881)*var2[3] + (-1.*t3432*t501 - 1.*t621*t670*t881)*var2[4] - 1.*t3140*t501*var2[5] - 1.*t3254*t501*var2[6] + t3610*var2[7];
  p_output1[10]=(-1.*t4801*t501 - 1.*t866*t881)*var2[4] - 1.*t4160*t501*var2[5] - 1.*t4160*t501*var2[6] + t4350*var2[7];
  p_output1[11]=0;
  p_output1[12]=var2[0] + (-1.03354*(-1.*t1209*t2470 + t2442*t336) - 0.05315*t5035 + t2324*t5654 + t2263*t5726 + t2369*t5750 + t2376*t5783 + t2392*t5817 + t2405*t5857 + t2433*t5869 + t2442*t5907 + t2470*t5931 + t2221*t5988 + t2203*t6016 + t2259*t6039 + t2292*t6053 - 1.*t621*t6307*t866 + 0.1305*(t2259*t501 + t621*t866*t881))*var2[3] + (-1.03354*(-1.*t1209*t2130 + t2103*t336) - 0.05315*t5014 + t2006*t5654 + t1975*t5726 + t2018*t5750 + t2024*t5783 + t2066*t5817 + t2070*t5857 + t2092*t5869 + t2103*t5907 + t2130*t5931 + t1953*t6039 + t1993*t6053 - 1.*t6307*t655*t670 + t546*t5988*t655*t866 + t6016*t655*t696*t866 + 0.1305*(t1953*t501 + t655*t670*t881))*var2[4] + (-1.03354*(-1.*t1209*t1672 + t1636*t336) - 0.05315*t4972 + 0.1305*t1333*t501 + t1416*t5654 + t1485*t5750 + t1504*t5783 + t1558*t5817 + t1569*t5857 + t1619*t5869 + t1636*t5907 + t1672*t5931 + t1311*t5988 + t1333*t6039 + t1377*t6053 + t6016*t757 + t1333*t5726*t881)*var2[5] + (-1.03354*(-1.*t1209*t1897 + t1869*t336) - 0.05315*t4999 + 0.1305*t1693*t501 + t1718*t5654 + t1737*t5750 + t1744*t5783 + t1780*t5817 + t1797*t5857 + t1854*t5869 + t1869*t5907 + t1897*t5931 + t1693*t6039 + t1713*t6053 + t6169*t700 + t6146*t757 + t1693*t5726*t881)*var2[6] + (-1.03354*(-1.*t1209*t1225 + t1167*t336) - 0.05315*t4954 + t1062*t5817 + t1097*t5857 + t1154*t5869 + t1167*t5907 + t1225*t5931 + t5638*t824 + t5618*t655*t866 + 0.1305*(-1.*t501*t655*t866 - 1.*t824*t881) + t474*t5654*t898 + t5726*t898 - 1.*t5750*t898*t944 + t5783*t963)*var2[7] + (-1.03354*(-1.*t1209*t2672 + t2683*t336) - 0.05315*t5049 + t2566*t5654 + t2529*t5750 + t2611*t5783 + t2571*t5817 + t2651*t5857 + t2616*t5869 + t2683*t5907 + t2672*t5931 + t2519*t6602 + t1693*t6609)*var2[8] + (-1.03354*(-1.*t1209*t2775 + t2800*t336) - 0.05315*t5057 + t2738*t5783 + t2724*t5817 + t2765*t5857 + t2749*t5869 + t2800*t5907 + t2775*t5931 + t2716*t6678 + t2566*t6713)*var2[9] + (-1.03354*(-1.*t1209*t2885 + t2906*t336) - 0.05315*t5080 + t2866*t5857 + t2843*t5869 + t2906*t5907 + t2885*t5931 + t2724*t6820 + t2819*t6832)*var2[10] + (-0.05315*t5105 + t2937*t5907 + t2928*t5931 + t2925*t6889 + t2866*t6899 - 1.03354*(t2937*t336 + t6910))*var2[11] + (-0.05315*t5111 - 1.03354*(-1.*t2952*t336 + t6910) + t2928*t6944 + t2952*t6971)*var2[12];
  p_output1[13]=var2[1] + (-0.05315*t2957 - 1.03354*t5111 + t2716*t5654 + t2519*t5726 + t2566*t5750 + t2724*t5783 + t2819*t5817 + t2925*t5857 + t2866*t5869 + t2928*t5907 + t2952*t5931 + t1693*t6053 + t6016*t700 + t5988*t757 + t6039*t824 + t6307*t655*t866 + 0.1305*t898)*var2[3] + (-1.03354*(t336*t3566 - 1.*t1209*t3581) - 0.05315*t5170 + t3476*t5654 + t3437*t5726 + t3503*t5750 + t3514*t5783 + t3525*t5817 + t3538*t5857 + t3552*t5869 + t3566*t5907 + t3581*t5931 + t3432*t6039 + t3446*t6053 - 1.*t621*t6307*t670 + t546*t5988*t621*t866 + t6016*t621*t696*t866 + 0.1305*(t3432*t501 + t621*t670*t881))*var2[4] + (-1.03354*(-1.*t1209*t3245 + t3229*t336) + 0.1305*t3140*t501 - 0.05315*t5149 + t3153*t5654 + t3172*t5750 + t3186*t5783 + t3198*t5817 + t3201*t5857 + t3217*t5869 + t3229*t5907 + t3245*t5931 + t2203*t5988 + t2991*t6016 + t3140*t6039 + t3151*t6053 + t3140*t5726*t881)*var2[5] + (-1.03354*(t336*t3383 - 1.*t1209*t3409) + 0.1305*t3254*t501 - 0.05315*t5157 + t3271*t5654 + t3323*t5750 + t3345*t5783 + t3356*t5817 + t3366*t5857 + t3378*t5869 + t3383*t5907 + t3409*t5931 + t3254*t6039 + t3262*t6053 + t2991*t6146 + t2973*t6169 + t3254*t5726*t881)*var2[6] + (-1.03354*(-1.*t1209*t3116 + t3087*t336) - 0.05315*t5122 + t2997*t5638 + t3007*t474*t5654 + t3007*t5726 + t3034*t5783 + t3051*t5817 + t3065*t5857 + t3083*t5869 + t3087*t5907 + t3116*t5931 + t5618*t621*t866 + 0.1305*(t2170 - 1.*t2997*t881) - 1.*t3007*t5750*t944)*var2[7] + (-1.03354*(-1.*t1209*t3705 + t336*t3719) - 0.05315*t5201 + t3650*t5654 + t3632*t5750 + t3678*t5783 + t3670*t5817 + t3698*t5857 + t3687*t5869 + t3719*t5907 + t3705*t5931 + t3610*t6602 + t3254*t6609)*var2[8] + (-1.03354*(-1.*t1209*t3813 + t336*t3837) - 0.05315*t5225 + t3784*t5783 + t3764*t5817 + t3807*t5857 + t3790*t5869 + t3837*t5907 + t3813*t5931 + t3756*t6678 + t3650*t6713)*var2[9] + (-1.03354*(-1.*t1209*t3882 + t336*t3898) - 0.05315*t5239 + t3871*t5857 + t3863*t5869 + t3898*t5907 + t3882*t5931 + t3764*t6820 + t3860*t6832)*var2[10] + (-0.05315*t5268 + t3972*t5907 + t3939*t5931 + t3931*t6889 + t3871*t6899 - 1.03354*(t336*t3972 + t7578))*var2[11] + (-0.05315*t5272 + t3939*t6944 + t4003*t6971 - 1.03354*(-1.*t336*t4003 + t7578))*var2[12];
  p_output1[14]=var2[2] + (-1.03354*(t336*t4902 - 1.*t1209*t4922) - 0.05315*t5426 + t4833*t5654 + t4811*t5726 + t4849*t5750 + t4859*t5783 + t4887*t5817 + t4889*t5857 + t4895*t5869 + t4902*t5907 + t4922*t5931 + t4801*t6039 + t4825*t6053 - 1.*t546*t5988*t670 - 1.*t6016*t670*t696 - 1.*t6307*t866 + 0.1305*(t4801*t501 + t866*t881))*var2[4] + (t7794 + t7799 + t7804 + t7813 + t7814 + t7820 + t7822 + t7824 + t7825 + t7826 + t7836 + t7841 + t7842 + t7858 + t546*t6016*t866 - 1.*t5988*t696*t866)*var2[5] + (t7794 + t7799 + t7804 + t7813 + t7814 + t7820 + t7822 + t7824 + t7825 + t7826 + t7836 + t7841 + t7842 + t7858 + t546*t6146*t866 + t6169*t696*t866)*var2[6] + (-1.03354*(t336*t4109 - 1.*t1209*t4125) - 0.05315*t5287 + t4043*t5638 + t4051*t474*t5654 + t4051*t5726 + t4066*t5783 + t4079*t5817 + t4089*t5857 + t4107*t5869 + t4109*t5907 + t4125*t5931 - 1.*t5618*t670 + 0.1305*(t501*t670 - 1.*t4043*t881) - 1.*t4051*t5750*t944)*var2[7] + (-1.03354*(-1.*t1209*t4442 + t336*t4455) - 0.05315*t5349 + t4380*t5654 + t4364*t5750 + t4397*t5783 + t4388*t5817 + t4434*t5857 + t4402*t5869 + t4455*t5907 + t4442*t5931 + t4350*t6602 + t4160*t6609)*var2[8] + (-1.03354*(-1.*t1209*t4534 + t336*t4550) - 0.05315*t5363 + t4501*t5783 + t4495*t5817 + t4523*t5857 + t4514*t5869 + t4550*t5907 + t4534*t5931 + t4485*t6678 + t4380*t6713)*var2[9] + (-1.03354*(-1.*t1209*t4648 + t336*t4664) - 0.05315*t5374 + t4614*t5857 + t4593*t5869 + t4664*t5907 + t4648*t5931 + t4495*t6820 + t4581*t6832)*var2[10] + (-0.05315*t5388 + t4716*t5907 + t4705*t5931 + t4689*t6889 + t4614*t6899 - 1.03354*(t336*t4716 + t8048))*var2[11] + (-0.05315*t5415 + t4705*t6944 + t4750*t6971 - 1.03354*(-1.*t336*t4750 + t8048))*var2[12];
  p_output1[15]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 20 && ncols == 1) && 
      !(mrows == 1 && ncols == 20))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 20 && ncols == 1) && 
      !(mrows == 1 && ncols == 20))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 4, (mwSize) 4, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "dT_LeftToeJoint_mex.hh"

namespace SymExpression
{

void dT_LeftToeJoint_mex_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
