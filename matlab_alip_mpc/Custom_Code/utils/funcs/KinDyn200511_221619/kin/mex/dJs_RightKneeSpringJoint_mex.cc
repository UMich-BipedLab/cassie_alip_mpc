/*
 * Automatically Generated from Mathematica.
 * Mon 11 May 2020 22:22:06 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t132;
  double t212;
  double t530;
  double t598;
  double t594;
  double t606;
  double t638;
  double t639;
  double t1343;
  double t1363;
  double t733;
  double t792;
  double t797;
  double t817;
  double t1431;
  double t1446;
  double t1462;
  double t1685;
  double t1711;
  double t1756;
  double t860;
  double t893;
  double t925;
  double t955;
  double t966;
  double t974;
  double t995;
  double t1040;
  double t1124;
  double t1178;
  double t1195;
  double t1250;
  double t1256;
  double t1303;
  double t1330;
  double t2369;
  double t2068;
  double t2069;
  double t2070;
  double t2420;
  double t2398;
  double t2423;
  double t2434;
  double t2498;
  double t2503;
  double t2006;
  double t2008;
  double t2017;
  double t2505;
  double t2511;
  double t2519;
  double t2541;
  double t2547;
  double t2549;
  double t1616;
  double t1630;
  double t1643;
  double t2628;
  double t2629;
  double t2631;
  double t2576;
  double t2616;
  double t2617;
  double t2622;
  double t2456;
  double t2460;
  double t2488;
  double t2731;
  double t2732;
  double t2748;
  double t2773;
  double t2777;
  double t1520;
  double t1549;
  double t1553;
  double t2696;
  double t2663;
  double t2820;
  double t2822;
  double t2841;
  double t2850;
  double t2855;
  double t2857;
  double t2864;
  double t2887;
  double t2896;
  double t2900;
  double t3129;
  double t3131;
  double t3134;
  double t3241;
  double t3247;
  double t3249;
  double t3296;
  double t3297;
  double t3299;
  double t3300;
  double t3416;
  double t3490;
  double t3108;
  double t3116;
  double t3119;
  double t2521;
  double t2569;
  double t3252;
  double t3259;
  double t3262;
  double t3734;
  double t2949;
  double t3427;
  double t3435;
  double t3796;
  double t3797;
  double t3805;
  double t3806;
  double t3859;
  double t2701;
  double t2713;
  double t3549;
  double t3558;
  double t3388;
  double t3395;
  double t3402;
  double t4051;
  double t4055;
  double t4126;
  double t4132;
  double t4060;
  double t4067;
  double t4068;
  double t3339;
  double t3345;
  double t3357;
  double t4133;
  double t4138;
  double t4139;
  double t4174;
  double t4183;
  double t4186;
  double t2654;
  double t2665;
  double t2917;
  double t2921;
  double t4148;
  double t4191;
  double t4201;
  double t3529;
  double t3538;
  double t4215;
  double t4218;
  double t4242;
  double t2955;
  double t2965;
  double t2983;
  double t2986;
  double t4080;
  double t4082;
  double t4085;
  double t4094;
  double t4107;
  double t4113;
  double t3033;
  double t3040;
  double t3046;
  double t3267;
  double t3282;
  double t3283;
  double t3066;
  double t3069;
  double t3146;
  double t3152;
  double t3724;
  double t3727;
  double t3729;
  double t4390;
  double t4409;
  double t4417;
  double t4204;
  double t4210;
  double t4213;
  double t4571;
  double t4572;
  double t4583;
  double t4594;
  double t4597;
  double t4274;
  double t2865;
  double t2877;
  double t4362;
  double t4432;
  double t2745;
  double t2793;
  double t3459;
  double t3479;
  double t3494;
  double t3509;
  double t4777;
  double t4793;
  double t4804;
  double t3221;
  double t3224;
  double t3310;
  double t3316;
  double t4515;
  double t4517;
  double t4528;
  double t4838;
  double t4841;
  double t4845;
  double t3609;
  double t3612;
  double t4822;
  double t4846;
  double t3582;
  double t3587;
  double t2695;
  double t3373;
  double t3376;
  double t4623;
  double t4636;
  double t4639;
  double t5066;
  double t3767;
  double t3769;
  double t4455;
  double t4457;
  double t4458;
  double t4243;
  double t4247;
  double t3820;
  double t3832;
  double t4865;
  double t4870;
  double t4880;
  double t5304;
  double t3870;
  double t3880;
  double t3903;
  double t3909;
  double t5355;
  double t5356;
  double t5362;
  double t3983;
  double t3984;
  double t5071;
  double t5076;
  double t5170;
  double t5174;
  double t5178;
  double t4658;
  double t4659;
  double t5373;
  double t5380;
  double t3947;
  double t3950;
  double t3923;
  double t3928;
  double t5047;
  double t5050;
  double t5055;
  double t4765;
  double t4767;
  double t4771;
  double t4053;
  double t4070;
  double t4075;
  double t4077;
  double t4117;
  double t5714;
  double t5717;
  double t5718;
  double t5720;
  double t5687;
  double t5689;
  double t5695;
  double t5719;
  double t5722;
  double t5723;
  double t5728;
  double t5731;
  double t5736;
  double t4275;
  double t4299;
  double t5795;
  double t5796;
  double t5806;
  double t5811;
  double t5812;
  double t5672;
  double t5674;
  double t5676;
  double t5724;
  double t5737;
  double t5739;
  double t4348;
  double t5953;
  double t5957;
  double t4696;
  double t5970;
  double t5972;
  double t5973;
  double t5978;
  double t4593;
  double t4600;
  double t4608;
  double t4610;
  double t4448;
  double t4449;
  double t4450;
  double t4461;
  double t4468;
  double t4940;
  double t4945;
  double t4947;
  double t4491;
  double t4496;
  double t5240;
  double t5261;
  double t5262;
  double t4764;
  double t4775;
  double t4811;
  double t6177;
  double t6179;
  double t6182;
  double t6205;
  double t6208;
  double t5005;
  double t6243;
  double t6247;
  double t6248;
  double t6249;
  double t5125;
  double t5139;
  double t5151;
  double t5152;
  double t4885;
  double t4894;
  double t4960;
  double t4966;
  double t5834;
  double t5841;
  double t5842;
  double t5091;
  double t5210;
  double t5226;
  double t5235;
  double t5236;
  double t5265;
  double t5266;
  double t5307;
  double t5328;
  double t5742;
  double t5744;
  double t5386;
  double t5393;
  double t6566;
  double t6574;
  double t6576;
  double t6579;
  double t6594;
  double t6602;
  double t6603;
  double t6604;
  double t6608;
  double t6610;
  double t6611;
  double t6612;
  double t5532;
  double t5558;
  double t5502;
  double t5504;
  double t5517;
  double t5519;
  double t5454;
  double t5576;
  double t5582;
  double t5591;
  double t5594;
  double t5596;
  double t5598;
  double t5613;
  double t5618;
  double t5636;
  double t5637;
  double t5639;
  double t5641;
  double t5642;
  double t5648;
  double t5664;
  double t5668;
  double t5669;
  double t5670;
  double t5679;
  double t5681;
  double t5682;
  double t5685;
  double t5697;
  double t5698;
  double t5700;
  double t5704;
  double t5705;
  double t5706;
  double t6792;
  double t6798;
  double t6805;
  double t6817;
  double t6491;
  double t6492;
  double t6493;
  double t6806;
  double t6819;
  double t6830;
  double t6400;
  double t6402;
  double t6404;
  double t6847;
  double t6853;
  double t6856;
  double t5751;
  double t5754;
  double t5756;
  double t5768;
  double t5772;
  double t5774;
  double t5805;
  double t5815;
  double t6481;
  double t6483;
  double t6485;
  double t5826;
  double t5829;
  double t5831;
  double t5848;
  double t5854;
  double t6452;
  double t6453;
  double t6456;
  double t6465;
  double t6467;
  double t6468;
  double t6831;
  double t6832;
  double t6834;
  double t6972;
  double t6980;
  double t7041;
  double t7043;
  double t7051;
  double t7060;
  double t7065;
  double t6846;
  double t6858;
  double t6866;
  double t5886;
  double t5889;
  double t5890;
  double t5893;
  double t5895;
  double t5904;
  double t5941;
  double t5945;
  double t6216;
  double t6217;
  double t6231;
  double t6235;
  double t6236;
  double t6237;
  double t7086;
  double t7087;
  double t7091;
  double t7118;
  double t7119;
  double t5996;
  double t6001;
  double t6004;
  double t6010;
  double t6012;
  double t6013;
  double t6034;
  double t6039;
  double t6289;
  double t6290;
  double t6292;
  double t6302;
  double t6305;
  double t6306;
  double t7172;
  double t7173;
  double t7174;
  double t7184;
  double t6064;
  double t6080;
  double t6104;
  double t6105;
  double t6108;
  double t6115;
  double t6119;
  double t6124;
  double t6135;
  double t6136;
  double t6369;
  double t6372;
  double t6373;
  double t6378;
  double t6379;
  double t6380;
  double t6156;
  double t6159;
  double t6519;
  double t6520;
  double t6521;
  double t6526;
  double t6528;
  double t6529;
  double t6192;
  double t6193;
  double t7406;
  double t7407;
  double t7410;
  double t7415;
  double t7423;
  double t6280;
  double t6283;
  double t7464;
  double t7468;
  double t7472;
  double t7475;
  double t6319;
  double t6336;
  double t6349;
  double t6359;
  double t6383;
  double t6384;
  double t7076;
  double t7077;
  double t6410;
  double t6413;
  double t6427;
  double t6430;
  double t6445;
  double t6446;
  double t7769;
  double t7775;
  double t6495;
  double t6497;
  double t6503;
  double t6504;
  double t7830;
  double t7844;
  double t6545;
  double t6546;
  double t6532;
  double t6539;
  double t6871;
  double t6873;
  double t6623;
  double t6625;
  double t6613;
  double t6615;
  double t8048;
  double t8055;
  double t8060;
  double t8067;
  double t8079;
  double t8101;
  double t8105;
  double t8107;
  double t8115;
  double t8118;
  double t8127;
  double t8133;
  double t6661;
  double t6668;
  double t6673;
  double t6675;
  double t6711;
  double t6741;
  double t6770;
  double t6780;
  t132 = Cos(var1[3]);
  t212 = Sin(var1[3]);
  t530 = Cos(var1[4]);
  t598 = Sin(var1[4]);
  t594 = -1.*var2[2]*t530*t212;
  t606 = -1.*var2[1]*t598;
  t638 = -1.*var1[1]*t530;
  t639 = var1[2]*t212*t598;
  t1343 = Cos(var1[5]);
  t1363 = Sin(var1[5]);
  t733 = var2[2]*t132*t530;
  t792 = var2[0]*t598;
  t797 = var1[0]*t530;
  t817 = -1.*var1[2]*t132*t598;
  t1431 = t132*t1343*t598;
  t1446 = t212*t1363;
  t1462 = t1431 + t1446;
  t1685 = -1.*t132*t1343;
  t1711 = -1.*t212*t598*t1363;
  t1756 = t1685 + t1711;
  t860 = -1.*var2[1]*t132*t530;
  t893 = var2[0]*t530*t212;
  t925 = var1[0]*t132*t530;
  t955 = var1[1]*t530*t212;
  t966 = t925 + t955;
  t974 = var2[3]*t966;
  t995 = var1[1]*t132*t598;
  t1040 = -1.*var1[0]*t212*t598;
  t1124 = -1.*var2[3]*t530*t212;
  t1178 = -1.*var2[4]*t132*t598;
  t1195 = t1124 + t1178;
  t1250 = var2[3]*t132*t530;
  t1256 = -1.*var2[4]*t212*t598;
  t1303 = t1250 + t1256;
  t1330 = -1.*var2[4]*t530;
  t2369 = Cos(var1[13]);
  t2068 = t1343*t212*t598;
  t2069 = -1.*t132*t1363;
  t2070 = t2068 + t2069;
  t2420 = Sin(var1[13]);
  t2398 = t2369*t530*t1343;
  t2423 = -1.*t530*t2420*t1363;
  t2434 = t2398 + t2423;
  t2498 = -1.*t2369;
  t2503 = 1. + t2498;
  t2006 = -1.*t1343*t212;
  t2008 = t132*t598*t1363;
  t2017 = t2006 + t2008;
  t2505 = 0.07996*t2503;
  t2511 = 0.135*t2420;
  t2519 = 0. + t2505 + t2511;
  t2541 = -0.135*t2503;
  t2547 = 0.07996*t2420;
  t2549 = 0. + t2541 + t2547;
  t1616 = -1.*t1343*t212*t598;
  t1630 = t132*t1363;
  t1643 = t1616 + t1630;
  t2628 = t2369*t1462;
  t2629 = -1.*t2420*t2017;
  t2631 = t2628 + t2629;
  t2576 = -1.*var1[2];
  t2616 = -1.*t530*t1343*t2519;
  t2617 = -1.*t530*t2549*t1363;
  t2622 = 0. + t2576 + t2616 + t2617;
  t2456 = t132*t1343;
  t2460 = t212*t598*t1363;
  t2488 = t2456 + t2460;
  t2731 = 0.135*t2369;
  t2732 = t2731 + t2547;
  t2748 = 0.07996*t2369;
  t2773 = -0.135*t2420;
  t2777 = t2748 + t2773;
  t1520 = t1343*t212;
  t1549 = -1.*t132*t598*t1363;
  t1553 = t1520 + t1549;
  t2696 = -1.*t2420*t2070;
  t2663 = t2369*t1756;
  t2820 = -1.*t530*t1343*t2420;
  t2822 = -1.*t2369*t530*t1363;
  t2841 = t2820 + t2822;
  t2850 = t2519*t2070;
  t2855 = t2549*t2488;
  t2857 = 0. + var1[1] + t2850 + t2855;
  t2864 = t2841*t2857;
  t2887 = t2369*t2070;
  t2896 = -1.*t2420*t2488;
  t2900 = t2887 + t2896;
  t3129 = -1.*t2369*t1343*t598;
  t3131 = t2420*t598*t1363;
  t3134 = t3129 + t3131;
  t3241 = t530*t1343*t2519;
  t3247 = t530*t2549*t1363;
  t3249 = 0. + var1[2] + t3241 + t3247;
  t3296 = -1.*var1[0];
  t3297 = -1.*t2519*t1462;
  t3299 = -1.*t2549*t2017;
  t3300 = 0. + t3296 + t3297 + t3299;
  t3416 = -1.*t2420*t1462;
  t3490 = t2841*t3300;
  t3108 = t2369*t530*t1343*t212;
  t3116 = -1.*t530*t2420*t212*t1363;
  t3119 = t3108 + t3116;
  t2521 = t2519*t1462;
  t2569 = t2549*t2017;
  t3252 = t2369*t132*t530*t1343;
  t3259 = -1.*t132*t530*t2420*t1363;
  t3262 = t3252 + t3259;
  t3734 = 0. + var1[0] + t2521 + t2569;
  t2949 = t2696 + t2663;
  t3427 = t2369*t1553;
  t3435 = t3416 + t3427;
  t3796 = -1.*var1[1];
  t3797 = -1.*t2519*t2070;
  t3805 = -1.*t2549*t2488;
  t3806 = 0. + t3796 + t3797 + t3805;
  t3859 = 0.08055*t2434;
  t2701 = -1.*t2369*t2488;
  t2713 = t2696 + t2701;
  t3549 = -1.*t2369*t2017;
  t3558 = t3416 + t3549;
  t3388 = t2369*t1643;
  t3395 = -1.*t2420*t1756;
  t3402 = t3388 + t3395;
  t4051 = Sin(var1[14]);
  t4055 = Cos(var1[14]);
  t4126 = -1.*t4055;
  t4132 = 1. + t4126;
  t4060 = t530*t1343*t2420;
  t4067 = t2369*t530*t1363;
  t4068 = t4060 + t4067;
  t3339 = t2420*t1462;
  t3345 = t2369*t2017;
  t3357 = t3339 + t3345;
  t4133 = -0.08055*t4132;
  t4138 = -0.135*t4051;
  t4139 = 0. + t4133 + t4138;
  t4174 = -0.135*t4132;
  t4183 = 0.08055*t4051;
  t4186 = 0. + t4174 + t4183;
  t2654 = t2420*t1643;
  t2665 = t2654 + t2663;
  t2917 = t2420*t1553;
  t2921 = t2628 + t2917;
  t4148 = t4139*t598;
  t4191 = -1.*t4186*t4068;
  t4201 = 0. + t2576 + t2616 + t4148 + t2617 + t4191;
  t3529 = t2420*t1756;
  t3538 = t2887 + t3529;
  t4215 = t4051*t598;
  t4218 = t4055*t4068;
  t4242 = t4215 + t4218;
  t2955 = t2549*t2070;
  t2965 = t2519*t1756;
  t2983 = -1.*t530*t1343*t2549;
  t2986 = t530*t2519*t1363;
  t4080 = -1.*t530*t4051*t212;
  t4082 = t2420*t2070;
  t4085 = t2369*t2488;
  t4094 = t4082 + t4085;
  t4107 = t4055*t4094;
  t4113 = t4080 + t4107;
  t3033 = t132*t530*t1343*t2420;
  t3040 = t2369*t132*t530*t1363;
  t3046 = t3033 + t3040;
  t3267 = t530*t1343*t2420*t212;
  t3282 = t2369*t530*t212*t1363;
  t3283 = t3267 + t3282;
  t3066 = t530*t1343*t2519*t212;
  t3069 = t530*t2549*t212*t1363;
  t3146 = t1343*t2519*t598;
  t3152 = t2549*t598*t1363;
  t3724 = -1.*t1343*t2420*t598;
  t3727 = -1.*t2369*t598*t1363;
  t3729 = t3724 + t3727;
  t4390 = t530*t4139*t212;
  t4409 = t4186*t4094;
  t4417 = 0. + var1[1] + t4390 + t2850 + t2855 + t4409;
  t4204 = -1.*t132*t530*t4051;
  t4210 = t4055*t3357;
  t4213 = t4204 + t4210;
  t4571 = -0.135*t4055;
  t4572 = -0.08055*t4051;
  t4583 = t4571 + t4572;
  t4594 = 0.08055*t4055;
  t4597 = t4594 + t4138;
  t4274 = -1.*t4055*t530*t212;
  t2865 = -1.*t530*t1343*t2732;
  t2877 = -1.*t530*t2777*t1363;
  t4362 = -1.*t4186*t2434;
  t4432 = -1.*t4055*t2434*t4417;
  t2745 = t2732*t2070;
  t2793 = t2777*t2488;
  t3459 = -1.*t2549*t1462;
  t3479 = -1.*t2519*t1553;
  t3494 = t530*t1343*t2549;
  t3509 = -1.*t530*t2519*t1363;
  t4777 = -1.*t4139*t598;
  t4793 = t4186*t4068;
  t4804 = 0. + var1[2] + t3241 + t4777 + t3247 + t4793;
  t3221 = -1.*t132*t530*t1343*t2519;
  t3224 = -1.*t132*t530*t2549*t1363;
  t3310 = -1.*t1343*t2519*t598;
  t3316 = -1.*t2549*t598*t1363;
  t4515 = t530*t4051;
  t4517 = t4055*t3729;
  t4528 = t4515 + t4517;
  t4838 = -1.*t132*t530*t4139;
  t4841 = -1.*t4186*t3357;
  t4845 = 0. + t3296 + t4838 + t3297 + t3299 + t4841;
  t3609 = t530*t1343*t2732;
  t3612 = t530*t2777*t1363;
  t4822 = t4186*t2434;
  t4846 = -1.*t4055*t2434*t4845;
  t3582 = -1.*t2732*t1462;
  t3587 = -1.*t2777*t2017;
  t2695 = 0.08055*t2631;
  t3373 = -1.*t2519*t1643;
  t3376 = -1.*t2549*t1756;
  t4623 = t4055*t598;
  t4636 = -1.*t4051*t4068;
  t4639 = t4623 + t4636;
  t5066 = t530*t4051*t212;
  t3767 = -1.*t530*t1343*t2519*t212;
  t3769 = -1.*t530*t2549*t212*t1363;
  t4455 = t4051*t212*t598;
  t4457 = t4055*t3283;
  t4458 = t4455 + t4457;
  t4243 = t132*t530*t4139;
  t4247 = t4186*t3357;
  t3820 = t132*t530*t1343*t2519;
  t3832 = t132*t530*t2549*t1363;
  t4865 = t132*t4051*t598;
  t4870 = t4055*t3046;
  t4880 = t4865 + t4870;
  t5304 = 0. + var1[0] + t4243 + t2521 + t2569 + t4247;
  t3870 = -1.*t2549*t2070;
  t3880 = -1.*t2519*t1756;
  t3903 = t2549*t1462;
  t3909 = t2519*t1553;
  t5355 = -1.*t530*t4139*t212;
  t5356 = -1.*t4186*t4094;
  t5362 = 0. + t3796 + t5355 + t3797 + t3805 + t5356;
  t3983 = t2519*t1643;
  t3984 = t2549*t1756;
  t5071 = t4055*t2665;
  t5076 = t5066 + t5071;
  t5170 = -1.*t4055*t132*t530;
  t5174 = -1.*t4051*t3357;
  t5178 = t5170 + t5174;
  t4658 = -1.*t4051*t4094;
  t4659 = t4274 + t4658;
  t5373 = 0.08055*t2841;
  t5380 = -0.01004*t4051*t2434;
  t3947 = t2732*t1462;
  t3950 = t2777*t2017;
  t3923 = -1.*t2732*t2070;
  t3928 = -1.*t2777*t2488;
  t5047 = t4055*t132*t530;
  t5050 = t4051*t3357;
  t5055 = t5047 + t5050;
  t4765 = t132*t530*t4051;
  t4767 = -1.*t4055*t3357;
  t4771 = t4765 + t4767;
  t4053 = -1.*t4051*t598;
  t4070 = -1.*t4055*t4068;
  t4075 = t4053 + t4070;
  t4077 = var2[1]*t4075;
  t4117 = var2[2]*t4113;
  t5714 = Cos(var1[15]);
  t5717 = -1.*t5714;
  t5718 = 1. + t5717;
  t5720 = Sin(var1[15]);
  t5687 = -1.*t4055*t598;
  t5689 = t4051*t4068;
  t5695 = t5687 + t5689;
  t5719 = -0.01004*t5718;
  t5722 = 0.08055*t5720;
  t5723 = 0. + t5719 + t5722;
  t5728 = -0.08055*t5718;
  t5731 = -0.01004*t5720;
  t5736 = 0. + t5728 + t5731;
  t4275 = t4051*t2665;
  t4299 = t4274 + t4275;
  t5795 = 0.08055*t5714;
  t5796 = t5795 + t5731;
  t5806 = -0.01004*t5714;
  t5811 = -0.08055*t5720;
  t5812 = t5806 + t5811;
  t5672 = t4055*t530*t212;
  t5674 = t4051*t4094;
  t5676 = t5672 + t5674;
  t5724 = -1.*t5723*t2434;
  t5737 = -1.*t5736*t5695;
  t5739 = 0. + t2576 + t2616 + t4148 + t2617 + t4191 + t5724 + t5737;
  t4348 = t4186*t3538;
  t5953 = -1.*t5723*t2841;
  t5957 = -1.*t4051*t5736*t2434;
  t4696 = t4186*t2900;
  t5970 = t5723*t2900;
  t5972 = t5736*t5676;
  t5973 = 0. + var1[1] + t4390 + t2850 + t2855 + t4409 + t5970 + t5972;
  t5978 = -1.*t4055*t2434*t5973;
  t4593 = t4583*t598;
  t4600 = -1.*t4597*t4068;
  t4608 = t530*t4583*t212;
  t4610 = t4597*t4094;
  t4448 = -1.*t4055*t132*t598;
  t4449 = t4051*t3046;
  t4450 = t4448 + t4449;
  t4461 = -1.*t4139*t212*t598;
  t4468 = t4186*t3283;
  t4940 = -1.*t4055*t212*t598;
  t4945 = t4051*t3283;
  t4947 = t4940 + t4945;
  t4491 = t530*t4139;
  t4496 = -1.*t4186*t3729;
  t5240 = -1.*t4055*t530;
  t5261 = t4051*t3729;
  t5262 = t5240 + t5261;
  t4764 = var2[0]*t4242;
  t4775 = var2[2]*t4771;
  t4811 = -1.*t4186*t2921;
  t6177 = t5723*t2434;
  t6179 = t5736*t5695;
  t6182 = 0. + var1[2] + t3241 + t4777 + t3247 + t4793 + t6177 + t6179;
  t6205 = t5723*t2841;
  t6208 = t4051*t5736*t2434;
  t5005 = -1.*t4186*t2631;
  t6243 = -1.*t5723*t2631;
  t6247 = -1.*t5736*t5055;
  t6248 = 0. + t3296 + t4838 + t3297 + t3299 + t4841 + t6243 + t6247;
  t6249 = -1.*t4055*t2434*t6248;
  t5125 = -1.*t4583*t598;
  t5139 = t4597*t4068;
  t5151 = -1.*t132*t530*t4583;
  t5152 = -1.*t4597*t3357;
  t4885 = t132*t4139*t598;
  t4894 = -1.*t4186*t3046;
  t4960 = -1.*t530*t4139;
  t4966 = t4186*t3729;
  t5834 = t5714*t2631;
  t5841 = -1.*t5720*t5055;
  t5842 = t5834 + t5841;
  t5091 = -1.*t4186*t2665;
  t5210 = var2[1]*t4213;
  t5226 = -1.*t4055*t4094;
  t5235 = t5066 + t5226;
  t5236 = var2[0]*t5235;
  t5265 = t4139*t212*t598;
  t5266 = -1.*t4186*t3283;
  t5307 = -1.*t132*t4139*t598;
  t5328 = t4186*t3046;
  t5742 = t5723*t2631;
  t5744 = t5736*t5055;
  t5386 = -1.*t4186*t3538;
  t5393 = t4186*t2921;
  t6566 = 0. + var1[0] + t4243 + t2521 + t2569 + t4247 + t5742 + t5744;
  t6574 = -1.*t5723*t2900;
  t6576 = -1.*t5736*t5676;
  t6579 = 0. + t3796 + t5355 + t3797 + t3805 + t5356 + t6574 + t6576;
  t6594 = t5720*t2841;
  t6602 = t5714*t4051*t2434;
  t6603 = t6594 + t6602;
  t6604 = -0.13004*t6603;
  t6608 = t5714*t2841;
  t6610 = -1.*t4051*t5720*t2434;
  t6611 = t6608 + t6610;
  t6612 = 0.08055*t6611;
  t5532 = t4186*t2631;
  t5558 = -1.*t4186*t2900;
  t5502 = t132*t530*t4583;
  t5504 = t4597*t3357;
  t5517 = -1.*t530*t4583*t212;
  t5519 = -1.*t4597*t4094;
  t5454 = t4186*t2665;
  t5576 = -1.*t132*t4051*t598;
  t5582 = -1.*t4055*t3046;
  t5591 = t5576 + t5582;
  t5594 = var2[4]*t5591;
  t5596 = -1.*var2[5]*t4055*t2921;
  t5598 = -1.*var2[13]*t4055*t2631;
  t5613 = var2[14]*t5055;
  t5618 = -1.*t4055*t2665;
  t5636 = t4080 + t5618;
  t5637 = var2[3]*t5636;
  t5639 = t5594 + t5596 + t5598 + t5613 + t5637;
  t5641 = -1.*t4051*t212*t598;
  t5642 = -1.*t4055*t3283;
  t5648 = t5641 + t5642;
  t5664 = var2[4]*t5648;
  t5668 = -1.*var2[5]*t4055*t3538;
  t5669 = -1.*var2[13]*t4055*t2900;
  t5670 = var2[3]*t4771;
  t5679 = var2[14]*t5676;
  t5681 = t5664 + t5668 + t5669 + t5670 + t5679;
  t5682 = -1.*var2[13]*t4055*t2434;
  t5685 = -1.*var2[5]*t4055*t2434;
  t5697 = var2[14]*t5695;
  t5698 = -1.*t530*t4051;
  t5700 = -1.*t4055*t3729;
  t5704 = t5698 + t5700;
  t5705 = var2[4]*t5704;
  t5706 = t5682 + t5685 + t5697 + t5705;
  t6792 = Cos(var1[16]);
  t6798 = -1.*t6792;
  t6805 = 1. + t6798;
  t6817 = Sin(var1[16]);
  t6491 = t5714*t2434;
  t6492 = -1.*t5720*t5695;
  t6493 = t6491 + t6492;
  t6806 = -0.08055*t6805;
  t6819 = -0.13004*t6817;
  t6830 = 0. + t6806 + t6819;
  t6400 = t5720*t2631;
  t6402 = t5714*t5055;
  t6404 = t6400 + t6402;
  t6847 = -0.13004*t6805;
  t6853 = 0.08055*t6817;
  t6856 = 0. + t6847 + t6853;
  t5751 = t5720*t3402;
  t5754 = t5714*t4299;
  t5756 = t5751 + t5754;
  t5768 = t5714*t3402;
  t5772 = -1.*t5720*t4299;
  t5774 = t5768 + t5772;
  t5805 = -1.*t5796*t2434;
  t5815 = -1.*t5812*t5695;
  t6481 = -1.*t5720*t2434;
  t6483 = -1.*t5714*t5695;
  t6485 = t6481 + t6483;
  t5826 = -1.*t5720*t2631;
  t5829 = -1.*t5714*t5055;
  t5831 = t5826 + t5829;
  t5848 = t5796*t2900;
  t5854 = t5812*t5676;
  t6452 = -1.*t5720*t2900;
  t6453 = -1.*t5714*t5676;
  t6456 = t6452 + t6453;
  t6465 = t5714*t2900;
  t6467 = -1.*t5720*t5676;
  t6468 = t6465 + t6467;
  t6831 = t5720*t2434;
  t6832 = t5714*t5695;
  t6834 = t6831 + t6832;
  t6972 = t6792*t5842;
  t6980 = -1.*t6817*t5842;
  t7041 = -0.13004*t6792;
  t7043 = -0.08055*t6817;
  t7051 = t7041 + t7043;
  t7060 = 0.08055*t6792;
  t7065 = t7060 + t6819;
  t6846 = -1.*t6830*t6834;
  t6858 = -1.*t6856*t6493;
  t6866 = 0. + t2576 + t2616 + t4148 + t2617 + t4191 + t5724 + t5737 + t6846 + t6858;
  t5886 = t5720*t3435;
  t5889 = t5714*t4051*t2921;
  t5890 = t5886 + t5889;
  t5893 = t5714*t3435;
  t5895 = -1.*t4051*t5720*t2921;
  t5904 = t5893 + t5895;
  t5941 = t5723*t2949;
  t5945 = t4051*t5736*t3538;
  t6216 = t5720*t2949;
  t6217 = t5714*t4051*t3538;
  t6231 = t6216 + t6217;
  t6235 = t5714*t2949;
  t6236 = -1.*t4051*t5720*t3538;
  t6237 = t6235 + t6236;
  t7086 = t5720*t2900;
  t7087 = t5714*t5676;
  t7091 = t7086 + t7087;
  t7118 = -1.*t6830*t6603;
  t7119 = -1.*t6856*t6611;
  t5996 = t5720*t3558;
  t6001 = t5714*t4051*t2631;
  t6004 = t5996 + t6001;
  t6010 = t5714*t3558;
  t6012 = -1.*t4051*t5720*t2631;
  t6013 = t6010 + t6012;
  t6034 = t5723*t2713;
  t6039 = t4051*t5736*t2900;
  t6289 = t5720*t2713;
  t6290 = t5714*t4051*t2900;
  t6292 = t6289 + t6290;
  t6302 = t5714*t2713;
  t6305 = -1.*t4051*t5720*t2900;
  t6306 = t6302 + t6305;
  t7172 = t6830*t7091;
  t7173 = t6856*t6468;
  t7174 = 0. + var1[1] + t4390 + t2850 + t2855 + t4409 + t5970 + t5972 + t7172 + t7173;
  t7184 = -1.*t4055*t2434*t7174;
  t6064 = -1.*t5736*t4242;
  t6080 = t5736*t4113;
  t6104 = t5720*t3262;
  t6105 = t5714*t4450;
  t6108 = t6104 + t6105;
  t6115 = t5714*t3262;
  t6119 = -1.*t5720*t4450;
  t6124 = t6115 + t6119;
  t6135 = t5723*t3119;
  t6136 = t5736*t4947;
  t6369 = t5720*t3119;
  t6372 = t5714*t4947;
  t6373 = t6369 + t6372;
  t6378 = t5714*t3119;
  t6379 = -1.*t5720*t4947;
  t6380 = t6378 + t6379;
  t6156 = -1.*t5723*t3134;
  t6159 = -1.*t5736*t5262;
  t6519 = t5720*t3134;
  t6520 = t5714*t5262;
  t6521 = t6519 + t6520;
  t6526 = t5714*t3134;
  t6528 = -1.*t5720*t5262;
  t6529 = t6526 + t6528;
  t6192 = -1.*t5723*t3435;
  t6193 = -1.*t4051*t5736*t2921;
  t7406 = t6830*t6603;
  t7407 = t6856*t6611;
  t7410 = t6830*t6834;
  t7415 = t6856*t6493;
  t7423 = 0. + var1[2] + t3241 + t4777 + t3247 + t4793 + t6177 + t6179 + t7410 + t7415;
  t6280 = -1.*t5723*t3558;
  t6283 = -1.*t4051*t5736*t2631;
  t7464 = -1.*t6830*t6404;
  t7468 = -1.*t6856*t5842;
  t7472 = 0. + t3296 + t4838 + t3297 + t3299 + t4841 + t6243 + t6247 + t7464 + t7468;
  t7475 = -1.*t4055*t2434*t7472;
  t6319 = t5736*t4242;
  t6336 = -1.*t5736*t4213;
  t6349 = -1.*t5723*t3262;
  t6359 = -1.*t5736*t4450;
  t6383 = t5723*t3134;
  t6384 = t5736*t5262;
  t7076 = -1.*t6817*t6404;
  t7077 = t7076 + t6972;
  t6410 = -1.*t5723*t3402;
  t6413 = -1.*t5736*t4299;
  t6427 = t5796*t2434;
  t6430 = t5812*t5695;
  t6445 = -1.*t5796*t2631;
  t6446 = -1.*t5812*t5055;
  t7769 = t6792*t6468;
  t7775 = -1.*t6817*t6468;
  t6495 = t5796*t2631;
  t6497 = t5812*t5055;
  t6503 = -1.*t5796*t2900;
  t6504 = -1.*t5812*t5676;
  t7830 = t6792*t6493;
  t7844 = -1.*t6817*t6493;
  t6545 = t5723*t3262;
  t6546 = t5736*t4450;
  t6532 = -1.*t5723*t3119;
  t6539 = -1.*t5736*t4947;
  t6871 = t6830*t6404;
  t6873 = t6856*t5842;
  t6623 = t5723*t3435;
  t6625 = t4051*t5736*t2921;
  t6613 = -1.*t5723*t2949;
  t6615 = -1.*t4051*t5736*t3538;
  t8048 = 0. + var1[0] + t4243 + t2521 + t2569 + t4247 + t5742 + t5744 + t6871 + t6873;
  t8055 = -1.*t6830*t7091;
  t8060 = -1.*t6856*t6468;
  t8067 = 0. + t3796 + t5355 + t3797 + t3805 + t5356 + t6574 + t6576 + t8055 + t8060;
  t8079 = -1.*t6817*t6603;
  t8101 = t6792*t6611;
  t8105 = t8079 + t8101;
  t8107 = 0.03315*t8105;
  t8115 = t6792*t6603;
  t8118 = t6817*t6611;
  t8127 = t8115 + t8118;
  t8133 = -0.19074*t8127;
  t6661 = t5723*t3558;
  t6668 = t4051*t5736*t2631;
  t6673 = -1.*t5723*t2713;
  t6675 = -1.*t4051*t5736*t2900;
  t6711 = t5736*t4213;
  t6741 = -1.*t5736*t4113;
  t6770 = t5723*t3402;
  t6780 = t5736*t4299;
  p_output1[0]=0;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=0;
  p_output1[4]=0;
  p_output1[5]=0;
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=0;
  p_output1[10]=0;
  p_output1[11]=0;
  p_output1[12]=0;
  p_output1[13]=0;
  p_output1[14]=0;
  p_output1[15]=0;
  p_output1[16]=0;
  p_output1[17]=0;
  p_output1[18]=var2[1];
  p_output1[19]=-1.*var2[0];
  p_output1[20]=0;
  p_output1[21]=0;
  p_output1[22]=0;
  p_output1[23]=0;
  p_output1[24]=-1.*t132*var2[2] + t212*var1[2]*var2[3];
  p_output1[25]=-1.*t212*var2[2] - 1.*t132*var1[2]*var2[3];
  p_output1[26]=t132*var2[0] + t212*var2[1] + (-1.*t212*var1[0] + t132*var1[1])*var2[3];
  p_output1[27]=-1.*t132*var2[3];
  p_output1[28]=-1.*t212*var2[3];
  p_output1[29]=0;
  p_output1[30]=t594 + t606 - 1.*t132*t530*var1[2]*var2[3] + (t638 + t639)*var2[4];
  p_output1[31]=t733 + t792 - 1.*t212*t530*var1[2]*var2[3] + (t797 + t817)*var2[4];
  p_output1[32]=t860 + t893 + t974 + (t1040 + t995)*var2[4];
  p_output1[33]=t1195;
  p_output1[34]=t1303;
  p_output1[35]=t1330;
  p_output1[36]=0;
  p_output1[37]=0;
  p_output1[38]=0;
  p_output1[39]=0;
  p_output1[40]=0;
  p_output1[41]=0;
  p_output1[42]=0;
  p_output1[43]=0;
  p_output1[44]=0;
  p_output1[45]=0;
  p_output1[46]=0;
  p_output1[47]=0;
  p_output1[48]=0;
  p_output1[49]=0;
  p_output1[50]=0;
  p_output1[51]=0;
  p_output1[52]=0;
  p_output1[53]=0;
  p_output1[54]=0;
  p_output1[55]=0;
  p_output1[56]=0;
  p_output1[57]=0;
  p_output1[58]=0;
  p_output1[59]=0;
  p_output1[60]=0;
  p_output1[61]=0;
  p_output1[62]=0;
  p_output1[63]=0;
  p_output1[64]=0;
  p_output1[65]=0;
  p_output1[66]=0;
  p_output1[67]=0;
  p_output1[68]=0;
  p_output1[69]=0;
  p_output1[70]=0;
  p_output1[71]=0;
  p_output1[72]=0;
  p_output1[73]=0;
  p_output1[74]=0;
  p_output1[75]=0;
  p_output1[76]=0;
  p_output1[77]=0;
  p_output1[78]=t594 + t606 + (0.135*t1643 + 0.07996*t1756 - 1.*t132*t530*var1[2])*var2[3] + (0.135*t132*t1343*t530 + 0.07996*t132*t1363*t530 + t638 + t639)*var2[4] + (0.07996*t1462 + 0.135*t1553)*var2[5];
  p_output1[79]=t733 + t792 + (0.135*t1462 + 0.07996*t2017 - 1.*t212*t530*var1[2])*var2[3] + (0.135*t1343*t212*t530 + 0.07996*t1363*t212*t530 + t797 + t817)*var2[4] + (0.135*t1756 + 0.07996*t2070)*var2[5];
  p_output1[80]=t860 + t893 + t974 + (t1040 - 0.135*t1343*t598 - 0.07996*t1363*t598 + t995)*var2[4] + (0.07996*t1343*t530 - 0.135*t1363*t530)*var2[5];
  p_output1[81]=t1195;
  p_output1[82]=t1303;
  p_output1[83]=t1330;
  p_output1[84]=t2434*var2[1] + (-1.*t2070*t2369 + t2420*t2488)*var2[2] + (t2434*(t2521 + t2569) + t2622*t2631 + 0.08055*t2665 + 0.135*t212*t530)*var2[3] + (0.08055*t3046 + t2434*(t3066 + t3069) + t2622*t3119 + t2857*t3134 + t2900*(t3146 + t3152) + 0.135*t132*t598)*var2[4] + (t2864 + 0.08055*t2921 + t2622*t2949 + t2434*(t2955 + t2965) + t2900*(t2983 + t2986))*var2[5] + (t2695 + t2622*t2713 + t2434*(t2745 + t2793) + t2864 + (t2865 + t2877)*t2900)*var2[13];
  p_output1[85]=(-1.*t1343*t2369*t530 + t1363*t2420*t530)*var2[0] + t2631*var2[2] + (0.08055*t3357 + t2434*(t3373 + t3376) + t3249*t3402 - 0.135*t132*t530)*var2[3] + (t2434*(t3221 + t3224) + t3249*t3262 + 0.08055*t3283 + t3134*t3300 + t2631*(t3310 + t3316) + 0.135*t212*t598)*var2[4] + (t3249*t3435 + t2434*(t3459 + t3479) + t3490 + t2631*(t3494 + t3509) + 0.08055*t3538)*var2[5] + (0.08055*t2900 + t3490 + t3249*t3558 + t2434*(t3582 + t3587) + t2631*(t3609 + t3612))*var2[13];
  p_output1[86]=t2900*var2[0] + (-1.*t1462*t2369 + t2017*t2420)*var2[1] + (t2631*(t3297 + t3299) + t2631*t3734 + t3402*t3806 + t2900*(t3983 + t3984))*var2[3] + (0.08055*t3729 + t3119*t3734 + t2631*(t3767 + t3769) + t3262*t3806 + t2900*(t3820 + t3832) + 0.135*t530)*var2[4] + (t2949*t3734 + t3435*t3806 + t3859 + t2631*(t3870 + t3880) + t2900*(t3903 + t3909))*var2[5] + (t2713*t3734 + t3558*t3806 + t3859 + t2631*(t3923 + t3928) + t2900*(t3947 + t3950))*var2[13];
  p_output1[87]=t3402*var2[3] + t3262*var2[4] + t3435*var2[5] + t3558*var2[13];
  p_output1[88]=t2631*var2[3] + t3119*var2[4] + t2949*var2[5] + t2713*var2[13];
  p_output1[89]=t3134*var2[4] + t2841*var2[5] + t2841*var2[13];
  p_output1[90]=t4077 + t4117 + (0.08055*t3402 - 1.*t4201*t4213 - 1.*t4242*(t2521 + t2569 + t4243 + t4247) - 0.01004*t4299)*var2[3] + (0.08055*t3262 - 0.01004*t4450 - 1.*t4201*t4458 - 1.*t4242*(t3066 + t3069 + t4461 + t4468) - 1.*t4113*(t3146 + t3152 + t4491 + t4496) - 1.*t4417*t4528)*var2[4] + (0.08055*t3435 - 0.01004*t2921*t4051 - 1.*t3538*t4055*t4201 - 1.*t4242*(t2955 + t2965 + t4348) - 1.*t4113*(t2983 + t2986 + t4362) + t4432)*var2[5] + (0.08055*t3558 - 0.01004*t2631*t4051 - 1.*t2900*t4055*t4201 - 1.*t4113*(t2865 + t2877 + t4362) + t4432 - 1.*t4242*(t2745 + t2793 + t4696))*var2[13] + (-0.01004*t4213 - 1.*t4113*(t4593 + t4600) - 1.*t4242*(t4608 + t4610) - 1.*t4417*t4639 - 1.*t4201*t4659)*var2[14];
  p_output1[91]=t4764 + t4775 + (t2695 - 0.01004*t5055 - 1.*t4804*t5076 - 1.*t4242*(t3373 + t3376 + t4390 + t5091))*var2[3] + (0.08055*t3119 - 1.*t4528*t4845 - 1.*t4804*t4880 - 1.*t4242*(t3221 + t3224 + t4885 + t4894) - 0.01004*t4947 - 1.*t4213*(t3310 + t3316 + t4960 + t4966))*var2[4] + (0.08055*t2949 - 0.01004*t3538*t4051 - 1.*t2921*t4055*t4804 - 1.*t4242*(t3459 + t3479 + t4811) - 1.*t4213*(t3494 + t3509 + t4822) + t4846)*var2[5] + (0.08055*t2713 - 0.01004*t2900*t4051 - 1.*t2631*t4055*t4804 - 1.*t4213*(t3609 + t3612 + t4822) + t4846 - 1.*t4242*(t3582 + t3587 + t5005))*var2[13] + (-0.01004*t4113 - 1.*t4639*t4845 - 1.*t4213*(t5125 + t5139) - 1.*t4242*(t5151 + t5152) - 1.*t4804*t5178)*var2[14];
  p_output1[92]=t5210 + t5236 + (-1.*t4213*(t3297 + t3299 + t4838 + t4841) - 1.*t4213*t5304 - 1.*t5076*t5362 - 1.*t4113*(t3983 + t3984 + t5355 + t5454))*var2[3] + (0.08055*t3134 - 0.01004*t5262 - 1.*t4213*(t3767 + t3769 + t5265 + t5266) - 1.*t4458*t5304 - 1.*t4113*(t3820 + t3832 + t5307 + t5328) - 1.*t4880*t5362)*var2[4] + (-1.*t3538*t4055*t5304 - 1.*t2921*t4055*t5362 + t5373 + t5380 - 1.*t4213*(t3870 + t3880 + t5386) - 1.*t4113*(t3903 + t3909 + t5393))*var2[5] + (-1.*t2900*t4055*t5304 - 1.*t2631*t4055*t5362 + t5373 + t5380 - 1.*t4113*(t3947 + t3950 + t5532) - 1.*t4213*(t3923 + t3928 + t5558))*var2[13] + (-0.01004*t4242 - 1.*t4659*t5304 - 1.*t5178*t5362 - 1.*t4113*(t5502 + t5504) - 1.*t4213*(t5517 + t5519))*var2[14];
  p_output1[93]=t5639;
  p_output1[94]=t5681;
  p_output1[95]=t5706;
  p_output1[96]=t4077 + t4117 + (-1.*t4213*t5739 - 1.*t4242*(t2521 + t2569 + t4243 + t4247 + t5742 + t5744) - 0.13004*t5756 + 0.08055*t5774)*var2[3] + (-1.*t4458*t5739 - 1.*t4528*t5973 - 0.13004*t6108 + 0.08055*t6124 - 1.*t4242*(t3066 + t3069 + t4461 + t4468 + t6135 + t6136) - 1.*t4113*(t3146 + t3152 + t4491 + t4496 + t6156 + t6159))*var2[4] + (-1.*t3538*t4055*t5739 - 0.13004*t5890 + 0.08055*t5904 - 1.*t4242*(t2955 + t2965 + t4348 + t5941 + t5945) - 1.*t4113*(t2983 + t2986 + t4362 + t5953 + t5957) + t5978)*var2[5] + (-1.*t2900*t4055*t5739 - 1.*t4113*(t2865 + t2877 + t4362 + t5953 + t5957) + t5978 - 0.13004*t6004 + 0.08055*t6013 - 1.*t4242*(t2745 + t2793 + t4696 + t6034 + t6039))*var2[13] + (-0.13004*t4213*t5714 - 0.08055*t4213*t5720 - 1.*t4659*t5739 - 1.*t4639*t5973 - 1.*t4113*(t4593 + t4600 + t6064) - 1.*t4242*(t4608 + t4610 + t6080))*var2[14] + (-1.*t4113*(t5805 + t5815) + 0.08055*t5831 - 0.13004*t5842 - 1.*t4242*(t5848 + t5854))*var2[15];
  p_output1[97]=t4764 + t4775 + (0.08055*t5842 - 1.*t5076*t6182 - 0.13004*t6404 - 1.*t4242*(t3373 + t3376 + t4390 + t5091 + t6410 + t6413))*var2[3] + (-1.*t4880*t6182 - 1.*t4528*t6248 - 1.*t4242*(t3221 + t3224 + t4885 + t4894 + t6349 + t6359) - 0.13004*t6373 + 0.08055*t6380 - 1.*t4213*(t3310 + t3316 + t4960 + t4966 + t6383 + t6384))*var2[4] + (-1.*t2921*t4055*t6182 - 1.*t4242*(t3459 + t3479 + t4811 + t6192 + t6193) - 1.*t4213*(t3494 + t3509 + t4822 + t6205 + t6208) - 0.13004*t6231 + 0.08055*t6237 + t6249)*var2[5] + (-1.*t2631*t4055*t6182 - 1.*t4213*(t3609 + t3612 + t4822 + t6205 + t6208) + t6249 - 1.*t4242*(t3582 + t3587 + t5005 + t6280 + t6283) - 0.13004*t6292 + 0.08055*t6306)*var2[13] + (-0.13004*t4113*t5714 - 0.08055*t4113*t5720 - 1.*t5178*t6182 - 1.*t4639*t6248 - 1.*t4213*(t5125 + t5139 + t6319) - 1.*t4242*(t5151 + t5152 + t6336))*var2[14] + (-1.*t4213*(t6427 + t6430) - 1.*t4242*(t6445 + t6446) + 0.08055*t6456 - 0.13004*t6468)*var2[15];
  p_output1[98]=t5210 + t5236 + (-1.*t4213*(t3297 + t3299 + t4838 + t4841 + t6243 + t6247) - 1.*t4213*t6566 - 1.*t5076*t6579 - 1.*t4113*(t3983 + t3984 + t5355 + t5454 + t6770 + t6780))*var2[3] + (-0.13004*t6521 + 0.08055*t6529 - 1.*t4213*(t3767 + t3769 + t5265 + t5266 + t6532 + t6539) - 1.*t4113*(t3820 + t3832 + t5307 + t5328 + t6545 + t6546) - 1.*t4458*t6566 - 1.*t4880*t6579)*var2[4] + (-1.*t3538*t4055*t6566 - 1.*t2921*t4055*t6579 + t6604 + t6612 - 1.*t4213*(t3870 + t3880 + t5386 + t6613 + t6615) - 1.*t4113*(t3903 + t3909 + t5393 + t6623 + t6625))*var2[5] + (-1.*t2900*t4055*t6566 - 1.*t2631*t4055*t6579 + t6604 + t6612 - 1.*t4113*(t3947 + t3950 + t5532 + t6661 + t6668) - 1.*t4213*(t3923 + t3928 + t5558 + t6673 + t6675))*var2[13] + (-0.13004*t4242*t5714 - 0.08055*t4242*t5720 - 1.*t4659*t6566 - 1.*t5178*t6579 - 1.*t4113*(t5502 + t5504 + t6711) - 1.*t4213*(t5517 + t5519 + t6741))*var2[14] + (0.08055*t6485 - 0.13004*t6493 - 1.*t4113*(t6495 + t6497) - 1.*t4213*(t6503 + t6504))*var2[15];
  p_output1[99]=t5639;
  p_output1[100]=t5681;
  p_output1[101]=t5706;
  p_output1[102]=t4077 + t4117 + (0.03315*(t5774*t6792 - 1.*t5756*t6817) - 0.19074*(t5756*t6792 + t5774*t6817) - 1.*t4213*t6866 - 1.*t4242*(t2521 + t2569 + t4243 + t4247 + t5742 + t5744 + t6871 + t6873))*var2[3] + (0.03315*(t6124*t6792 - 1.*t6108*t6817) - 0.19074*(t6108*t6792 + t6124*t6817) - 1.*t4242*(t3066 + t3069 + t4461 + t4468 + t6135 + t6136 + t6373*t6830 + t6380*t6856) - 1.*t4113*(t3146 + t3152 + t4491 + t4496 + t6156 + t6159 - 1.*t6521*t6830 - 1.*t6529*t6856) - 1.*t4458*t6866 - 1.*t4528*t7174)*var2[4] + (0.03315*(t5904*t6792 - 1.*t5890*t6817) - 0.19074*(t5890*t6792 + t5904*t6817) - 1.*t4242*(t2955 + t2965 + t4348 + t5941 + t5945 + t6231*t6830 + t6237*t6856) - 1.*t3538*t4055*t6866 - 1.*t4113*(t2983 + t2986 + t4362 + t5953 + t5957 + t7118 + t7119) + t7184)*var2[5] + (0.03315*(t6013*t6792 - 1.*t6004*t6817) - 0.19074*(t6004*t6792 + t6013*t6817) - 1.*t4242*(t2745 + t2793 + t4696 + t6034 + t6039 + t6292*t6830 + t6306*t6856) - 1.*t2900*t4055*t6866 - 1.*t4113*(t2865 + t2877 + t4362 + t5953 + t5957 + t7118 + t7119) + t7184)*var2[13] + (0.03315*(-1.*t4213*t5720*t6792 - 1.*t4213*t5714*t6817) - 0.19074*(t4213*t5714*t6792 - 1.*t4213*t5720*t6817) - 1.*t4242*(t4608 + t4610 + t6080 + t4113*t5714*t6830 - 1.*t4113*t5720*t6856) - 1.*t4113*(t4593 + t4600 + t6064 - 1.*t4242*t5714*t6830 + t4242*t5720*t6856) - 1.*t4659*t6866 - 1.*t4639*t7174)*var2[14] + (-1.*t4242*(t5848 + t5854 + t6468*t6830 + t6456*t6856) - 1.*t4113*(t5805 + t5815 - 1.*t6493*t6830 - 1.*t6485*t6856) - 0.19074*(t5831*t6817 + t6972) + 0.03315*(t5831*t6792 + t6980))*var2[15] + (0.03315*(-1.*t6404*t6792 + t6980) - 1.*t4113*(-1.*t6834*t7051 - 1.*t6493*t7065) - 0.19074*t7077 - 1.*t4242*(t6468*t7065 + t7051*t7091))*var2[16];
  p_output1[103]=t4764 + t4775 + (-0.19074*(t6404*t6792 + t5842*t6817) - 1.*t4242*(t3373 + t3376 + t4390 + t5091 + t6410 + t6413 - 1.*t5756*t6830 - 1.*t5774*t6856) + 0.03315*t7077 - 1.*t5076*t7423)*var2[3] + (0.03315*(t6380*t6792 - 1.*t6373*t6817) - 0.19074*(t6373*t6792 + t6380*t6817) - 1.*t4242*(t3221 + t3224 + t4885 + t4894 + t6349 + t6359 - 1.*t6108*t6830 - 1.*t6124*t6856) - 1.*t4213*(t3310 + t3316 + t4960 + t4966 + t6383 + t6384 + t6521*t6830 + t6529*t6856) - 1.*t4880*t7423 - 1.*t4528*t7472)*var2[4] + (0.03315*(t6237*t6792 - 1.*t6231*t6817) - 0.19074*(t6231*t6792 + t6237*t6817) - 1.*t4242*(t3459 + t3479 + t4811 + t6192 + t6193 - 1.*t5890*t6830 - 1.*t5904*t6856) - 1.*t4213*(t3494 + t3509 + t4822 + t6205 + t6208 + t7406 + t7407) - 1.*t2921*t4055*t7423 + t7475)*var2[5] + (0.03315*(t6306*t6792 - 1.*t6292*t6817) - 0.19074*(t6292*t6792 + t6306*t6817) - 1.*t4242*(t3582 + t3587 + t5005 + t6280 + t6283 - 1.*t6004*t6830 - 1.*t6013*t6856) - 1.*t4213*(t3609 + t3612 + t4822 + t6205 + t6208 + t7406 + t7407) - 1.*t2631*t4055*t7423 + t7475)*var2[13] + (0.03315*(-1.*t4113*t5720*t6792 - 1.*t4113*t5714*t6817) - 0.19074*(t4113*t5714*t6792 - 1.*t4113*t5720*t6817) - 1.*t4242*(t5151 + t5152 + t6336 - 1.*t4213*t5714*t6830 + t4213*t5720*t6856) - 1.*t4213*(t5125 + t5139 + t6319 + t4242*t5714*t6830 - 1.*t4242*t5720*t6856) - 1.*t5178*t7423 - 1.*t4639*t7472)*var2[14] + (-1.*t4242*(t6445 + t6446 - 1.*t5842*t6830 - 1.*t5831*t6856) - 1.*t4213*(t6427 + t6430 + t6493*t6830 + t6485*t6856) - 0.19074*(t6456*t6817 + t7769) + 0.03315*(t6456*t6792 + t7775))*var2[15] + (-1.*t4242*(-1.*t6404*t7051 - 1.*t5842*t7065) - 1.*t4213*(t6834*t7051 + t6493*t7065) - 0.19074*(-1.*t6817*t7091 + t7769) + 0.03315*(-1.*t6792*t7091 + t7775))*var2[16];
  p_output1[104]=t5210 + t5236 + (-1.*t4113*(t3983 + t3984 + t5355 + t5454 + t6770 + t6780 + t5756*t6830 + t5774*t6856) - 1.*t4213*(t3297 + t3299 + t4838 + t4841 + t6243 + t6247 + t7464 + t7468) - 1.*t4213*t8048 - 1.*t5076*t8067)*var2[3] + (0.03315*(t6529*t6792 - 1.*t6521*t6817) - 0.19074*(t6521*t6792 + t6529*t6817) - 1.*t4113*(t3820 + t3832 + t5307 + t5328 + t6545 + t6546 + t6108*t6830 + t6124*t6856) - 1.*t4213*(t3767 + t3769 + t5265 + t5266 + t6532 + t6539 - 1.*t6373*t6830 - 1.*t6380*t6856) - 1.*t4458*t8048 - 1.*t4880*t8067)*var2[4] + (-1.*t4113*(t3903 + t3909 + t5393 + t6623 + t6625 + t5890*t6830 + t5904*t6856) - 1.*t4213*(t3870 + t3880 + t5386 + t6613 + t6615 - 1.*t6231*t6830 - 1.*t6237*t6856) - 1.*t3538*t4055*t8048 - 1.*t2921*t4055*t8067 + t8107 + t8133)*var2[5] + (-1.*t4113*(t3947 + t3950 + t5532 + t6661 + t6668 + t6004*t6830 + t6013*t6856) - 1.*t4213*(t3923 + t3928 + t5558 + t6673 + t6675 - 1.*t6292*t6830 - 1.*t6306*t6856) - 1.*t2900*t4055*t8048 - 1.*t2631*t4055*t8067 + t8107 + t8133)*var2[13] + (0.03315*(-1.*t4242*t5720*t6792 - 1.*t4242*t5714*t6817) - 0.19074*(t4242*t5714*t6792 - 1.*t4242*t5720*t6817) - 1.*t4213*(t5517 + t5519 + t6741 - 1.*t4113*t5714*t6830 + t4113*t5720*t6856) - 1.*t4113*(t5502 + t5504 + t6711 + t4213*t5714*t6830 - 1.*t4213*t5720*t6856) - 1.*t4659*t8048 - 1.*t5178*t8067)*var2[14] + (-1.*t4113*(t6495 + t6497 + t5842*t6830 + t5831*t6856) - 1.*t4213*(t6503 + t6504 - 1.*t6468*t6830 - 1.*t6456*t6856) - 0.19074*(t6485*t6817 + t7830) + 0.03315*(t6485*t6792 + t7844))*var2[15] + (-1.*t4113*(t6404*t7051 + t5842*t7065) - 1.*t4213*(-1.*t6468*t7065 - 1.*t7051*t7091) - 0.19074*(-1.*t6817*t6834 + t7830) + 0.03315*(-1.*t6792*t6834 + t7844))*var2[16];
  p_output1[105]=t5639;
  p_output1[106]=t5681;
  p_output1[107]=t5706;
  p_output1[108]=0;
  p_output1[109]=0;
  p_output1[110]=0;
  p_output1[111]=0;
  p_output1[112]=0;
  p_output1[113]=0;
  p_output1[114]=0;
  p_output1[115]=0;
  p_output1[116]=0;
  p_output1[117]=0;
  p_output1[118]=0;
  p_output1[119]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 20 && ncols == 1) && 
      !(mrows == 1 && ncols == 20))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 20 && ncols == 1) && 
      !(mrows == 1 && ncols == 20))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 6, (mwSize) 20, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "dJs_RightKneeSpringJoint_mex.hh"

namespace SymExpression
{

void dJs_RightKneeSpringJoint_mex_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
