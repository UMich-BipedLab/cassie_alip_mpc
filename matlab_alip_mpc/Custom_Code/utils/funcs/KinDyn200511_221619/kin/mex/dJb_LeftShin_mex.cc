/*
 * Automatically Generated from Mathematica.
 * Mon 11 May 2020 22:25:39 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t312;
  double t182;
  double t202;
  double t342;
  double t71;
  double t96;
  double t253;
  double t378;
  double t429;
  double t508;
  double t509;
  double t553;
  double t627;
  double t648;
  double t655;
  double t665;
  double t39;
  double t691;
  double t31;
  double t692;
  double t7;
  double t850;
  double t1248;
  double t1153;
  double t1162;
  double t1214;
  double t1236;
  double t1282;
  double t1361;
  double t1390;
  double t1399;
  double t1401;
  double t783;
  double t795;
  double t893;
  double t1377;
  double t1406;
  double t1444;
  double t1476;
  double t1492;
  double t1501;
  double t1455;
  double t1511;
  double t1523;
  double t1573;
  double t1579;
  double t1588;
  double t1631;
  double t1674;
  double t1677;
  double t1694;
  double t1697;
  double t1705;
  double t1733;
  double t1744;
  double t1770;
  double t1793;
  double t1771;
  double t1802;
  double t1813;
  double t1832;
  double t1856;
  double t1858;
  double t2060;
  double t2068;
  double t2082;
  double t2105;
  double t2106;
  double t2104;
  double t2109;
  double t2116;
  double t2129;
  double t2149;
  double t2162;
  double t2335;
  double t2364;
  double t2415;
  double t2427;
  double t2547;
  double t2549;
  double t2248;
  double t2255;
  double t2360;
  double t2444;
  double t2476;
  double t2654;
  double t2684;
  double t2689;
  double t2792;
  double t2840;
  double t2851;
  double t2866;
  double t2841;
  double t2892;
  double t2897;
  double t2922;
  double t2929;
  double t2937;
  double t3039;
  double t3057;
  double t3070;
  double t3080;
  double t3137;
  double t3151;
  double t3168;
  double t3173;
  double t3188;
  double t3200;
  double t3202;
  double t3215;
  double t3190;
  double t3227;
  double t3252;
  double t3276;
  double t3291;
  double t3292;
  double t3265;
  double t3309;
  double t3316;
  double t3320;
  double t3321;
  double t3338;
  double t3340;
  double t3341;
  double t3343;
  double t3346;
  double t3353;
  double t3356;
  double t3376;
  double t3386;
  double t3392;
  double t3404;
  double t3383;
  double t3410;
  double t3417;
  double t3440;
  double t3449;
  double t3451;
  double t3125;
  double t3128;
  double t3012;
  double t3029;
  double t3051;
  double t3081;
  double t3084;
  double t3608;
  double t3611;
  double t3662;
  double t3664;
  double t3672;
  double t3682;
  double t3694;
  double t3700;
  double t3719;
  double t3721;
  double t3735;
  double t3765;
  double t689;
  double t721;
  double t740;
  double t859;
  double t964;
  double t1011;
  double t1024;
  double t1047;
  double t1082;
  double t3983;
  double t3984;
  double t3990;
  double t1821;
  double t1877;
  double t1881;
  double t1931;
  double t1950;
  double t1952;
  double t1953;
  double t1999;
  double t2003;
  double t2121;
  double t2164;
  double t2165;
  double t2186;
  double t2208;
  double t2212;
  double t2331;
  double t2478;
  double t2480;
  double t2521;
  double t2529;
  double t2543;
  double t2558;
  double t2591;
  double t2602;
  double t2603;
  double t2611;
  double t2691;
  double t2703;
  double t2705;
  double t2719;
  double t2721;
  double t2734;
  double t2742;
  double t2744;
  double t2748;
  double t2905;
  double t2954;
  double t2957;
  double t2978;
  double t2982;
  double t2983;
  double t3032;
  double t3088;
  double t3089;
  double t3091;
  double t3099;
  double t3109;
  double t3130;
  double t4237;
  double t4241;
  double t4246;
  double t3418;
  double t3452;
  double t3462;
  double t3473;
  double t3475;
  double t3482;
  double t3499;
  double t3517;
  double t3520;
  double t3563;
  double t3569;
  double t3572;
  double t3576;
  double t3612;
  double t3619;
  double t3621;
  double t3636;
  double t3638;
  double t3639;
  double t3669;
  double t3686;
  double t3687;
  double t3702;
  double t3748;
  double t3779;
  double t3785;
  double t3806;
  double t3830;
  double t3838;
  double t3856;
  double t3874;
  double t3885;
  double t3887;
  double t3916;
  double t3920;
  double t3924;
  double t3932;
  double t3934;
  double t3940;
  double t4432;
  double t4450;
  double t4452;
  double t4551;
  double t4558;
  double t4561;
  double t4683;
  double t4703;
  double t4705;
  double t4711;
  double t4713;
  double t4726;
  double t4732;
  double t4733;
  double t4742;
  double t4743;
  double t4791;
  double t4796;
  double t4802;
  double t4811;
  double t4813;
  double t4655;
  double t4657;
  double t4728;
  double t4762;
  double t4765;
  double t4789;
  double t4815;
  double t4817;
  double t4833;
  double t4840;
  double t4845;
  double t4827;
  double t4847;
  double t4849;
  double t4853;
  double t4867;
  double t4868;
  double t4903;
  double t4906;
  double t4919;
  double t5014;
  double t5015;
  double t4986;
  double t4989;
  double t5095;
  double t5098;
  double t5016;
  double t5045;
  double t5050;
  double t5052;
  double t5060;
  double t4970;
  double t4975;
  double t4991;
  double t5066;
  double t5081;
  double t5118;
  double t5122;
  double t5132;
  double t5133;
  double t5136;
  double t5140;
  double t5142;
  double t5144;
  double t5155;
  double t5156;
  double t5159;
  double t5161;
  double t5163;
  double t5166;
  double t4881;
  double t4976;
  double t4977;
  double t5128;
  double t5173;
  double t5176;
  double t5185;
  double t5186;
  double t5188;
  double t5198;
  double t5199;
  double t5217;
  double t5220;
  double t5223;
  double t5232;
  double t5245;
  double t5246;
  double t5253;
  double t5184;
  double t5201;
  double t5212;
  double t4850;
  double t4869;
  double t4870;
  double t5242;
  double t5260;
  double t5263;
  double t5272;
  double t5273;
  double t5276;
  double t4893;
  double t4923;
  double t4924;
  double t4966;
  double t4952;
  double t4954;
  double t4959;
  double t5449;
  double t5453;
  double t5457;
  double t5460;
  double t5464;
  double t5480;
  double t5499;
  double t5466;
  double t5506;
  double t5511;
  double t5527;
  double t5543;
  double t5554;
  double t5588;
  double t5599;
  double t5603;
  double t4568;
  double t4569;
  double t4575;
  double t5214;
  double t5269;
  double t5283;
  double t5284;
  double t5526;
  double t5561;
  double t5575;
  double t5581;
  double t5612;
  double t5629;
  double t5637;
  double t5643;
  double t5644;
  double t5763;
  double t5764;
  double t5768;
  double t5785;
  double t5787;
  double t5811;
  double t5820;
  double t5824;
  double t5776;
  double t5789;
  double t5805;
  double t5808;
  double t5825;
  double t5828;
  double t5849;
  double t5850;
  double t5851;
  double t5842;
  double t5858;
  double t5860;
  double t5909;
  double t5911;
  double t5913;
  double t5954;
  double t5959;
  double t5961;
  double t5288;
  double t5310;
  double t5900;
  double t5920;
  double t5921;
  double t5334;
  double t5335;
  double t5941;
  double t5963;
  double t5966;
  double t5981;
  double t5985;
  double t5997;
  double t6109;
  double t6110;
  double t6127;
  double t6132;
  double t6136;
  double t6146;
  double t6148;
  double t6169;
  double t6181;
  double t6192;
  double t6115;
  double t6152;
  double t6155;
  double t6384;
  double t6365;
  double t6366;
  double t6367;
  double t6324;
  double t6326;
  double t6327;
  double t6329;
  double t4586;
  double t4587;
  double t4591;
  double t4620;
  double t4622;
  double t4623;
  double t6572;
  double t6584;
  double t6599;
  double t6557;
  double t4521;
  double t4531;
  double t4533;
  double t6672;
  double t6677;
  double t6711;
  double t6712;
  double t6717;
  double t6721;
  double t6728;
  double t6733;
  double t6739;
  double t4629;
  double t4630;
  double t4642;
  double t6686;
  double t6693;
  double t6695;
  double t6725;
  double t6741;
  double t6743;
  double t6757;
  double t6765;
  double t6772;
  double t6993;
  double t4466;
  double t4470;
  double t4479;
  double t7005;
  double t7007;
  double t7014;
  double t7024;
  double t7026;
  double t7027;
  double t7031;
  double t7035;
  double t7347;
  double t7351;
  double t7352;
  double t7364;
  double t4490;
  double t4496;
  double t4511;
  double t4411;
  double t4414;
  double t4420;
  double t7756;
  double t7761;
  double t7770;
  double t7775;
  double t7822;
  double t7825;
  double t7831;
  double t7844;
  double t8206;
  double t8213;
  double t8220;
  double t8256;
  double t8264;
  double t8290;
  double t8299;
  double t8319;
  double t4428;
  double t4455;
  double t4458;
  double t4483;
  double t4485;
  double t4486;
  double t4513;
  double t4515;
  double t4536;
  double t4541;
  double t4544;
  double t4564;
  double t4567;
  double t4585;
  double t4598;
  double t4600;
  double t4601;
  double t4611;
  double t4624;
  double t4647;
  double t4654;
  double t4877;
  double t5330;
  double t5580;
  double t8583;
  double t8585;
  double t8592;
  double t5675;
  double t5676;
  double t5927;
  double t8599;
  double t8601;
  double t8607;
  double t6024;
  double t6166;
  double t6214;
  double t6244;
  double t6248;
  double t6371;
  double t6400;
  double t6457;
  double t6486;
  double t8776;
  double t8786;
  double t8793;
  double t6697;
  double t6816;
  double t6854;
  double t6862;
  double t6955;
  double t7029;
  double t7080;
  double t8995;
  double t8997;
  double t9001;
  double t7124;
  double t7137;
  double t7192;
  double t9003;
  double t9008;
  double t9011;
  double t7216;
  double t7267;
  double t7279;
  double t7317;
  double t7318;
  double t7400;
  double t7432;
  double t7486;
  double t7487;
  double t9135;
  double t9136;
  double t9137;
  double t7614;
  double t7633;
  double t7680;
  double t7684;
  double t7721;
  double t7722;
  double t7784;
  double t7785;
  double t8209;
  double t9260;
  double t9261;
  double t9262;
  double t8289;
  double t9300;
  double t9301;
  double t9305;
  double t9316;
  double t9322;
  double t8343;
  double t9330;
  double t9332;
  double t9339;
  double t8377;
  double t9362;
  double t8427;
  double t8435;
  double t8469;
  double t8474;
  double t7872;
  double t7876;
  double t7936;
  double t7937;
  double t8015;
  double t8029;
  double t8109;
  double t8126;
  double t8563;
  double t8606;
  double t8637;
  double t9599;
  double t9600;
  double t9602;
  double t8646;
  double t8648;
  double t8703;
  double t9608;
  double t8722;
  double t9634;
  double t9636;
  double t8896;
  double t8897;
  double t8929;
  double t8931;
  double t8983;
  double t9010;
  double t9033;
  double t9826;
  double t9830;
  double t9831;
  double t9043;
  double t9045;
  double t9072;
  double t9835;
  double t9087;
  double t9836;
  double t9839;
  double t9199;
  double t9201;
  double t9213;
  double t9215;
  double t9237;
  double t9239;
  double t9265;
  double t9271;
  double t9318;
  double t10059;
  double t10062;
  double t10064;
  double t9334;
  double t10086;
  double t10087;
  double t10092;
  double t9373;
  double t10101;
  double t10103;
  double t10113;
  double t9387;
  double t10114;
  double t10118;
  double t10130;
  double t9396;
  double t9397;
  double t9417;
  double t9419;
  double t10280;
  double t10282;
  double t10305;
  double t10310;
  double t10324;
  double t10329;
  double t10331;
  double t10433;
  double t10440;
  double t10457;
  double t10460;
  double t10473;
  double t10478;
  double t10479;
  double t10574;
  double t10577;
  double t10581;
  double t10598;
  double t10604;
  double t10608;
  double t10617;
  double t10621;
  double t10629;
  double t10636;
  double t10640;
  double t10646;
  double t10205;
  double t10210;
  double t10219;
  double t10222;
  double t10223;
  double t10227;
  double t10234;
  double t10240;
  double t10245;
  double t10251;
  double t10260;
  double t10710;
  double t10712;
  double t10715;
  double t10735;
  double t10736;
  double t10739;
  double t10618;
  double t10632;
  double t10749;
  double t10752;
  double t10677;
  double t10680;
  double t10694;
  double t10698;
  double t10769;
  double t10770;
  double t10754;
  double t10758;
  double t10651;
  double t10771;
  double t10763;
  double t10661;
  double t10841;
  double t10842;
  double t10850;
  double t10852;
  double t10870;
  double t10873;
  double t10876;
  double t10878;
  t312 = Cos(var1[9]);
  t182 = Cos(var1[10]);
  t202 = Sin(var1[9]);
  t342 = Sin(var1[10]);
  t71 = Cos(var1[7]);
  t96 = Cos(var1[8]);
  t253 = t182*t202;
  t378 = t312*t342;
  t429 = 0. + t253 + t378;
  t508 = t96*t429;
  t509 = -1.*t312*t182;
  t553 = t202*t342;
  t627 = 0. + t509 + t553;
  t648 = Sin(var1[8]);
  t655 = -1.*t627*t648;
  t665 = 0. + t508 + t655;
  t39 = Cos(var1[6]);
  t691 = Sin(var1[5]);
  t31 = Cos(var1[5]);
  t692 = Sin(var1[6]);
  t7 = Sin(var1[3]);
  t850 = Sin(var1[7]);
  t1248 = t253 + t378;
  t1153 = t312*t182;
  t1162 = -1.*t202*t342;
  t1214 = t1153 + t1162;
  t1236 = t96*t1214;
  t1282 = -1.*t1248*t648;
  t1361 = t1236 + t1282;
  t1390 = t96*t1248;
  t1399 = t1214*t648;
  t1401 = t1390 + t1399;
  t783 = Cos(var1[3]);
  t795 = Cos(var1[4]);
  t893 = Sin(var1[4]);
  t1377 = t692*t850*t1361;
  t1406 = t39*t1401;
  t1444 = t1377 + t1406;
  t1476 = t39*t850*t1361;
  t1492 = -1.*t692*t1401;
  t1501 = t1476 + t1492;
  t1455 = -1.*t691*t1444;
  t1511 = t31*t1501;
  t1523 = t1455 + t1511;
  t1573 = -1.*t7*t1523;
  t1579 = t795*t71*t1361;
  t1588 = t31*t1444;
  t1631 = t691*t1501;
  t1674 = t1588 + t1631;
  t1677 = t893*t1674;
  t1694 = t1579 + t1677;
  t1697 = t783*t1694;
  t1705 = t1573 + t1697;
  t1733 = -1.*t96*t627;
  t1744 = -1.*t429*t648;
  t1770 = t1733 + t1744;
  t1793 = t508 + t655;
  t1771 = t692*t850*t1770;
  t1802 = t39*t1793;
  t1813 = t1771 + t1802;
  t1832 = t39*t850*t1770;
  t1856 = -1.*t692*t1793;
  t1858 = t1832 + t1856;
  t2060 = t96*t627;
  t2068 = t429*t648;
  t2082 = 0. + t2060 + t2068;
  t2105 = t850*t665;
  t2106 = 0. + t2105;
  t2104 = -1.*t692*t2082;
  t2109 = t39*t2106;
  t2116 = t2104 + t2109;
  t2129 = -1.*t39*t2082;
  t2149 = -1.*t692*t2106;
  t2162 = t2129 + t2149;
  t2335 = 0. + t2104 + t2109;
  t2364 = t39*t2082;
  t2415 = t692*t2106;
  t2427 = 0. + t2364 + t2415;
  t2547 = t31*t2335;
  t2549 = -1.*t691*t2427;
  t2248 = t71*t665;
  t2255 = 0. + t2248;
  t2360 = t691*t2335;
  t2444 = t31*t2427;
  t2476 = 0. + t2360 + t2444;
  t2654 = 0. + t1153 + t1162;
  t2684 = t96*t2654;
  t2689 = 0. + t2684 + t1744;
  t2792 = t2654*t648;
  t2840 = 0. + t508 + t2792;
  t2851 = t850*t2689;
  t2866 = 0. + t2851;
  t2841 = -1.*t692*t2840;
  t2892 = t39*t2866;
  t2897 = t2841 + t2892;
  t2922 = -1.*t39*t2840;
  t2929 = -1.*t692*t2866;
  t2937 = t2922 + t2929;
  t3039 = 0. + t2841 + t2892;
  t3057 = t39*t2840;
  t3070 = t692*t2866;
  t3080 = 0. + t3057 + t3070;
  t3137 = -1.*t182*t202;
  t3151 = -1.*t312*t342;
  t3168 = t3137 + t3151;
  t3173 = t3168*t648;
  t3188 = t1236 + t3173;
  t3200 = t96*t3168;
  t3202 = -1.*t1214*t648;
  t3215 = t3200 + t3202;
  t3190 = -1.*t692*t3188;
  t3227 = t39*t850*t3215;
  t3252 = t3190 + t3227;
  t3276 = t39*t3188;
  t3291 = t692*t850*t3215;
  t3292 = t3276 + t3291;
  t3265 = t31*t3252;
  t3309 = -1.*t691*t3292;
  t3316 = t3265 + t3309;
  t3320 = -1.*t7*t3316;
  t3321 = t795*t71*t3215;
  t3338 = t691*t3252;
  t3340 = t31*t3292;
  t3341 = t3338 + t3340;
  t3343 = t893*t3341;
  t3346 = t3321 + t3343;
  t3353 = t783*t3346;
  t3356 = t3320 + t3353;
  t3376 = t2684 + t1744;
  t3386 = -1.*t96*t429;
  t3392 = -1.*t2654*t648;
  t3404 = t3386 + t3392;
  t3383 = -1.*t692*t3376;
  t3410 = t39*t850*t3404;
  t3417 = t3383 + t3410;
  t3440 = t39*t3376;
  t3449 = t692*t850*t3404;
  t3451 = t3440 + t3449;
  t3125 = t31*t3039;
  t3128 = -1.*t691*t3080;
  t3012 = t71*t2689;
  t3029 = 0. + t3012;
  t3051 = t691*t3039;
  t3081 = t31*t3080;
  t3084 = 0. + t3051 + t3081;
  t3608 = -1.*t71;
  t3611 = 0. + t3608;
  t3662 = t39*t3611;
  t3664 = 0. + t3662;
  t3672 = t3611*t692;
  t3682 = 0. + t3672;
  t3694 = t31*t3664;
  t3700 = -1.*t691*t3682;
  t3719 = t3664*t691;
  t3721 = t31*t3682;
  t3735 = 0. + t3719 + t3721;
  t3765 = 0. + t850;
  t689 = t31*t39*t71*t665;
  t721 = -1.*t71*t691*t692*t665;
  t740 = t689 + t721;
  t859 = -1.*t795*t850*t665;
  t964 = t39*t71*t691*t665;
  t1011 = t31*t71*t692*t665;
  t1024 = t964 + t1011;
  t1047 = t893*t1024;
  t1082 = t859 + t1047;
  t3983 = t783*t1523;
  t3984 = t7*t1694;
  t3990 = t3983 + t3984;
  t1821 = -1.*t691*t1813;
  t1877 = t31*t1858;
  t1881 = t1821 + t1877;
  t1931 = t795*t71*t1770;
  t1950 = t31*t1813;
  t1952 = t691*t1858;
  t1953 = t1950 + t1952;
  t1999 = t893*t1953;
  t2003 = t1931 + t1999;
  t2121 = -1.*t691*t2116;
  t2164 = t31*t2162;
  t2165 = t2121 + t2164;
  t2186 = t31*t2116;
  t2208 = t691*t2162;
  t2212 = t2186 + t2208;
  t2331 = -1.*t893*t2255;
  t2478 = t795*t2476;
  t2480 = t2331 + t2478;
  t2521 = -1.*t691*t2335;
  t2529 = -1.*t31*t2427;
  t2543 = t2521 + t2529;
  t2558 = t2547 + t2549;
  t2591 = 0. + t2547 + t2549;
  t2602 = t795*t2255;
  t2603 = t893*t2476;
  t2611 = 0. + t2602 + t2603;
  t2691 = t31*t39*t71*t2689;
  t2703 = -1.*t71*t691*t692*t2689;
  t2705 = t2691 + t2703;
  t2719 = -1.*t795*t850*t2689;
  t2721 = t39*t71*t691*t2689;
  t2734 = t31*t71*t692*t2689;
  t2742 = t2721 + t2734;
  t2744 = t893*t2742;
  t2748 = t2719 + t2744;
  t2905 = -1.*t691*t2897;
  t2954 = t31*t2937;
  t2957 = t2905 + t2954;
  t2978 = t31*t2897;
  t2982 = t691*t2937;
  t2983 = t2978 + t2982;
  t3032 = -1.*t893*t3029;
  t3088 = t795*t3084;
  t3089 = t3032 + t3088;
  t3091 = -1.*t691*t3039;
  t3099 = -1.*t31*t3080;
  t3109 = t3091 + t3099;
  t3130 = t3125 + t3128;
  t4237 = t783*t3316;
  t4241 = t7*t3346;
  t4246 = t4237 + t4241;
  t3418 = t31*t3417;
  t3452 = -1.*t691*t3451;
  t3462 = t3418 + t3452;
  t3473 = t795*t71*t3404;
  t3475 = t691*t3417;
  t3482 = t31*t3451;
  t3499 = t3475 + t3482;
  t3517 = t893*t3499;
  t3520 = t3473 + t3517;
  t3563 = 0. + t3125 + t3128;
  t3569 = t795*t3029;
  t3572 = t893*t3084;
  t3576 = 0. + t3569 + t3572;
  t3612 = -1.*t39*t3611*t691;
  t3619 = -1.*t31*t3611*t692;
  t3621 = t3612 + t3619;
  t3636 = t31*t39*t3611;
  t3638 = -1.*t3611*t691*t692;
  t3639 = t3636 + t3638;
  t3669 = -1.*t3664*t691;
  t3686 = -1.*t31*t3682;
  t3687 = t3669 + t3686;
  t3702 = t3694 + t3700;
  t3748 = t795*t3735;
  t3779 = -1.*t893*t3765;
  t3785 = t3748 + t3779;
  t3806 = 0. + t3694 + t3700;
  t3830 = t893*t3735;
  t3838 = t795*t3765;
  t3856 = 0. + t3830 + t3838;
  t3874 = t31*t39*t850;
  t3885 = -1.*t691*t692*t850;
  t3887 = t3874 + t3885;
  t3916 = t795*t71;
  t3920 = t39*t691*t850;
  t3924 = t31*t692*t850;
  t3932 = t3920 + t3924;
  t3934 = t893*t3932;
  t3940 = t3916 + t3934;
  t4432 = -1.*t71*t893*t1361;
  t4450 = t795*t1674;
  t4452 = t4432 + t4450;
  t4551 = -1.*t71*t893*t3215;
  t4558 = t795*t3341;
  t4561 = t4551 + t4558;
  t4683 = -1.*t182;
  t4703 = 1. + t4683;
  t4705 = -0.19074*t4703;
  t4711 = -0.37414*t182;
  t4713 = 0.0011999999999999997*t342;
  t4726 = 0. + t4705 + t4711 + t4713;
  t4732 = -0.03315*t4703;
  t4733 = -0.03195*t182;
  t4742 = 0.18339999999999998*t342;
  t4743 = 0. + t4732 + t4733 + t4742;
  t4791 = 0.08055*t312;
  t4796 = -0.13004*t202;
  t4802 = -1.*t202*t4726;
  t4811 = t312*t4743;
  t4813 = t4791 + t4796 + t4802 + t4811;
  t4655 = -0.13004*t312;
  t4657 = -0.08055*t202;
  t4728 = -1.*t312*t4726;
  t4762 = -1.*t202*t4743;
  t4765 = t4655 + t4657 + t4728 + t4762;
  t4789 = t96*t4765;
  t4815 = -1.*t4813*t648;
  t4817 = t4789 + t4815;
  t4833 = t96*t4813;
  t4840 = t4765*t648;
  t4845 = t4833 + t4840;
  t4827 = t692*t850*t4817;
  t4847 = t39*t4845;
  t4849 = t4827 + t4847;
  t4853 = t39*t850*t4817;
  t4867 = -1.*t692*t4845;
  t4868 = t4853 + t4867;
  t4903 = t31*t4849;
  t4906 = t691*t4868;
  t4919 = t4903 + t4906;
  t5014 = -1.*t312;
  t5015 = 1. + t5014;
  t4986 = -1.*t96;
  t4989 = 1. + t4986;
  t5095 = -0.08055*t5015;
  t5098 = 0. + t5095 + t4796 + t4802 + t4811;
  t5016 = -0.13004*t5015;
  t5045 = 0.08055*t202;
  t5050 = t312*t4726;
  t5052 = t202*t4743;
  t5060 = 0. + t5016 + t5045 + t5050 + t5052;
  t4970 = -1.*t39;
  t4975 = 1. + t4970;
  t4991 = -0.01004*t4989;
  t5066 = t96*t5060;
  t5081 = 0.08055*t648;
  t5118 = t5098*t648;
  t5122 = 0. + t4991 + t5066 + t5081 + t5118;
  t5132 = -1.*t71;
  t5133 = 1. + t5132;
  t5136 = 0.135*t5133;
  t5140 = 0.1303*t71;
  t5142 = 0.08055*t850;
  t5144 = -0.08055*t4989;
  t5155 = t96*t5098;
  t5156 = -0.01004*t648;
  t5159 = -1.*t5060*t648;
  t5161 = 0. + t5144 + t5155 + t5156 + t5159;
  t5163 = t850*t5161;
  t5166 = 0. + t5136 + t5140 + t5142 + t5163;
  t4881 = 0. + t3748 + t3779;
  t4976 = 0.135*t4975;
  t4977 = 0.07996*t692;
  t5128 = -1.*t692*t5122;
  t5173 = t39*t5166;
  t5176 = 0. + t4976 + t4977 + t5128 + t5173;
  t5185 = 0.07996*t4975;
  t5186 = -0.135*t692;
  t5188 = t39*t5122;
  t5198 = t692*t5166;
  t5199 = 0. + t5185 + t5186 + t5188 + t5198;
  t5217 = -0.08055*t5133;
  t5220 = 0.00470000000000001*t850;
  t5223 = t71*t5161;
  t5232 = 0. + t5217 + t5220 + t5223;
  t5245 = t691*t5176;
  t5246 = t31*t5199;
  t5253 = 0. + t5245 + t5246;
  t5184 = t31*t5176;
  t5201 = -1.*t691*t5199;
  t5212 = 0. + t5184 + t5201;
  t4850 = -1.*t691*t4849;
  t4869 = t31*t4868;
  t4870 = t4850 + t4869;
  t5242 = -1.*t893*t5232;
  t5260 = t795*t5253;
  t5263 = 0. + t5242 + t5260;
  t5272 = t795*t5232;
  t5273 = t893*t5253;
  t5276 = 0. + t5272 + t5273;
  t4893 = -1.*t71*t893*t4817;
  t4923 = t795*t4919;
  t4924 = t4893 + t4923;
  t4966 = 0. + t3032 + t3088;
  t4952 = t795*t71*t4817;
  t4954 = t893*t4919;
  t4959 = t4952 + t4954;
  t5449 = -0.01004*t96;
  t5453 = -1.*t96*t5060;
  t5457 = -0.08055*t648;
  t5460 = -1.*t5098*t648;
  t5464 = t5449 + t5453 + t5457 + t5460;
  t5480 = 0.08055*t96;
  t5499 = t5480 + t5155 + t5156 + t5159;
  t5466 = t692*t850*t5464;
  t5506 = t39*t5499;
  t5511 = t5466 + t5506;
  t5527 = t39*t850*t5464;
  t5543 = -1.*t692*t5499;
  t5554 = t5527 + t5543;
  t5588 = t31*t5511;
  t5599 = t691*t5554;
  t5603 = t5588 + t5599;
  t4568 = -1.*t71*t893*t3404;
  t4569 = t795*t3499;
  t4575 = t4568 + t4569;
  t5214 = t3806*t5212;
  t5269 = t4881*t5263;
  t5283 = t3856*t5276;
  t5284 = t5214 + t5269 + t5283;
  t5526 = -1.*t691*t5511;
  t5561 = t31*t5554;
  t5575 = t5526 + t5561;
  t5581 = -1.*t71*t893*t5464;
  t5612 = t795*t5603;
  t5629 = t5581 + t5612;
  t5637 = t795*t71*t5464;
  t5643 = t893*t5603;
  t5644 = t5637 + t5643;
  t5763 = 0.18339999999999998*t182;
  t5764 = -0.0011999999999999997*t342;
  t5768 = t5763 + t5764;
  t5785 = 0.0011999999999999997*t182;
  t5787 = t5785 + t4742;
  t5811 = t202*t5768;
  t5820 = t312*t5787;
  t5824 = t5811 + t5820;
  t5776 = t312*t5768;
  t5789 = -1.*t202*t5787;
  t5805 = t5776 + t5789;
  t5808 = t96*t5805;
  t5825 = -1.*t5824*t648;
  t5828 = t5808 + t5825;
  t5849 = t96*t5824;
  t5850 = t5805*t648;
  t5851 = t5849 + t5850;
  t5842 = t692*t850*t5828;
  t5858 = t39*t5851;
  t5860 = t5842 + t5858;
  t5909 = t39*t850*t5828;
  t5911 = -1.*t692*t5851;
  t5913 = t5909 + t5911;
  t5954 = t31*t5860;
  t5959 = t691*t5913;
  t5961 = t5954 + t5959;
  t5288 = t4561*t5284;
  t5310 = -1.*t3316*t5212;
  t5900 = -1.*t691*t5860;
  t5920 = t31*t5913;
  t5921 = t5900 + t5920;
  t5334 = -1.*t4561*t5263;
  t5335 = -1.*t3346*t5276;
  t5941 = -1.*t71*t893*t5828;
  t5963 = t795*t5961;
  t5966 = t5941 + t5963;
  t5981 = t795*t71*t5828;
  t5985 = t893*t5961;
  t5997 = t5981 + t5985;
  t6109 = -0.135*t39;
  t6110 = t6109 + t4977 + t5128 + t5173;
  t6127 = 0.07996*t39;
  t6132 = 0.135*t692;
  t6136 = -1.*t39*t5122;
  t6146 = -1.*t692*t5166;
  t6148 = t6127 + t6132 + t6136 + t6146;
  t6169 = t31*t6110;
  t6181 = t691*t6148;
  t6192 = t6169 + t6181;
  t6115 = -1.*t691*t6110;
  t6152 = t31*t6148;
  t6155 = t6115 + t6152;
  t6384 = t5184 + t5201;
  t6365 = -1.*t691*t5176;
  t6366 = -1.*t31*t5199;
  t6367 = t6365 + t6366;
  t6324 = -1.*t5212*t3563;
  t6326 = -1.*t5263*t4966;
  t6327 = -1.*t5276*t3576;
  t6329 = t6324 + t6326 + t6327;
  t4586 = -1.*t795*t3029;
  t4587 = -1.*t893*t3084;
  t4591 = t4586 + t4587;
  t4620 = -1.*t893*t3735;
  t4622 = -1.*t795*t3765;
  t4623 = t4620 + t4622;
  t6572 = -1.*t795*t5232;
  t6584 = -1.*t893*t5253;
  t6599 = t6572 + t6584;
  t6557 = t5242 + t5260;
  t4521 = t893*t850*t2689;
  t4531 = t795*t2742;
  t4533 = t4521 + t4531;
  t6672 = 0.08055*t71;
  t6677 = t6672 + t5220 + t5223;
  t6711 = 0.00470000000000001*t71;
  t6712 = -0.08055*t850;
  t6717 = -1.*t850*t5161;
  t6721 = t6711 + t6712 + t6717;
  t6728 = t39*t691*t6677;
  t6733 = t31*t692*t6677;
  t6739 = t6728 + t6733;
  t4629 = -1.*t71*t893;
  t4630 = t795*t3932;
  t4642 = t4629 + t4630;
  t6686 = t31*t39*t6677;
  t6693 = -1.*t691*t692*t6677;
  t6695 = t6686 + t6693;
  t6725 = -1.*t893*t6721;
  t6741 = t795*t6739;
  t6743 = t6725 + t6741;
  t6757 = t795*t6721;
  t6765 = t893*t6739;
  t6772 = t6757 + t6765;
  t6993 = 0. + t2331 + t2478;
  t4466 = -1.*t71*t893*t1770;
  t4470 = t795*t1953;
  t4479 = t4466 + t4470;
  t7005 = -1.*t3806*t5212;
  t7007 = -1.*t4881*t5263;
  t7014 = -1.*t3856*t5276;
  t7024 = t7005 + t7007 + t7014;
  t7026 = t4452*t7024;
  t7027 = t1523*t5212;
  t7031 = t4452*t5263;
  t7035 = t1694*t5276;
  t7347 = t5212*t2591;
  t7351 = t5263*t6993;
  t7352 = t5276*t2611;
  t7364 = t7347 + t7351 + t7352;
  t4490 = -1.*t795*t2255;
  t4496 = -1.*t893*t2476;
  t4511 = t4490 + t4496;
  t4411 = t893*t850*t665;
  t4414 = t795*t1024;
  t4420 = t4411 + t4414;
  t7756 = t5212*t3563;
  t7761 = t5263*t4966;
  t7770 = t5276*t3576;
  t7775 = t7756 + t7761 + t7770;
  t7822 = -1.*t5212*t2591;
  t7825 = -1.*t5263*t6993;
  t7831 = -1.*t5276*t2611;
  t7844 = t7822 + t7825 + t7831;
  t8206 = t3316*t5212;
  t8213 = t4561*t5263;
  t8220 = t3346*t5276;
  t8256 = t4452*t7775;
  t8264 = -1.*t1523*t5212;
  t8290 = -1.*t4452*t5263;
  t8299 = -1.*t1694*t5276;
  t8319 = t4561*t7844;
  t4428 = var2[7]*t4420;
  t4455 = var2[9]*t4452;
  t4458 = var2[10]*t4452;
  t4483 = var2[8]*t4479;
  t4485 = var2[6]*t795*t2212;
  t4486 = var2[5]*t795*t2558;
  t4513 = var2[4]*t4511;
  t4515 = t4428 + t4455 + t4458 + t4483 + t4485 + t4486 + t4513;
  t4536 = var2[7]*t4533;
  t4541 = var2[6]*t795*t2983;
  t4544 = var2[5]*t795*t3130;
  t4564 = var2[9]*t4561;
  t4567 = var2[10]*t4561;
  t4585 = var2[8]*t4575;
  t4598 = var2[4]*t4591;
  t4600 = t4536 + t4541 + t4544 + t4564 + t4567 + t4585 + t4598;
  t4601 = var2[6]*t795*t3639;
  t4611 = var2[5]*t795*t3702;
  t4624 = var2[4]*t4623;
  t4647 = var2[7]*t4642;
  t4654 = t4601 + t4611 + t4624 + t4647;
  t4877 = t3806*t4870;
  t5330 = -1.*t4870*t3563;
  t5580 = t3806*t5575;
  t8583 = t3765*t5232;
  t8585 = t3735*t5253;
  t8592 = t8583 + t8585 + t5214;
  t5675 = -1.*t3462*t5212;
  t5676 = -1.*t5575*t3563;
  t5927 = t3806*t5921;
  t8599 = t3316*t8592;
  t8601 = -1.*t71*t3215*t5232;
  t8607 = -1.*t3341*t5253;
  t6024 = -1.*t5921*t3563;
  t6166 = t3806*t6155;
  t6214 = t3621*t5212;
  t6244 = -1.*t5212*t2957;
  t6248 = -1.*t6155*t3563;
  t6371 = t3806*t6367;
  t6400 = t3687*t5212;
  t6457 = -1.*t5212*t3109;
  t6486 = -1.*t6367*t3563;
  t8776 = -1.*t5232*t3029;
  t8786 = -1.*t5253*t3084;
  t8793 = t8776 + t8786 + t6324;
  t6697 = t3806*t6695;
  t6816 = t3887*t5212;
  t6854 = -1.*t2705*t5212;
  t6862 = -1.*t6695*t3563;
  t6955 = -1.*t3806*t4870;
  t7029 = t4870*t2591;
  t7080 = -1.*t3806*t5575;
  t8995 = -1.*t3765*t5232;
  t8997 = -1.*t3735*t5253;
  t9001 = t8995 + t8997 + t7005;
  t7124 = t1881*t5212;
  t7137 = t5575*t2591;
  t7192 = -1.*t3806*t5921;
  t9003 = t1523*t9001;
  t9008 = t71*t1361*t5232;
  t9011 = t1674*t5253;
  t7216 = t5921*t2591;
  t7267 = -1.*t3806*t6155;
  t7279 = -1.*t3621*t5212;
  t7317 = t5212*t2165;
  t7318 = t6155*t2591;
  t7400 = -1.*t3806*t6367;
  t7432 = -1.*t3687*t5212;
  t7486 = t5212*t2543;
  t7487 = t6367*t2591;
  t9135 = t5232*t2255;
  t9136 = t5253*t2476;
  t9137 = t9135 + t9136 + t7347;
  t7614 = -1.*t3806*t6695;
  t7633 = -1.*t3887*t5212;
  t7680 = t740*t5212;
  t7684 = t6695*t2591;
  t7721 = t2705*t5212;
  t7722 = t6695*t3563;
  t7784 = -1.*t740*t5212;
  t7785 = -1.*t6695*t2591;
  t8209 = t4870*t3563;
  t9260 = t5232*t3029;
  t9261 = t5253*t3084;
  t9262 = t9260 + t9261 + t7756;
  t8289 = -1.*t4870*t2591;
  t9300 = -1.*t5232*t2255;
  t9301 = -1.*t5253*t2476;
  t9305 = t9300 + t9301 + t7822;
  t9316 = t71*t3215*t5232;
  t9322 = t3341*t5253;
  t8343 = t5921*t3563;
  t9330 = t1523*t9262;
  t9332 = -1.*t71*t1361*t5232;
  t9339 = -1.*t1674*t5253;
  t8377 = -1.*t5921*t2591;
  t9362 = t3316*t9305;
  t8427 = t3462*t5212;
  t8435 = t5575*t3563;
  t8469 = -1.*t1881*t5212;
  t8474 = -1.*t5575*t2591;
  t7872 = t5212*t2957;
  t7876 = t6155*t3563;
  t7936 = -1.*t5212*t2165;
  t7937 = -1.*t6155*t2591;
  t8015 = t5212*t3109;
  t8029 = t6367*t3563;
  t8109 = -1.*t5212*t2543;
  t8126 = -1.*t6367*t2591;
  t8563 = t71*t3765*t4817;
  t8606 = -1.*t71*t4817*t3029;
  t8637 = t71*t3765*t5464;
  t9599 = t3664*t5176;
  t9600 = t3682*t5199;
  t9602 = t8583 + t9599 + t9600;
  t8646 = -1.*t71*t3404*t5232;
  t8648 = -1.*t71*t5464*t3029;
  t8703 = t71*t3765*t5828;
  t9608 = t71*t3215*t9602;
  t8722 = -1.*t71*t5828*t3029;
  t9634 = -1.*t3252*t5176;
  t9636 = -1.*t3292*t5199;
  t8896 = t71*t5232;
  t8897 = t3765*t6721;
  t8929 = t850*t2689*t5232;
  t8931 = -1.*t6721*t3029;
  t8983 = -1.*t71*t3765*t4817;
  t9010 = t71*t4817*t2255;
  t9033 = -1.*t71*t3765*t5464;
  t9826 = -1.*t3664*t5176;
  t9830 = -1.*t3682*t5199;
  t9831 = t8995 + t9826 + t9830;
  t9043 = t71*t1770*t5232;
  t9045 = t71*t5464*t2255;
  t9072 = -1.*t71*t3765*t5828;
  t9835 = t71*t1361*t9831;
  t9087 = t71*t5828*t2255;
  t9836 = t1501*t5176;
  t9839 = t1444*t5199;
  t9199 = -1.*t71*t5232;
  t9201 = -1.*t3765*t6721;
  t9213 = -1.*t850*t665*t5232;
  t9215 = t6721*t2255;
  t9237 = -1.*t850*t2689*t5232;
  t9239 = t6721*t3029;
  t9265 = t850*t665*t5232;
  t9271 = -1.*t6721*t2255;
  t9318 = t71*t4817*t3029;
  t10059 = t5176*t3039;
  t10062 = t5199*t3080;
  t10064 = t9260 + t10059 + t10062;
  t9334 = -1.*t71*t4817*t2255;
  t10086 = -1.*t5176*t2335;
  t10087 = -1.*t5199*t2427;
  t10092 = t9300 + t10086 + t10087;
  t9373 = t71*t5828*t3029;
  t10101 = t3252*t5176;
  t10103 = t3292*t5199;
  t10113 = t71*t1361*t10064;
  t9387 = -1.*t71*t5828*t2255;
  t10114 = -1.*t1501*t5176;
  t10118 = -1.*t1444*t5199;
  t10130 = t71*t3215*t10092;
  t9396 = t71*t3404*t5232;
  t9397 = t71*t5464*t3029;
  t9417 = -1.*t71*t1770*t5232;
  t9419 = -1.*t71*t5464*t2255;
  t10280 = t3611*t5166;
  t10282 = 0. + t8583 + t10280;
  t10305 = 0.07996*t850*t1361;
  t10310 = -0.135*t1401;
  t10324 = t71*t3215*t10282;
  t10329 = -1.*t5122*t3188;
  t10331 = -1.*t850*t3215*t5166;
  t10433 = -1.*t3611*t5166;
  t10440 = 0. + t8995 + t10433;
  t10457 = -0.135*t3188;
  t10460 = 0.07996*t850*t3215;
  t10473 = t71*t1361*t10440;
  t10478 = t5122*t1401;
  t10479 = t850*t1361*t5166;
  t10574 = t5122*t2840;
  t10577 = t5166*t2866;
  t10581 = t10574 + t9260 + t10577;
  t10598 = -1.*t5122*t2082;
  t10604 = -1.*t5166*t2106;
  t10608 = t10598 + t9300 + t10604;
  t10617 = t5122*t3188;
  t10621 = t850*t3215*t5166;
  t10629 = t71*t1361*t10581;
  t10636 = -1.*t5122*t1401;
  t10640 = -1.*t850*t1361*t5166;
  t10646 = t71*t3215*t10608;
  t10205 = var2[9]*t71*t1361;
  t10210 = var2[10]*t71*t1361;
  t10219 = var2[8]*t71*t1770;
  t10222 = -1.*var2[7]*t850*t665;
  t10223 = t10205 + t10210 + t10219 + t10222;
  t10227 = -1.*var2[7]*t850*t2689;
  t10234 = var2[9]*t71*t3215;
  t10240 = var2[10]*t71*t3215;
  t10245 = var2[8]*t71*t3404;
  t10251 = t10227 + t10234 + t10240 + t10245;
  t10260 = var2[7]*t71;
  t10710 = -0.1303*t3188;
  t10712 = 0.135*t1361;
  t10715 = t10710 + t10712;
  t10735 = 0.135*t3215;
  t10736 = 0.1303*t1401;
  t10739 = t10735 + t10736;
  t10618 = t4845*t2840;
  t10632 = -1.*t4845*t2082;
  t10749 = t5161*t2689;
  t10752 = 0. + t10749 + t10574;
  t10677 = t5122*t3376;
  t10680 = t5499*t2840;
  t10694 = -1.*t5499*t2082;
  t10698 = -1.*t5122*t1793;
  t10769 = -1.*t5161*t665;
  t10770 = 0. + t10598 + t10769;
  t10754 = t1401*t10752;
  t10758 = t5161*t3215;
  t10651 = t5851*t2840;
  t10771 = t3188*t10770;
  t10763 = -1.*t5161*t1361;
  t10661 = -1.*t5851*t2082;
  t10841 = -1.*t5098*t3168;
  t10842 = 0.08055*t1248;
  t10850 = -0.01004*t1214;
  t10852 = -1.*t5060*t1214;
  t10870 = -0.01004*t3168;
  t10873 = t5060*t1248;
  t10876 = 0.08055*t1214;
  t10878 = t5098*t1214;
  p_output1[0]=(-1.*t2611*t7 - 1.*t2591*t783)*var2[3] + t2480*t783*var2[4] + (-1.*t2543*t7 + t2558*t783*t893)*var2[5] + (-1.*t2165*t7 + t2212*t783*t893)*var2[6] + (-1.*t7*t740 + t1082*t783)*var2[7] + (-1.*t1881*t7 + t2003*t783)*var2[8] + t1705*var2[9] + t1705*var2[10];
  p_output1[1]=(-1.*t3576*t7 - 1.*t3563*t783)*var2[3] + t3089*t783*var2[4] + (-1.*t3109*t7 + t3130*t783*t893)*var2[5] + (-1.*t2957*t7 + t2983*t783*t893)*var2[6] + (-1.*t2705*t7 + t2748*t783)*var2[7] + (-1.*t3462*t7 + t3520*t783)*var2[8] + t3356*var2[9] + t3356*var2[10];
  p_output1[2]=(-1.*t3856*t7 - 1.*t3806*t783)*var2[3] + t3785*t783*var2[4] + (-1.*t3687*t7 + t3702*t783*t893)*var2[5] + (-1.*t3621*t7 + t3639*t783*t893)*var2[6] + (-1.*t3887*t7 + t3940*t783)*var2[7];
  p_output1[3]=0;
  p_output1[4]=0;
  p_output1[5]=0;
  p_output1[6]=(-1.*t2591*t7 + t2611*t783)*var2[3] + t2480*t7*var2[4] + (t2543*t783 + t2558*t7*t893)*var2[5] + (t2165*t783 + t2212*t7*t893)*var2[6] + (t1082*t7 + t740*t783)*var2[7] + (t2003*t7 + t1881*t783)*var2[8] + t3990*var2[9] + t3990*var2[10];
  p_output1[7]=(-1.*t3563*t7 + t3576*t783)*var2[3] + t3089*t7*var2[4] + (t3109*t783 + t3130*t7*t893)*var2[5] + (t2957*t783 + t2983*t7*t893)*var2[6] + (t2748*t7 + t2705*t783)*var2[7] + (t3520*t7 + t3462*t783)*var2[8] + t4246*var2[9] + t4246*var2[10];
  p_output1[8]=(-1.*t3806*t7 + t3856*t783)*var2[3] + t3785*t7*var2[4] + (t3687*t783 + t3702*t7*t893)*var2[5] + (t3621*t783 + t3639*t7*t893)*var2[6] + (t3940*t7 + t3887*t783)*var2[7];
  p_output1[9]=0;
  p_output1[10]=0;
  p_output1[11]=0;
  p_output1[12]=t4515;
  p_output1[13]=t4600;
  p_output1[14]=t4654;
  p_output1[15]=0;
  p_output1[16]=0;
  p_output1[17]=0;
  p_output1[18]=(t4591*t5284 + t4623*t6329 + t4966*(t4623*t5263 + t3785*t5276 + t3856*t6557 + t4881*t6599) + t4881*(-1.*t4591*t5263 - 1.*t3089*t5276 - 1.*t3576*t6557 - 1.*t4966*t6599))*var2[4] + (t3130*t5284*t795 + t3702*t6329*t795 + t4881*(t6457 + t6486 - 1.*t3130*t5263*t795 - 1.*t4966*t6384*t795 - 1.*t3130*t5276*t893 - 1.*t3576*t6384*t893) + t4966*(t6371 + t6400 + t3702*t5263*t795 + t4881*t6384*t795 + t3702*t5276*t893 + t3856*t6384*t893))*var2[5] + (t2983*t5284*t795 + t3639*t6329*t795 + t4881*(t6244 + t6248 - 1.*t2983*t5263*t795 - 1.*t4966*t6192*t795 - 1.*t2983*t5276*t893 - 1.*t3576*t6192*t893) + t4966*(t6166 + t6214 + t3639*t5263*t795 + t4881*t6192*t795 + t3639*t5276*t893 + t3856*t6192*t893))*var2[6] + (t4533*t5284 + t4642*t6329 + t4966*(t4642*t5263 + t3940*t5276 + t6697 + t4881*t6743 + t3856*t6772 + t6816) + t4881*(-1.*t4533*t5263 - 1.*t2748*t5276 - 1.*t4966*t6743 - 1.*t3576*t6772 + t6854 + t6862))*var2[7] + (t4575*t5284 + t4966*(t5580 + t4881*t5629 + t3856*t5644) + t4881*(-1.*t4575*t5263 - 1.*t3520*t5276 - 1.*t4966*t5629 - 1.*t3576*t5644 + t5675 + t5676))*var2[8] + ((t4877 + t4881*t4924 + t3856*t4959)*t4966 + t5288 + t4881*(-1.*t3576*t4959 - 1.*t4924*t4966 + t5310 + t5330 + t5334 + t5335))*var2[9] + (t5288 + t4966*(t5927 + t4881*t5966 + t3856*t5997) + t4881*(t5310 + t5334 + t5335 - 1.*t4966*t5966 - 1.*t3576*t5997 + t6024))*var2[10];
  p_output1[19]=((-1.*t4623*t5263 - 1.*t3785*t5276 - 1.*t3856*t6557 - 1.*t4881*t6599)*t6993 + t4881*(t4511*t5263 + t2480*t5276 + t2611*t6557 + t6599*t6993) + t4511*t7024 + t4623*t7364)*var2[4] + (t2558*t7024*t795 + t3702*t7364*t795 + t4881*(t7486 + t7487 + t2558*t5263*t795 + t6384*t6993*t795 + t2558*t5276*t893 + t2611*t6384*t893) + t6993*(t7400 + t7432 - 1.*t3702*t5263*t795 - 1.*t4881*t6384*t795 - 1.*t3702*t5276*t893 - 1.*t3856*t6384*t893))*var2[5] + (t2212*t7024*t795 + t3639*t7364*t795 + t4881*(t7317 + t7318 + t2212*t5263*t795 + t6192*t6993*t795 + t2212*t5276*t893 + t2611*t6192*t893) + t6993*(t7267 + t7279 - 1.*t3639*t5263*t795 - 1.*t4881*t6192*t795 - 1.*t3639*t5276*t893 - 1.*t3856*t6192*t893))*var2[6] + (t4420*t7024 + t4642*t7364 + t6993*(-1.*t4642*t5263 - 1.*t3940*t5276 - 1.*t4881*t6743 - 1.*t3856*t6772 + t7614 + t7633) + t4881*(t4420*t5263 + t1082*t5276 + t2611*t6772 + t6743*t6993 + t7680 + t7684))*var2[7] + (t4479*t7024 + t6993*(-1.*t4881*t5629 - 1.*t3856*t5644 + t7080) + t4881*(t4479*t5263 + t2003*t5276 + t2611*t5644 + t5629*t6993 + t7124 + t7137))*var2[8] + ((-1.*t4881*t4924 - 1.*t3856*t4959 + t6955)*t6993 + t7026 + t4881*(t2611*t4959 + t4924*t6993 + t7027 + t7029 + t7031 + t7035))*var2[9] + (t7026 + t6993*(-1.*t4881*t5966 - 1.*t3856*t5997 + t7192) + t4881*(t2611*t5997 + t5966*t6993 + t7027 + t7031 + t7035 + t7216))*var2[10];
  p_output1[20]=((t4591*t5263 + t3089*t5276 + t3576*t6557 + t4966*t6599)*t6993 + t4966*(-1.*t4511*t5263 - 1.*t2480*t5276 - 1.*t2611*t6557 - 1.*t6599*t6993) + t4511*t7775 + t4591*t7844)*var2[4] + (t2558*t7775*t795 + t3130*t7844*t795 + t4966*(-1.*t2558*t5263*t795 - 1.*t6384*t6993*t795 + t8109 + t8126 - 1.*t2558*t5276*t893 - 1.*t2611*t6384*t893) + t6993*(t3130*t5263*t795 + t4966*t6384*t795 + t8015 + t8029 + t3130*t5276*t893 + t3576*t6384*t893))*var2[5] + (t2212*t7775*t795 + t2983*t7844*t795 + t4966*(t7936 + t7937 - 1.*t2212*t5263*t795 - 1.*t6192*t6993*t795 - 1.*t2212*t5276*t893 - 1.*t2611*t6192*t893) + t6993*(t7872 + t7876 + t2983*t5263*t795 + t4966*t6192*t795 + t2983*t5276*t893 + t3576*t6192*t893))*var2[6] + (t6993*(t4533*t5263 + t2748*t5276 + t4966*t6743 + t3576*t6772 + t7721 + t7722) + t4420*t7775 + t4966*(-1.*t4420*t5263 - 1.*t1082*t5276 - 1.*t2611*t6772 - 1.*t6743*t6993 + t7784 + t7785) + t4533*t7844)*var2[7] + (t4479*t7775 + t4575*t7844 + t6993*(t4575*t5263 + t3520*t5276 + t4966*t5629 + t3576*t5644 + t8427 + t8435) + t4966*(-1.*t4479*t5263 - 1.*t2003*t5276 - 1.*t2611*t5644 - 1.*t5629*t6993 + t8469 + t8474))*var2[8] + (t6993*(t3576*t4959 + t4924*t4966 + t8206 + t8209 + t8213 + t8220) + t8256 + t4966*(-1.*t2611*t4959 - 1.*t4924*t6993 + t8264 + t8289 + t8290 + t8299) + t8319)*var2[9] + (t8256 + t8319 + t6993*(t4966*t5966 + t3576*t5997 + t8206 + t8213 + t8220 + t8343) + t4966*(-1.*t2611*t5997 - 1.*t5966*t6993 + t8264 + t8290 + t8299 + t8377))*var2[10];
  p_output1[21]=t4515;
  p_output1[22]=t4600;
  p_output1[23]=t4654;
  p_output1[24]=(t3563*(t3702*t5253 + t6371 + t3735*t6384 + t6400) + t3806*(-1.*t3130*t5253 - 1.*t3084*t6384 + t6457 + t6486) + t3109*t8592 + t3687*t8793)*var2[5] + (t3563*(t3639*t5253 + t6166 + t3735*t6192 + t6214) + t3806*(-1.*t2983*t5253 - 1.*t3084*t6192 + t6244 + t6248) + t2957*t8592 + t3621*t8793)*var2[6] + (t2705*t8592 + t3887*t8793 + t3563*(t3932*t5253 + t6697 + t3735*t6739 + t6816 + t8896 + t8897) + t3806*(-1.*t2742*t5253 - 1.*t3084*t6739 + t6854 + t6862 + t8929 + t8931))*var2[7] + (t3462*t8592 + t3563*(t5580 + t3735*t5603 + t8637) + t3806*(-1.*t3499*t5253 - 1.*t3084*t5603 + t5675 + t5676 + t8646 + t8648))*var2[8] + (t3563*(t4877 + t3735*t4919 + t8563) + t8599 + t3806*(-1.*t3084*t4919 + t5310 + t5330 + t8601 + t8606 + t8607))*var2[9] + (t8599 + t3563*(t5927 + t3735*t5961 + t8703) + t3806*(t5310 - 1.*t3084*t5961 + t6024 + t8601 + t8607 + t8722))*var2[10];
  p_output1[25]=(t2591*(-1.*t3702*t5253 - 1.*t3735*t6384 + t7400 + t7432) + t3806*(t2558*t5253 + t2476*t6384 + t7486 + t7487) + t2543*t9001 + t3687*t9137)*var2[5] + (t2591*(-1.*t3639*t5253 - 1.*t3735*t6192 + t7267 + t7279) + t3806*(t2212*t5253 + t2476*t6192 + t7317 + t7318) + t2165*t9001 + t3621*t9137)*var2[6] + (t740*t9001 + t3887*t9137 + t2591*(-1.*t3932*t5253 - 1.*t3735*t6739 + t7614 + t7633 + t9199 + t9201) + t3806*(t1024*t5253 + t2476*t6739 + t7680 + t7684 + t9213 + t9215))*var2[7] + (t1881*t9001 + t2591*(-1.*t3735*t5603 + t7080 + t9033) + t3806*(t1953*t5253 + t2476*t5603 + t7124 + t7137 + t9043 + t9045))*var2[8] + (t2591*(-1.*t3735*t4919 + t6955 + t8983) + t9003 + t3806*(t2476*t4919 + t7027 + t7029 + t9008 + t9010 + t9011))*var2[9] + (t9003 + t2591*(-1.*t3735*t5961 + t7192 + t9072) + t3806*(t2476*t5961 + t7027 + t7216 + t9008 + t9011 + t9087))*var2[10];
  p_output1[26]=(t2591*(t3130*t5253 + t3084*t6384 + t8015 + t8029) + t3563*(-1.*t2558*t5253 - 1.*t2476*t6384 + t8109 + t8126) + t2543*t9262 + t3109*t9305)*var2[5] + (t2591*(t2983*t5253 + t3084*t6192 + t7872 + t7876) + t3563*(-1.*t2212*t5253 - 1.*t2476*t6192 + t7936 + t7937) + t2165*t9262 + t2957*t9305)*var2[6] + (t2591*(t2742*t5253 + t3084*t6739 + t7721 + t7722 + t9237 + t9239) + t740*t9262 + t3563*(-1.*t1024*t5253 - 1.*t2476*t6739 + t7784 + t7785 + t9265 + t9271) + t2705*t9305)*var2[7] + (t1881*t9262 + t3462*t9305 + t2591*(t3499*t5253 + t3084*t5603 + t8427 + t8435 + t9396 + t9397) + t3563*(-1.*t1953*t5253 - 1.*t2476*t5603 + t8469 + t8474 + t9417 + t9419))*var2[8] + (t2591*(t3084*t4919 + t8206 + t8209 + t9316 + t9318 + t9322) + t9330 + t3563*(-1.*t2476*t4919 + t8264 + t8289 + t9332 + t9334 + t9339) + t9362)*var2[9] + (t9330 + t9362 + t2591*(t3084*t5961 + t8206 + t8343 + t9316 + t9322 + t9373) + t3563*(-1.*t2476*t5961 + t8264 + t8377 + t9332 + t9339 + t9387))*var2[10];
  p_output1[27]=t2543*var2[5] + t2165*var2[6] + t740*var2[7] + t1881*var2[8] + t1523*var2[9] + t1523*var2[10];
  p_output1[28]=t3109*var2[5] + t2957*var2[6] + t2705*var2[7] + t3462*var2[8] + t3316*var2[9] + t3316*var2[10];
  p_output1[29]=t3687*var2[5] + t3621*var2[6] + t3887*var2[7];
  p_output1[30]=(t3765*(-1.*t2937*t5176 - 1.*t2897*t5199 - 1.*t3080*t6110 - 1.*t3039*t6148) + t3029*(t3611*t39*t5199 + t3682*t6110 + t3664*t6148 - 1.*t3611*t5176*t692))*var2[6] + (t71*(-1.*t3039*t5176 - 1.*t3080*t5199 + t8776) + t3029*(t3664*t39*t6677 + t3682*t6677*t692 + t39*t5176*t850 + t5199*t692*t850 + t8896 + t8897) + t3765*(-1.*t3039*t39*t6677 - 1.*t3080*t6677*t692 - 1.*t2689*t39*t5176*t71 - 1.*t2689*t5199*t692*t71 + t8929 + t8931) - 1.*t2689*t850*t9602)*var2[7] + (t3029*(t3682*t5511 + t3664*t5554 + t8637) + t3765*(-1.*t3417*t5176 - 1.*t3451*t5199 - 1.*t3080*t5511 - 1.*t3039*t5554 + t8646 + t8648) + t3404*t71*t9602)*var2[8] + (t3029*(t3682*t4849 + t3664*t4868 + t8563) + t9608 + t3765*(-1.*t3080*t4849 - 1.*t3039*t4868 + t8601 + t8606 + t9634 + t9636))*var2[9] + (t3029*(t3682*t5860 + t3664*t5913 + t8703) + t9608 + t3765*(-1.*t3080*t5860 - 1.*t3039*t5913 + t8601 + t8722 + t9634 + t9636))*var2[10];
  p_output1[31]=(t3765*(t2162*t5176 + t2116*t5199 + t2427*t6110 + t2335*t6148) + t2255*(-1.*t3611*t39*t5199 - 1.*t3682*t6110 - 1.*t3664*t6148 + t3611*t5176*t692))*var2[6] + (t71*(t2335*t5176 + t2427*t5199 + t9135) + t2255*(-1.*t3664*t39*t6677 - 1.*t3682*t6677*t692 - 1.*t39*t5176*t850 - 1.*t5199*t692*t850 + t9199 + t9201) + t3765*(t2335*t39*t6677 + t2427*t6677*t692 + t39*t5176*t665*t71 + t5199*t665*t692*t71 + t9213 + t9215) - 1.*t665*t850*t9831)*var2[7] + (t2255*(-1.*t3682*t5511 - 1.*t3664*t5554 + t9033) + t3765*(t1858*t5176 + t1813*t5199 + t2427*t5511 + t2335*t5554 + t9043 + t9045) + t1770*t71*t9831)*var2[8] + (t2255*(-1.*t3682*t4849 - 1.*t3664*t4868 + t8983) + t9835 + t3765*(t2427*t4849 + t2335*t4868 + t9008 + t9010 + t9836 + t9839))*var2[9] + (t2255*(-1.*t3682*t5860 - 1.*t3664*t5913 + t9072) + t9835 + t3765*(t2427*t5860 + t2335*t5913 + t9008 + t9087 + t9836 + t9839))*var2[10];
  p_output1[32]=(t3029*(-1.*t2162*t5176 - 1.*t2116*t5199 - 1.*t2427*t6110 - 1.*t2335*t6148) + t2255*(t2937*t5176 + t2897*t5199 + t3080*t6110 + t3039*t6148))*var2[6] + (-1.*t10092*t2689*t850 - 1.*t10064*t665*t850 + t2255*(t3039*t39*t6677 + t3080*t6677*t692 + t2689*t39*t5176*t71 + t2689*t5199*t692*t71 + t9237 + t9239) + t3029*(-1.*t2335*t39*t6677 - 1.*t2427*t6677*t692 - 1.*t39*t5176*t665*t71 - 1.*t5199*t665*t692*t71 + t9265 + t9271))*var2[7] + (t10064*t1770*t71 + t10092*t3404*t71 + t2255*(t3417*t5176 + t3451*t5199 + t3080*t5511 + t3039*t5554 + t9396 + t9397) + t3029*(-1.*t1858*t5176 - 1.*t1813*t5199 - 1.*t2427*t5511 - 1.*t2335*t5554 + t9417 + t9419))*var2[8] + (t10113 + t10130 + t2255*(t10101 + t10103 + t3080*t4849 + t3039*t4868 + t9316 + t9318) + t3029*(t10114 + t10118 - 1.*t2427*t4849 - 1.*t2335*t4868 + t9332 + t9334))*var2[9] + (t10113 + t10130 + t2255*(t10101 + t10103 + t3080*t5860 + t3039*t5913 + t9316 + t9373) + t3029*(t10114 + t10118 - 1.*t2427*t5860 - 1.*t2335*t5913 + t9332 + t9387))*var2[10];
  p_output1[33]=t10223;
  p_output1[34]=t10251;
  p_output1[35]=t10260;
  p_output1[36]=(0.07996*t665*t71 - 1.*t10282*t2689*t850 + t71*(-1.*t2840*t5122 - 1.*t2866*t5166 + t8776) + t3029*(t3611*t6677 + t5166*t850 + t8896 + t8897) + t3765*(-1.*t2866*t6677 - 1.*t2689*t5166*t71 + t8929 + t8931))*var2[7] + (-0.135*t1793 + t10282*t3404*t71 + 0.07996*t1770*t850 + t3029*(t3611*t5464*t850 + t8637) + t3765*(-1.*t3376*t5122 - 1.*t2840*t5499 - 1.*t3404*t5166*t850 - 1.*t2866*t5464*t850 + t8646 + t8648))*var2[8] + (t10305 + t10310 + t10324 + t3029*(t3611*t4817*t850 + t8563) + t3765*(t10329 + t10331 - 1.*t2840*t4845 - 1.*t2866*t4817*t850 + t8601 + t8606))*var2[9] + (t10305 + t10310 + t10324 + t3029*(t3611*t5828*t850 + t8703) + t3765*(t10329 + t10331 - 1.*t2840*t5851 - 1.*t2866*t5828*t850 + t8601 + t8722))*var2[10];
  p_output1[37]=(0.07996*t2689*t71 - 1.*t10440*t665*t850 + t71*(t2082*t5122 + t2106*t5166 + t9135) + t2255*(-1.*t3611*t6677 - 1.*t5166*t850 + t9199 + t9201) + t3765*(t2106*t6677 + t5166*t665*t71 + t9213 + t9215))*var2[7] + (-0.135*t3376 + t10440*t1770*t71 + 0.07996*t3404*t850 + t2255*(-1.*t3611*t5464*t850 + t9033) + t3765*(t1793*t5122 + t2082*t5499 + t1770*t5166*t850 + t2106*t5464*t850 + t9043 + t9045))*var2[8] + (t10457 + t10460 + t10473 + t2255*(-1.*t3611*t4817*t850 + t8983) + t3765*(t10478 + t10479 + t2082*t4845 + t2106*t4817*t850 + t9008 + t9010))*var2[9] + (t10457 + t10460 + t10473 + t2255*(-1.*t3611*t5828*t850 + t9072) + t3765*(t10478 + t10479 + t2082*t5851 + t2106*t5828*t850 + t9008 + t9087))*var2[10];
  p_output1[38]=(0.07996*t850 - 1.*t10608*t2689*t850 - 1.*t10581*t665*t850 + t2255*(t2866*t6677 + t2689*t5166*t71 + t9237 + t9239) + t3029*(-1.*t2106*t6677 - 1.*t5166*t665*t71 + t9265 + t9271))*var2[7] + (t10581*t1770*t71 + t10608*t3404*t71 + t2255*(t10677 + t10680 + t3404*t5166*t850 + t2866*t5464*t850 + t9396 + t9397) + t3029*(t10694 + t10698 - 1.*t1770*t5166*t850 - 1.*t2106*t5464*t850 + t9417 + t9419))*var2[8] + (t10629 + t10646 + t2255*(t10617 + t10618 + t10621 + t2866*t4817*t850 + t9316 + t9318) + t3029*(t10632 + t10636 + t10640 - 1.*t2106*t4817*t850 + t9332 + t9334))*var2[9] + (t10629 + t10646 + t2255*(t10617 + t10621 + t10651 + t2866*t5828*t850 + t9316 + t9373) + t3029*(t10636 + t10640 + t10661 - 1.*t2106*t5828*t850 + t9332 + t9387))*var2[10];
  p_output1[39]=t10223;
  p_output1[40]=t10251;
  p_output1[41]=t10260;
  p_output1[42]=(0.135*t1770 - 0.1303*t3376)*var2[8] + t10715*var2[9] + t10715*var2[10];
  p_output1[43]=(0.1303*t1793 + 0.135*t3404)*var2[8] + t10739*var2[9] + t10739*var2[10];
  p_output1[44]=(t10752*t1793 + t10770*t3376 + t2082*(t10677 + t10680 + t3404*t5161 + t2689*t5464) + t2840*(t10694 + t10698 - 1.*t1770*t5161 - 1.*t5464*t665))*var2[8] + (t10754 + t10771 + t2082*(t10617 + t10618 + t10758 + t2689*t4817) + t2840*(t10632 + t10636 + t10763 - 1.*t4817*t665))*var2[9] + (t10754 + t10771 + t2082*(t10617 + t10651 + t10758 + t2689*t5828) + t2840*(t10636 + t10661 + t10763 - 1.*t5828*t665))*var2[10];
  p_output1[45]=t1793*var2[8] + t1401*var2[9] + t1401*var2[10];
  p_output1[46]=t3376*var2[8] + t3188*var2[9] + t3188*var2[10];
  p_output1[47]=0;
  p_output1[48]=(t10841 + t10842 + t10850 + t10852 - 1.*t2654*t4765 - 1.*t429*t4813)*var2[9] + (t10841 + t10842 + t10850 + t10852 - 1.*t2654*t5805 - 1.*t429*t5824)*var2[10];
  p_output1[49]=(t10870 + t10873 + t10876 + t10878 + t429*t4765 + t4813*t627)*var2[9] + (t10870 + t10873 + t10876 + t10878 + t429*t5805 + t5824*t627)*var2[10];
  p_output1[50]=0;
  p_output1[51]=0;
  p_output1[52]=0;
  p_output1[53]=0;
  p_output1[54]=(-0.13004*t182 + 0.08055*t342 - 1.*t182*t4726 + t342*t4743 - 1.*t182*t5768 - 1.*t342*t5787)*var2[10];
  p_output1[55]=(0.08055*t182 + 0.13004*t342 + t342*t4726 + t182*t4743 + t342*t5768 - 1.*t182*t5787)*var2[10];
  p_output1[56]=0;
  p_output1[57]=0;
  p_output1[58]=0;
  p_output1[59]=0;
  p_output1[60]=0;
  p_output1[61]=0;
  p_output1[62]=0;
  p_output1[63]=0;
  p_output1[64]=0;
  p_output1[65]=0;
  p_output1[66]=0;
  p_output1[67]=0;
  p_output1[68]=0;
  p_output1[69]=0;
  p_output1[70]=0;
  p_output1[71]=0;
  p_output1[72]=0;
  p_output1[73]=0;
  p_output1[74]=0;
  p_output1[75]=0;
  p_output1[76]=0;
  p_output1[77]=0;
  p_output1[78]=0;
  p_output1[79]=0;
  p_output1[80]=0;
  p_output1[81]=0;
  p_output1[82]=0;
  p_output1[83]=0;
  p_output1[84]=0;
  p_output1[85]=0;
  p_output1[86]=0;
  p_output1[87]=0;
  p_output1[88]=0;
  p_output1[89]=0;
  p_output1[90]=0;
  p_output1[91]=0;
  p_output1[92]=0;
  p_output1[93]=0;
  p_output1[94]=0;
  p_output1[95]=0;
  p_output1[96]=0;
  p_output1[97]=0;
  p_output1[98]=0;
  p_output1[99]=0;
  p_output1[100]=0;
  p_output1[101]=0;
  p_output1[102]=0;
  p_output1[103]=0;
  p_output1[104]=0;
  p_output1[105]=0;
  p_output1[106]=0;
  p_output1[107]=0;
  p_output1[108]=0;
  p_output1[109]=0;
  p_output1[110]=0;
  p_output1[111]=0;
  p_output1[112]=0;
  p_output1[113]=0;
  p_output1[114]=0;
  p_output1[115]=0;
  p_output1[116]=0;
  p_output1[117]=0;
  p_output1[118]=0;
  p_output1[119]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 20 && ncols == 1) && 
      !(mrows == 1 && ncols == 20))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 20 && ncols == 1) && 
      !(mrows == 1 && ncols == 20))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 6, (mwSize) 20, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "dJb_LeftShin_mex.hh"

namespace SymExpression
{

void dJb_LeftShin_mex_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
