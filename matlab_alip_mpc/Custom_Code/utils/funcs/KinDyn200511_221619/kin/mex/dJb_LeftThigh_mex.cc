/*
 * Automatically Generated from Mathematica.
 * Mon 11 May 2020 22:24:37 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t186;
  double t219;
  double t180;
  double t296;
  double t141;
  double t309;
  double t61;
  double t470;
  double t793;
  double t404;
  double t469;
  double t524;
  double t800;
  double t814;
  double t833;
  double t837;
  double t859;
  double t863;
  double t1001;
  double t1011;
  double t1059;
  double t1060;
  double t1017;
  double t1074;
  double t1079;
  double t1093;
  double t1137;
  double t1142;
  double t1319;
  double t1348;
  double t1350;
  double t1358;
  double t1445;
  double t1446;
  double t1302;
  double t1306;
  double t1329;
  double t1359;
  double t1360;
  double t1838;
  double t1839;
  double t1866;
  double t1845;
  double t1875;
  double t1880;
  double t1894;
  double t1904;
  double t1912;
  double t1972;
  double t1979;
  double t1983;
  double t1993;
  double t2640;
  double t2690;
  double t2701;
  double t2810;
  double t2811;
  double t2861;
  double t1991;
  double t2021;
  double t2093;
  double t2094;
  double t2147;
  double t2264;
  double t2403;
  double t4077;
  double t4096;
  double t4186;
  double t4201;
  double t4358;
  double t4374;
  double t4540;
  double t4541;
  double t4548;
  double t4663;
  double t222;
  double t348;
  double t383;
  double t504;
  double t534;
  double t535;
  double t549;
  double t630;
  double t670;
  double t836;
  double t866;
  double t870;
  double t896;
  double t898;
  double t903;
  double t912;
  double t942;
  double t947;
  double t1089;
  double t1170;
  double t1190;
  double t1256;
  double t1264;
  double t1265;
  double t1310;
  double t1366;
  double t1402;
  double t1411;
  double t1416;
  double t1440;
  double t1457;
  double t1508;
  double t1533;
  double t1558;
  double t1565;
  double t1595;
  double t1597;
  double t1599;
  double t1653;
  double t1659;
  double t1671;
  double t1698;
  double t1701;
  double t1756;
  double t1887;
  double t1920;
  double t1925;
  double t1954;
  double t1955;
  double t1957;
  double t2025;
  double t2028;
  double t2037;
  double t2042;
  double t2117;
  double t2411;
  double t2438;
  double t2803;
  double t2885;
  double t2919;
  double t2993;
  double t3062;
  double t3094;
  double t3204;
  double t3246;
  double t3275;
  double t3371;
  double t3386;
  double t3413;
  double t3424;
  double t3744;
  double t3811;
  double t3894;
  double t4014;
  double t4031;
  double t4037;
  double t4143;
  double t4236;
  double t4277;
  double t4419;
  double t4588;
  double t4727;
  double t4751;
  double t4775;
  double t4828;
  double t4873;
  double t4892;
  double t4957;
  double t4974;
  double t4996;
  double t5008;
  double t5013;
  double t5025;
  double t5076;
  double t5092;
  double t5116;
  double t6582;
  double t6486;
  double t6512;
  double t6537;
  double t6542;
  double t6565;
  double t6574;
  double t6578;
  double t6587;
  double t6591;
  double t6600;
  double t6606;
  double t6616;
  double t6622;
  double t6625;
  double t6629;
  double t6644;
  double t6649;
  double t6514;
  double t6526;
  double t6624;
  double t6651;
  double t6653;
  double t6677;
  double t6680;
  double t6691;
  double t6692;
  double t6700;
  double t6722;
  double t6731;
  double t6732;
  double t6751;
  double t6769;
  double t6781;
  double t6789;
  double t6676;
  double t6712;
  double t6714;
  double t6839;
  double t6916;
  double t6918;
  double t6919;
  double t6926;
  double t6943;
  double t6950;
  double t6958;
  double t6959;
  double t6979;
  double t6985;
  double t6739;
  double t6823;
  double t6825;
  double t6874;
  double t6878;
  double t6882;
  double t7022;
  double t7023;
  double t7024;
  double t7050;
  double t6715;
  double t6827;
  double t6893;
  double t6897;
  double t7132;
  double t7164;
  double t7165;
  double t7179;
  double t7086;
  double t7088;
  double t7095;
  double t7110;
  double t6391;
  double t6395;
  double t6409;
  double t6316;
  double t6322;
  double t6331;
  double t7264;
  double t7271;
  double t7274;
  double t7294;
  double t6241;
  double t6248;
  double t6251;
  double t6438;
  double t6445;
  double t6447;
  double t7379;
  double t7383;
  double t7408;
  double t7410;
  double t7411;
  double t7420;
  double t7423;
  double t7433;
  double t7437;
  double t7394;
  double t7398;
  double t7399;
  double t7463;
  double t7464;
  double t7465;
  double t7419;
  double t7457;
  double t7459;
  double t6286;
  double t6299;
  double t6303;
  double t7522;
  double t7526;
  double t7530;
  double t7536;
  double t7537;
  double t7532;
  double t7538;
  double t7540;
  double t7545;
  double t7556;
  double t7559;
  double t7569;
  double t7579;
  double t7580;
  double t7541;
  double t7560;
  double t7564;
  double t7599;
  double t7604;
  double t7605;
  double t7589;
  double t7593;
  double t7596;
  double t7709;
  double t7669;
  double t7684;
  double t7689;
  double t7692;
  double t7749;
  double t7753;
  double t7755;
  double t7756;
  double t6219;
  double t6231;
  double t6234;
  double t6102;
  double t6163;
  double t6168;
  double t6180;
  double t6186;
  double t6193;
  double t8529;
  double t8530;
  double t8532;
  double t8536;
  double t8553;
  double t8554;
  double t8556;
  double t8558;
  double t6175;
  double t6205;
  double t6211;
  double t6212;
  double t6235;
  double t6240;
  double t6254;
  double t6263;
  double t6270;
  double t6306;
  double t6341;
  double t6384;
  double t6385;
  double t6388;
  double t6423;
  double t6474;
  double t6476;
  double t7144;
  double t7186;
  double t7232;
  double t7239;
  double t8757;
  double t8760;
  double t8761;
  double t6904;
  double t7037;
  double t8771;
  double t8772;
  double t8773;
  double t7065;
  double t7066;
  double t7368;
  double t7407;
  double t7480;
  double t7490;
  double t7565;
  double t7617;
  double t7619;
  double t7783;
  double t7784;
  double t7801;
  double t7814;
  double t8879;
  double t8882;
  double t8883;
  double t7695;
  double t7701;
  double t8890;
  double t8891;
  double t8892;
  double t7711;
  double t7724;
  double t8061;
  double t8091;
  double t8212;
  double t8239;
  double t8297;
  double t8323;
  double t8340;
  double t8572;
  double t8573;
  double t8587;
  double t8591;
  double t8974;
  double t8977;
  double t8978;
  double t8486;
  double t8495;
  double t8986;
  double t8988;
  double t8990;
  double t8538;
  double t8541;
  double t8651;
  double t8655;
  double t8673;
  double t8680;
  double t8698;
  double t8699;
  double t8717;
  double t8730;
  double t8804;
  double t8806;
  double t8811;
  double t8822;
  double t8846;
  double t9127;
  double t9132;
  double t9134;
  double t8855;
  double t8858;
  double t8926;
  double t8927;
  double t8936;
  double t8937;
  double t9300;
  double t9305;
  double t9309;
  double t8949;
  double t8954;
  double t8955;
  double t9024;
  double t9026;
  double t9034;
  double t9035;
  double t9638;
  double t9640;
  double t9652;
  double t9055;
  double t9059;
  double t9691;
  double t9697;
  double t9698;
  double t9070;
  double t9071;
  double t9886;
  double t9887;
  double t9891;
  double t10000;
  double t10001;
  double t10003;
  double t10094;
  double t10096;
  double t10097;
  double t10114;
  double t10115;
  double t10116;
  double t9861;
  double t9868;
  double t9875;
  double t9876;
  double t9878;
  double t9879;
  double t9882;
  double t10154;
  double t10059;
  double t10136;
  double t10181;
  t186 = Cos(var1[7]);
  t219 = Sin(var1[8]);
  t180 = Cos(var1[6]);
  t296 = Sin(var1[5]);
  t141 = Cos(var1[5]);
  t309 = Sin(var1[6]);
  t61 = Sin(var1[3]);
  t470 = Sin(var1[7]);
  t793 = Cos(var1[8]);
  t404 = Cos(var1[3]);
  t469 = Cos(var1[4]);
  t524 = Sin(var1[4]);
  t800 = t793*t309*t470;
  t814 = t180*t219;
  t833 = t800 + t814;
  t837 = t180*t793*t470;
  t859 = -1.*t309*t219;
  t863 = t837 + t859;
  t1001 = -1.*t793;
  t1011 = 0. + t1001;
  t1059 = t470*t219;
  t1060 = 0. + t1059;
  t1017 = -1.*t1011*t309;
  t1074 = t180*t1060;
  t1079 = t1017 + t1074;
  t1093 = -1.*t180*t1011;
  t1137 = -1.*t309*t1060;
  t1142 = t1093 + t1137;
  t1319 = 0. + t1017 + t1074;
  t1348 = t180*t1011;
  t1350 = t309*t1060;
  t1358 = 0. + t1348 + t1350;
  t1445 = t141*t1319;
  t1446 = -1.*t296*t1358;
  t1302 = t186*t219;
  t1306 = 0. + t1302;
  t1329 = t296*t1319;
  t1359 = t141*t1358;
  t1360 = 0. + t1329 + t1359;
  t1838 = t793*t470;
  t1839 = 0. + t1838;
  t1866 = 0. + t219;
  t1845 = -1.*t309*t1839;
  t1875 = -1.*t180*t1866;
  t1880 = t1845 + t1875;
  t1894 = t180*t1839;
  t1904 = -1.*t309*t1866;
  t1912 = t1894 + t1904;
  t1972 = t309*t1839;
  t1979 = t180*t1866;
  t1983 = 0. + t1972 + t1979;
  t1993 = 0. + t1894 + t1904;
  t2640 = -1.*t793*t309;
  t2690 = -1.*t180*t470*t219;
  t2701 = t2640 + t2690;
  t2810 = t180*t793;
  t2811 = -1.*t309*t470*t219;
  t2861 = t2810 + t2811;
  t1991 = -1.*t296*t1983;
  t2021 = t141*t1993;
  t2093 = t186*t793;
  t2094 = 0. + t2093;
  t2147 = t141*t1983;
  t2264 = t296*t1993;
  t2403 = 0. + t2147 + t2264;
  t4077 = -1.*t180*t186;
  t4096 = 0. + t4077;
  t4186 = -1.*t186*t309;
  t4201 = 0. + t4186;
  t4358 = t141*t4096;
  t4374 = -1.*t296*t4201;
  t4540 = t4096*t296;
  t4541 = t141*t4201;
  t4548 = 0. + t4540 + t4541;
  t4663 = 0. + t470;
  t222 = t141*t180*t186*t219;
  t348 = -1.*t186*t296*t309*t219;
  t383 = t222 + t348;
  t504 = -1.*t469*t470*t219;
  t534 = t180*t186*t296*t219;
  t535 = t141*t186*t309*t219;
  t549 = t534 + t535;
  t630 = t524*t549;
  t670 = t504 + t630;
  t836 = -1.*t296*t833;
  t866 = t141*t863;
  t870 = t836 + t866;
  t896 = t469*t186*t793;
  t898 = t141*t833;
  t903 = t296*t863;
  t912 = t898 + t903;
  t942 = t524*t912;
  t947 = t896 + t942;
  t1089 = -1.*t296*t1079;
  t1170 = t141*t1142;
  t1190 = t1089 + t1170;
  t1256 = t141*t1079;
  t1264 = t296*t1142;
  t1265 = t1256 + t1264;
  t1310 = -1.*t524*t1306;
  t1366 = t469*t1360;
  t1402 = t1310 + t1366;
  t1411 = -1.*t296*t1319;
  t1416 = -1.*t141*t1358;
  t1440 = t1411 + t1416;
  t1457 = t1445 + t1446;
  t1508 = 0. + t1445 + t1446;
  t1533 = t469*t1306;
  t1558 = t524*t1360;
  t1565 = 0. + t1533 + t1558;
  t1595 = t141*t180*t186*t793;
  t1597 = -1.*t186*t793*t296*t309;
  t1599 = t1595 + t1597;
  t1653 = t180*t186*t793*t296;
  t1659 = t141*t186*t793*t309;
  t1671 = t1653 + t1659;
  t1698 = t524*t1671;
  t1701 = -1.*t469*t793*t470;
  t1756 = t1698 + t1701;
  t1887 = t296*t1880;
  t1920 = t141*t1912;
  t1925 = t1887 + t1920;
  t1954 = t141*t1880;
  t1955 = -1.*t296*t1912;
  t1957 = t1954 + t1955;
  t2025 = t1991 + t2021;
  t2028 = -1.*t141*t1983;
  t2037 = -1.*t296*t1993;
  t2042 = t2028 + t2037;
  t2117 = -1.*t2094*t524;
  t2411 = t469*t2403;
  t2438 = t2117 + t2411;
  t2803 = t141*t2701;
  t2885 = -1.*t296*t2861;
  t2919 = t2803 + t2885;
  t2993 = -1.*t469*t186*t219;
  t3062 = t296*t2701;
  t3094 = t141*t2861;
  t3204 = t3062 + t3094;
  t3246 = t524*t3204;
  t3275 = t2993 + t3246;
  t3371 = 0. + t1991 + t2021;
  t3386 = t469*t2094;
  t3413 = t524*t2403;
  t3424 = 0. + t3386 + t3413;
  t3744 = t180*t186*t296;
  t3811 = t141*t186*t309;
  t3894 = t3744 + t3811;
  t4014 = -1.*t141*t180*t186;
  t4031 = t186*t296*t309;
  t4037 = t4014 + t4031;
  t4143 = -1.*t4096*t296;
  t4236 = -1.*t141*t4201;
  t4277 = t4143 + t4236;
  t4419 = t4358 + t4374;
  t4588 = t469*t4548;
  t4727 = -1.*t524*t4663;
  t4751 = t4588 + t4727;
  t4775 = 0. + t4358 + t4374;
  t4828 = t524*t4548;
  t4873 = t469*t4663;
  t4892 = 0. + t4828 + t4873;
  t4957 = t141*t180*t470;
  t4974 = -1.*t296*t309*t470;
  t4996 = t4957 + t4974;
  t5008 = t469*t186;
  t5013 = t180*t296*t470;
  t5025 = t141*t309*t470;
  t5076 = t5013 + t5025;
  t5092 = t524*t5076;
  t5116 = t5008 + t5092;
  t6582 = 1. + t1001;
  t6486 = -1.*t180;
  t6512 = 1. + t6486;
  t6537 = -1.*t186;
  t6542 = 1. + t6537;
  t6565 = 0.135*t6542;
  t6574 = 0.1708*t186;
  t6578 = 0.08055*t470;
  t6587 = -0.08055*t6582;
  t6591 = -0.08045*t793;
  t6600 = 0.0598*t219;
  t6606 = 0. + t6587 + t6591 + t6600;
  t6616 = t470*t6606;
  t6622 = 0. + t6565 + t6574 + t6578 + t6616;
  t6625 = -0.01004*t6582;
  t6629 = -0.06984*t793;
  t6644 = 0.00010000000000000286*t219;
  t6649 = 0. + t6625 + t6629 + t6644;
  t6514 = 0.07996*t6512;
  t6526 = -0.135*t309;
  t6624 = t309*t6622;
  t6651 = t180*t6649;
  t6653 = 0. + t6514 + t6526 + t6624 + t6651;
  t6677 = 0.135*t6512;
  t6680 = 0.07996*t309;
  t6691 = t180*t6622;
  t6692 = -1.*t309*t6649;
  t6700 = 0. + t6677 + t6680 + t6691 + t6692;
  t6722 = t141*t6653;
  t6731 = t296*t6700;
  t6732 = 0. + t6722 + t6731;
  t6751 = -0.08055*t6542;
  t6769 = -0.0358*t470;
  t6781 = t186*t6606;
  t6789 = 0. + t6751 + t6769 + t6781;
  t6676 = -1.*t296*t6653;
  t6712 = t141*t6700;
  t6714 = 0. + t6676 + t6712;
  t6839 = 0. + t4588 + t4727;
  t6916 = 0.07996*t180;
  t6918 = 0.135*t309;
  t6919 = -1.*t309*t6622;
  t6926 = -1.*t180*t6649;
  t6943 = t6916 + t6918 + t6919 + t6926;
  t6950 = t296*t6943;
  t6958 = -0.135*t180;
  t6959 = t6958 + t6680 + t6691 + t6692;
  t6979 = t141*t6959;
  t6985 = t6950 + t6979;
  t6739 = t524*t6732;
  t6823 = t469*t6789;
  t6825 = 0. + t6739 + t6823;
  t6874 = t469*t6732;
  t6878 = -1.*t524*t6789;
  t6882 = 0. + t6874 + t6878;
  t7022 = t141*t6943;
  t7023 = -1.*t296*t6959;
  t7024 = t7022 + t7023;
  t7050 = 0. + t2117 + t2411;
  t6715 = t4775*t6714;
  t6827 = t4892*t6825;
  t6893 = t6839*t6882;
  t6897 = t6715 + t6827 + t6893;
  t7132 = t6676 + t6712;
  t7164 = -1.*t141*t6653;
  t7165 = -1.*t296*t6700;
  t7179 = t7164 + t7165;
  t7086 = -1.*t6714*t3371;
  t7088 = -1.*t6882*t7050;
  t7095 = -1.*t6825*t3424;
  t7110 = t7086 + t7088 + t7095;
  t6391 = -1.*t524*t4548;
  t6395 = -1.*t469*t4663;
  t6409 = t6391 + t6395;
  t6316 = -1.*t469*t2094;
  t6322 = -1.*t524*t2403;
  t6331 = t6316 + t6322;
  t7264 = -1.*t524*t6732;
  t7271 = -1.*t469*t6789;
  t7274 = t7264 + t7271;
  t7294 = t6874 + t6878;
  t6241 = t469*t1671;
  t6248 = t793*t524*t470;
  t6251 = t6241 + t6248;
  t6438 = -1.*t186*t524;
  t6445 = t469*t5076;
  t6447 = t6438 + t6445;
  t7379 = 0.08055*t186;
  t7383 = t7379 + t6769 + t6781;
  t7408 = t180*t296*t7383;
  t7410 = t141*t309*t7383;
  t7411 = t7408 + t7410;
  t7420 = -0.0358*t186;
  t7423 = -0.08055*t470;
  t7433 = -1.*t470*t6606;
  t7437 = t7420 + t7423 + t7433;
  t7394 = t141*t180*t7383;
  t7398 = -1.*t296*t309*t7383;
  t7399 = t7394 + t7398;
  t7463 = t469*t7411;
  t7464 = -1.*t524*t7437;
  t7465 = t7463 + t7464;
  t7419 = t524*t7411;
  t7457 = t469*t7437;
  t7459 = t7419 + t7457;
  t6286 = t186*t524*t219;
  t6299 = t469*t3204;
  t6303 = t6286 + t6299;
  t7522 = 0.0598*t793;
  t7526 = -0.00010000000000000286*t219;
  t7530 = t7522 + t7526;
  t7536 = 0.00010000000000000286*t793;
  t7537 = t7536 + t6600;
  t7532 = t309*t470*t7530;
  t7538 = t180*t7537;
  t7540 = t7532 + t7538;
  t7545 = t180*t470*t7530;
  t7556 = -1.*t309*t7537;
  t7559 = t7545 + t7556;
  t7569 = t141*t7540;
  t7579 = t296*t7559;
  t7580 = t7569 + t7579;
  t7541 = -1.*t296*t7540;
  t7560 = t141*t7559;
  t7564 = t7541 + t7560;
  t7599 = t469*t7580;
  t7604 = -1.*t186*t524*t7530;
  t7605 = t7599 + t7604;
  t7589 = t524*t7580;
  t7593 = t469*t186*t7530;
  t7596 = t7589 + t7593;
  t7709 = 0. + t1310 + t1366;
  t7669 = -1.*t4775*t6714;
  t7684 = -1.*t4892*t6825;
  t7689 = -1.*t6839*t6882;
  t7692 = t7669 + t7684 + t7689;
  t7749 = t6714*t1508;
  t7753 = t6882*t7709;
  t7755 = t6825*t1565;
  t7756 = t7749 + t7753 + t7755;
  t6219 = -1.*t469*t1306;
  t6231 = -1.*t524*t1360;
  t6234 = t6219 + t6231;
  t6102 = t524*t470*t219;
  t6163 = t469*t549;
  t6168 = t6102 + t6163;
  t6180 = -1.*t186*t793*t524;
  t6186 = t469*t912;
  t6193 = t6180 + t6186;
  t8529 = t6714*t3371;
  t8530 = t6882*t7050;
  t8532 = t6825*t3424;
  t8536 = t8529 + t8530 + t8532;
  t8553 = -1.*t6714*t1508;
  t8554 = -1.*t6882*t7709;
  t8556 = -1.*t6825*t1565;
  t8558 = t8553 + t8554 + t8556;
  t6175 = var2[7]*t6168;
  t6205 = var2[8]*t6193;
  t6211 = var2[6]*t469*t1265;
  t6212 = var2[5]*t469*t1457;
  t6235 = var2[4]*t6234;
  t6240 = t6175 + t6205 + t6211 + t6212 + t6235;
  t6254 = var2[7]*t6251;
  t6263 = var2[6]*t469*t1925;
  t6270 = var2[5]*t469*t2025;
  t6306 = var2[8]*t6303;
  t6341 = var2[4]*t6331;
  t6384 = t6254 + t6263 + t6270 + t6306 + t6341;
  t6385 = var2[6]*t469*t4037;
  t6388 = var2[5]*t469*t4419;
  t6423 = var2[4]*t6409;
  t6474 = var2[7]*t6447;
  t6476 = t6385 + t6388 + t6423 + t6474;
  t7144 = t4277*t6714;
  t7186 = t4775*t7179;
  t7232 = -1.*t7179*t3371;
  t7239 = -1.*t6714*t2042;
  t8757 = t4548*t6732;
  t8760 = t4663*t6789;
  t8761 = t6715 + t8757 + t8760;
  t6904 = t3894*t6714;
  t7037 = t4775*t7024;
  t8771 = -1.*t2094*t6789;
  t8772 = -1.*t6732*t2403;
  t8773 = t8771 + t7086 + t8772;
  t7065 = -1.*t6714*t1957;
  t7066 = -1.*t7024*t3371;
  t7368 = t4996*t6714;
  t7407 = t4775*t7399;
  t7480 = -1.*t1599*t6714;
  t7490 = -1.*t7399*t3371;
  t7565 = t4775*t7564;
  t7617 = -1.*t6714*t2919;
  t7619 = -1.*t7564*t3371;
  t7783 = -1.*t4277*t6714;
  t7784 = -1.*t4775*t7179;
  t7801 = t6714*t1440;
  t7814 = t7179*t1508;
  t8879 = -1.*t4548*t6732;
  t8882 = -1.*t4663*t6789;
  t8883 = t7669 + t8879 + t8882;
  t7695 = -1.*t3894*t6714;
  t7701 = -1.*t4775*t7024;
  t8890 = t6789*t1306;
  t8891 = t6732*t1360;
  t8892 = t8890 + t8891 + t7749;
  t7711 = t6714*t1190;
  t7724 = t7024*t1508;
  t8061 = -1.*t4996*t6714;
  t8091 = -1.*t4775*t7399;
  t8212 = t6714*t383;
  t8239 = t7399*t1508;
  t8297 = -1.*t4775*t7564;
  t8323 = t6714*t870;
  t8340 = t7564*t1508;
  t8572 = t7179*t3371;
  t8573 = t6714*t2042;
  t8587 = -1.*t6714*t1440;
  t8591 = -1.*t7179*t1508;
  t8974 = t2094*t6789;
  t8977 = t6732*t2403;
  t8978 = t8974 + t8529 + t8977;
  t8486 = t6714*t1957;
  t8495 = t7024*t3371;
  t8986 = -1.*t6789*t1306;
  t8988 = -1.*t6732*t1360;
  t8990 = t8986 + t8988 + t8553;
  t8538 = -1.*t6714*t1190;
  t8541 = -1.*t7024*t1508;
  t8651 = t1599*t6714;
  t8655 = t7399*t3371;
  t8673 = -1.*t6714*t383;
  t8680 = -1.*t7399*t1508;
  t8698 = t6714*t2919;
  t8699 = t7564*t3371;
  t8717 = -1.*t6714*t870;
  t8730 = -1.*t7564*t1508;
  t8804 = t186*t6789;
  t8806 = t4663*t7437;
  t8811 = t793*t470*t6789;
  t8822 = -1.*t2094*t7437;
  t8846 = t186*t4663*t7530;
  t9127 = t4201*t6653;
  t9132 = t4096*t6700;
  t9134 = t9127 + t9132 + t8760;
  t8855 = -1.*t186*t2094*t7530;
  t8858 = t186*t6789*t219;
  t8926 = -1.*t186*t6789;
  t8927 = -1.*t4663*t7437;
  t8936 = -1.*t470*t6789*t219;
  t8937 = t7437*t1306;
  t9300 = -1.*t4201*t6653;
  t9305 = -1.*t4096*t6700;
  t9309 = t9300 + t9305 + t8882;
  t8949 = -1.*t186*t4663*t7530;
  t8954 = t186*t793*t6789;
  t8955 = t186*t7530*t1306;
  t9024 = -1.*t793*t470*t6789;
  t9026 = t2094*t7437;
  t9034 = t470*t6789*t219;
  t9035 = -1.*t7437*t1306;
  t9638 = t6653*t1983;
  t9640 = t6700*t1993;
  t9652 = t8974 + t9638 + t9640;
  t9055 = t186*t2094*t7530;
  t9059 = -1.*t186*t6789*t219;
  t9691 = -1.*t6700*t1319;
  t9697 = -1.*t6653*t1358;
  t9698 = t8986 + t9691 + t9697;
  t9070 = -1.*t186*t793*t6789;
  t9071 = -1.*t186*t7530*t1306;
  t9886 = t470*t6789;
  t9887 = -1.*t186*t6622;
  t9891 = 0. + t9886 + t9887;
  t10000 = -1.*t470*t6789;
  t10001 = t186*t6622;
  t10003 = 0. + t10000 + t10001;
  t10094 = t1839*t6622;
  t10096 = t6649*t1866;
  t10097 = t8974 + t10094 + t10096;
  t10114 = -1.*t1011*t6649;
  t10115 = -1.*t6622*t1060;
  t10116 = t10114 + t8986 + t10115;
  t9861 = var2[8]*t186*t793;
  t9868 = -1.*var2[7]*t470*t219;
  t9875 = t9861 + t9868;
  t9876 = -1.*var2[7]*t793*t470;
  t9878 = -1.*var2[8]*t186*t219;
  t9879 = t9876 + t9878;
  t9882 = var2[7]*t186;
  t10154 = -1.*t6649*t219;
  t10059 = t6649*t219;
  t10136 = t793*t6649;
  t10181 = -1.*t6606*t219;
  p_output1[0]=(-1.*t1508*t404 - 1.*t1565*t61)*var2[3] + t1402*t404*var2[4] + (t1457*t404*t524 - 1.*t1440*t61)*var2[5] + (t1265*t404*t524 - 1.*t1190*t61)*var2[6] + (-1.*t383*t61 + t404*t670)*var2[7] + (-1.*t61*t870 + t404*t947)*var2[8];
  p_output1[1]=(-1.*t3371*t404 - 1.*t3424*t61)*var2[3] + t2438*t404*var2[4] + (t2025*t404*t524 - 1.*t2042*t61)*var2[5] + (t1925*t404*t524 - 1.*t1957*t61)*var2[6] + (t1756*t404 - 1.*t1599*t61)*var2[7] + (t3275*t404 - 1.*t2919*t61)*var2[8];
  p_output1[2]=(-1.*t404*t4775 - 1.*t4892*t61)*var2[3] + t404*t4751*var2[4] + (t404*t4419*t524 - 1.*t4277*t61)*var2[5] + (t4037*t404*t524 - 1.*t3894*t61)*var2[6] + (t404*t5116 - 1.*t4996*t61)*var2[7];
  p_output1[3]=0;
  p_output1[4]=0;
  p_output1[5]=0;
  p_output1[6]=(t1565*t404 - 1.*t1508*t61)*var2[3] + t1402*t61*var2[4] + (t1440*t404 + t1457*t524*t61)*var2[5] + (t1190*t404 + t1265*t524*t61)*var2[6] + (t383*t404 + t61*t670)*var2[7] + (t404*t870 + t61*t947)*var2[8];
  p_output1[7]=(t3424*t404 - 1.*t3371*t61)*var2[3] + t2438*t61*var2[4] + (t2042*t404 + t2025*t524*t61)*var2[5] + (t1957*t404 + t1925*t524*t61)*var2[6] + (t1599*t404 + t1756*t61)*var2[7] + (t2919*t404 + t3275*t61)*var2[8];
  p_output1[8]=(t404*t4892 - 1.*t4775*t61)*var2[3] + t4751*t61*var2[4] + (t404*t4277 + t4419*t524*t61)*var2[5] + (t3894*t404 + t4037*t524*t61)*var2[6] + (t404*t4996 + t5116*t61)*var2[7];
  p_output1[9]=0;
  p_output1[10]=0;
  p_output1[11]=0;
  p_output1[12]=t6240;
  p_output1[13]=t6384;
  p_output1[14]=t6476;
  p_output1[15]=0;
  p_output1[16]=0;
  p_output1[17]=0;
  p_output1[18]=(t6331*t6897 + t6409*t7110 + t6839*(-1.*t2438*t6825 - 1.*t6331*t6882 - 1.*t7050*t7274 - 1.*t3424*t7294) + t7050*(t4751*t6825 + t6409*t6882 + t6839*t7274 + t4892*t7294))*var2[4] + (t2025*t469*t6897 + t4419*t469*t7110 + t7050*(t4419*t524*t6825 + t4419*t469*t6882 + t4892*t524*t7132 + t469*t6839*t7132 + t7144 + t7186) + t6839*(-1.*t2025*t524*t6825 - 1.*t2025*t469*t6882 - 1.*t3424*t524*t7132 - 1.*t469*t7050*t7132 + t7232 + t7239))*var2[5] + (t1925*t469*t6897 + (t4037*t524*t6825 + t4037*t469*t6882 + t6904 + t4892*t524*t6985 + t469*t6839*t6985 + t7037)*t7050 + t6839*(-1.*t1925*t524*t6825 - 1.*t1925*t469*t6882 - 1.*t3424*t524*t6985 - 1.*t469*t6985*t7050 + t7065 + t7066) + t4037*t469*t7110)*var2[6] + (t6251*t6897 + t6447*t7110 + t7050*(t5116*t6825 + t6447*t6882 + t7368 + t7407 + t4892*t7459 + t6839*t7465) + t6839*(-1.*t1756*t6825 - 1.*t6251*t6882 - 1.*t3424*t7459 - 1.*t7050*t7465 + t7480 + t7490))*var2[7] + (t6303*t6897 + t7050*(t7565 + t4892*t7596 + t6839*t7605) + t6839*(-1.*t3275*t6825 - 1.*t6303*t6882 - 1.*t3424*t7596 - 1.*t7050*t7605 + t7617 + t7619))*var2[8];
  p_output1[19]=(t6234*t7692 + (-1.*t4751*t6825 - 1.*t6409*t6882 - 1.*t6839*t7274 - 1.*t4892*t7294)*t7709 + t6839*(t1402*t6825 + t6234*t6882 + t1565*t7294 + t7274*t7709) + t6409*t7756)*var2[4] + (t1457*t469*t7692 + t4419*t469*t7756 + t7709*(-1.*t4419*t524*t6825 - 1.*t4419*t469*t6882 - 1.*t4892*t524*t7132 - 1.*t469*t6839*t7132 + t7783 + t7784) + t6839*(t1457*t524*t6825 + t1457*t469*t6882 + t1565*t524*t7132 + t469*t7132*t7709 + t7801 + t7814))*var2[5] + (t1265*t469*t7692 + (-1.*t4037*t524*t6825 - 1.*t4037*t469*t6882 - 1.*t4892*t524*t6985 - 1.*t469*t6839*t6985 + t7695 + t7701)*t7709 + t6839*(t1265*t524*t6825 + t1265*t469*t6882 + t1565*t524*t6985 + t469*t6985*t7709 + t7711 + t7724) + t4037*t469*t7756)*var2[6] + (t6168*t7692 + t6447*t7756 + t7709*(-1.*t5116*t6825 - 1.*t6447*t6882 - 1.*t4892*t7459 - 1.*t6839*t7465 + t8061 + t8091) + t6839*(t670*t6825 + t6168*t6882 + t1565*t7459 + t7465*t7709 + t8212 + t8239))*var2[7] + (t6193*t7692 + t7709*(-1.*t4892*t7596 - 1.*t6839*t7605 + t8297) + t6839*(t6193*t6882 + t1565*t7596 + t7605*t7709 + t8323 + t8340 + t6825*t947))*var2[8];
  p_output1[20]=((t2438*t6825 + t6331*t6882 + t7050*t7274 + t3424*t7294)*t7709 + t7050*(-1.*t1402*t6825 - 1.*t6234*t6882 - 1.*t1565*t7294 - 1.*t7274*t7709) + t6234*t8536 + t6331*t8558)*var2[4] + (t1457*t469*t8536 + t2025*t469*t8558 + t7709*(t2025*t524*t6825 + t2025*t469*t6882 + t3424*t524*t7132 + t469*t7050*t7132 + t8572 + t8573) + t7050*(-1.*t1457*t524*t6825 - 1.*t1457*t469*t6882 - 1.*t1565*t524*t7132 - 1.*t469*t7132*t7709 + t8587 + t8591))*var2[5] + (t7709*(t1925*t524*t6825 + t1925*t469*t6882 + t3424*t524*t6985 + t469*t6985*t7050 + t8486 + t8495) + t1265*t469*t8536 + t7050*(-1.*t1265*t524*t6825 - 1.*t1265*t469*t6882 - 1.*t1565*t524*t6985 - 1.*t469*t6985*t7709 + t8538 + t8541) + t1925*t469*t8558)*var2[6] + (t6168*t8536 + t6251*t8558 + t7709*(t1756*t6825 + t6251*t6882 + t3424*t7459 + t7050*t7465 + t8651 + t8655) + t7050*(-1.*t670*t6825 - 1.*t6168*t6882 - 1.*t1565*t7459 - 1.*t7465*t7709 + t8673 + t8680))*var2[7] + (t6193*t8536 + t6303*t8558 + t7709*(t3275*t6825 + t6303*t6882 + t3424*t7596 + t7050*t7605 + t8698 + t8699) + t7050*(-1.*t6193*t6882 - 1.*t1565*t7596 - 1.*t7605*t7709 + t8717 + t8730 - 1.*t6825*t947))*var2[8];
  p_output1[21]=t6240;
  p_output1[22]=t6384;
  p_output1[23]=t6476;
  p_output1[24]=(t3371*(t4419*t6732 + t4548*t7132 + t7144 + t7186) + t4775*(-1.*t2025*t6732 - 1.*t2403*t7132 + t7232 + t7239) + t2042*t8761 + t4277*t8773)*var2[5] + (t3371*(t4037*t6732 + t6904 + t4548*t6985 + t7037) + t4775*(-1.*t1925*t6732 - 1.*t2403*t6985 + t7065 + t7066) + t1957*t8761 + t3894*t8773)*var2[6] + (t1599*t8761 + t4996*t8773 + t3371*(t5076*t6732 + t7368 + t7407 + t4548*t7411 + t8804 + t8806) + t4775*(-1.*t1671*t6732 - 1.*t2403*t7411 + t7480 + t7490 + t8811 + t8822))*var2[7] + (t2919*t8761 + t3371*(t7565 + t4548*t7580 + t8846) + t4775*(-1.*t3204*t6732 - 1.*t2403*t7580 + t7617 + t7619 + t8855 + t8858))*var2[8];
  p_output1[25]=(t1508*(-1.*t4419*t6732 - 1.*t4548*t7132 + t7783 + t7784) + t4775*(t1457*t6732 + t1360*t7132 + t7801 + t7814) + t1440*t8883 + t4277*t8892)*var2[5] + (t1508*(-1.*t4037*t6732 - 1.*t4548*t6985 + t7695 + t7701) + t4775*(t1265*t6732 + t1360*t6985 + t7711 + t7724) + t1190*t8883 + t3894*t8892)*var2[6] + (t383*t8883 + t4996*t8892 + t1508*(-1.*t5076*t6732 - 1.*t4548*t7411 + t8061 + t8091 + t8926 + t8927) + t4775*(t549*t6732 + t1360*t7411 + t8212 + t8239 + t8936 + t8937))*var2[7] + (t870*t8883 + t1508*(-1.*t4548*t7580 + t8297 + t8949) + t4775*(t1360*t7580 + t8323 + t8340 + t8954 + t8955 + t6732*t912))*var2[8];
  p_output1[26]=(t1508*(t2025*t6732 + t2403*t7132 + t8572 + t8573) + t3371*(-1.*t1457*t6732 - 1.*t1360*t7132 + t8587 + t8591) + t1440*t8978 + t2042*t8990)*var2[5] + (t1508*(t1925*t6732 + t2403*t6985 + t8486 + t8495) + t3371*(-1.*t1265*t6732 - 1.*t1360*t6985 + t8538 + t8541) + t1190*t8978 + t1957*t8990)*var2[6] + (t383*t8978 + t1599*t8990 + t1508*(t1671*t6732 + t2403*t7411 + t8651 + t8655 + t9024 + t9026) + t3371*(-1.*t549*t6732 - 1.*t1360*t7411 + t8673 + t8680 + t9034 + t9035))*var2[7] + (t870*t8978 + t2919*t8990 + t1508*(t3204*t6732 + t2403*t7580 + t8698 + t8699 + t9055 + t9059) + t3371*(-1.*t1360*t7580 + t8717 + t8730 + t9070 + t9071 - 1.*t6732*t912))*var2[8];
  p_output1[27]=t1440*var2[5] + t1190*var2[6] + t383*var2[7] + t870*var2[8];
  p_output1[28]=t2042*var2[5] + t1957*var2[6] + t1599*var2[7] + t2919*var2[8];
  p_output1[29]=t4277*var2[5] + t3894*var2[6] + t4996*var2[7];
  p_output1[30]=(t4663*(-1.*t1912*t6653 - 1.*t1880*t6700 - 1.*t1993*t6943 - 1.*t1983*t6959) + t2094*(-1.*t180*t186*t6653 + t186*t309*t6700 + t4096*t6943 + t4201*t6959))*var2[6] + (t186*(-1.*t1983*t6653 - 1.*t1993*t6700 + t8771) + t2094*(t309*t470*t6653 + t180*t470*t6700 + t180*t4096*t7383 + t309*t4201*t7383 + t8804 + t8806) + t4663*(-1.*t180*t1993*t7383 - 1.*t1983*t309*t7383 - 1.*t186*t309*t6653*t793 - 1.*t180*t186*t6700*t793 + t8811 + t8822) - 1.*t470*t793*t9134)*var2[7] + (t2094*(t4201*t7540 + t4096*t7559 + t8846) + t4663*(-1.*t2861*t6653 - 1.*t2701*t6700 - 1.*t1983*t7540 - 1.*t1993*t7559 + t8855 + t8858) - 1.*t186*t219*t9134)*var2[8];
  p_output1[31]=(t4663*(t1079*t6653 + t1142*t6700 + t1319*t6943 + t1358*t6959) + t1306*(t180*t186*t6653 - 1.*t186*t309*t6700 - 1.*t4096*t6943 - 1.*t4201*t6959))*var2[6] + (t186*(t1358*t6653 + t1319*t6700 + t8890) + t1306*(-1.*t309*t470*t6653 - 1.*t180*t470*t6700 - 1.*t180*t4096*t7383 - 1.*t309*t4201*t7383 + t8926 + t8927) + t4663*(t186*t219*t309*t6653 + t180*t186*t219*t6700 + t1319*t180*t7383 + t1358*t309*t7383 + t8936 + t8937) - 1.*t219*t470*t9309)*var2[7] + (t1306*(-1.*t4201*t7540 - 1.*t4096*t7559 + t8949) + t4663*(t1358*t7540 + t1319*t7559 + t6653*t833 + t6700*t863 + t8954 + t8955) + t186*t793*t9309)*var2[8];
  p_output1[32]=(t2094*(-1.*t1079*t6653 - 1.*t1142*t6700 - 1.*t1319*t6943 - 1.*t1358*t6959) + t1306*(t1912*t6653 + t1880*t6700 + t1993*t6943 + t1983*t6959))*var2[6] + (t1306*(t180*t1993*t7383 + t1983*t309*t7383 + t186*t309*t6653*t793 + t180*t186*t6700*t793 + t9024 + t9026) + t2094*(-1.*t186*t219*t309*t6653 - 1.*t180*t186*t219*t6700 - 1.*t1319*t180*t7383 - 1.*t1358*t309*t7383 + t9034 + t9035) - 1.*t219*t470*t9652 - 1.*t470*t793*t9698)*var2[7] + (t1306*(t2861*t6653 + t2701*t6700 + t1983*t7540 + t1993*t7559 + t9055 + t9059) + t2094*(-1.*t1358*t7540 - 1.*t1319*t7559 - 1.*t6653*t833 - 1.*t6700*t863 + t9070 + t9071) + t186*t793*t9652 - 1.*t186*t219*t9698)*var2[8];
  p_output1[33]=t9875;
  p_output1[34]=t9879;
  p_output1[35]=t9882;
  p_output1[36]=(0.07996*t186*t219 + t186*(-1.*t1839*t6622 - 1.*t1866*t6649 + t8771) + t2094*(t470*t6622 - 1.*t186*t7383 + t470*t7437 + t8804) + t470*(-1.*t1839*t7383 - 1.*t186*t6622*t793 + t8811 + t8822) - 1.*t470*t793*t9891)*var2[7] + (-0.135*t219 + 0.07996*t470*t793 + t470*(t219*t470*t6622 - 1.*t1839*t470*t7530 - 1.*t1866*t7537 - 1.*t6649*t793 + t8855 + t8858) - 1.*t186*t219*t9891)*var2[8];
  p_output1[37]=(-1.*t10003*t219*t470 + 0.07996*t186*t793 + t186*(t1060*t6622 + t1011*t6649 + t8890) + t1306*(-1.*t470*t6622 + t186*t7383 - 1.*t470*t7437 + t8926) + t470*(t186*t219*t6622 + t1060*t7383 + t8936 + t8937))*var2[7] + (-0.07996*t219*t470 - 0.135*t793 + t10003*t186*t793 + t470*(t10059 + t1060*t470*t7530 + t1011*t7537 + t470*t6622*t793 + t8954 + t8955))*var2[8];
  p_output1[38]=(0.07996*t470 - 1.*t10097*t219*t470 - 1.*t10116*t470*t793 + t1306*(t1839*t7383 + t186*t6622*t793 + t9024 + t9026) + t2094*(-1.*t186*t219*t6622 - 1.*t1060*t7383 + t9034 + t9035))*var2[7] + (-1.*t10116*t186*t219 + t10097*t186*t793 + t1306*(t10136 - 1.*t219*t470*t6622 + t1839*t470*t7530 + t1866*t7537 + t9055 + t9059) + t2094*(t10154 - 1.*t1060*t470*t7530 - 1.*t1011*t7537 - 1.*t470*t6622*t793 + t9070 + t9071))*var2[8];
  p_output1[39]=t9875;
  p_output1[40]=t9879;
  p_output1[41]=t9882;
  p_output1[42]=-0.0358*t793*var2[8];
  p_output1[43]=0.0358*t219*var2[8];
  p_output1[44]=((0. + t10136 + t10181)*t793 + t219*(0. + t10059 + t6606*t793) - 1.*t793*(t10136 + t10181 + t219*t7537 + t7530*t793) + t219*(t10154 - 1.*t219*t7530 - 1.*t6606*t793 + t7537*t793))*var2[8];
  p_output1[45]=t219*var2[8];
  p_output1[46]=t793*var2[8];
  p_output1[47]=0;
  p_output1[48]=0;
  p_output1[49]=0;
  p_output1[50]=0;
  p_output1[51]=0;
  p_output1[52]=0;
  p_output1[53]=0;
  p_output1[54]=0;
  p_output1[55]=0;
  p_output1[56]=0;
  p_output1[57]=0;
  p_output1[58]=0;
  p_output1[59]=0;
  p_output1[60]=0;
  p_output1[61]=0;
  p_output1[62]=0;
  p_output1[63]=0;
  p_output1[64]=0;
  p_output1[65]=0;
  p_output1[66]=0;
  p_output1[67]=0;
  p_output1[68]=0;
  p_output1[69]=0;
  p_output1[70]=0;
  p_output1[71]=0;
  p_output1[72]=0;
  p_output1[73]=0;
  p_output1[74]=0;
  p_output1[75]=0;
  p_output1[76]=0;
  p_output1[77]=0;
  p_output1[78]=0;
  p_output1[79]=0;
  p_output1[80]=0;
  p_output1[81]=0;
  p_output1[82]=0;
  p_output1[83]=0;
  p_output1[84]=0;
  p_output1[85]=0;
  p_output1[86]=0;
  p_output1[87]=0;
  p_output1[88]=0;
  p_output1[89]=0;
  p_output1[90]=0;
  p_output1[91]=0;
  p_output1[92]=0;
  p_output1[93]=0;
  p_output1[94]=0;
  p_output1[95]=0;
  p_output1[96]=0;
  p_output1[97]=0;
  p_output1[98]=0;
  p_output1[99]=0;
  p_output1[100]=0;
  p_output1[101]=0;
  p_output1[102]=0;
  p_output1[103]=0;
  p_output1[104]=0;
  p_output1[105]=0;
  p_output1[106]=0;
  p_output1[107]=0;
  p_output1[108]=0;
  p_output1[109]=0;
  p_output1[110]=0;
  p_output1[111]=0;
  p_output1[112]=0;
  p_output1[113]=0;
  p_output1[114]=0;
  p_output1[115]=0;
  p_output1[116]=0;
  p_output1[117]=0;
  p_output1[118]=0;
  p_output1[119]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 20 && ncols == 1) && 
      !(mrows == 1 && ncols == 20))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 20 && ncols == 1) && 
      !(mrows == 1 && ncols == 20))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 6, (mwSize) 20, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "dJb_LeftThigh_mex.hh"

namespace SymExpression
{

void dJb_LeftThigh_mex_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
