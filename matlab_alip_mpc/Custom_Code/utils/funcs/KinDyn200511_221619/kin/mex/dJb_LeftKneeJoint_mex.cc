/*
 * Automatically Generated from Mathematica.
 * Mon 11 May 2020 22:19:21 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t370;
  double t519;
  double t831;
  double t860;
  double t943;
  double t975;
  double t1062;
  double t1071;
  double t137;
  double t1090;
  double t130;
  double t1107;
  double t91;
  double t1311;
  double t1567;
  double t1578;
  double t1596;
  double t1632;
  double t1675;
  double t1290;
  double t1334;
  double t1623;
  double t1732;
  double t1747;
  double t1816;
  double t1822;
  double t1831;
  double t1294;
  double t2292;
  double t2342;
  double t2344;
  double t2348;
  double t2635;
  double t2690;
  double t2699;
  double t2704;
  double t2637;
  double t2732;
  double t2745;
  double t2833;
  double t2847;
  double t2852;
  double t2812;
  double t2877;
  double t2925;
  double t2931;
  double t2986;
  double t2989;
  double t2998;
  double t3007;
  double t3014;
  double t3037;
  double t3038;
  double t3128;
  double t2582;
  double t2592;
  double t2213;
  double t2228;
  double t2297;
  double t2383;
  double t2438;
  double t3312;
  double t3478;
  double t3484;
  double t3496;
  double t3515;
  double t3528;
  double t3536;
  double t3543;
  double t3548;
  double t3549;
  double t3538;
  double t3567;
  double t3569;
  double t3571;
  double t3582;
  double t3583;
  double t3598;
  double t3599;
  double t3607;
  double t3613;
  double t3621;
  double t3637;
  double t3668;
  double t3693;
  double t3664;
  double t3721;
  double t3722;
  double t3727;
  double t3729;
  double t3750;
  double t3810;
  double t3840;
  double t3844;
  double t3848;
  double t3891;
  double t3895;
  double t3806;
  double t3808;
  double t3832;
  double t3850;
  double t3855;
  double t3969;
  double t3975;
  double t4050;
  double t4054;
  double t4085;
  double t4096;
  double t4112;
  double t4113;
  double t4130;
  double t4140;
  double t4147;
  double t4157;
  double t1077;
  double t1204;
  double t1215;
  double t1326;
  double t1375;
  double t1404;
  double t1409;
  double t1443;
  double t1480;
  double t1749;
  double t1845;
  double t1847;
  double t1943;
  double t1974;
  double t1986;
  double t2231;
  double t2445;
  double t2509;
  double t2535;
  double t2539;
  double t2560;
  double t2594;
  double t4435;
  double t4441;
  double t4443;
  double t3176;
  double t3180;
  double t3251;
  double t3264;
  double t3318;
  double t3319;
  double t3335;
  double t3346;
  double t3354;
  double t3355;
  double t3360;
  double t3367;
  double t3429;
  double t4530;
  double t4538;
  double t4539;
  double t3725;
  double t3754;
  double t3757;
  double t3766;
  double t3768;
  double t3769;
  double t3809;
  double t3857;
  double t3874;
  double t3876;
  double t3878;
  double t3880;
  double t3927;
  double t3936;
  double t3951;
  double t3952;
  double t3954;
  double t3987;
  double t3988;
  double t3991;
  double t3993;
  double t4010;
  double t4013;
  double t4081;
  double t4100;
  double t4106;
  double t4120;
  double t4150;
  double t4160;
  double t4166;
  double t4176;
  double t4182;
  double t4192;
  double t4207;
  double t4247;
  double t4254;
  double t4273;
  double t4294;
  double t4300;
  double t4301;
  double t4305;
  double t4313;
  double t4316;
  double t4879;
  double t4884;
  double t4886;
  double t4976;
  double t4984;
  double t4989;
  double t5216;
  double t5232;
  double t5188;
  double t5191;
  double t5289;
  double t5292;
  double t5294;
  double t5246;
  double t5248;
  double t5252;
  double t5168;
  double t5174;
  double t5193;
  double t5271;
  double t5279;
  double t5296;
  double t5302;
  double t5314;
  double t5335;
  double t5353;
  double t5372;
  double t5375;
  double t5387;
  double t5393;
  double t5394;
  double t5408;
  double t5411;
  double t5415;
  double t5416;
  double t5179;
  double t5186;
  double t5312;
  double t5420;
  double t5432;
  double t5466;
  double t5481;
  double t5485;
  double t5488;
  double t5490;
  double t5547;
  double t5580;
  double t5585;
  double t5586;
  double t5588;
  double t5598;
  double t5607;
  double t5521;
  double t5452;
  double t5491;
  double t5518;
  double t5587;
  double t5609;
  double t5617;
  double t5627;
  double t5628;
  double t5631;
  double t5699;
  double t5702;
  double t5731;
  double t5745;
  double t5760;
  double t5765;
  double t5766;
  double t5712;
  double t5767;
  double t5768;
  double t5787;
  double t5791;
  double t5797;
  double t5848;
  double t5872;
  double t5876;
  double t5519;
  double t5620;
  double t5642;
  double t5651;
  double t5658;
  double t5659;
  double t5779;
  double t5805;
  double t5818;
  double t5669;
  double t5672;
  double t5837;
  double t5884;
  double t5906;
  double t5972;
  double t5942;
  double t5955;
  double t5957;
  double t6004;
  double t6008;
  double t6010;
  double t6011;
  double t6012;
  double t6019;
  double t6023;
  double t6047;
  double t6057;
  double t6070;
  double t6009;
  double t6024;
  double t6027;
  double t6213;
  double t6199;
  double t6202;
  double t6209;
  double t6162;
  double t6167;
  double t6169;
  double t6174;
  double t5049;
  double t5062;
  double t5064;
  double t5127;
  double t5143;
  double t5146;
  double t6400;
  double t6408;
  double t6411;
  double t6388;
  double t4952;
  double t4955;
  double t4969;
  double t6516;
  double t6517;
  double t6558;
  double t6560;
  double t6562;
  double t6563;
  double t6587;
  double t6591;
  double t6592;
  double t5158;
  double t5159;
  double t5162;
  double t6532;
  double t6534;
  double t6539;
  double t6578;
  double t6595;
  double t6596;
  double t6606;
  double t6615;
  double t6620;
  double t6807;
  double t6815;
  double t6825;
  double t6828;
  double t6849;
  double t6851;
  double t6852;
  double t6863;
  double t6903;
  double t7123;
  double t7126;
  double t7128;
  double t7136;
  double t4920;
  double t4926;
  double t4937;
  double t4838;
  double t4839;
  double t4844;
  double t7582;
  double t7592;
  double t7593;
  double t7596;
  double t7624;
  double t7628;
  double t7632;
  double t7633;
  double t7837;
  double t7838;
  double t7841;
  double t7847;
  double t7826;
  double t7831;
  double t7832;
  double t7848;
  double t4866;
  double t4873;
  double t4878;
  double t4892;
  double t4916;
  double t4940;
  double t4945;
  double t4972;
  double t4998;
  double t5005;
  double t5017;
  double t5028;
  double t5065;
  double t5068;
  double t5104;
  double t5123;
  double t5151;
  double t5164;
  double t5165;
  double t5833;
  double t7946;
  double t7952;
  double t7954;
  double t7960;
  double t7961;
  double t7962;
  double t5981;
  double t6035;
  double t6089;
  double t6126;
  double t6129;
  double t6212;
  double t6225;
  double t6280;
  double t6285;
  double t8022;
  double t8023;
  double t8024;
  double t6547;
  double t6672;
  double t6690;
  double t6691;
  double t6894;
  double t8103;
  double t8104;
  double t8106;
  double t8108;
  double t8109;
  double t8110;
  double t6914;
  double t6978;
  double t7000;
  double t7046;
  double t7048;
  double t7157;
  double t7177;
  double t7227;
  double t7235;
  double t8164;
  double t8165;
  double t8170;
  double t7438;
  double t7464;
  double t7479;
  double t7502;
  double t7555;
  double t7558;
  double t7601;
  double t7604;
  double t8248;
  double t8249;
  double t8251;
  double t8270;
  double t8273;
  double t8275;
  double t8289;
  double t8290;
  double t7856;
  double t8300;
  double t8281;
  double t8282;
  double t7869;
  double t8301;
  double t7676;
  double t7678;
  double t7707;
  double t7708;
  double t7749;
  double t7751;
  double t7779;
  double t7781;
  double t7971;
  double t8417;
  double t8420;
  double t8423;
  double t8424;
  double t7979;
  double t8428;
  double t8429;
  double t8071;
  double t8073;
  double t8084;
  double t8085;
  double t8122;
  double t8527;
  double t8528;
  double t8529;
  double t8530;
  double t8136;
  double t8531;
  double t8532;
  double t8200;
  double t8204;
  double t8215;
  double t8217;
  double t8233;
  double t8234;
  double t8257;
  double t8259;
  double t8676;
  double t8677;
  double t8678;
  double t8691;
  double t8693;
  double t8697;
  double t8305;
  double t8716;
  double t8717;
  double t8720;
  double t8316;
  double t8708;
  double t8709;
  double t8724;
  double t8766;
  double t8769;
  double t8773;
  double t8775;
  double t8776;
  double t8777;
  double t8778;
  double t8828;
  double t8834;
  double t8845;
  double t8849;
  double t8850;
  double t8853;
  double t8854;
  double t8912;
  double t8922;
  double t8925;
  double t8933;
  double t8936;
  double t8939;
  double t8949;
  double t8950;
  double t8953;
  double t8943;
  double t8944;
  double t8954;
  double t8742;
  double t8749;
  double t8757;
  double t8758;
  double t8760;
  double t8761;
  double t8762;
  double t8764;
  double t8765;
  double t8985;
  double t8986;
  double t8987;
  double t8998;
  double t8999;
  double t9000;
  double t8995;
  double t8971;
  double t8991;
  double t8963;
  double t9001;
  double t9002;
  double t9003;
  t370 = Cos(var1[7]);
  t519 = Cos(var1[8]);
  t831 = Sin(var1[9]);
  t860 = t519*t831;
  t943 = Cos(var1[9]);
  t975 = Sin(var1[8]);
  t1062 = t943*t975;
  t1071 = 0. + t860 + t1062;
  t137 = Cos(var1[6]);
  t1090 = Sin(var1[5]);
  t130 = Cos(var1[5]);
  t1107 = Sin(var1[6]);
  t91 = Sin(var1[3]);
  t1311 = Sin(var1[7]);
  t1567 = -1.*t943*t519;
  t1578 = t831*t975;
  t1596 = 0. + t1567 + t1578;
  t1632 = t1311*t1071;
  t1675 = 0. + t1632;
  t1290 = Cos(var1[3]);
  t1334 = Sin(var1[4]);
  t1623 = -1.*t1107*t1596;
  t1732 = t137*t1675;
  t1747 = t1623 + t1732;
  t1816 = -1.*t137*t1596;
  t1822 = -1.*t1107*t1675;
  t1831 = t1816 + t1822;
  t1294 = Cos(var1[4]);
  t2292 = 0. + t1623 + t1732;
  t2342 = t137*t1596;
  t2344 = t1107*t1675;
  t2348 = 0. + t2342 + t2344;
  t2635 = t860 + t1062;
  t2690 = t943*t519;
  t2699 = -1.*t831*t975;
  t2704 = t2690 + t2699;
  t2637 = -1.*t1107*t2635;
  t2732 = t137*t1311*t2704;
  t2745 = t2637 + t2732;
  t2833 = t137*t2635;
  t2847 = t1107*t1311*t2704;
  t2852 = t2833 + t2847;
  t2812 = t130*t2745;
  t2877 = -1.*t1090*t2852;
  t2925 = t2812 + t2877;
  t2931 = -1.*t91*t2925;
  t2986 = t1294*t370*t2704;
  t2989 = t1090*t2745;
  t2998 = t130*t2852;
  t3007 = t2989 + t2998;
  t3014 = t1334*t3007;
  t3037 = t2986 + t3014;
  t3038 = t1290*t3037;
  t3128 = t2931 + t3038;
  t2582 = t130*t2292;
  t2592 = -1.*t1090*t2348;
  t2213 = t370*t1071;
  t2228 = 0. + t2213;
  t2297 = t1090*t2292;
  t2383 = t130*t2348;
  t2438 = 0. + t2297 + t2383;
  t3312 = 0. + t2690 + t2699;
  t3478 = -1.*t519*t831;
  t3484 = -1.*t943*t975;
  t3496 = t3478 + t3484;
  t3515 = t1107*t1311*t3496;
  t3528 = t137*t2704;
  t3536 = t3515 + t3528;
  t3543 = t137*t1311*t3496;
  t3548 = -1.*t1107*t2704;
  t3549 = t3543 + t3548;
  t3538 = -1.*t1090*t3536;
  t3567 = t130*t3549;
  t3569 = t3538 + t3567;
  t3571 = -1.*t91*t3569;
  t3582 = t1294*t370*t3496;
  t3583 = t130*t3536;
  t3598 = t1090*t3549;
  t3599 = t3583 + t3598;
  t3607 = t1334*t3599;
  t3613 = t3582 + t3607;
  t3621 = t1290*t3613;
  t3637 = t3571 + t3621;
  t3668 = t1311*t3312;
  t3693 = 0. + t3668;
  t3664 = -1.*t1107*t1071;
  t3721 = t137*t3693;
  t3722 = t3664 + t3721;
  t3727 = -1.*t137*t1071;
  t3729 = -1.*t1107*t3693;
  t3750 = t3727 + t3729;
  t3810 = 0. + t3664 + t3721;
  t3840 = t137*t1071;
  t3844 = t1107*t3693;
  t3848 = 0. + t3840 + t3844;
  t3891 = t130*t3810;
  t3895 = -1.*t1090*t3848;
  t3806 = t370*t3312;
  t3808 = 0. + t3806;
  t3832 = t1090*t3810;
  t3850 = t130*t3848;
  t3855 = 0. + t3832 + t3850;
  t3969 = -1.*t370;
  t3975 = 0. + t3969;
  t4050 = t137*t3975;
  t4054 = 0. + t4050;
  t4085 = t3975*t1107;
  t4096 = 0. + t4085;
  t4112 = t130*t4054;
  t4113 = -1.*t1090*t4096;
  t4130 = t4054*t1090;
  t4140 = t130*t4096;
  t4147 = 0. + t4130 + t4140;
  t4157 = 0. + t1311;
  t1077 = t130*t137*t370*t1071;
  t1204 = -1.*t370*t1090*t1107*t1071;
  t1215 = t1077 + t1204;
  t1326 = -1.*t1294*t1311*t1071;
  t1375 = t137*t370*t1090*t1071;
  t1404 = t130*t370*t1107*t1071;
  t1409 = t1375 + t1404;
  t1443 = t1334*t1409;
  t1480 = t1326 + t1443;
  t1749 = -1.*t1090*t1747;
  t1845 = t130*t1831;
  t1847 = t1749 + t1845;
  t1943 = t130*t1747;
  t1974 = t1090*t1831;
  t1986 = t1943 + t1974;
  t2231 = -1.*t1334*t2228;
  t2445 = t1294*t2438;
  t2509 = t2231 + t2445;
  t2535 = -1.*t1090*t2292;
  t2539 = -1.*t130*t2348;
  t2560 = t2535 + t2539;
  t2594 = t2582 + t2592;
  t4435 = t1290*t2925;
  t4441 = t91*t3037;
  t4443 = t4435 + t4441;
  t3176 = 0. + t2582 + t2592;
  t3180 = t1294*t2228;
  t3251 = t1334*t2438;
  t3264 = 0. + t3180 + t3251;
  t3318 = t130*t137*t370*t3312;
  t3319 = -1.*t370*t1090*t1107*t3312;
  t3335 = t3318 + t3319;
  t3346 = -1.*t1294*t1311*t3312;
  t3354 = t137*t370*t1090*t3312;
  t3355 = t130*t370*t1107*t3312;
  t3360 = t3354 + t3355;
  t3367 = t1334*t3360;
  t3429 = t3346 + t3367;
  t4530 = t1290*t3569;
  t4538 = t91*t3613;
  t4539 = t4530 + t4538;
  t3725 = -1.*t1090*t3722;
  t3754 = t130*t3750;
  t3757 = t3725 + t3754;
  t3766 = t130*t3722;
  t3768 = t1090*t3750;
  t3769 = t3766 + t3768;
  t3809 = -1.*t1334*t3808;
  t3857 = t1294*t3855;
  t3874 = t3809 + t3857;
  t3876 = -1.*t1090*t3810;
  t3878 = -1.*t130*t3848;
  t3880 = t3876 + t3878;
  t3927 = t3891 + t3895;
  t3936 = 0. + t3891 + t3895;
  t3951 = t1294*t3808;
  t3952 = t1334*t3855;
  t3954 = 0. + t3951 + t3952;
  t3987 = -1.*t137*t3975*t1090;
  t3988 = -1.*t130*t3975*t1107;
  t3991 = t3987 + t3988;
  t3993 = t130*t137*t3975;
  t4010 = -1.*t3975*t1090*t1107;
  t4013 = t3993 + t4010;
  t4081 = -1.*t4054*t1090;
  t4100 = -1.*t130*t4096;
  t4106 = t4081 + t4100;
  t4120 = t4112 + t4113;
  t4150 = t1294*t4147;
  t4160 = -1.*t1334*t4157;
  t4166 = t4150 + t4160;
  t4176 = 0. + t4112 + t4113;
  t4182 = t1334*t4147;
  t4192 = t1294*t4157;
  t4207 = 0. + t4182 + t4192;
  t4247 = t130*t137*t1311;
  t4254 = -1.*t1090*t1107*t1311;
  t4273 = t4247 + t4254;
  t4294 = t1294*t370;
  t4300 = t137*t1090*t1311;
  t4301 = t130*t1107*t1311;
  t4305 = t4300 + t4301;
  t4313 = t1334*t4305;
  t4316 = t4294 + t4313;
  t4879 = -1.*t370*t1334*t2704;
  t4884 = t1294*t3007;
  t4886 = t4879 + t4884;
  t4976 = -1.*t370*t1334*t3496;
  t4984 = t1294*t3599;
  t4989 = t4976 + t4984;
  t5216 = -1.*t943;
  t5232 = 1. + t5216;
  t5188 = -1.*t519;
  t5191 = 1. + t5188;
  t5289 = -0.08055*t5232;
  t5292 = -0.08055*t943;
  t5294 = 0. + t5289 + t5292;
  t5246 = -0.13004*t5232;
  t5248 = -0.13004*t943;
  t5252 = 0. + t5246 + t5248;
  t5168 = -1.*t137;
  t5174 = 1. + t5168;
  t5193 = -0.01004*t5191;
  t5271 = t5252*t519;
  t5279 = 0.08055*t975;
  t5296 = t5294*t975;
  t5302 = 0. + t5193 + t5271 + t5279 + t5296;
  t5314 = -1.*t370;
  t5335 = 1. + t5314;
  t5353 = 0.135*t5335;
  t5372 = 0.1305*t370;
  t5375 = 0.08055*t1311;
  t5387 = -0.08055*t5191;
  t5393 = t5294*t519;
  t5394 = -0.01004*t975;
  t5408 = -1.*t5252*t975;
  t5411 = 0. + t5387 + t5393 + t5394 + t5408;
  t5415 = t1311*t5411;
  t5416 = 0. + t5353 + t5372 + t5375 + t5415;
  t5179 = 0.135*t5174;
  t5186 = 0.07996*t1107;
  t5312 = -1.*t1107*t5302;
  t5420 = t137*t5416;
  t5432 = 0. + t5179 + t5186 + t5312 + t5420;
  t5466 = 0.07996*t5174;
  t5481 = -0.135*t1107;
  t5485 = t137*t5302;
  t5488 = t1107*t5416;
  t5490 = 0. + t5466 + t5481 + t5485 + t5488;
  t5547 = -0.08055*t5335;
  t5580 = 0.004500000000000004*t1311;
  t5585 = t370*t5411;
  t5586 = 0. + t5547 + t5580 + t5585;
  t5588 = t1090*t5432;
  t5598 = t130*t5490;
  t5607 = 0. + t5588 + t5598;
  t5521 = 0. + t4150 + t4160;
  t5452 = t130*t5432;
  t5491 = -1.*t1090*t5490;
  t5518 = 0. + t5452 + t5491;
  t5587 = -1.*t1334*t5586;
  t5609 = t1294*t5607;
  t5617 = 0. + t5587 + t5609;
  t5627 = t1294*t5586;
  t5628 = t1334*t5607;
  t5631 = 0. + t5627 + t5628;
  t5699 = 0.08055*t519;
  t5702 = t5699 + t5393 + t5394 + t5408;
  t5731 = -0.01004*t519;
  t5745 = -1.*t5252*t519;
  t5760 = -0.08055*t975;
  t5765 = -1.*t5294*t975;
  t5766 = t5731 + t5745 + t5760 + t5765;
  t5712 = -1.*t1107*t5702;
  t5767 = t137*t1311*t5766;
  t5768 = t5712 + t5767;
  t5787 = t137*t5702;
  t5791 = t1107*t1311*t5766;
  t5797 = t5787 + t5791;
  t5848 = t1090*t5768;
  t5872 = t130*t5797;
  t5876 = t5848 + t5872;
  t5519 = t4176*t5518;
  t5620 = t5521*t5617;
  t5642 = t4207*t5631;
  t5651 = t5519 + t5620 + t5642;
  t5658 = t4989*t5651;
  t5659 = -1.*t3569*t5518;
  t5779 = t130*t5768;
  t5805 = -1.*t1090*t5797;
  t5818 = t5779 + t5805;
  t5669 = -1.*t4989*t5617;
  t5672 = -1.*t3613*t5631;
  t5837 = -1.*t370*t1334*t5766;
  t5884 = t1294*t5876;
  t5906 = t5837 + t5884;
  t5972 = 0. + t3809 + t3857;
  t5942 = t1294*t370*t5766;
  t5955 = t1334*t5876;
  t5957 = t5942 + t5955;
  t6004 = -0.135*t137;
  t6008 = t6004 + t5186 + t5312 + t5420;
  t6010 = 0.07996*t137;
  t6011 = 0.135*t1107;
  t6012 = -1.*t137*t5302;
  t6019 = -1.*t1107*t5416;
  t6023 = t6010 + t6011 + t6012 + t6019;
  t6047 = t130*t6008;
  t6057 = t1090*t6023;
  t6070 = t6047 + t6057;
  t6009 = -1.*t1090*t6008;
  t6024 = t130*t6023;
  t6027 = t6009 + t6024;
  t6213 = t5452 + t5491;
  t6199 = -1.*t1090*t5432;
  t6202 = -1.*t130*t5490;
  t6209 = t6199 + t6202;
  t6162 = -1.*t5518*t3936;
  t6167 = -1.*t5617*t5972;
  t6169 = -1.*t5631*t3954;
  t6174 = t6162 + t6167 + t6169;
  t5049 = -1.*t1294*t3808;
  t5062 = -1.*t1334*t3855;
  t5064 = t5049 + t5062;
  t5127 = -1.*t1334*t4147;
  t5143 = -1.*t1294*t4157;
  t5146 = t5127 + t5143;
  t6400 = -1.*t1294*t5586;
  t6408 = -1.*t1334*t5607;
  t6411 = t6400 + t6408;
  t6388 = t5587 + t5609;
  t4952 = t1334*t1311*t3312;
  t4955 = t1294*t3360;
  t4969 = t4952 + t4955;
  t6516 = 0.08055*t370;
  t6517 = t6516 + t5580 + t5585;
  t6558 = 0.004500000000000004*t370;
  t6560 = -0.08055*t1311;
  t6562 = -1.*t1311*t5411;
  t6563 = t6558 + t6560 + t6562;
  t6587 = t137*t1090*t6517;
  t6591 = t130*t1107*t6517;
  t6592 = t6587 + t6591;
  t5158 = -1.*t370*t1334;
  t5159 = t1294*t4305;
  t5162 = t5158 + t5159;
  t6532 = t130*t137*t6517;
  t6534 = -1.*t1090*t1107*t6517;
  t6539 = t6532 + t6534;
  t6578 = -1.*t1334*t6563;
  t6595 = t1294*t6592;
  t6596 = t6578 + t6595;
  t6606 = t1294*t6563;
  t6615 = t1334*t6592;
  t6620 = t6606 + t6615;
  t6807 = -1.*t4176*t5518;
  t6815 = -1.*t5521*t5617;
  t6825 = -1.*t4207*t5631;
  t6828 = t6807 + t6815 + t6825;
  t6849 = t4886*t6828;
  t6851 = t2925*t5518;
  t6852 = t4886*t5617;
  t6863 = t3037*t5631;
  t6903 = 0. + t2231 + t2445;
  t7123 = t5518*t3176;
  t7126 = t5617*t6903;
  t7128 = t5631*t3264;
  t7136 = t7123 + t7126 + t7128;
  t4920 = -1.*t1294*t2228;
  t4926 = -1.*t1334*t2438;
  t4937 = t4920 + t4926;
  t4838 = t1334*t1311*t1071;
  t4839 = t1294*t1409;
  t4844 = t4838 + t4839;
  t7582 = -1.*t5518*t3176;
  t7592 = -1.*t5617*t6903;
  t7593 = -1.*t5631*t3264;
  t7596 = t7582 + t7592 + t7593;
  t7624 = t5518*t3936;
  t7628 = t5617*t5972;
  t7632 = t5631*t3954;
  t7633 = t7624 + t7628 + t7632;
  t7837 = -1.*t2925*t5518;
  t7838 = -1.*t4886*t5617;
  t7841 = -1.*t3037*t5631;
  t7847 = t4989*t7596;
  t7826 = t3569*t5518;
  t7831 = t4989*t5617;
  t7832 = t3613*t5631;
  t7848 = t4886*t7633;
  t4866 = var2[7]*t4844;
  t4873 = var2[6]*t1294*t1986;
  t4878 = var2[5]*t1294*t2594;
  t4892 = var2[9]*t4886;
  t4916 = var2[8]*t4886;
  t4940 = var2[4]*t4937;
  t4945 = t4866 + t4873 + t4878 + t4892 + t4916 + t4940;
  t4972 = var2[7]*t4969;
  t4998 = var2[9]*t4989;
  t5005 = var2[8]*t4989;
  t5017 = var2[6]*t1294*t3769;
  t5028 = var2[5]*t1294*t3927;
  t5065 = var2[4]*t5064;
  t5068 = t4972 + t4998 + t5005 + t5017 + t5028 + t5065;
  t5104 = var2[6]*t1294*t4013;
  t5123 = var2[5]*t1294*t4120;
  t5151 = var2[4]*t5146;
  t5164 = var2[7]*t5162;
  t5165 = t5104 + t5123 + t5151 + t5164;
  t5833 = t4176*t5818;
  t7946 = t4157*t5586;
  t7952 = t4147*t5607;
  t7954 = t7946 + t7952 + t5519;
  t7960 = t3569*t7954;
  t7961 = -1.*t370*t3496*t5586;
  t7962 = -1.*t3599*t5607;
  t5981 = -1.*t5818*t3936;
  t6035 = t4176*t6027;
  t6089 = t3991*t5518;
  t6126 = -1.*t5518*t3757;
  t6129 = -1.*t6027*t3936;
  t6212 = t4176*t6209;
  t6225 = t4106*t5518;
  t6280 = -1.*t5518*t3880;
  t6285 = -1.*t6209*t3936;
  t8022 = -1.*t5586*t3808;
  t8023 = -1.*t5607*t3855;
  t8024 = t8022 + t8023 + t6162;
  t6547 = t4176*t6539;
  t6672 = t4273*t5518;
  t6690 = -1.*t3335*t5518;
  t6691 = -1.*t6539*t3936;
  t6894 = -1.*t4176*t5818;
  t8103 = -1.*t4157*t5586;
  t8104 = -1.*t4147*t5607;
  t8106 = t8103 + t8104 + t6807;
  t8108 = t2925*t8106;
  t8109 = t370*t2704*t5586;
  t8110 = t3007*t5607;
  t6914 = t5818*t3176;
  t6978 = -1.*t4176*t6027;
  t7000 = -1.*t3991*t5518;
  t7046 = t5518*t1847;
  t7048 = t6027*t3176;
  t7157 = -1.*t4176*t6209;
  t7177 = -1.*t4106*t5518;
  t7227 = t5518*t2560;
  t7235 = t6209*t3176;
  t8164 = t5586*t2228;
  t8165 = t5607*t2438;
  t8170 = t8164 + t8165 + t7123;
  t7438 = -1.*t4176*t6539;
  t7464 = -1.*t4273*t5518;
  t7479 = t1215*t5518;
  t7502 = t6539*t3176;
  t7555 = -1.*t1215*t5518;
  t7558 = -1.*t6539*t3176;
  t7601 = t3335*t5518;
  t7604 = t6539*t3936;
  t8248 = -1.*t5586*t2228;
  t8249 = -1.*t5607*t2438;
  t8251 = t8248 + t8249 + t7582;
  t8270 = t5586*t3808;
  t8273 = t5607*t3855;
  t8275 = t8270 + t8273 + t7624;
  t8289 = -1.*t370*t2704*t5586;
  t8290 = -1.*t3007*t5607;
  t7856 = -1.*t5818*t3176;
  t8300 = t3569*t8251;
  t8281 = t370*t3496*t5586;
  t8282 = t3599*t5607;
  t7869 = t5818*t3936;
  t8301 = t2925*t8275;
  t7676 = -1.*t5518*t1847;
  t7678 = -1.*t6027*t3176;
  t7707 = t5518*t3757;
  t7708 = t6027*t3936;
  t7749 = -1.*t5518*t2560;
  t7751 = -1.*t6209*t3176;
  t7779 = t5518*t3880;
  t7781 = t6209*t3936;
  t7971 = t370*t4157*t5766;
  t8417 = t4054*t5432;
  t8420 = t4096*t5490;
  t8423 = t7946 + t8417 + t8420;
  t8424 = t370*t3496*t8423;
  t7979 = -1.*t370*t5766*t3808;
  t8428 = -1.*t3549*t5432;
  t8429 = -1.*t3536*t5490;
  t8071 = t370*t5586;
  t8073 = t4157*t6563;
  t8084 = t1311*t3312*t5586;
  t8085 = -1.*t6563*t3808;
  t8122 = -1.*t370*t4157*t5766;
  t8527 = -1.*t4054*t5432;
  t8528 = -1.*t4096*t5490;
  t8529 = t8103 + t8527 + t8528;
  t8530 = t370*t2704*t8529;
  t8136 = t370*t5766*t2228;
  t8531 = t2745*t5432;
  t8532 = t2852*t5490;
  t8200 = -1.*t370*t5586;
  t8204 = -1.*t4157*t6563;
  t8215 = -1.*t1311*t1071*t5586;
  t8217 = t6563*t2228;
  t8233 = t1311*t1071*t5586;
  t8234 = -1.*t6563*t2228;
  t8257 = -1.*t1311*t3312*t5586;
  t8259 = t6563*t3808;
  t8676 = -1.*t5432*t2292;
  t8677 = -1.*t5490*t2348;
  t8678 = t8248 + t8676 + t8677;
  t8691 = t5432*t3810;
  t8693 = t5490*t3848;
  t8697 = t8270 + t8691 + t8693;
  t8305 = -1.*t370*t5766*t2228;
  t8716 = -1.*t2745*t5432;
  t8717 = -1.*t2852*t5490;
  t8720 = t370*t3496*t8678;
  t8316 = t370*t5766*t3808;
  t8708 = t3549*t5432;
  t8709 = t3536*t5490;
  t8724 = t370*t2704*t8697;
  t8766 = -0.135*t2635;
  t8769 = 0.07996*t1311*t2704;
  t8773 = t3975*t5416;
  t8775 = 0. + t7946 + t8773;
  t8776 = t370*t3496*t8775;
  t8777 = -1.*t5302*t2704;
  t8778 = -1.*t1311*t3496*t5416;
  t8828 = 0.07996*t1311*t3496;
  t8834 = -0.135*t2704;
  t8845 = -1.*t3975*t5416;
  t8849 = 0. + t8103 + t8845;
  t8850 = t370*t2704*t8849;
  t8853 = t5302*t2635;
  t8854 = t1311*t2704*t5416;
  t8912 = -1.*t5302*t1596;
  t8922 = -1.*t5416*t1675;
  t8925 = t8912 + t8248 + t8922;
  t8933 = t5302*t1071;
  t8936 = t5416*t3693;
  t8939 = t8933 + t8270 + t8936;
  t8949 = -1.*t5302*t2635;
  t8950 = -1.*t1311*t2704*t5416;
  t8953 = t370*t3496*t8925;
  t8943 = t5302*t2704;
  t8944 = t1311*t3496*t5416;
  t8954 = t370*t2704*t8939;
  t8742 = -1.*var2[7]*t1311*t1071;
  t8749 = var2[9]*t370*t2704;
  t8757 = var2[8]*t370*t2704;
  t8758 = t8742 + t8749 + t8757;
  t8760 = var2[9]*t370*t3496;
  t8761 = var2[8]*t370*t3496;
  t8762 = -1.*var2[7]*t1311*t3312;
  t8764 = t8760 + t8761 + t8762;
  t8765 = var2[7]*t370;
  t8985 = 0.135*t3496;
  t8986 = 0.1305*t2635;
  t8987 = t8985 + t8986;
  t8998 = t5411*t3312;
  t8999 = 0. + t8933 + t8998;
  t9000 = t2635*t8999;
  t8995 = t5411*t3496;
  t8971 = t5702*t1071;
  t8991 = -1.*t5411*t2704;
  t8963 = -1.*t5702*t1596;
  t9001 = -1.*t5411*t1071;
  t9002 = 0. + t9001 + t8912;
  t9003 = t2704*t9002;
  p_output1[0]=(-1.*t1290*t3176 - 1.*t3264*t91)*var2[3] + t1290*t2509*var2[4] + (t1290*t1334*t2594 - 1.*t2560*t91)*var2[5] + (t1290*t1334*t1986 - 1.*t1847*t91)*var2[6] + (t1290*t1480 - 1.*t1215*t91)*var2[7] + t3128*var2[8] + t3128*var2[9];
  p_output1[1]=(-1.*t1290*t3936 - 1.*t3954*t91)*var2[3] + t1290*t3874*var2[4] + (t1290*t1334*t3927 - 1.*t3880*t91)*var2[5] + (t1290*t1334*t3769 - 1.*t3757*t91)*var2[6] + (t1290*t3429 - 1.*t3335*t91)*var2[7] + t3637*var2[8] + t3637*var2[9];
  p_output1[2]=(-1.*t1290*t4176 - 1.*t4207*t91)*var2[3] + t1290*t4166*var2[4] + (t1290*t1334*t4120 - 1.*t4106*t91)*var2[5] + (t1290*t1334*t4013 - 1.*t3991*t91)*var2[6] + (t1290*t4316 - 1.*t4273*t91)*var2[7];
  p_output1[3]=0;
  p_output1[4]=0;
  p_output1[5]=0;
  p_output1[6]=(t1290*t3264 - 1.*t3176*t91)*var2[3] + t2509*t91*var2[4] + (t1290*t2560 + t1334*t2594*t91)*var2[5] + (t1290*t1847 + t1334*t1986*t91)*var2[6] + (t1215*t1290 + t1480*t91)*var2[7] + t4443*var2[8] + t4443*var2[9];
  p_output1[7]=(t1290*t3954 - 1.*t3936*t91)*var2[3] + t3874*t91*var2[4] + (t1290*t3880 + t1334*t3927*t91)*var2[5] + (t1290*t3757 + t1334*t3769*t91)*var2[6] + (t1290*t3335 + t3429*t91)*var2[7] + t4539*var2[8] + t4539*var2[9];
  p_output1[8]=(t1290*t4207 - 1.*t4176*t91)*var2[3] + t4166*t91*var2[4] + (t1290*t4106 + t1334*t4120*t91)*var2[5] + (t1290*t3991 + t1334*t4013*t91)*var2[6] + (t1290*t4273 + t4316*t91)*var2[7];
  p_output1[9]=0;
  p_output1[10]=0;
  p_output1[11]=0;
  p_output1[12]=t4945;
  p_output1[13]=t5068;
  p_output1[14]=t5165;
  p_output1[15]=0;
  p_output1[16]=0;
  p_output1[17]=0;
  p_output1[18]=(t5064*t5651 + t5146*t6174 + t5972*(t5146*t5617 + t4166*t5631 + t4207*t6388 + t5521*t6411) + t5521*(-1.*t5064*t5617 - 1.*t3874*t5631 - 1.*t3954*t6388 - 1.*t5972*t6411))*var2[4] + (t1294*t3927*t5651 + t1294*t4120*t6174 + t5972*(t1294*t4120*t5617 + t1334*t4120*t5631 + t6212 + t1334*t4207*t6213 + t1294*t5521*t6213 + t6225) + t5521*(-1.*t1294*t3927*t5617 - 1.*t1334*t3927*t5631 - 1.*t1334*t3954*t6213 - 1.*t1294*t5972*t6213 + t6280 + t6285))*var2[5] + (t1294*t3769*t5651 + t5972*(t1294*t4013*t5617 + t1334*t4013*t5631 + t6035 + t1334*t4207*t6070 + t1294*t5521*t6070 + t6089) + t5521*(-1.*t1294*t3769*t5617 - 1.*t1334*t3769*t5631 - 1.*t1334*t3954*t6070 - 1.*t1294*t5972*t6070 + t6126 + t6129) + t1294*t4013*t6174)*var2[6] + (t4969*t5651 + t5162*t6174 + t5972*(t5162*t5617 + t4316*t5631 + t6547 + t5521*t6596 + t4207*t6620 + t6672) + t5521*(-1.*t4969*t5617 - 1.*t3429*t5631 - 1.*t5972*t6596 - 1.*t3954*t6620 + t6690 + t6691))*var2[7] + (t5658 + (t5833 + t5521*t5906 + t4207*t5957)*t5972 + t5521*(t5659 + t5669 + t5672 - 1.*t3954*t5957 - 1.*t5906*t5972 + t5981))*var2[8] + (0. + t5658 + t5521*(0. + t5659 + t5669 + t5672))*var2[9];
  p_output1[19]=(t4937*t6828 + (-1.*t5146*t5617 - 1.*t4166*t5631 - 1.*t4207*t6388 - 1.*t5521*t6411)*t6903 + t5521*(t4937*t5617 + t2509*t5631 + t3264*t6388 + t6411*t6903) + t5146*t7136)*var2[4] + (t1294*t2594*t6828 + t1294*t4120*t7136 + t6903*(-1.*t1294*t4120*t5617 - 1.*t1334*t4120*t5631 - 1.*t1334*t4207*t6213 - 1.*t1294*t5521*t6213 + t7157 + t7177) + t5521*(t1294*t2594*t5617 + t1334*t2594*t5631 + t1334*t3264*t6213 + t1294*t6213*t6903 + t7227 + t7235))*var2[5] + (t1294*t1986*t6828 + t6903*(-1.*t1294*t4013*t5617 - 1.*t1334*t4013*t5631 - 1.*t1334*t4207*t6070 - 1.*t1294*t5521*t6070 + t6978 + t7000) + t5521*(t1294*t1986*t5617 + t1334*t1986*t5631 + t1334*t3264*t6070 + t1294*t6070*t6903 + t7046 + t7048) + t1294*t4013*t7136)*var2[6] + (t4844*t6828 + t5162*t7136 + t6903*(-1.*t5162*t5617 - 1.*t4316*t5631 - 1.*t5521*t6596 - 1.*t4207*t6620 + t7438 + t7464) + t5521*(t4844*t5617 + t1480*t5631 + t3264*t6620 + t6596*t6903 + t7479 + t7502))*var2[7] + (t6849 + (-1.*t5521*t5906 - 1.*t4207*t5957 + t6894)*t6903 + t5521*(t3264*t5957 + t6851 + t6852 + t6863 + t5906*t6903 + t6914))*var2[8] + (0. + t6849 + t5521*(0. + t6851 + t6852 + t6863))*var2[9];
  p_output1[20]=((t5064*t5617 + t3874*t5631 + t3954*t6388 + t5972*t6411)*t6903 + t5972*(-1.*t4937*t5617 - 1.*t2509*t5631 - 1.*t3264*t6388 - 1.*t6411*t6903) + t5064*t7596 + t4937*t7633)*var2[4] + (t1294*t3927*t7596 + t1294*t2594*t7633 + t5972*(-1.*t1294*t2594*t5617 - 1.*t1334*t2594*t5631 - 1.*t1334*t3264*t6213 - 1.*t1294*t6213*t6903 + t7749 + t7751) + t6903*(t1294*t3927*t5617 + t1334*t3927*t5631 + t1334*t3954*t6213 + t1294*t5972*t6213 + t7779 + t7781))*var2[5] + (t1294*t3769*t7596 + t1294*t1986*t7633 + t5972*(-1.*t1294*t1986*t5617 - 1.*t1334*t1986*t5631 - 1.*t1334*t3264*t6070 - 1.*t1294*t6070*t6903 + t7676 + t7678) + t6903*(t1294*t3769*t5617 + t1334*t3769*t5631 + t1334*t3954*t6070 + t1294*t5972*t6070 + t7707 + t7708))*var2[6] + (t5972*(-1.*t4844*t5617 - 1.*t1480*t5631 - 1.*t3264*t6620 - 1.*t6596*t6903 + t7555 + t7558) + t4969*t7596 + t6903*(t4969*t5617 + t3429*t5631 + t5972*t6596 + t3954*t6620 + t7601 + t7604) + t4844*t7633)*var2[7] + (t7847 + t7848 + t5972*(-1.*t3264*t5957 - 1.*t5906*t6903 + t7837 + t7838 + t7841 + t7856) + t6903*(t3954*t5957 + t5906*t5972 + t7826 + t7831 + t7832 + t7869))*var2[8] + (t6903*(0. + t7826 + t7831 + t7832) + t5972*(0. + t7837 + t7838 + t7841) + t7847 + t7848)*var2[9];
  p_output1[21]=t4945;
  p_output1[22]=t5068;
  p_output1[23]=t5165;
  p_output1[24]=(t3936*(t4120*t5607 + t6212 + t4147*t6213 + t6225) + t4176*(-1.*t3927*t5607 - 1.*t3855*t6213 + t6280 + t6285) + t3880*t7954 + t4106*t8024)*var2[5] + (t3936*(t4013*t5607 + t6035 + t4147*t6070 + t6089) + t4176*(-1.*t3769*t5607 - 1.*t3855*t6070 + t6126 + t6129) + t3757*t7954 + t3991*t8024)*var2[6] + (t3335*t7954 + t4273*t8024 + t3936*(t4305*t5607 + t6547 + t4147*t6592 + t6672 + t8071 + t8073) + t4176*(-1.*t3360*t5607 - 1.*t3855*t6592 + t6690 + t6691 + t8084 + t8085))*var2[7] + (t7960 + t3936*(t5833 + t4147*t5876 + t7971) + t4176*(t5659 - 1.*t3855*t5876 + t5981 + t7961 + t7962 + t7979))*var2[8] + (0. + t7960 + t4176*(0. + t5659 + t7961 + t7962))*var2[9];
  p_output1[25]=(t3176*(-1.*t4120*t5607 - 1.*t4147*t6213 + t7157 + t7177) + t4176*(t2594*t5607 + t2438*t6213 + t7227 + t7235) + t2560*t8106 + t4106*t8170)*var2[5] + (t3176*(-1.*t4013*t5607 - 1.*t4147*t6070 + t6978 + t7000) + t4176*(t1986*t5607 + t2438*t6070 + t7046 + t7048) + t1847*t8106 + t3991*t8170)*var2[6] + (t1215*t8106 + t4273*t8170 + t3176*(-1.*t4305*t5607 - 1.*t4147*t6592 + t7438 + t7464 + t8200 + t8204) + t4176*(t1409*t5607 + t2438*t6592 + t7479 + t7502 + t8215 + t8217))*var2[7] + (t8108 + t3176*(-1.*t4147*t5876 + t6894 + t8122) + t4176*(t2438*t5876 + t6851 + t6914 + t8109 + t8110 + t8136))*var2[8] + (0. + t8108 + t4176*(0. + t6851 + t8109 + t8110))*var2[9];
  p_output1[26]=(t3936*(-1.*t2594*t5607 - 1.*t2438*t6213 + t7749 + t7751) + t3176*(t3927*t5607 + t3855*t6213 + t7779 + t7781) + t3880*t8251 + t2560*t8275)*var2[5] + (t3936*(-1.*t1986*t5607 - 1.*t2438*t6070 + t7676 + t7678) + t3176*(t3769*t5607 + t3855*t6070 + t7707 + t7708) + t3757*t8251 + t1847*t8275)*var2[6] + (t3936*(-1.*t1409*t5607 - 1.*t2438*t6592 + t7555 + t7558 + t8233 + t8234) + t3335*t8251 + t3176*(t3360*t5607 + t3855*t6592 + t7601 + t7604 + t8257 + t8259) + t1215*t8275)*var2[7] + (t8300 + t8301 + t3936*(-1.*t2438*t5876 + t7837 + t7856 + t8289 + t8290 + t8305) + t3176*(t3855*t5876 + t7826 + t7869 + t8281 + t8282 + t8316))*var2[8] + (t3176*(0. + t7826 + t8281 + t8282) + t3936*(0. + t7837 + t8289 + t8290) + t8300 + t8301)*var2[9];
  p_output1[27]=t2560*var2[5] + t1847*var2[6] + t1215*var2[7] + t2925*var2[8] + t2925*var2[9];
  p_output1[28]=t3880*var2[5] + t3757*var2[6] + t3335*var2[7] + t3569*var2[8] + t3569*var2[9];
  p_output1[29]=t4106*var2[5] + t3991*var2[6] + t4273*var2[7];
  p_output1[30]=(t4157*(-1.*t3750*t5432 - 1.*t3722*t5490 - 1.*t3848*t6008 - 1.*t3810*t6023) + t3808*(-1.*t1107*t3975*t5432 + t137*t3975*t5490 + t4096*t6008 + t4054*t6023))*var2[6] + (t370*(-1.*t3810*t5432 - 1.*t3848*t5490 + t8022) + t3808*(t1311*t137*t5432 + t1107*t1311*t5490 + t137*t4054*t6517 + t1107*t4096*t6517 + t8071 + t8073) + t4157*(-1.*t137*t3312*t370*t5432 - 1.*t1107*t3312*t370*t5490 - 1.*t137*t3810*t6517 - 1.*t1107*t3848*t6517 + t8084 + t8085) - 1.*t1311*t3312*t8423)*var2[7] + (t3808*(t4054*t5768 + t4096*t5797 + t7971) + t8424 + t4157*(-1.*t3810*t5768 - 1.*t3848*t5797 + t7961 + t7979 + t8428 + t8429))*var2[8] + (0. + t8424 + t4157*(0. + t7961 + t8428 + t8429))*var2[9];
  p_output1[31]=(t4157*(t1831*t5432 + t1747*t5490 + t2348*t6008 + t2292*t6023) + t2228*(t1107*t3975*t5432 - 1.*t137*t3975*t5490 - 1.*t4096*t6008 - 1.*t4054*t6023))*var2[6] + (t370*(t2292*t5432 + t2348*t5490 + t8164) + t2228*(-1.*t1311*t137*t5432 - 1.*t1107*t1311*t5490 - 1.*t137*t4054*t6517 - 1.*t1107*t4096*t6517 + t8200 + t8204) + t4157*(t1071*t137*t370*t5432 + t1071*t1107*t370*t5490 + t137*t2292*t6517 + t1107*t2348*t6517 + t8215 + t8217) - 1.*t1071*t1311*t8529)*var2[7] + (t2228*(-1.*t4054*t5768 - 1.*t4096*t5797 + t8122) + t8530 + t4157*(t2292*t5768 + t2348*t5797 + t8109 + t8136 + t8531 + t8532))*var2[8] + (0. + t8530 + t4157*(0. + t8109 + t8531 + t8532))*var2[9];
  p_output1[32]=(t3808*(-1.*t1831*t5432 - 1.*t1747*t5490 - 1.*t2348*t6008 - 1.*t2292*t6023) + t2228*(t3750*t5432 + t3722*t5490 + t3848*t6008 + t3810*t6023))*var2[6] + (t3808*(-1.*t1071*t137*t370*t5432 - 1.*t1071*t1107*t370*t5490 - 1.*t137*t2292*t6517 - 1.*t1107*t2348*t6517 + t8233 + t8234) + t2228*(t137*t3312*t370*t5432 + t1107*t3312*t370*t5490 + t137*t3810*t6517 + t1107*t3848*t6517 + t8257 + t8259) - 1.*t1311*t3312*t8678 - 1.*t1071*t1311*t8697)*var2[7] + (t2228*(t3810*t5768 + t3848*t5797 + t8281 + t8316 + t8708 + t8709) + t3808*(-1.*t2292*t5768 - 1.*t2348*t5797 + t8289 + t8305 + t8716 + t8717) + t8720 + t8724)*var2[8] + (t2228*(0. + t8281 + t8708 + t8709) + t3808*(0. + t8289 + t8716 + t8717) + t8720 + t8724)*var2[9];
  p_output1[33]=t8758;
  p_output1[34]=t8764;
  p_output1[35]=t8765;
  p_output1[36]=(0.07996*t1071*t370 + t370*(-1.*t1071*t5302 - 1.*t3693*t5416 + t8022) + t3808*(t1311*t5416 + t3975*t6517 + t8071 + t8073) + t4157*(-1.*t3312*t370*t5416 - 1.*t3693*t6517 + t8084 + t8085) - 1.*t1311*t3312*t8775)*var2[7] + (t3808*(t1311*t3975*t5766 + t7971) + t8766 + t8769 + t8776 + t4157*(-1.*t1071*t5702 - 1.*t1311*t3693*t5766 + t7961 + t7979 + t8777 + t8778))*var2[8] + (0. + t8766 + t8769 + t8776 + t4157*(0. + t7961 + t8777 + t8778))*var2[9];
  p_output1[37]=(0.07996*t3312*t370 + t370*(t1596*t5302 + t1675*t5416 + t8164) + t2228*(-1.*t1311*t5416 - 1.*t3975*t6517 + t8200 + t8204) + t4157*(t1071*t370*t5416 + t1675*t6517 + t8215 + t8217) - 1.*t1071*t1311*t8849)*var2[7] + (t2228*(-1.*t1311*t3975*t5766 + t8122) + t8828 + t8834 + t8850 + t4157*(t1596*t5702 + t1311*t1675*t5766 + t8109 + t8136 + t8853 + t8854))*var2[8] + (0. + t8828 + t8834 + t8850 + t4157*(0. + t8109 + t8853 + t8854))*var2[9];
  p_output1[38]=(0.07996*t1311 + t3808*(-1.*t1071*t370*t5416 - 1.*t1675*t6517 + t8233 + t8234) + t2228*(t3312*t370*t5416 + t3693*t6517 + t8257 + t8259) - 1.*t1311*t3312*t8925 - 1.*t1071*t1311*t8939)*var2[7] + (t8953 + t8954 + t3808*(-1.*t1311*t1675*t5766 + t8289 + t8305 + t8949 + t8950 + t8963) + t2228*(t1311*t3693*t5766 + t8281 + t8316 + t8943 + t8944 + t8971))*var2[8] + (t2228*(0. + t8281 + t8943 + t8944) + t3808*(0. + t8289 + t8949 + t8950) + t8953 + t8954)*var2[9];
  p_output1[39]=t8758;
  p_output1[40]=t8764;
  p_output1[41]=t8765;
  p_output1[42]=0.004500000000000004*t2704*var2[8] + 0.004500000000000004*t2704*var2[9];
  p_output1[43]=t8987*var2[8] + t8987*var2[9];
  p_output1[44]=(t1071*(-1.*t1071*t5766 + t8949 + t8963 + t8991) + t1596*(t3312*t5766 + t8943 + t8971 + t8995) + t9000 + t9003)*var2[8] + (t1071*(0. + t8949 + t8991) + t1596*(0. + t8943 + t8995) + t9000 + t9003)*var2[9];
  p_output1[45]=t2635*var2[8] + t2635*var2[9];
  p_output1[46]=t2704*var2[8] + t2704*var2[9];
  p_output1[47]=0;
  p_output1[48]=(0. + 0.08055*t831 + t5294*t831 - 0.01004*t943 - 1.*t5252*t943)*var2[9];
  p_output1[49]=(0. + 0.01004*t831 + t5252*t831 + 0.08055*t943 + t5294*t943)*var2[9];
  p_output1[50]=0;
  p_output1[51]=0;
  p_output1[52]=0;
  p_output1[53]=0;
  p_output1[54]=0;
  p_output1[55]=0;
  p_output1[56]=0;
  p_output1[57]=0;
  p_output1[58]=0;
  p_output1[59]=0;
  p_output1[60]=0;
  p_output1[61]=0;
  p_output1[62]=0;
  p_output1[63]=0;
  p_output1[64]=0;
  p_output1[65]=0;
  p_output1[66]=0;
  p_output1[67]=0;
  p_output1[68]=0;
  p_output1[69]=0;
  p_output1[70]=0;
  p_output1[71]=0;
  p_output1[72]=0;
  p_output1[73]=0;
  p_output1[74]=0;
  p_output1[75]=0;
  p_output1[76]=0;
  p_output1[77]=0;
  p_output1[78]=0;
  p_output1[79]=0;
  p_output1[80]=0;
  p_output1[81]=0;
  p_output1[82]=0;
  p_output1[83]=0;
  p_output1[84]=0;
  p_output1[85]=0;
  p_output1[86]=0;
  p_output1[87]=0;
  p_output1[88]=0;
  p_output1[89]=0;
  p_output1[90]=0;
  p_output1[91]=0;
  p_output1[92]=0;
  p_output1[93]=0;
  p_output1[94]=0;
  p_output1[95]=0;
  p_output1[96]=0;
  p_output1[97]=0;
  p_output1[98]=0;
  p_output1[99]=0;
  p_output1[100]=0;
  p_output1[101]=0;
  p_output1[102]=0;
  p_output1[103]=0;
  p_output1[104]=0;
  p_output1[105]=0;
  p_output1[106]=0;
  p_output1[107]=0;
  p_output1[108]=0;
  p_output1[109]=0;
  p_output1[110]=0;
  p_output1[111]=0;
  p_output1[112]=0;
  p_output1[113]=0;
  p_output1[114]=0;
  p_output1[115]=0;
  p_output1[116]=0;
  p_output1[117]=0;
  p_output1[118]=0;
  p_output1[119]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 20 && ncols == 1) && 
      !(mrows == 1 && ncols == 20))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 20 && ncols == 1) && 
      !(mrows == 1 && ncols == 20))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 6, (mwSize) 20, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "dJb_LeftKneeJoint_mex.hh"

namespace SymExpression
{

void dJb_LeftKneeJoint_mex_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
