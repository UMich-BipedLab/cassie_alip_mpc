/*
 * Automatically Generated from Mathematica.
 * Mon 11 May 2020 22:19:44 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t167;
  double t213;
  double t678;
  double t719;
  double t718;
  double t725;
  double t735;
  double t772;
  double t1301;
  double t1340;
  double t816;
  double t825;
  double t840;
  double t861;
  double t1394;
  double t1400;
  double t1405;
  double t1606;
  double t1612;
  double t1614;
  double t882;
  double t887;
  double t982;
  double t994;
  double t1010;
  double t1028;
  double t1029;
  double t1056;
  double t1137;
  double t1151;
  double t1163;
  double t1166;
  double t1176;
  double t1265;
  double t1270;
  double t1992;
  double t1828;
  double t1835;
  double t1838;
  double t2010;
  double t1758;
  double t1777;
  double t1783;
  double t2115;
  double t2116;
  double t2009;
  double t2020;
  double t2026;
  double t1501;
  double t1510;
  double t1558;
  double t2125;
  double t2126;
  double t2136;
  double t2141;
  double t2182;
  double t2188;
  double t2065;
  double t2068;
  double t2071;
  double t2288;
  double t2311;
  double t2356;
  double t2390;
  double t2221;
  double t2391;
  double t1435;
  double t1442;
  double t1450;
  double t2497;
  double t2502;
  double t2510;
  double t2685;
  double t2695;
  double t2696;
  double t2514;
  double t2522;
  double t2535;
  double t2539;
  double t2607;
  double t2462;
  double t2464;
  double t2935;
  double t2939;
  double t2946;
  double t2958;
  double t2959;
  double t2862;
  double t2873;
  double t2882;
  double t3074;
  double t3079;
  double t3082;
  double t3092;
  double t3093;
  double t3095;
  double t3098;
  double t3139;
  double t3161;
  double t3084;
  double t3085;
  double t3087;
  double t2138;
  double t2192;
  double t2840;
  double t2848;
  double t2850;
  double t3297;
  double t2628;
  double t3271;
  double t3281;
  double t3284;
  double t3289;
  double t3159;
  double t3165;
  double t3130;
  double t3131;
  double t3133;
  double t3349;
  double t2981;
  double t2985;
  double t3202;
  double t3208;
  double t3587;
  double t3614;
  double t3588;
  double t3592;
  double t3604;
  double t3661;
  double t3668;
  double t3184;
  double t3185;
  double t3635;
  double t3637;
  double t3638;
  double t3670;
  double t3682;
  double t3686;
  double t3704;
  double t3715;
  double t3722;
  double t2636;
  double t2638;
  double t2648;
  double t2653;
  double t3608;
  double t3620;
  double t3623;
  double t2565;
  double t2575;
  double t3697;
  double t3726;
  double t3727;
  double t3736;
  double t3745;
  double t3763;
  double t3772;
  double t2996;
  double t3001;
  double t3793;
  double t2945;
  double t2962;
  double t3829;
  double t3838;
  double t3842;
  double t3258;
  double t3261;
  double t3267;
  double t2899;
  double t2915;
  double t2785;
  double t2824;
  double t3049;
  double t3051;
  double t3052;
  double t2744;
  double t2760;
  double t2763;
  double t3123;
  double t3124;
  double t3125;
  double t4148;
  double t4149;
  double t4151;
  double t4156;
  double t4172;
  double t4114;
  double t4124;
  double t4139;
  double t4267;
  double t2238;
  double t2239;
  double t3173;
  double t3174;
  double t3143;
  double t3154;
  double t4433;
  double t4435;
  double t4439;
  double t4444;
  double t4445;
  double t4467;
  double t4470;
  double t3210;
  double t3214;
  double t4485;
  double t3192;
  double t3195;
  double t3966;
  double t3968;
  double t3979;
  double t3104;
  double t3105;
  double t3061;
  double t3064;
  double t4241;
  double t4248;
  double t4254;
  double t2994;
  double t3118;
  double t3119;
  double t4865;
  double t4318;
  double t4326;
  double t3358;
  double t3366;
  double t3378;
  double t3379;
  double t5007;
  double t5021;
  double t5036;
  double t5052;
  double t5056;
  double t5066;
  double t3431;
  double t3432;
  double t3460;
  double t3468;
  double t3402;
  double t3403;
  double t4857;
  double t4879;
  double t3301;
  double t3303;
  double t3315;
  double t3321;
  double t4661;
  double t4665;
  double t4680;
  double t4060;
  double t4062;
  double t4065;
  double t4273;
  double t4275;
  double t4835;
  double t4837;
  double t4848;
  double t4922;
  double t4923;
  double t4932;
  double t4381;
  double t4388;
  double t4394;
  double t3626;
  double t3640;
  double t3650;
  double t3654;
  double t3657;
  double t4203;
  double t4219;
  double t5591;
  double t4152;
  double t4173;
  double t5602;
  double t5616;
  double t5624;
  double t5660;
  double t5668;
  double t5669;
  double t5581;
  double t5584;
  double t5585;
  double t5530;
  double t5531;
  double t5535;
  double t5743;
  double t5758;
  double t5762;
  double t5733;
  double t5767;
  double t5770;
  double t3821;
  double t5772;
  double t5779;
  double t5784;
  double t5832;
  double t5833;
  double t3916;
  double t5871;
  double t4023;
  double t4038;
  double t4700;
  double t4701;
  double t4703;
  double t3987;
  double t3992;
  double t5283;
  double t5287;
  double t5288;
  double t4081;
  double t4083;
  double t4085;
  double t4352;
  double t4355;
  double t6167;
  double t6175;
  double t6178;
  double t6185;
  double t6194;
  double t4408;
  double t4422;
  double t4802;
  double t4809;
  double t4784;
  double t4792;
  double t6314;
  double t6315;
  double t6317;
  double t4551;
  double t6325;
  double t6329;
  double t6330;
  double t6348;
  double t6353;
  double t4591;
  double t6387;
  double t4649;
  double t4651;
  double t4639;
  double t4640;
  double t4903;
  double t6270;
  double t6275;
  double t6276;
  double t4960;
  double t4963;
  double t5004;
  double t5006;
  double t6072;
  double t6073;
  double t5199;
  double t5322;
  double t5323;
  double t5316;
  double t5319;
  double t6756;
  double t6780;
  double t6788;
  double t6799;
  double t5070;
  double t5077;
  double t5153;
  double t5168;
  double t6877;
  double t6880;
  double t6894;
  double t6906;
  double t6908;
  double t6910;
  double t6916;
  double t6918;
  double t5266;
  double t5271;
  double t5242;
  double t5246;
  double t5435;
  double t5443;
  double t5444;
  double t5447;
  double t5448;
  double t5462;
  double t5464;
  double t5470;
  double t5481;
  double t5484;
  double t5486;
  double t5491;
  double t5493;
  double t5499;
  double t5501;
  double t5504;
  double t5510;
  double t5515;
  double t5544;
  double t5559;
  double t5562;
  double t5569;
  double t5571;
  double t5575;
  double t5576;
  double t5578;
  double t5587;
  double t5590;
  double t7171;
  double t7177;
  double t7181;
  double t7186;
  double t5874;
  double t5884;
  double t5885;
  double t5894;
  double t5897;
  double t5905;
  double t5849;
  double t5851;
  double t7185;
  double t7190;
  double t7199;
  double t6389;
  double t6390;
  double t6402;
  double t7202;
  double t7204;
  double t7207;
  double t6408;
  double t6409;
  double t6420;
  double t7029;
  double t7033;
  double t7034;
  double t6650;
  double t6652;
  double t6656;
  double t7200;
  double t7214;
  double t5944;
  double t5950;
  double t5953;
  double t5964;
  double t5968;
  double t5981;
  double t5929;
  double t5931;
  double t6499;
  double t6500;
  double t6505;
  double t6511;
  double t6525;
  double t6528;
  double t7267;
  double t7277;
  double t7278;
  double t7284;
  double t7286;
  double t7287;
  double t7299;
  double t7319;
  double t7320;
  double t7324;
  double t7325;
  double t7326;
  double t7327;
  double t6033;
  double t6034;
  double t6036;
  double t6039;
  double t6043;
  double t6047;
  double t5995;
  double t5997;
  double t6573;
  double t6576;
  double t6577;
  double t6581;
  double t6587;
  double t6588;
  double t6013;
  double t6015;
  double t7102;
  double t7104;
  double t7113;
  double t7136;
  double t7141;
  double t7149;
  double t5672;
  double t5693;
  double t6092;
  double t6106;
  double t6108;
  double t6125;
  double t6129;
  double t6133;
  double t6684;
  double t6688;
  double t6689;
  double t6183;
  double t6218;
  double t7009;
  double t7010;
  double t7014;
  double t6224;
  double t6230;
  double t6634;
  double t6642;
  double t6644;
  double t6243;
  double t6250;
  double t6252;
  double t7702;
  double t7705;
  double t7714;
  double t7716;
  double t7726;
  double t7656;
  double t7669;
  double t6606;
  double t6610;
  double t6618;
  double t6624;
  double t7813;
  double t7828;
  double t6365;
  double t6378;
  double t7899;
  double t7900;
  double t6481;
  double t6482;
  double t7951;
  double t7952;
  double t7954;
  double t7960;
  double t7962;
  double t7964;
  double t7967;
  double t6535;
  double t6536;
  double t6550;
  double t6552;
  double t6299;
  double t6309;
  double t6664;
  double t6668;
  double t7764;
  double t7765;
  double t6993;
  double t6995;
  double t6976;
  double t6979;
  double t8217;
  double t8227;
  double t6863;
  double t6864;
  double t6849;
  double t6851;
  double t7590;
  double t7593;
  double t8332;
  double t8334;
  double t8335;
  double t8337;
  double t8347;
  double t8355;
  double t8363;
  double t8366;
  double t6950;
  double t6951;
  double t6934;
  double t6936;
  double t8384;
  double t8387;
  double t8388;
  double t8394;
  double t6767;
  double t6770;
  double t7052;
  double t7053;
  double t7085;
  double t7088;
  double t6815;
  double t6825;
  t167 = Cos(var1[3]);
  t213 = Sin(var1[3]);
  t678 = Cos(var1[4]);
  t719 = Sin(var1[4]);
  t718 = -1.*var2[2]*t678*t213;
  t725 = -1.*var2[1]*t719;
  t735 = -1.*var1[1]*t678;
  t772 = var1[2]*t213*t719;
  t1301 = Cos(var1[5]);
  t1340 = Sin(var1[5]);
  t816 = var2[2]*t167*t678;
  t825 = var2[0]*t719;
  t840 = var1[0]*t678;
  t861 = -1.*var1[2]*t167*t719;
  t1394 = t167*t1301*t719;
  t1400 = t213*t1340;
  t1405 = t1394 + t1400;
  t1606 = -1.*t167*t1301;
  t1612 = -1.*t213*t719*t1340;
  t1614 = t1606 + t1612;
  t882 = -1.*var2[1]*t167*t678;
  t887 = var2[0]*t678*t213;
  t982 = var1[0]*t167*t678;
  t994 = var1[1]*t678*t213;
  t1010 = t982 + t994;
  t1028 = var2[3]*t1010;
  t1029 = var1[1]*t167*t719;
  t1056 = -1.*var1[0]*t213*t719;
  t1137 = -1.*var2[3]*t678*t213;
  t1151 = -1.*var2[4]*t167*t719;
  t1163 = t1137 + t1151;
  t1166 = var2[3]*t167*t678;
  t1176 = -1.*var2[4]*t213*t719;
  t1265 = t1166 + t1176;
  t1270 = -1.*var2[4]*t678;
  t1992 = Cos(var1[6]);
  t1828 = t1301*t213*t719;
  t1835 = -1.*t167*t1340;
  t1838 = t1828 + t1835;
  t2010 = Sin(var1[6]);
  t1758 = -1.*t1301*t213;
  t1777 = t167*t719*t1340;
  t1783 = t1758 + t1777;
  t2115 = -1.*t1992;
  t2116 = 1. + t2115;
  t2009 = t678*t1301*t1992;
  t2020 = -1.*t678*t1340*t2010;
  t2026 = t2009 + t2020;
  t1501 = -1.*t1301*t213*t719;
  t1510 = t167*t1340;
  t1558 = t1501 + t1510;
  t2125 = 0.07996*t2116;
  t2126 = -0.135*t2010;
  t2136 = 0. + t2125 + t2126;
  t2141 = 0.135*t2116;
  t2182 = 0.07996*t2010;
  t2188 = 0. + t2141 + t2182;
  t2065 = t167*t1301;
  t2068 = t213*t719*t1340;
  t2071 = t2065 + t2068;
  t2288 = -1.*var1[2];
  t2311 = -1.*t678*t1301*t2136;
  t2356 = -1.*t678*t1340*t2188;
  t2390 = 0. + t2288 + t2311 + t2356;
  t2221 = t1992*t1614;
  t2391 = t1992*t1405;
  t1435 = t1301*t213;
  t1442 = -1.*t167*t719*t1340;
  t1450 = t1435 + t1442;
  t2497 = t1838*t2136;
  t2502 = t2071*t2188;
  t2510 = 0. + var1[1] + t2497 + t2502;
  t2685 = t1992*t1838;
  t2695 = -1.*t2071*t2010;
  t2696 = t2685 + t2695;
  t2514 = -1.*t678*t1992*t1340;
  t2522 = -1.*t678*t1301*t2010;
  t2535 = t2514 + t2522;
  t2539 = t2510*t2535;
  t2607 = -1.*t1838*t2010;
  t2462 = -1.*t1783*t2010;
  t2464 = t2391 + t2462;
  t2935 = -0.135*t1992;
  t2939 = t2935 + t2182;
  t2946 = 0.07996*t1992;
  t2958 = 0.135*t2010;
  t2959 = t2946 + t2958;
  t2862 = -1.*t1301*t1992*t719;
  t2873 = t719*t1340*t2010;
  t2882 = t2862 + t2873;
  t3074 = t678*t1301*t2136;
  t3079 = t678*t1340*t2188;
  t3082 = 0. + var1[2] + t3074 + t3079;
  t3092 = -1.*var1[0];
  t3093 = -1.*t1405*t2136;
  t3095 = -1.*t1783*t2188;
  t3098 = 0. + t3092 + t3093 + t3095;
  t3139 = t3098*t2535;
  t3161 = -1.*t1405*t2010;
  t3084 = t167*t678*t1301*t1992;
  t3085 = -1.*t167*t678*t1340*t2010;
  t3087 = t3084 + t3085;
  t2138 = t1405*t2136;
  t2192 = t1783*t2188;
  t2840 = t678*t1301*t1992*t213;
  t2848 = -1.*t678*t213*t1340*t2010;
  t2850 = t2840 + t2848;
  t3297 = 0. + var1[0] + t2138 + t2192;
  t2628 = t2221 + t2607;
  t3271 = -1.*var1[1];
  t3281 = -1.*t1838*t2136;
  t3284 = -1.*t2071*t2188;
  t3289 = 0. + t3271 + t3281 + t3284;
  t3159 = t1992*t1450;
  t3165 = t3159 + t3161;
  t3130 = t1992*t1558;
  t3131 = -1.*t1614*t2010;
  t3133 = t3130 + t3131;
  t3349 = 0.08055*t2026;
  t2981 = -1.*t1992*t2071;
  t2985 = t2981 + t2607;
  t3202 = -1.*t1992*t1783;
  t3208 = t3202 + t3161;
  t3587 = Cos(var1[7]);
  t3614 = Sin(var1[7]);
  t3588 = t1992*t2071;
  t3592 = t1838*t2010;
  t3604 = t3588 + t3592;
  t3661 = -1.*t3587;
  t3668 = 1. + t3661;
  t3184 = t1614*t2010;
  t3185 = t2685 + t3184;
  t3635 = t678*t1992*t1340;
  t3637 = t678*t1301*t2010;
  t3638 = t3635 + t3637;
  t3670 = 0.135*t3668;
  t3682 = 0.08055*t3614;
  t3686 = 0. + t3670 + t3682;
  t3704 = -0.08055*t3668;
  t3715 = 0.135*t3614;
  t3722 = 0. + t3704 + t3715;
  t2636 = t1450*t2010;
  t2638 = t2391 + t2636;
  t2648 = t678*t1340*t2136;
  t2653 = -1.*t678*t1301*t2188;
  t3608 = t3587*t3604;
  t3620 = -1.*t678*t213*t3614;
  t3623 = t3608 + t3620;
  t2565 = t1614*t2136;
  t2575 = t1838*t2188;
  t3697 = t3604*t3686;
  t3726 = t678*t213*t3722;
  t3727 = 0. + var1[1] + t2497 + t2502 + t3697 + t3726;
  t3736 = -1.*t3587*t2026*t3727;
  t3745 = -1.*t3638*t3686;
  t3763 = t719*t3722;
  t3772 = 0. + t2288 + t2311 + t2356 + t3745 + t3763;
  t2996 = -1.*t678*t1301*t2939;
  t3001 = -1.*t678*t1340*t2959;
  t3793 = -1.*t2026*t3686;
  t2945 = t1838*t2939;
  t2962 = t2071*t2959;
  t3829 = t3587*t3638;
  t3838 = t719*t3614;
  t3842 = t3829 + t3838;
  t3258 = -1.*t1992*t719*t1340;
  t3261 = -1.*t1301*t719*t2010;
  t3267 = t3258 + t3261;
  t2899 = t1301*t719*t2136;
  t2915 = t719*t1340*t2188;
  t2785 = t678*t1301*t213*t2136;
  t2824 = t678*t213*t1340*t2188;
  t3049 = t678*t1992*t213*t1340;
  t3051 = t678*t1301*t213*t2010;
  t3052 = t3049 + t3051;
  t2744 = t167*t678*t1992*t1340;
  t2760 = t167*t678*t1301*t2010;
  t2763 = t2744 + t2760;
  t3123 = t1992*t1783;
  t3124 = t1405*t2010;
  t3125 = t3123 + t3124;
  t4148 = 0.135*t3587;
  t4149 = -0.08055*t3614;
  t4151 = t4148 + t4149;
  t4156 = 0.08055*t3587;
  t4172 = t4156 + t3715;
  t4114 = t3587*t3125;
  t4124 = -1.*t167*t678*t3614;
  t4139 = t4114 + t4124;
  t4267 = -1.*t678*t3587*t213;
  t2238 = t1558*t2010;
  t2239 = t2221 + t2238;
  t3173 = -1.*t678*t1340*t2136;
  t3174 = t678*t1301*t2188;
  t3143 = -1.*t1450*t2136;
  t3154 = -1.*t1405*t2188;
  t4433 = -1.*t3125*t3686;
  t4435 = -1.*t167*t678*t3722;
  t4439 = 0. + t3092 + t3093 + t3095 + t4433 + t4435;
  t4444 = -1.*t3587*t2026*t4439;
  t4445 = t3638*t3686;
  t4467 = -1.*t719*t3722;
  t4470 = 0. + var1[2] + t3074 + t3079 + t4445 + t4467;
  t3210 = t678*t1301*t2939;
  t3214 = t678*t1340*t2959;
  t4485 = t2026*t3686;
  t3192 = -1.*t1405*t2939;
  t3195 = -1.*t1783*t2959;
  t3966 = t3587*t3267;
  t3968 = t678*t3614;
  t3979 = t3966 + t3968;
  t3104 = -1.*t1301*t719*t2136;
  t3105 = -1.*t719*t1340*t2188;
  t3061 = -1.*t167*t678*t1301*t2136;
  t3064 = -1.*t167*t678*t1340*t2188;
  t4241 = t3587*t719;
  t4248 = -1.*t3638*t3614;
  t4254 = t4241 + t4248;
  t2994 = 0.08055*t2464;
  t3118 = -1.*t1558*t2136;
  t3119 = -1.*t1614*t2188;
  t4865 = t678*t213*t3614;
  t4318 = t3125*t3686;
  t4326 = t167*t678*t3722;
  t3358 = -1.*t1614*t2136;
  t3366 = -1.*t1838*t2188;
  t3378 = t1450*t2136;
  t3379 = t1405*t2188;
  t5007 = 0.08055*t2535;
  t5021 = 0. + var1[0] + t2138 + t2192 + t4318 + t4326;
  t5036 = -1.*t3604*t3686;
  t5052 = -1.*t678*t213*t3722;
  t5056 = 0. + t3271 + t3281 + t3284 + t5036 + t5052;
  t5066 = -0.01004*t2026*t3614;
  t3431 = -1.*t1838*t2939;
  t3432 = -1.*t2071*t2959;
  t3460 = t1405*t2939;
  t3468 = t1783*t2959;
  t3402 = t1558*t2136;
  t3403 = t1614*t2188;
  t4857 = t3587*t2239;
  t4879 = t4857 + t4865;
  t3301 = -1.*t678*t1301*t213*t2136;
  t3303 = -1.*t678*t213*t1340*t2188;
  t3315 = t167*t678*t1301*t2136;
  t3321 = t167*t678*t1340*t2188;
  t4661 = t3587*t2763;
  t4665 = t167*t719*t3614;
  t4680 = t4661 + t4665;
  t4060 = t3587*t3052;
  t4062 = t213*t719*t3614;
  t4065 = t4060 + t4062;
  t4273 = -1.*t3604*t3614;
  t4275 = t4267 + t4273;
  t4835 = -1.*t167*t678*t3587;
  t4837 = -1.*t3125*t3614;
  t4848 = t4835 + t4837;
  t4922 = t167*t678*t3587;
  t4923 = t3125*t3614;
  t4932 = t4922 + t4923;
  t4381 = -1.*t3587*t3125;
  t4388 = t167*t678*t3614;
  t4394 = t4381 + t4388;
  t3626 = var2[2]*t3623;
  t3640 = -1.*t3587*t3638;
  t3650 = -1.*t719*t3614;
  t3654 = t3640 + t3650;
  t3657 = var2[1]*t3654;
  t4203 = t678*t213*t4151;
  t4219 = t3604*t4172;
  t5591 = Cos(var1[8]);
  t4152 = t719*t4151;
  t4173 = -1.*t3638*t4172;
  t5602 = -1.*t5591;
  t5616 = 1. + t5602;
  t5624 = -0.08055*t5616;
  t5660 = Sin(var1[8]);
  t5668 = -0.01004*t5660;
  t5669 = 0. + t5624 + t5668;
  t5581 = -1.*t3587*t719;
  t5584 = t3638*t3614;
  t5585 = t5581 + t5584;
  t5530 = t678*t3587*t213;
  t5531 = t3604*t3614;
  t5535 = t5530 + t5531;
  t5743 = -0.01004*t5616;
  t5758 = 0.08055*t5660;
  t5762 = 0. + t5743 + t5758;
  t5733 = -1.*t5585*t5669;
  t5767 = -1.*t2026*t5762;
  t5770 = 0. + t2288 + t2311 + t2356 + t3745 + t3763 + t5733 + t5767;
  t3821 = t3185*t3686;
  t5772 = t5535*t5669;
  t5779 = t2696*t5762;
  t5784 = 0. + var1[1] + t2497 + t2502 + t3697 + t3726 + t5772 + t5779;
  t5832 = -1.*t2026*t3614*t5669;
  t5833 = -1.*t2535*t5762;
  t3916 = t2696*t3686;
  t5871 = -1.*t3587*t2026*t5784;
  t4023 = t3052*t3686;
  t4038 = -1.*t213*t719*t3722;
  t4700 = -1.*t3587*t213*t719;
  t4701 = t3052*t3614;
  t4703 = t4700 + t4701;
  t3987 = -1.*t3267*t3686;
  t3992 = t678*t3722;
  t5283 = -1.*t678*t3587;
  t5287 = t3267*t3614;
  t5288 = t5283 + t5287;
  t4081 = -1.*t167*t3587*t719;
  t4083 = t2763*t3614;
  t4085 = t4081 + t4083;
  t4352 = t2239*t3614;
  t4355 = t4267 + t4352;
  t6167 = -0.01004*t5591;
  t6175 = -0.08055*t5660;
  t6178 = t6167 + t6175;
  t6185 = 0.08055*t5591;
  t6194 = t6185 + t5668;
  t4408 = var2[2]*t4394;
  t4422 = var2[0]*t3842;
  t4802 = -1.*t167*t678*t4151;
  t4809 = -1.*t3125*t4172;
  t4784 = -1.*t719*t4151;
  t4792 = t3638*t4172;
  t6314 = t5585*t5669;
  t6315 = t2026*t5762;
  t6317 = 0. + var1[2] + t3074 + t3079 + t4445 + t4467 + t6314 + t6315;
  t4551 = -1.*t2638*t3686;
  t6325 = -1.*t4932*t5669;
  t6329 = -1.*t2464*t5762;
  t6330 = 0. + t3092 + t3093 + t3095 + t4433 + t4435 + t6325 + t6329;
  t6348 = t2026*t3614*t5669;
  t6353 = t2535*t5762;
  t4591 = -1.*t2464*t3686;
  t6387 = -1.*t3587*t2026*t6330;
  t4649 = -1.*t2763*t3686;
  t4651 = t167*t719*t3722;
  t4639 = t3267*t3686;
  t4640 = -1.*t678*t3722;
  t4903 = -1.*t2239*t3686;
  t6270 = t5591*t2464;
  t6275 = -1.*t4932*t5660;
  t6276 = t6270 + t6275;
  t4960 = var2[1]*t4139;
  t4963 = -1.*t3587*t3604;
  t5004 = t4963 + t4865;
  t5006 = var2[0]*t5004;
  t6072 = t4932*t5669;
  t6073 = t2464*t5762;
  t5199 = t2239*t3686;
  t5322 = t167*t678*t4151;
  t5323 = t3125*t4172;
  t5316 = -1.*t678*t213*t4151;
  t5319 = -1.*t3604*t4172;
  t6756 = 0. + var1[0] + t2138 + t2192 + t4318 + t4326 + t6072 + t6073;
  t6780 = -1.*t5535*t5669;
  t6788 = -1.*t2696*t5762;
  t6799 = 0. + t3271 + t3281 + t3284 + t5036 + t5052 + t6780 + t6788;
  t5070 = -1.*t3185*t3686;
  t5077 = t2638*t3686;
  t5153 = -1.*t2696*t3686;
  t5168 = t2464*t3686;
  t6877 = t5591*t2026*t3614;
  t6880 = t2535*t5660;
  t6894 = t6877 + t6880;
  t6906 = -0.13004*t6894;
  t6908 = t5591*t2535;
  t6910 = -1.*t2026*t3614*t5660;
  t6916 = t6908 + t6910;
  t6918 = 0.08055*t6916;
  t5266 = t2763*t3686;
  t5271 = -1.*t167*t719*t3722;
  t5242 = -1.*t3052*t3686;
  t5246 = t213*t719*t3722;
  t5435 = -1.*var2[5]*t3587*t2638;
  t5443 = -1.*var2[6]*t3587*t2464;
  t5444 = -1.*t3587*t2239;
  t5447 = t5444 + t3620;
  t5448 = var2[3]*t5447;
  t5462 = -1.*t3587*t2763;
  t5464 = -1.*t167*t719*t3614;
  t5470 = t5462 + t5464;
  t5481 = var2[4]*t5470;
  t5484 = var2[7]*t4932;
  t5486 = t5435 + t5443 + t5448 + t5481 + t5484;
  t5491 = -1.*var2[5]*t3587*t3185;
  t5493 = -1.*var2[6]*t3587*t2696;
  t5499 = var2[3]*t4394;
  t5501 = -1.*t3587*t3052;
  t5504 = -1.*t213*t719*t3614;
  t5510 = t5501 + t5504;
  t5515 = var2[4]*t5510;
  t5544 = var2[7]*t5535;
  t5559 = t5491 + t5493 + t5499 + t5515 + t5544;
  t5562 = -1.*var2[5]*t3587*t2026;
  t5569 = -1.*var2[6]*t3587*t2026;
  t5571 = -1.*t3587*t3267;
  t5575 = -1.*t678*t3614;
  t5576 = t5571 + t5575;
  t5578 = var2[4]*t5576;
  t5587 = var2[7]*t5585;
  t5590 = t5562 + t5569 + t5578 + t5587;
  t7171 = Cos(var1[9]);
  t7177 = -1.*t7171;
  t7181 = 1. + t7177;
  t7186 = Sin(var1[9]);
  t5874 = t5591*t2638*t3614;
  t5884 = t3165*t5660;
  t5885 = t5874 + t5884;
  t5894 = t5591*t3165;
  t5897 = -1.*t2638*t3614*t5660;
  t5905 = t5894 + t5897;
  t5849 = t3185*t3614*t5669;
  t5851 = t2628*t5762;
  t7185 = -0.08055*t7181;
  t7190 = -0.13004*t7186;
  t7199 = 0. + t7185 + t7190;
  t6389 = t5591*t3185*t3614;
  t6390 = t2628*t5660;
  t6402 = t6389 + t6390;
  t7202 = -0.13004*t7181;
  t7204 = 0.08055*t7186;
  t7207 = 0. + t7202 + t7204;
  t6408 = t5591*t2628;
  t6409 = -1.*t3185*t3614*t5660;
  t6420 = t6408 + t6409;
  t7029 = t5591*t2026;
  t7033 = -1.*t5585*t5660;
  t7034 = t7029 + t7033;
  t6650 = t5591*t2696;
  t6652 = -1.*t5535*t5660;
  t6656 = t6650 + t6652;
  t7200 = -1.*t7199*t6894;
  t7214 = -1.*t7207*t6916;
  t5944 = t5591*t2464*t3614;
  t5950 = t3208*t5660;
  t5953 = t5944 + t5950;
  t5964 = t5591*t3208;
  t5968 = -1.*t2464*t3614*t5660;
  t5981 = t5964 + t5968;
  t5929 = t2696*t3614*t5669;
  t5931 = t2985*t5762;
  t6499 = t5591*t2696*t3614;
  t6500 = t2985*t5660;
  t6505 = t6499 + t6500;
  t6511 = t5591*t2985;
  t6525 = -1.*t2696*t3614*t5660;
  t6528 = t6511 + t6525;
  t7267 = t5591*t5585;
  t7277 = t2026*t5660;
  t7278 = t7267 + t7277;
  t7284 = -1.*t7199*t7278;
  t7286 = -1.*t7207*t7034;
  t7287 = 0. + t2288 + t2311 + t2356 + t3745 + t3763 + t5733 + t5767 + t7284 + t7286;
  t7299 = t5591*t5535;
  t7319 = t2696*t5660;
  t7320 = t7299 + t7319;
  t7324 = t7199*t7320;
  t7325 = t7207*t6656;
  t7326 = 0. + var1[1] + t2497 + t2502 + t3697 + t3726 + t5772 + t5779 + t7324 + t7325;
  t7327 = -1.*t3587*t2026*t7326;
  t6033 = t5591*t4085;
  t6034 = t3087*t5660;
  t6036 = t6033 + t6034;
  t6039 = t5591*t3087;
  t6043 = -1.*t4085*t5660;
  t6047 = t6039 + t6043;
  t5995 = t4703*t5669;
  t5997 = t2850*t5762;
  t6573 = t5591*t4703;
  t6576 = t2850*t5660;
  t6577 = t6573 + t6576;
  t6581 = t5591*t2850;
  t6587 = -1.*t4703*t5660;
  t6588 = t6581 + t6587;
  t6013 = -1.*t5288*t5669;
  t6015 = -1.*t2882*t5762;
  t7102 = t5591*t5288;
  t7104 = t2882*t5660;
  t7113 = t7102 + t7104;
  t7136 = t5591*t2882;
  t7141 = -1.*t5288*t5660;
  t7149 = t7136 + t7141;
  t5672 = t3623*t5669;
  t5693 = -1.*t3842*t5669;
  t6092 = t5591*t4355;
  t6106 = t3133*t5660;
  t6108 = t6092 + t6106;
  t6125 = t5591*t3133;
  t6129 = -1.*t4355*t5660;
  t6133 = t6125 + t6129;
  t6684 = t5591*t4932;
  t6688 = t2464*t5660;
  t6689 = t6684 + t6688;
  t6183 = -1.*t5585*t6178;
  t6218 = -1.*t2026*t6194;
  t7009 = -1.*t5591*t5585;
  t7010 = -1.*t2026*t5660;
  t7014 = t7009 + t7010;
  t6224 = t5535*t6178;
  t6230 = t2696*t6194;
  t6634 = -1.*t5591*t5535;
  t6642 = -1.*t2696*t5660;
  t6644 = t6634 + t6642;
  t6243 = -1.*t5591*t4932;
  t6250 = -1.*t2464*t5660;
  t6252 = t6243 + t6250;
  t7702 = -0.13004*t7171;
  t7705 = -0.08055*t7186;
  t7714 = t7702 + t7705;
  t7716 = 0.08055*t7171;
  t7726 = t7716 + t7190;
  t7656 = t7171*t6276;
  t7669 = -1.*t7186*t6276;
  t6606 = t5585*t6178;
  t6610 = t2026*t6194;
  t6618 = -1.*t4932*t6178;
  t6624 = -1.*t2464*t6194;
  t7813 = t7171*t6656;
  t7828 = -1.*t7186*t6656;
  t6365 = -1.*t2638*t3614*t5669;
  t6378 = -1.*t3165*t5762;
  t7899 = t7199*t6894;
  t7900 = t7207*t6916;
  t6481 = -1.*t2464*t3614*t5669;
  t6482 = -1.*t3208*t5762;
  t7951 = t7199*t7278;
  t7952 = t7207*t7034;
  t7954 = 0. + var1[2] + t3074 + t3079 + t4445 + t4467 + t6314 + t6315 + t7951 + t7952;
  t7960 = -1.*t7199*t6689;
  t7962 = -1.*t7207*t6276;
  t7964 = 0. + t3092 + t3093 + t3095 + t4433 + t4435 + t6325 + t6329 + t7960 + t7962;
  t7967 = -1.*t3587*t2026*t7964;
  t6535 = -1.*t4085*t5669;
  t6536 = -1.*t3087*t5762;
  t6550 = t5288*t5669;
  t6552 = t2882*t5762;
  t6299 = -1.*t4139*t5669;
  t6309 = t3842*t5669;
  t6664 = -1.*t4355*t5669;
  t6668 = -1.*t3133*t5762;
  t7764 = -1.*t7186*t6689;
  t7765 = t7764 + t7656;
  t6993 = -1.*t5535*t6178;
  t6995 = -1.*t2696*t6194;
  t6976 = t4932*t6178;
  t6979 = t2464*t6194;
  t8217 = t7171*t7034;
  t8227 = -1.*t7186*t7034;
  t6863 = t2638*t3614*t5669;
  t6864 = t3165*t5762;
  t6849 = -1.*t3185*t3614*t5669;
  t6851 = -1.*t2628*t5762;
  t7590 = t7199*t6689;
  t7593 = t7207*t6276;
  t8332 = -1.*t7186*t6894;
  t8334 = t7171*t6916;
  t8335 = t8332 + t8334;
  t8337 = 0.03315*t8335;
  t8347 = t7171*t6894;
  t8355 = t7186*t6916;
  t8363 = t8347 + t8355;
  t8366 = -0.19074*t8363;
  t6950 = t2464*t3614*t5669;
  t6951 = t3208*t5762;
  t6934 = -1.*t2696*t3614*t5669;
  t6936 = -1.*t2985*t5762;
  t8384 = -1.*t7199*t7320;
  t8387 = -1.*t7207*t6656;
  t8388 = 0. + t3271 + t3281 + t3284 + t5036 + t5052 + t6780 + t6788 + t8384 + t8387;
  t8394 = 0. + var1[0] + t2138 + t2192 + t4318 + t4326 + t6072 + t6073 + t7590 + t7593;
  t6767 = t4355*t5669;
  t6770 = t3133*t5762;
  t7052 = t4085*t5669;
  t7053 = t3087*t5762;
  t7085 = -1.*t4703*t5669;
  t7088 = -1.*t2850*t5762;
  t6815 = t4139*t5669;
  t6825 = -1.*t3623*t5669;
  p_output1[0]=0;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=0;
  p_output1[4]=0;
  p_output1[5]=0;
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=0;
  p_output1[10]=0;
  p_output1[11]=0;
  p_output1[12]=0;
  p_output1[13]=0;
  p_output1[14]=0;
  p_output1[15]=0;
  p_output1[16]=0;
  p_output1[17]=0;
  p_output1[18]=var2[1];
  p_output1[19]=-1.*var2[0];
  p_output1[20]=0;
  p_output1[21]=0;
  p_output1[22]=0;
  p_output1[23]=0;
  p_output1[24]=-1.*t167*var2[2] + t213*var1[2]*var2[3];
  p_output1[25]=-1.*t213*var2[2] - 1.*t167*var1[2]*var2[3];
  p_output1[26]=t167*var2[0] + t213*var2[1] + (-1.*t213*var1[0] + t167*var1[1])*var2[3];
  p_output1[27]=-1.*t167*var2[3];
  p_output1[28]=-1.*t213*var2[3];
  p_output1[29]=0;
  p_output1[30]=t718 + t725 - 1.*t167*t678*var1[2]*var2[3] + (t735 + t772)*var2[4];
  p_output1[31]=t816 + t825 - 1.*t213*t678*var1[2]*var2[3] + (t840 + t861)*var2[4];
  p_output1[32]=t1028 + t882 + t887 + (t1029 + t1056)*var2[4];
  p_output1[33]=t1163;
  p_output1[34]=t1265;
  p_output1[35]=t1270;
  p_output1[36]=t718 + t725 + (-0.135*t1558 + 0.07996*t1614 - 1.*t167*t678*var1[2])*var2[3] + (-0.135*t1301*t167*t678 + 0.07996*t1340*t167*t678 + t735 + t772)*var2[4] + (0.07996*t1405 - 0.135*t1450)*var2[5];
  p_output1[37]=t816 + t825 + (-0.135*t1405 + 0.07996*t1783 - 1.*t213*t678*var1[2])*var2[3] + (-0.135*t1301*t213*t678 + 0.07996*t1340*t213*t678 + t840 + t861)*var2[4] + (-0.135*t1614 + 0.07996*t1838)*var2[5];
  p_output1[38]=t1028 + t882 + t887 + (t1029 + t1056 + 0.135*t1301*t719 - 0.07996*t1340*t719)*var2[4] + (0.07996*t1301*t678 + 0.135*t1340*t678)*var2[5];
  p_output1[39]=t1163;
  p_output1[40]=t1265;
  p_output1[41]=t1270;
  p_output1[42]=t2026*var2[1] + (-1.*t1838*t1992 + t2010*t2071)*var2[2] + (t2026*(t2138 + t2192) + 0.08055*t2239 + t2390*t2464 - 0.135*t213*t678)*var2[3] + (0.08055*t2763 + t2026*(t2785 + t2824) + t2390*t2850 + t2510*t2882 + t2696*(t2899 + t2915) - 0.135*t167*t719)*var2[4] + (t2539 + t2026*(t2565 + t2575) + t2390*t2628 + 0.08055*t2638 + (t2648 + t2653)*t2696)*var2[5] + (t2539 + t2026*(t2945 + t2962) + t2390*t2985 + t2994 + t2696*(t2996 + t3001))*var2[6];
  p_output1[43]=(-1.*t1301*t1992*t678 + t1340*t2010*t678)*var2[0] + t2464*var2[2] + (t2026*(t3118 + t3119) + 0.08055*t3125 + t3082*t3133 + 0.135*t167*t678)*var2[3] + (0.08055*t3052 + t2026*(t3061 + t3064) + t3082*t3087 + t2882*t3098 + t2464*(t3104 + t3105) - 0.135*t213*t719)*var2[4] + (t3139 + t2026*(t3143 + t3154) + t3082*t3165 + t2464*(t3173 + t3174) + 0.08055*t3185)*var2[5] + (0.08055*t2696 + t3139 + t2026*(t3192 + t3195) + t3082*t3208 + t2464*(t3210 + t3214))*var2[6];
  p_output1[44]=t2696*var2[0] + (-1.*t1405*t1992 + t1783*t2010)*var2[1] + (t2464*(t3093 + t3095) + t3133*t3289 + t2464*t3297 + t2696*(t3402 + t3403))*var2[3] + (0.08055*t3267 + t3087*t3289 + t2850*t3297 + t2464*(t3301 + t3303) + t2696*(t3315 + t3321) - 0.135*t678)*var2[4] + (t3165*t3289 + t2628*t3297 + t3349 + t2464*(t3358 + t3366) + t2696*(t3378 + t3379))*var2[5] + (t3208*t3289 + t2985*t3297 + t3349 + t2464*(t3431 + t3432) + t2696*(t3460 + t3468))*var2[6];
  p_output1[45]=t3133*var2[3] + t3087*var2[4] + t3165*var2[5] + t3208*var2[6];
  p_output1[46]=t2464*var2[3] + t2850*var2[4] + t2628*var2[5] + t2985*var2[6];
  p_output1[47]=t2882*var2[4] + t2535*var2[5] + t2535*var2[6];
  p_output1[48]=t3626 + t3657 + (0.08055*t3133 - 1.*t3772*t4139 - 1.*t3842*(t2138 + t2192 + t4318 + t4326) - 0.01004*t4355)*var2[3] + (0.08055*t3087 - 1.*t3727*t3979 - 1.*t3623*(t2899 + t2915 + t3987 + t3992) - 1.*t3842*(t2785 + t2824 + t4023 + t4038) - 1.*t3772*t4065 - 0.01004*t4085)*var2[4] + (0.08055*t3165 - 0.01004*t2638*t3614 + t3736 - 1.*t3185*t3587*t3772 - 1.*t3623*(t2648 + t2653 + t3793) - 1.*(t2565 + t2575 + t3821)*t3842)*var2[5] + (0.08055*t3208 - 0.01004*t2464*t3614 + t3736 - 1.*t2696*t3587*t3772 - 1.*t3623*(t2996 + t3001 + t3793) - 1.*t3842*(t2945 + t2962 + t3916))*var2[6] + (-0.01004*t4139 - 1.*t3623*(t4152 + t4173) - 1.*t3842*(t4203 + t4219) - 1.*t3727*t4254 - 1.*t3772*t4275)*var2[7];
  p_output1[49]=t4408 + t4422 + (t2994 - 1.*t4470*t4879 - 1.*t3842*(t3118 + t3119 + t3726 + t4903) - 0.01004*t4932)*var2[3] + (0.08055*t2850 - 1.*t3979*t4439 - 1.*t4139*(t3104 + t3105 + t4639 + t4640) - 1.*t3842*(t3061 + t3064 + t4649 + t4651) - 1.*t4470*t4680 - 0.01004*t4703)*var2[4] + (0.08055*t2628 - 0.01004*t3185*t3614 + t4444 - 1.*t2638*t3587*t4470 - 1.*t4139*(t3173 + t3174 + t4485) - 1.*t3842*(t3143 + t3154 + t4551))*var2[5] + (0.08055*t2985 - 0.01004*t2696*t3614 + t4444 - 1.*t2464*t3587*t4470 - 1.*t4139*(t3210 + t3214 + t4485) - 1.*t3842*(t3192 + t3195 + t4591))*var2[6] + (-0.01004*t3623 - 1.*t4254*t4439 - 1.*t4139*(t4784 + t4792) - 1.*t3842*(t4802 + t4809) - 1.*t4470*t4848)*var2[7];
  p_output1[50]=t4960 + t5006 + (-1.*t4139*(t3093 + t3095 + t4433 + t4435) - 1.*t4139*t5021 - 1.*t4879*t5056 - 1.*t3623*(t3402 + t3403 + t5052 + t5199))*var2[3] + (0.08055*t2882 - 1.*t4065*t5021 - 1.*t4680*t5056 - 1.*t4139*(t3301 + t3303 + t5242 + t5246) - 1.*t3623*(t3315 + t3321 + t5266 + t5271) - 0.01004*t5288)*var2[4] + (t5007 - 1.*t3185*t3587*t5021 - 1.*t2638*t3587*t5056 + t5066 - 1.*t4139*(t3358 + t3366 + t5070) - 1.*t3623*(t3378 + t3379 + t5077))*var2[5] + (t5007 - 1.*t2696*t3587*t5021 - 1.*t2464*t3587*t5056 + t5066 - 1.*t4139*(t3431 + t3432 + t5153) - 1.*t3623*(t3460 + t3468 + t5168))*var2[6] + (-0.01004*t3842 - 1.*t4275*t5021 - 1.*t4848*t5056 - 1.*t4139*(t5316 + t5319) - 1.*t3623*(t5322 + t5323))*var2[7];
  p_output1[51]=t5486;
  p_output1[52]=t5559;
  p_output1[53]=t5590;
  p_output1[54]=t3626 + t3657 + (-1.*t4139*t5770 - 1.*t3842*(t2138 + t2192 + t4318 + t4326 + t6072 + t6073) - 0.13004*t6108 + 0.08055*t6133)*var2[3] + (-1.*t4065*t5770 - 1.*t3979*t5784 - 1.*t3842*(t2785 + t2824 + t4023 + t4038 + t5995 + t5997) - 1.*t3623*(t2899 + t2915 + t3987 + t3992 + t6013 + t6015) - 0.13004*t6036 + 0.08055*t6047)*var2[4] + (-1.*t3185*t3587*t5770 - 1.*t3623*(t2648 + t2653 + t3793 + t5832 + t5833) - 1.*t3842*(t2565 + t2575 + t3821 + t5849 + t5851) + t5871 - 0.13004*t5885 + 0.08055*t5905)*var2[5] + (-1.*t2696*t3587*t5770 - 1.*t3623*(t2996 + t3001 + t3793 + t5832 + t5833) + t5871 - 1.*t3842*(t2945 + t2962 + t3916 + t5929 + t5931) - 0.13004*t5953 + 0.08055*t5981)*var2[6] + (-0.13004*t4139*t5591 - 0.08055*t4139*t5660 - 1.*t3842*(t4203 + t4219 + t5672) - 1.*t3623*(t4152 + t4173 + t5693) - 1.*t4275*t5770 - 1.*t4254*t5784)*var2[7] + (-1.*t3623*(t6183 + t6218) - 1.*t3842*(t6224 + t6230) + 0.08055*t6252 - 0.13004*t6276)*var2[8];
  p_output1[55]=t4408 + t4422 + (0.08055*t6276 - 1.*t4879*t6317 - 1.*t3842*(t3118 + t3119 + t3726 + t4903 + t6664 + t6668) - 0.13004*t6689)*var2[3] + (-1.*t4680*t6317 - 1.*t3979*t6330 - 1.*t3842*(t3061 + t3064 + t4649 + t4651 + t6535 + t6536) - 1.*t4139*(t3104 + t3105 + t4639 + t4640 + t6550 + t6552) - 0.13004*t6577 + 0.08055*t6588)*var2[4] + (-1.*t2638*t3587*t6317 - 1.*t4139*(t3173 + t3174 + t4485 + t6348 + t6353) - 1.*t3842*(t3143 + t3154 + t4551 + t6365 + t6378) + t6387 - 0.13004*t6402 + 0.08055*t6420)*var2[5] + (-1.*t2464*t3587*t6317 - 1.*t4139*(t3210 + t3214 + t4485 + t6348 + t6353) + t6387 - 1.*t3842*(t3192 + t3195 + t4591 + t6481 + t6482) - 0.13004*t6505 + 0.08055*t6528)*var2[6] + (-0.13004*t3623*t5591 - 0.08055*t3623*t5660 - 1.*t3842*(t4802 + t4809 + t6299) - 1.*t4139*(t4784 + t4792 + t6309) - 1.*t4848*t6317 - 1.*t4254*t6330)*var2[7] + (-1.*t4139*(t6606 + t6610) - 1.*t3842*(t6618 + t6624) + 0.08055*t6644 - 0.13004*t6656)*var2[8];
  p_output1[56]=t4960 + t5006 + (-1.*t4139*(t3093 + t3095 + t4433 + t4435 + t6325 + t6329) - 1.*t4139*t6756 - 1.*t3623*(t3402 + t3403 + t5052 + t5199 + t6767 + t6770) - 1.*t4879*t6799)*var2[3] + (-1.*t4065*t6756 - 1.*t4680*t6799 - 1.*t3623*(t3315 + t3321 + t5266 + t5271 + t7052 + t7053) - 1.*t4139*(t3301 + t3303 + t5242 + t5246 + t7085 + t7088) - 0.13004*t7113 + 0.08055*t7149)*var2[4] + (-1.*t3185*t3587*t6756 - 1.*t2638*t3587*t6799 - 1.*t4139*(t3358 + t3366 + t5070 + t6849 + t6851) - 1.*t3623*(t3378 + t3379 + t5077 + t6863 + t6864) + t6906 + t6918)*var2[5] + (-1.*t2696*t3587*t6756 - 1.*t2464*t3587*t6799 + t6906 + t6918 - 1.*t4139*(t3431 + t3432 + t5153 + t6934 + t6936) - 1.*t3623*(t3460 + t3468 + t5168 + t6950 + t6951))*var2[6] + (-0.13004*t3842*t5591 - 0.08055*t3842*t5660 - 1.*t4275*t6756 - 1.*t4848*t6799 - 1.*t3623*(t5322 + t5323 + t6815) - 1.*t4139*(t5316 + t5319 + t6825))*var2[7] + (-1.*t3623*(t6976 + t6979) - 1.*t4139*(t6993 + t6995) + 0.08055*t7014 - 0.13004*t7034)*var2[8];
  p_output1[57]=t5486;
  p_output1[58]=t5559;
  p_output1[59]=t5590;
  p_output1[60]=t3626 + t3657 + (0.03315*(t6133*t7171 - 1.*t6108*t7186) - 0.19074*(t6108*t7171 + t6133*t7186) - 1.*t4139*t7287 - 1.*t3842*(t2138 + t2192 + t4318 + t4326 + t6072 + t6073 + t7590 + t7593))*var2[3] + (0.03315*(t6047*t7171 - 1.*t6036*t7186) - 0.19074*(t6036*t7171 + t6047*t7186) - 1.*t3842*(t2785 + t2824 + t4023 + t4038 + t5995 + t5997 + t6577*t7199 + t6588*t7207) - 1.*t3623*(t2899 + t2915 + t3987 + t3992 + t6013 + t6015 - 1.*t7113*t7199 - 1.*t7149*t7207) - 1.*t4065*t7287 - 1.*t3979*t7326)*var2[4] + (0.03315*(t5905*t7171 - 1.*t5885*t7186) - 0.19074*(t5885*t7171 + t5905*t7186) - 1.*t3842*(t2565 + t2575 + t3821 + t5849 + t5851 + t6402*t7199 + t6420*t7207) - 1.*t3623*(t2648 + t2653 + t3793 + t5832 + t5833 + t7200 + t7214) - 1.*t3185*t3587*t7287 + t7327)*var2[5] + (0.03315*(t5981*t7171 - 1.*t5953*t7186) - 0.19074*(t5953*t7171 + t5981*t7186) - 1.*t3842*(t2945 + t2962 + t3916 + t5929 + t5931 + t6505*t7199 + t6528*t7207) - 1.*t3623*(t2996 + t3001 + t3793 + t5832 + t5833 + t7200 + t7214) - 1.*t2696*t3587*t7287 + t7327)*var2[6] + (0.03315*(-1.*t4139*t5660*t7171 - 1.*t4139*t5591*t7186) - 0.19074*(t4139*t5591*t7171 - 1.*t4139*t5660*t7186) - 1.*t3842*(t4203 + t4219 + t5672 + t3623*t5591*t7199 - 1.*t3623*t5660*t7207) - 1.*t3623*(t4152 + t4173 + t5693 - 1.*t3842*t5591*t7199 + t3842*t5660*t7207) - 1.*t4275*t7287 - 1.*t4254*t7326)*var2[7] + (-1.*t3842*(t6224 + t6230 + t6656*t7199 + t6644*t7207) - 1.*t3623*(t6183 + t6218 - 1.*t7034*t7199 - 1.*t7014*t7207) - 0.19074*(t6252*t7186 + t7656) + 0.03315*(t6252*t7171 + t7669))*var2[8] + (0.03315*(-1.*t6689*t7171 + t7669) - 1.*t3842*(t7320*t7714 + t6656*t7726) - 1.*t3623*(-1.*t7278*t7714 - 1.*t7034*t7726) - 0.19074*t7765)*var2[9];
  p_output1[61]=t4408 + t4422 + (-0.19074*(t6689*t7171 + t6276*t7186) - 1.*t3842*(t3118 + t3119 + t3726 + t4903 + t6664 + t6668 - 1.*t6108*t7199 - 1.*t6133*t7207) + 0.03315*t7765 - 1.*t4879*t7954)*var2[3] + (0.03315*(t6588*t7171 - 1.*t6577*t7186) - 0.19074*(t6577*t7171 + t6588*t7186) - 1.*t3842*(t3061 + t3064 + t4649 + t4651 + t6535 + t6536 - 1.*t6036*t7199 - 1.*t6047*t7207) - 1.*t4139*(t3104 + t3105 + t4639 + t4640 + t6550 + t6552 + t7113*t7199 + t7149*t7207) - 1.*t4680*t7954 - 1.*t3979*t7964)*var2[4] + (0.03315*(t6420*t7171 - 1.*t6402*t7186) - 0.19074*(t6402*t7171 + t6420*t7186) - 1.*t3842*(t3143 + t3154 + t4551 + t6365 + t6378 - 1.*t5885*t7199 - 1.*t5905*t7207) - 1.*t4139*(t3173 + t3174 + t4485 + t6348 + t6353 + t7899 + t7900) - 1.*t2638*t3587*t7954 + t7967)*var2[5] + (0.03315*(t6528*t7171 - 1.*t6505*t7186) - 0.19074*(t6505*t7171 + t6528*t7186) - 1.*t3842*(t3192 + t3195 + t4591 + t6481 + t6482 - 1.*t5953*t7199 - 1.*t5981*t7207) - 1.*t4139*(t3210 + t3214 + t4485 + t6348 + t6353 + t7899 + t7900) - 1.*t2464*t3587*t7954 + t7967)*var2[6] + (0.03315*(-1.*t3623*t5660*t7171 - 1.*t3623*t5591*t7186) - 0.19074*(t3623*t5591*t7171 - 1.*t3623*t5660*t7186) - 1.*t4139*(t4784 + t4792 + t6309 + t3842*t5591*t7199 - 1.*t3842*t5660*t7207) - 1.*t3842*(t4802 + t4809 + t6299 - 1.*t4139*t5591*t7199 + t4139*t5660*t7207) - 1.*t4848*t7954 - 1.*t4254*t7964)*var2[7] + (-1.*t3842*(t6618 + t6624 - 1.*t6276*t7199 - 1.*t6252*t7207) - 1.*t4139*(t6606 + t6610 + t7034*t7199 + t7014*t7207) - 0.19074*(t6644*t7186 + t7813) + 0.03315*(t6644*t7171 + t7828))*var2[8] + (-1.*t3842*(-1.*t6689*t7714 - 1.*t6276*t7726) - 1.*t4139*(t7278*t7714 + t7034*t7726) - 0.19074*(-1.*t7186*t7320 + t7813) + 0.03315*(-1.*t7171*t7320 + t7828))*var2[9];
  p_output1[62]=t4960 + t5006 + (-1.*t3623*(t3402 + t3403 + t5052 + t5199 + t6767 + t6770 + t6108*t7199 + t6133*t7207) - 1.*t4139*(t3093 + t3095 + t4433 + t4435 + t6325 + t6329 + t7960 + t7962) - 1.*t4879*t8388 - 1.*t4139*t8394)*var2[3] + (0.03315*(t7149*t7171 - 1.*t7113*t7186) - 0.19074*(t7113*t7171 + t7149*t7186) - 1.*t3623*(t3315 + t3321 + t5266 + t5271 + t7052 + t7053 + t6036*t7199 + t6047*t7207) - 1.*t4139*(t3301 + t3303 + t5242 + t5246 + t7085 + t7088 - 1.*t6577*t7199 - 1.*t6588*t7207) - 1.*t4680*t8388 - 1.*t4065*t8394)*var2[4] + (-1.*t3623*(t3378 + t3379 + t5077 + t6863 + t6864 + t5885*t7199 + t5905*t7207) - 1.*t4139*(t3358 + t3366 + t5070 + t6849 + t6851 - 1.*t6402*t7199 - 1.*t6420*t7207) + t8337 + t8366 - 1.*t2638*t3587*t8388 - 1.*t3185*t3587*t8394)*var2[5] + (-1.*t3623*(t3460 + t3468 + t5168 + t6950 + t6951 + t5953*t7199 + t5981*t7207) - 1.*t4139*(t3431 + t3432 + t5153 + t6934 + t6936 - 1.*t6505*t7199 - 1.*t6528*t7207) + t8337 + t8366 - 1.*t2464*t3587*t8388 - 1.*t2696*t3587*t8394)*var2[6] + (0.03315*(-1.*t3842*t5660*t7171 - 1.*t3842*t5591*t7186) - 0.19074*(t3842*t5591*t7171 - 1.*t3842*t5660*t7186) - 1.*t4139*(t5316 + t5319 + t6825 - 1.*t3623*t5591*t7199 + t3623*t5660*t7207) - 1.*t3623*(t5322 + t5323 + t6815 + t4139*t5591*t7199 - 1.*t4139*t5660*t7207) - 1.*t4848*t8388 - 1.*t4275*t8394)*var2[7] + (-1.*t3623*(t6976 + t6979 + t6276*t7199 + t6252*t7207) - 1.*t4139*(t6993 + t6995 - 1.*t6656*t7199 - 1.*t6644*t7207) - 0.19074*(t7014*t7186 + t8217) + 0.03315*(t7014*t7171 + t8227))*var2[8] + (-1.*t3623*(t6689*t7714 + t6276*t7726) - 1.*t4139*(-1.*t7320*t7714 - 1.*t6656*t7726) - 0.19074*(-1.*t7186*t7278 + t8217) + 0.03315*(-1.*t7171*t7278 + t8227))*var2[9];
  p_output1[63]=t5486;
  p_output1[64]=t5559;
  p_output1[65]=t5590;
  p_output1[66]=0;
  p_output1[67]=0;
  p_output1[68]=0;
  p_output1[69]=0;
  p_output1[70]=0;
  p_output1[71]=0;
  p_output1[72]=0;
  p_output1[73]=0;
  p_output1[74]=0;
  p_output1[75]=0;
  p_output1[76]=0;
  p_output1[77]=0;
  p_output1[78]=0;
  p_output1[79]=0;
  p_output1[80]=0;
  p_output1[81]=0;
  p_output1[82]=0;
  p_output1[83]=0;
  p_output1[84]=0;
  p_output1[85]=0;
  p_output1[86]=0;
  p_output1[87]=0;
  p_output1[88]=0;
  p_output1[89]=0;
  p_output1[90]=0;
  p_output1[91]=0;
  p_output1[92]=0;
  p_output1[93]=0;
  p_output1[94]=0;
  p_output1[95]=0;
  p_output1[96]=0;
  p_output1[97]=0;
  p_output1[98]=0;
  p_output1[99]=0;
  p_output1[100]=0;
  p_output1[101]=0;
  p_output1[102]=0;
  p_output1[103]=0;
  p_output1[104]=0;
  p_output1[105]=0;
  p_output1[106]=0;
  p_output1[107]=0;
  p_output1[108]=0;
  p_output1[109]=0;
  p_output1[110]=0;
  p_output1[111]=0;
  p_output1[112]=0;
  p_output1[113]=0;
  p_output1[114]=0;
  p_output1[115]=0;
  p_output1[116]=0;
  p_output1[117]=0;
  p_output1[118]=0;
  p_output1[119]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 20 && ncols == 1) && 
      !(mrows == 1 && ncols == 20))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 20 && ncols == 1) && 
      !(mrows == 1 && ncols == 20))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 6, (mwSize) 20, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "dJs_LeftKneeSpringJoint_mex.hh"

namespace SymExpression
{

void dJs_LeftKneeSpringJoint_mex_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
