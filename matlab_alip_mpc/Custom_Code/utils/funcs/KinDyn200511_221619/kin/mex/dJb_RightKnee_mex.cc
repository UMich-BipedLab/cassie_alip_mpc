/*
 * Automatically Generated from Mathematica.
 * Mon 11 May 2020 22:28:57 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t604;
  double t316;
  double t359;
  double t629;
  double t538;
  double t675;
  double t781;
  double t1356;
  double t1247;
  double t1257;
  double t1321;
  double t1240;
  double t1391;
  double t1476;
  double t1484;
  double t1222;
  double t1537;
  double t1549;
  double t1566;
  double t85;
  double t909;
  double t2033;
  double t1901;
  double t1919;
  double t1976;
  double t1876;
  double t1336;
  double t1489;
  double t1510;
  double t1565;
  double t305;
  double t1130;
  double t2895;
  double t2959;
  double t2996;
  double t2998;
  double t3120;
  double t3133;
  double t3145;
  double t2942;
  double t2999;
  double t3068;
  double t3074;
  double t3151;
  double t3170;
  double t3186;
  double t3189;
  double t3193;
  double t3229;
  double t3273;
  double t3294;
  double t3302;
  double t3321;
  double t3354;
  double t2421;
  double t2445;
  double t842;
  double t846;
  double t1518;
  double t1593;
  double t1698;
  double t3581;
  double t3676;
  double t3698;
  double t3716;
  double t3755;
  double t3926;
  double t3862;
  double t3884;
  double t3920;
  double t3651;
  double t3707;
  double t3709;
  double t3764;
  double t4255;
  double t4271;
  double t4278;
  double t4352;
  double t4356;
  double t4358;
  double t4298;
  double t4309;
  double t4316;
  double t4334;
  double t4385;
  double t4388;
  double t4398;
  double t4402;
  double t4408;
  double t4410;
  double t4425;
  double t4426;
  double t4431;
  double t4434;
  double t4441;
  double t4057;
  double t4058;
  double t3587;
  double t3630;
  double t3714;
  double t3789;
  double t3823;
  double t4514;
  double t4518;
  double t4534;
  double t4555;
  double t4573;
  double t4579;
  double t4731;
  double t4735;
  double t4487;
  double t4572;
  double t4586;
  double t4589;
  double t1048;
  double t1699;
  double t1701;
  double t2013;
  double t2048;
  double t2076;
  double t2102;
  double t2186;
  double t2279;
  double t2369;
  double t2398;
  double t2405;
  double t2492;
  double t2541;
  double t2592;
  double t2608;
  double t2642;
  double t2694;
  double t2700;
  double t2726;
  double t2733;
  double t2747;
  double t5163;
  double t5171;
  double t5196;
  double t3396;
  double t3433;
  double t3456;
  double t3470;
  double t3646;
  double t3831;
  double t3840;
  double t3924;
  double t3935;
  double t3943;
  double t3949;
  double t3951;
  double t3972;
  double t4000;
  double t4048;
  double t4054;
  double t4061;
  double t4087;
  double t4123;
  double t4138;
  double t4164;
  double t4166;
  double t4205;
  double t4206;
  double t4207;
  double t4221;
  double t5374;
  double t5386;
  double t5400;
  double t4451;
  double t4456;
  double t4461;
  double t4463;
  double t4513;
  double t4592;
  double t4597;
  double t4611;
  double t4616;
  double t4621;
  double t4639;
  double t4641;
  double t4645;
  double t4689;
  double t4708;
  double t4716;
  double t4738;
  double t4770;
  double t4800;
  double t4820;
  double t4829;
  double t4870;
  double t4903;
  double t4905;
  double t4940;
  double t4944;
  double t4958;
  double t4969;
  double t4973;
  double t4987;
  double t5654;
  double t5663;
  double t5668;
  double t5780;
  double t5788;
  double t5802;
  double t6010;
  double t6012;
  double t6016;
  double t6032;
  double t6037;
  double t6047;
  double t6017;
  double t6068;
  double t6070;
  double t6139;
  double t6147;
  double t6155;
  double t6214;
  double t6238;
  double t6260;
  double t6137;
  double t6158;
  double t6165;
  double t6350;
  double t6383;
  double t6392;
  double t6743;
  double t6744;
  double t6718;
  double t6722;
  double t6745;
  double t6761;
  double t6764;
  double t6785;
  double t6816;
  double t6817;
  double t6819;
  double t6543;
  double t6603;
  double t6624;
  double t6643;
  double t6695;
  double t6701;
  double t6712;
  double t6731;
  double t6740;
  double t6769;
  double t6872;
  double t6873;
  double t6877;
  double t6883;
  double t6917;
  double t6932;
  double t6958;
  double t6994;
  double t7005;
  double t6309;
  double t7022;
  double t7024;
  double t7039;
  double t7040;
  double t7042;
  double t6607;
  double t6622;
  double t6896;
  double t7010;
  double t7015;
  double t7071;
  double t7072;
  double t7077;
  double t7078;
  double t7080;
  double t7086;
  double t7096;
  double t7019;
  double t7043;
  double t7044;
  double t6183;
  double t6274;
  double t6298;
  double t7079;
  double t7099;
  double t7106;
  double t7142;
  double t7147;
  double t7150;
  double t6315;
  double t6401;
  double t6416;
  double t5986;
  double t6473;
  double t6481;
  double t6484;
  double t7400;
  double t7401;
  double t7360;
  double t7369;
  double t7370;
  double t7390;
  double t7392;
  double t7477;
  double t7482;
  double t7492;
  double t7051;
  double t7107;
  double t7151;
  double t7160;
  double t7397;
  double t7403;
  double t7407;
  double t7772;
  double t7746;
  double t7751;
  double t7767;
  double t7657;
  double t7658;
  double t7659;
  double t7673;
  double t5878;
  double t5879;
  double t5880;
  double t5820;
  double t5838;
  double t5842;
  double t8081;
  double t8084;
  double t8094;
  double t8035;
  double t5763;
  double t5764;
  double t5768;
  double t8254;
  double t8255;
  double t5923;
  double t5925;
  double t5960;
  double t8313;
  double t8316;
  double t8318;
  double t8320;
  double t8340;
  double t8364;
  double t8368;
  double t8260;
  double t8271;
  double t8283;
  double t8334;
  double t8382;
  double t8396;
  double t8400;
  double t8412;
  double t8420;
  double t7173;
  double t8545;
  double t8546;
  double t8547;
  double t8548;
  double t8551;
  double t8572;
  double t8573;
  double t8611;
  double t8612;
  double t8619;
  double t8561;
  double t8579;
  double t8585;
  double t8659;
  double t8668;
  double t8676;
  double t7190;
  double t8610;
  double t8620;
  double t8626;
  double t7213;
  double t7251;
  double t8656;
  double t8685;
  double t8693;
  double t8707;
  double t8734;
  double t8742;
  double t8836;
  double t8847;
  double t8850;
  double t8851;
  double t8856;
  double t8966;
  double t8970;
  double t8972;
  double t8979;
  double t5690;
  double t5696;
  double t5701;
  double t5640;
  double t5641;
  double t5643;
  double t8861;
  double t8863;
  double t8871;
  double t8874;
  double t9206;
  double t9211;
  double t9214;
  double t9215;
  double t9245;
  double t9246;
  double t9249;
  double t9252;
  double t9357;
  double t9324;
  double t9326;
  double t9328;
  double t9384;
  double t9359;
  double t9367;
  double t9368;
  double t5621;
  double t5637;
  double t5651;
  double t5686;
  double t5689;
  double t5704;
  double t5713;
  double t5720;
  double t5760;
  double t5770;
  double t5804;
  double t5806;
  double t5848;
  double t5864;
  double t5870;
  double t5871;
  double t5901;
  double t5963;
  double t5985;
  double t6300;
  double t7212;
  double t9526;
  double t9528;
  double t9531;
  double t7739;
  double t7771;
  double t7822;
  double t7847;
  double t7331;
  double t7420;
  double t9556;
  double t9559;
  double t9561;
  double t7565;
  double t7592;
  double t8246;
  double t8292;
  double t8465;
  double t8470;
  double t9532;
  double t8628;
  double t9534;
  double t9539;
  double t8777;
  double t8839;
  double t8868;
  double t9679;
  double t9680;
  double t9682;
  double t8989;
  double t8995;
  double t9023;
  double t9027;
  double t8912;
  double t8913;
  double t9715;
  double t9720;
  double t9721;
  double t8931;
  double t8932;
  double t9110;
  double t9115;
  double t9129;
  double t9131;
  double t9685;
  double t9157;
  double t9691;
  double t9694;
  double t9166;
  double t9325;
  double t9366;
  double t9856;
  double t9858;
  double t9862;
  double t9268;
  double t9272;
  double t9882;
  double t9885;
  double t9886;
  double t9288;
  double t9292;
  double t9186;
  double t9191;
  double t9219;
  double t9226;
  double t9440;
  double t9442;
  double t9463;
  double t9465;
  double t9863;
  double t9848;
  double t9851;
  double t9489;
  double t9888;
  double t9869;
  double t9875;
  double t9502;
  double t9518;
  double t9536;
  double t10037;
  double t10042;
  double t10043;
  double t9608;
  double t9609;
  double t9622;
  double t9623;
  double t10047;
  double t9643;
  double t10059;
  double t10060;
  double t9655;
  double t9674;
  double t9693;
  double t10155;
  double t10160;
  double t10163;
  double t9773;
  double t9774;
  double t9795;
  double t9797;
  double t10166;
  double t9825;
  double t9832;
  double t10175;
  double t10176;
  double t9849;
  double t9870;
  double t10302;
  double t10303;
  double t10304;
  double t9941;
  double t9944;
  double t10326;
  double t10328;
  double t10330;
  double t9954;
  double t9959;
  double t10309;
  double t9972;
  double t10280;
  double t10292;
  double t10331;
  double t10310;
  double t10311;
  double t9983;
  double t10430;
  double t10432;
  double t10460;
  double t10468;
  double t10472;
  double t10479;
  double t10483;
  double t10502;
  double t10503;
  double t10530;
  double t10531;
  double t10532;
  double t10539;
  double t10540;
  double t10577;
  double t10579;
  double t10580;
  double t10587;
  double t10588;
  double t10589;
  double t10596;
  double t10597;
  double t10600;
  double t10612;
  double t10613;
  double t10616;
  double t10408;
  double t10409;
  double t10410;
  double t10413;
  double t10416;
  double t10420;
  double t10422;
  double t10425;
  double t10428;
  double t10639;
  double t10640;
  double t10641;
  double t10615;
  double t10604;
  double t10645;
  double t10627;
  double t10649;
  double t10650;
  double t10651;
  double t10657;
  double t10658;
  double t10659;
  double t10653;
  double t10623;
  t604 = Cos(var1[15]);
  t316 = Cos(var1[16]);
  t359 = Sin(var1[15]);
  t629 = Sin(var1[16]);
  t538 = t316*t359;
  t675 = t604*t629;
  t781 = 0. + t538 + t675;
  t1356 = Sin(var1[13]);
  t1247 = -1.*t604*t316;
  t1257 = t359*t629;
  t1321 = 0. + t1247 + t1257;
  t1240 = Cos(var1[13]);
  t1391 = Sin(var1[14]);
  t1476 = t1391*t781;
  t1484 = 0. + t1476;
  t1222 = Cos(var1[5]);
  t1537 = -1.*t1356*t1321;
  t1549 = t1240*t1484;
  t1566 = Sin(var1[5]);
  t85 = Cos(var1[3]);
  t909 = Sin(var1[4]);
  t2033 = t1537 + t1549;
  t1901 = -1.*t1240*t1321;
  t1919 = -1.*t1356*t1484;
  t1976 = t1901 + t1919;
  t1876 = Sin(var1[3]);
  t1336 = t1240*t1321;
  t1489 = t1356*t1484;
  t1510 = 0. + t1336 + t1489;
  t1565 = 0. + t1537 + t1549;
  t305 = Cos(var1[14]);
  t1130 = Cos(var1[4]);
  t2895 = t538 + t675;
  t2959 = t604*t316;
  t2996 = -1.*t359*t629;
  t2998 = t2959 + t2996;
  t3120 = t1240*t2895;
  t3133 = t1356*t1391*t2998;
  t3145 = t3120 + t3133;
  t2942 = -1.*t1356*t2895;
  t2999 = t1240*t1391*t2998;
  t3068 = t2942 + t2999;
  t3074 = t1222*t3068;
  t3151 = -1.*t3145*t1566;
  t3170 = t3074 + t3151;
  t3186 = -1.*t1876*t3170;
  t3189 = t305*t1130*t2998;
  t3193 = t1222*t3145;
  t3229 = t3068*t1566;
  t3273 = t3193 + t3229;
  t3294 = t909*t3273;
  t3302 = t3189 + t3294;
  t3321 = t85*t3302;
  t3354 = t3186 + t3321;
  t2421 = t1222*t1565;
  t2445 = -1.*t1510*t1566;
  t842 = t305*t781;
  t846 = 0. + t842;
  t1518 = t1222*t1510;
  t1593 = t1565*t1566;
  t1698 = 0. + t1518 + t1593;
  t3581 = 0. + t2959 + t2996;
  t3676 = t1391*t3581;
  t3698 = 0. + t3676;
  t3716 = -1.*t1356*t781;
  t3755 = t1240*t3698;
  t3926 = t3716 + t3755;
  t3862 = -1.*t1240*t781;
  t3884 = -1.*t1356*t3698;
  t3920 = t3862 + t3884;
  t3651 = t1240*t781;
  t3707 = t1356*t3698;
  t3709 = 0. + t3651 + t3707;
  t3764 = 0. + t3716 + t3755;
  t4255 = -1.*t316*t359;
  t4271 = -1.*t604*t629;
  t4278 = t4255 + t4271;
  t4352 = t1356*t1391*t4278;
  t4356 = t1240*t2998;
  t4358 = t4352 + t4356;
  t4298 = t1240*t1391*t4278;
  t4309 = -1.*t1356*t2998;
  t4316 = t4298 + t4309;
  t4334 = t1222*t4316;
  t4385 = -1.*t4358*t1566;
  t4388 = t4334 + t4385;
  t4398 = -1.*t1876*t4388;
  t4402 = t305*t1130*t4278;
  t4408 = t1222*t4358;
  t4410 = t4316*t1566;
  t4425 = t4408 + t4410;
  t4426 = t909*t4425;
  t4431 = t4402 + t4426;
  t4434 = t85*t4431;
  t4441 = t4398 + t4434;
  t4057 = t1222*t3764;
  t4058 = -1.*t3709*t1566;
  t3587 = t305*t3581;
  t3630 = 0. + t3587;
  t3714 = t1222*t3709;
  t3789 = t3764*t1566;
  t3823 = 0. + t3714 + t3789;
  t4514 = -1.*t305;
  t4518 = 0. + t4514;
  t4534 = t4518*t1356;
  t4555 = 0. + t4534;
  t4573 = t1240*t4518;
  t4579 = 0. + t4573;
  t4731 = t4579*t1222;
  t4735 = -1.*t4555*t1566;
  t4487 = 0. + t1391;
  t4572 = t1222*t4555;
  t4586 = t4579*t1566;
  t4589 = 0. + t4572 + t4586;
  t1048 = -1.*t846*t909;
  t1699 = t1130*t1698;
  t1701 = t1048 + t1699;
  t2013 = t1222*t1976;
  t2048 = -1.*t2033*t1566;
  t2076 = t2013 + t2048;
  t2102 = t1222*t2033;
  t2186 = t1976*t1566;
  t2279 = t2102 + t2186;
  t2369 = -1.*t1222*t1510;
  t2398 = -1.*t1565*t1566;
  t2405 = t2369 + t2398;
  t2492 = t2421 + t2445;
  t2541 = t1240*t305*t1222*t781;
  t2592 = -1.*t305*t1356*t781*t1566;
  t2608 = t2541 + t2592;
  t2642 = -1.*t1130*t1391*t781;
  t2694 = t305*t1222*t1356*t781;
  t2700 = t1240*t305*t781*t1566;
  t2726 = t2694 + t2700;
  t2733 = t909*t2726;
  t2747 = t2642 + t2733;
  t5163 = t85*t3170;
  t5171 = t1876*t3302;
  t5196 = t5163 + t5171;
  t3396 = 0. + t2421 + t2445;
  t3433 = t1130*t846;
  t3456 = t909*t1698;
  t3470 = 0. + t3433 + t3456;
  t3646 = -1.*t3630*t909;
  t3831 = t1130*t3823;
  t3840 = t3646 + t3831;
  t3924 = t1222*t3920;
  t3935 = -1.*t3926*t1566;
  t3943 = t3924 + t3935;
  t3949 = t1222*t3926;
  t3951 = t3920*t1566;
  t3972 = t3949 + t3951;
  t4000 = -1.*t1222*t3709;
  t4048 = -1.*t3764*t1566;
  t4054 = t4000 + t4048;
  t4061 = t4057 + t4058;
  t4087 = t1240*t305*t1222*t3581;
  t4123 = -1.*t305*t1356*t3581*t1566;
  t4138 = t4087 + t4123;
  t4164 = -1.*t1130*t1391*t3581;
  t4166 = t305*t1222*t1356*t3581;
  t4205 = t1240*t305*t3581*t1566;
  t4206 = t4166 + t4205;
  t4207 = t909*t4206;
  t4221 = t4164 + t4207;
  t5374 = t85*t4388;
  t5386 = t1876*t4431;
  t5400 = t5374 + t5386;
  t4451 = 0. + t4057 + t4058;
  t4456 = t1130*t3630;
  t4461 = t909*t3823;
  t4463 = 0. + t4456 + t4461;
  t4513 = -1.*t4487*t909;
  t4592 = t1130*t4589;
  t4597 = t4513 + t4592;
  t4611 = -1.*t4518*t1222*t1356;
  t4616 = -1.*t1240*t4518*t1566;
  t4621 = t4611 + t4616;
  t4639 = t1240*t4518*t1222;
  t4641 = -1.*t4518*t1356*t1566;
  t4645 = t4639 + t4641;
  t4689 = -1.*t1222*t4555;
  t4708 = -1.*t4579*t1566;
  t4716 = t4689 + t4708;
  t4738 = t4731 + t4735;
  t4770 = 0. + t4731 + t4735;
  t4800 = t1130*t4487;
  t4820 = t909*t4589;
  t4829 = 0. + t4800 + t4820;
  t4870 = t1240*t1222*t1391;
  t4903 = -1.*t1356*t1391*t1566;
  t4905 = t4870 + t4903;
  t4940 = t305*t1130;
  t4944 = t1222*t1356*t1391;
  t4958 = t1240*t1391*t1566;
  t4969 = t4944 + t4958;
  t4973 = t909*t4969;
  t4987 = t4940 + t4973;
  t5654 = -1.*t305*t2998*t909;
  t5663 = t1130*t3273;
  t5668 = t5654 + t5663;
  t5780 = -1.*t305*t4278*t909;
  t5788 = t1130*t4425;
  t5802 = t5780 + t5788;
  t6010 = 0.02300000000000002*t316;
  t6012 = -0.0321*t629;
  t6016 = t6010 + t6012;
  t6032 = 0.0321*t316;
  t6037 = 0.02300000000000002*t629;
  t6047 = t6032 + t6037;
  t6017 = t359*t6016;
  t6068 = t604*t6047;
  t6070 = t6017 + t6068;
  t6139 = t604*t6016;
  t6147 = -1.*t359*t6047;
  t6155 = t6139 + t6147;
  t6214 = t1240*t6070;
  t6238 = t1356*t1391*t6155;
  t6260 = t6214 + t6238;
  t6137 = -1.*t1356*t6070;
  t6158 = t1240*t1391*t6155;
  t6165 = t6137 + t6158;
  t6350 = t1222*t6260;
  t6383 = t6165*t1566;
  t6392 = t6350 + t6383;
  t6743 = -1.*t316;
  t6744 = 1. + t6743;
  t6718 = -1.*t604;
  t6722 = 1. + t6718;
  t6745 = -0.08055*t6744;
  t6761 = -0.04845*t316;
  t6764 = 0. + t6745 + t6761 + t6037;
  t6785 = -0.13004*t6744;
  t6816 = -0.15304*t316;
  t6817 = 0.0321*t629;
  t6819 = 0. + t6785 + t6816 + t6817;
  t6543 = -1.*t1240;
  t6603 = 1. + t6543;
  t6624 = -1.*t305;
  t6643 = 1. + t6624;
  t6695 = -0.135*t6643;
  t6701 = -0.1327*t305;
  t6712 = 0.08055*t1391;
  t6731 = -0.08055*t6722;
  t6740 = -0.01004*t359;
  t6769 = t604*t6764;
  t6872 = -1.*t359*t6819;
  t6873 = 0. + t6731 + t6740 + t6769 + t6872;
  t6877 = t1391*t6873;
  t6883 = 0. + t6695 + t6701 + t6712 + t6877;
  t6917 = -0.01004*t6722;
  t6932 = 0.08055*t359;
  t6958 = t359*t6764;
  t6994 = t604*t6819;
  t7005 = 0. + t6917 + t6932 + t6958 + t6994;
  t6309 = 0. + t4513 + t4592;
  t7022 = 0.07996*t6603;
  t7024 = 0.135*t1356;
  t7039 = t1356*t6883;
  t7040 = t1240*t7005;
  t7042 = 0. + t7022 + t7024 + t7039 + t7040;
  t6607 = -0.135*t6603;
  t6622 = 0.07996*t1356;
  t6896 = t1240*t6883;
  t7010 = -1.*t1356*t7005;
  t7015 = 0. + t6607 + t6622 + t6896 + t7010;
  t7071 = -0.08055*t6643;
  t7072 = -0.0022999999999999965*t1391;
  t7077 = t305*t6873;
  t7078 = 0. + t7071 + t7072 + t7077;
  t7080 = t1222*t7042;
  t7086 = t7015*t1566;
  t7096 = 0. + t7080 + t7086;
  t7019 = t1222*t7015;
  t7043 = -1.*t7042*t1566;
  t7044 = 0. + t7019 + t7043;
  t6183 = t1222*t6165;
  t6274 = -1.*t6260*t1566;
  t6298 = t6183 + t6274;
  t7079 = -1.*t7078*t909;
  t7099 = t1130*t7096;
  t7106 = 0. + t7079 + t7099;
  t7142 = t1130*t7078;
  t7147 = t909*t7096;
  t7150 = 0. + t7142 + t7147;
  t6315 = -1.*t305*t6155*t909;
  t6401 = t1130*t6392;
  t6416 = t6315 + t6401;
  t5986 = 0. + t3646 + t3831;
  t6473 = t305*t1130*t6155;
  t6481 = t909*t6392;
  t6484 = t6473 + t6481;
  t7400 = 0.135*t1240;
  t7401 = t7400 + t6622 + t6896 + t7010;
  t7360 = 0.07996*t1240;
  t7369 = -0.135*t1356;
  t7370 = -1.*t1356*t6883;
  t7390 = -1.*t1240*t7005;
  t7392 = t7360 + t7369 + t7370 + t7390;
  t7477 = t1222*t7401;
  t7482 = t7392*t1566;
  t7492 = t7477 + t7482;
  t7051 = t4770*t7044;
  t7107 = t6309*t7106;
  t7151 = t4829*t7150;
  t7160 = t7051 + t7107 + t7151;
  t7397 = t1222*t7392;
  t7403 = -1.*t7401*t1566;
  t7407 = t7397 + t7403;
  t7772 = t7019 + t7043;
  t7746 = -1.*t1222*t7042;
  t7751 = -1.*t7015*t1566;
  t7767 = t7746 + t7751;
  t7657 = -1.*t7044*t4451;
  t7658 = -1.*t7106*t5986;
  t7659 = -1.*t7150*t4463;
  t7673 = t7657 + t7658 + t7659;
  t5878 = -1.*t1130*t4487;
  t5879 = -1.*t909*t4589;
  t5880 = t5878 + t5879;
  t5820 = -1.*t1130*t3630;
  t5838 = -1.*t909*t3823;
  t5842 = t5820 + t5838;
  t8081 = -1.*t1130*t7078;
  t8084 = -1.*t909*t7096;
  t8094 = t8081 + t8084;
  t8035 = t7079 + t7099;
  t5763 = t1391*t3581*t909;
  t5764 = t1130*t4206;
  t5768 = t5763 + t5764;
  t8254 = 0.08055*t305;
  t8255 = t8254 + t7072 + t7077;
  t5923 = -1.*t305*t909;
  t5925 = t1130*t4969;
  t5960 = t5923 + t5925;
  t8313 = -0.0022999999999999965*t305;
  t8316 = -0.08055*t1391;
  t8318 = -1.*t1391*t6873;
  t8320 = t8313 + t8316 + t8318;
  t8340 = t1222*t1356*t8255;
  t8364 = t1240*t8255*t1566;
  t8368 = t8340 + t8364;
  t8260 = t1240*t1222*t8255;
  t8271 = -1.*t1356*t8255*t1566;
  t8283 = t8260 + t8271;
  t8334 = -1.*t8320*t909;
  t8382 = t1130*t8368;
  t8396 = t8334 + t8382;
  t8400 = t1130*t8320;
  t8412 = t909*t8368;
  t8420 = t8400 + t8412;
  t7173 = t5802*t7160;
  t8545 = -0.01004*t604;
  t8546 = -0.08055*t359;
  t8547 = -1.*t359*t6764;
  t8548 = -1.*t604*t6819;
  t8551 = t8545 + t8546 + t8547 + t8548;
  t8572 = 0.08055*t604;
  t8573 = t8572 + t6740 + t6769 + t6872;
  t8611 = t1356*t1391*t8551;
  t8612 = t1240*t8573;
  t8619 = t8611 + t8612;
  t8561 = t1240*t1391*t8551;
  t8579 = -1.*t1356*t8573;
  t8585 = t8561 + t8579;
  t8659 = t1222*t8619;
  t8668 = t8585*t1566;
  t8676 = t8659 + t8668;
  t7190 = -1.*t7044*t4388;
  t8610 = t1222*t8585;
  t8620 = -1.*t8619*t1566;
  t8626 = t8610 + t8620;
  t7213 = -1.*t7106*t5802;
  t7251 = -1.*t7150*t4431;
  t8656 = -1.*t305*t8551*t909;
  t8685 = t1130*t8676;
  t8693 = t8656 + t8685;
  t8707 = t305*t1130*t8551;
  t8734 = t909*t8676;
  t8742 = t8707 + t8734;
  t8836 = 0. + t1048 + t1699;
  t8847 = -1.*t4770*t7044;
  t8850 = -1.*t6309*t7106;
  t8851 = -1.*t4829*t7150;
  t8856 = t8847 + t8850 + t8851;
  t8966 = t7044*t3396;
  t8970 = t7106*t8836;
  t8972 = t7150*t3470;
  t8979 = t8966 + t8970 + t8972;
  t5690 = -1.*t1130*t846;
  t5696 = -1.*t909*t1698;
  t5701 = t5690 + t5696;
  t5640 = t1391*t781*t909;
  t5641 = t1130*t2726;
  t5643 = t5640 + t5641;
  t8861 = t5668*t8856;
  t8863 = t7044*t3170;
  t8871 = t7106*t5668;
  t8874 = t7150*t3302;
  t9206 = -1.*t7044*t3396;
  t9211 = -1.*t7106*t8836;
  t9214 = -1.*t7150*t3470;
  t9215 = t9206 + t9211 + t9214;
  t9245 = t7044*t4451;
  t9246 = t7106*t5986;
  t9249 = t7150*t4463;
  t9252 = t9245 + t9246 + t9249;
  t9357 = t5802*t9215;
  t9324 = -1.*t7044*t3170;
  t9326 = -1.*t7106*t5668;
  t9328 = -1.*t7150*t3302;
  t9384 = t5668*t9252;
  t9359 = t7044*t4388;
  t9367 = t7106*t5802;
  t9368 = t7150*t4431;
  t5621 = var2[13]*t1130*t2279;
  t5637 = var2[5]*t1130*t2492;
  t5651 = var2[14]*t5643;
  t5686 = var2[15]*t5668;
  t5689 = var2[16]*t5668;
  t5704 = var2[4]*t5701;
  t5713 = t5621 + t5637 + t5651 + t5686 + t5689 + t5704;
  t5720 = var2[13]*t1130*t3972;
  t5760 = var2[5]*t1130*t4061;
  t5770 = var2[14]*t5768;
  t5804 = var2[15]*t5802;
  t5806 = var2[16]*t5802;
  t5848 = var2[4]*t5842;
  t5864 = t5720 + t5760 + t5770 + t5804 + t5806 + t5848;
  t5870 = var2[13]*t1130*t4645;
  t5871 = var2[5]*t1130*t4738;
  t5901 = var2[4]*t5880;
  t5963 = var2[14]*t5960;
  t5985 = t5870 + t5871 + t5901 + t5963;
  t6300 = t4770*t6298;
  t7212 = -1.*t6298*t4451;
  t9526 = t4487*t7078;
  t9528 = t4589*t7096;
  t9531 = t9526 + t7051 + t9528;
  t7739 = t4716*t7044;
  t7771 = t4770*t7767;
  t7822 = -1.*t7044*t4054;
  t7847 = -1.*t7767*t4451;
  t7331 = t4621*t7044;
  t7420 = t4770*t7407;
  t9556 = -1.*t7078*t3630;
  t9559 = -1.*t7096*t3823;
  t9561 = t9556 + t9559 + t7657;
  t7565 = -1.*t7044*t3943;
  t7592 = -1.*t7407*t4451;
  t8246 = t4905*t7044;
  t8292 = t4770*t8283;
  t8465 = -1.*t7044*t4138;
  t8470 = -1.*t8283*t4451;
  t9532 = t4388*t9531;
  t8628 = t4770*t8626;
  t9534 = -1.*t305*t7078*t4278;
  t9539 = -1.*t7096*t4425;
  t8777 = -1.*t8626*t4451;
  t8839 = -1.*t4770*t6298;
  t8868 = t6298*t3396;
  t9679 = -1.*t4487*t7078;
  t9680 = -1.*t4589*t7096;
  t9682 = t9679 + t8847 + t9680;
  t8989 = -1.*t4716*t7044;
  t8995 = -1.*t4770*t7767;
  t9023 = t7044*t2405;
  t9027 = t7767*t3396;
  t8912 = -1.*t4621*t7044;
  t8913 = -1.*t4770*t7407;
  t9715 = t7078*t846;
  t9720 = t7096*t1698;
  t9721 = t9715 + t9720 + t8966;
  t8931 = t7044*t2076;
  t8932 = t7407*t3396;
  t9110 = -1.*t4905*t7044;
  t9115 = -1.*t4770*t8283;
  t9129 = t7044*t2608;
  t9131 = t8283*t3396;
  t9685 = t3170*t9682;
  t9157 = -1.*t4770*t8626;
  t9691 = t305*t7078*t2998;
  t9694 = t7096*t3273;
  t9166 = t8626*t3396;
  t9325 = -1.*t6298*t3396;
  t9366 = t6298*t4451;
  t9856 = -1.*t7078*t846;
  t9858 = -1.*t7096*t1698;
  t9862 = t9856 + t9858 + t9206;
  t9268 = -1.*t7044*t2405;
  t9272 = -1.*t7767*t3396;
  t9882 = t7078*t3630;
  t9885 = t7096*t3823;
  t9886 = t9882 + t9885 + t9245;
  t9288 = t7044*t4054;
  t9292 = t7767*t4451;
  t9186 = -1.*t7044*t2076;
  t9191 = -1.*t7407*t3396;
  t9219 = t7044*t3943;
  t9226 = t7407*t4451;
  t9440 = -1.*t7044*t2608;
  t9442 = -1.*t8283*t3396;
  t9463 = t7044*t4138;
  t9465 = t8283*t4451;
  t9863 = t4388*t9862;
  t9848 = -1.*t305*t7078*t2998;
  t9851 = -1.*t7096*t3273;
  t9489 = -1.*t8626*t3396;
  t9888 = t3170*t9886;
  t9869 = t305*t7078*t4278;
  t9875 = t7096*t4425;
  t9502 = t8626*t4451;
  t9518 = t305*t4487*t6155;
  t9536 = -1.*t305*t6155*t3630;
  t10037 = t4555*t7042;
  t10042 = t4579*t7015;
  t10043 = t10037 + t10042 + t9526;
  t9608 = t305*t7078;
  t9609 = t4487*t8320;
  t9622 = t1391*t7078*t3581;
  t9623 = -1.*t8320*t3630;
  t10047 = t305*t10043*t4278;
  t9643 = t305*t4487*t8551;
  t10059 = -1.*t7042*t4358;
  t10060 = -1.*t7015*t4316;
  t9655 = -1.*t305*t8551*t3630;
  t9674 = -1.*t305*t4487*t6155;
  t9693 = t305*t6155*t846;
  t10155 = -1.*t4555*t7042;
  t10160 = -1.*t4579*t7015;
  t10163 = t10155 + t10160 + t9679;
  t9773 = -1.*t305*t7078;
  t9774 = -1.*t4487*t8320;
  t9795 = -1.*t1391*t7078*t781;
  t9797 = t8320*t846;
  t10166 = t305*t10163*t2998;
  t9825 = -1.*t305*t4487*t8551;
  t9832 = t305*t8551*t846;
  t10175 = t7015*t3068;
  t10176 = t7042*t3145;
  t9849 = -1.*t305*t6155*t846;
  t9870 = t305*t6155*t3630;
  t10302 = -1.*t7015*t1565;
  t10303 = -1.*t7042*t1510;
  t10304 = t9856 + t10302 + t10303;
  t9941 = t1391*t7078*t781;
  t9944 = -1.*t8320*t846;
  t10326 = t7015*t3764;
  t10328 = t7042*t3709;
  t10330 = t9882 + t10326 + t10328;
  t9954 = -1.*t1391*t7078*t3581;
  t9959 = t8320*t3630;
  t10309 = t305*t4278*t10304;
  t9972 = -1.*t305*t8551*t846;
  t10280 = -1.*t7015*t3068;
  t10292 = -1.*t7042*t3145;
  t10331 = t305*t2998*t10330;
  t10310 = t7042*t4358;
  t10311 = t7015*t4316;
  t9983 = t305*t8551*t3630;
  t10430 = t4518*t6883;
  t10432 = 0. + t9526 + t10430;
  t10460 = t305*t10432*t4278;
  t10468 = 0.135*t2895;
  t10472 = 0.07996*t1391*t2998;
  t10479 = -1.*t1391*t6883*t4278;
  t10483 = -1.*t7005*t2998;
  t10502 = -1.*t4518*t6883;
  t10503 = 0. + t9679 + t10502;
  t10530 = 0.07996*t1391*t4278;
  t10531 = 0.135*t2998;
  t10532 = t305*t10503*t2998;
  t10539 = t7005*t2895;
  t10540 = t1391*t6883*t2998;
  t10577 = -1.*t7005*t1321;
  t10579 = -1.*t6883*t1484;
  t10580 = t10577 + t9856 + t10579;
  t10587 = t7005*t781;
  t10588 = t6883*t3698;
  t10589 = t10587 + t9882 + t10588;
  t10596 = t305*t4278*t10580;
  t10597 = -1.*t7005*t2895;
  t10600 = -1.*t1391*t6883*t2998;
  t10612 = t305*t2998*t10589;
  t10613 = t1391*t6883*t4278;
  t10616 = t7005*t2998;
  t10408 = -1.*var2[14]*t1391*t781;
  t10409 = var2[15]*t305*t2998;
  t10410 = var2[16]*t305*t2998;
  t10413 = t10408 + t10409 + t10410;
  t10416 = var2[15]*t305*t4278;
  t10420 = var2[16]*t305*t4278;
  t10422 = -1.*var2[14]*t1391*t3581;
  t10425 = t10416 + t10420 + t10422;
  t10428 = var2[14]*t305;
  t10639 = -0.135*t4278;
  t10640 = -0.1327*t2895;
  t10641 = t10639 + t10640;
  t10615 = t6070*t781;
  t10604 = -1.*t6070*t1321;
  t10645 = t6873*t4278;
  t10627 = t8573*t781;
  t10649 = t6873*t3581;
  t10650 = 0. + t10587 + t10649;
  t10651 = t2895*t10650;
  t10657 = -1.*t6873*t781;
  t10658 = 0. + t10657 + t10577;
  t10659 = t2998*t10658;
  t10653 = -1.*t6873*t2998;
  t10623 = -1.*t8573*t1321;
  p_output1[0]=(-1.*t1876*t3470 - 1.*t3396*t85)*var2[3] + t1701*t85*var2[4] + (-1.*t1876*t2405 + t2492*t85*t909)*var2[5] + (-1.*t1876*t2076 + t2279*t85*t909)*var2[13] + (-1.*t1876*t2608 + t2747*t85)*var2[14] + t3354*var2[15] + t3354*var2[16];
  p_output1[1]=(-1.*t1876*t4463 - 1.*t4451*t85)*var2[3] + t3840*t85*var2[4] + (-1.*t1876*t4054 + t4061*t85*t909)*var2[5] + (-1.*t1876*t3943 + t3972*t85*t909)*var2[13] + (-1.*t1876*t4138 + t4221*t85)*var2[14] + t4441*var2[15] + t4441*var2[16];
  p_output1[2]=(-1.*t1876*t4829 - 1.*t4770*t85)*var2[3] + t4597*t85*var2[4] + (-1.*t1876*t4716 + t4738*t85*t909)*var2[5] + (-1.*t1876*t4621 + t4645*t85*t909)*var2[13] + (-1.*t1876*t4905 + t4987*t85)*var2[14];
  p_output1[3]=0;
  p_output1[4]=0;
  p_output1[5]=0;
  p_output1[6]=(-1.*t1876*t3396 + t3470*t85)*var2[3] + t1701*t1876*var2[4] + (t2405*t85 + t1876*t2492*t909)*var2[5] + (t2076*t85 + t1876*t2279*t909)*var2[13] + (t1876*t2747 + t2608*t85)*var2[14] + t5196*var2[15] + t5196*var2[16];
  p_output1[7]=(-1.*t1876*t4451 + t4463*t85)*var2[3] + t1876*t3840*var2[4] + (t4054*t85 + t1876*t4061*t909)*var2[5] + (t3943*t85 + t1876*t3972*t909)*var2[13] + (t1876*t4221 + t4138*t85)*var2[14] + t5400*var2[15] + t5400*var2[16];
  p_output1[8]=(-1.*t1876*t4770 + t4829*t85)*var2[3] + t1876*t4597*var2[4] + (t4716*t85 + t1876*t4738*t909)*var2[5] + (t4621*t85 + t1876*t4645*t909)*var2[13] + (t1876*t4987 + t4905*t85)*var2[14];
  p_output1[9]=0;
  p_output1[10]=0;
  p_output1[11]=0;
  p_output1[12]=t5713;
  p_output1[13]=t5864;
  p_output1[14]=t5985;
  p_output1[15]=0;
  p_output1[16]=0;
  p_output1[17]=0;
  p_output1[18]=(t5842*t7160 + t5880*t7673 + t6309*(-1.*t5842*t7106 - 1.*t3840*t7150 - 1.*t4463*t8035 - 1.*t5986*t8094) + t5986*(t5880*t7106 + t4597*t7150 + t4829*t8035 + t6309*t8094))*var2[4] + (t1130*t4061*t7160 + t1130*t4738*t7673 + t6309*(-1.*t1130*t4061*t7106 - 1.*t1130*t5986*t7772 + t7822 + t7847 - 1.*t4061*t7150*t909 - 1.*t4463*t7772*t909) + t5986*(t1130*t4738*t7106 + t7739 + t7771 + t1130*t6309*t7772 + t4738*t7150*t909 + t4829*t7772*t909))*var2[5] + (t1130*t3972*t7160 + t1130*t4645*t7673 + t6309*(-1.*t1130*t3972*t7106 - 1.*t1130*t5986*t7492 + t7565 + t7592 - 1.*t3972*t7150*t909 - 1.*t4463*t7492*t909) + t5986*(t1130*t4645*t7106 + t7331 + t7420 + t1130*t6309*t7492 + t4645*t7150*t909 + t4829*t7492*t909))*var2[13] + (t5768*t7160 + t5960*t7673 + t5986*(t5960*t7106 + t4987*t7150 + t8246 + t8292 + t6309*t8396 + t4829*t8420) + t6309*(-1.*t5768*t7106 - 1.*t4221*t7150 - 1.*t5986*t8396 - 1.*t4463*t8420 + t8465 + t8470))*var2[14] + (t7173 + t5986*(t8628 + t6309*t8693 + t4829*t8742) + t6309*(t7190 + t7213 + t7251 - 1.*t5986*t8693 - 1.*t4463*t8742 + t8777))*var2[15] + (t5986*(t6300 + t6309*t6416 + t4829*t6484) + t7173 + t6309*(-1.*t5986*t6416 - 1.*t4463*t6484 + t7190 + t7212 + t7213 + t7251))*var2[16];
  p_output1[19]=((-1.*t5880*t7106 - 1.*t4597*t7150 - 1.*t4829*t8035 - 1.*t6309*t8094)*t8836 + t6309*(t5701*t7106 + t1701*t7150 + t3470*t8035 + t8094*t8836) + t5701*t8856 + t5880*t8979)*var2[4] + (t1130*t2492*t8856 + t1130*t4738*t8979 + t6309*(t1130*t2492*t7106 + t1130*t7772*t8836 + t9023 + t9027 + t2492*t7150*t909 + t3470*t7772*t909) + t8836*(-1.*t1130*t4738*t7106 - 1.*t1130*t6309*t7772 + t8989 + t8995 - 1.*t4738*t7150*t909 - 1.*t4829*t7772*t909))*var2[5] + (t1130*t2279*t8856 + t1130*t4645*t8979 + t6309*(t1130*t2279*t7106 + t1130*t7492*t8836 + t8931 + t8932 + t2279*t7150*t909 + t3470*t7492*t909) + t8836*(-1.*t1130*t4645*t7106 - 1.*t1130*t6309*t7492 + t8912 + t8913 - 1.*t4645*t7150*t909 - 1.*t4829*t7492*t909))*var2[13] + (t5643*t8856 + t5960*t8979 + t8836*(-1.*t5960*t7106 - 1.*t4987*t7150 - 1.*t6309*t8396 - 1.*t4829*t8420 + t9110 + t9115) + t6309*(t5643*t7106 + t2747*t7150 + t3470*t8420 + t8396*t8836 + t9129 + t9131))*var2[14] + (t8861 + t8836*(-1.*t6309*t8693 - 1.*t4829*t8742 + t9157) + t6309*(t3470*t8742 + t8693*t8836 + t8863 + t8871 + t8874 + t9166))*var2[15] + (t8836*(-1.*t6309*t6416 - 1.*t4829*t6484 + t8839) + t8861 + t6309*(t3470*t6484 + t6416*t8836 + t8863 + t8868 + t8871 + t8874))*var2[16];
  p_output1[20]=((t5842*t7106 + t3840*t7150 + t4463*t8035 + t5986*t8094)*t8836 + t5986*(-1.*t5701*t7106 - 1.*t1701*t7150 - 1.*t3470*t8035 - 1.*t8094*t8836) + t5842*t9215 + t5701*t9252)*var2[4] + (t1130*t4061*t9215 + t1130*t2492*t9252 + t5986*(-1.*t1130*t2492*t7106 - 1.*t1130*t7772*t8836 - 1.*t2492*t7150*t909 - 1.*t3470*t7772*t909 + t9268 + t9272) + t8836*(t1130*t4061*t7106 + t1130*t5986*t7772 + t4061*t7150*t909 + t4463*t7772*t909 + t9288 + t9292))*var2[5] + (t5986*(-1.*t1130*t2279*t7106 - 1.*t1130*t7492*t8836 - 1.*t2279*t7150*t909 - 1.*t3470*t7492*t909 + t9186 + t9191) + t1130*t3972*t9215 + t8836*(t1130*t3972*t7106 + t1130*t5986*t7492 + t3972*t7150*t909 + t4463*t7492*t909 + t9219 + t9226) + t1130*t2279*t9252)*var2[13] + (t5768*t9215 + t5643*t9252 + t5986*(-1.*t5643*t7106 - 1.*t2747*t7150 - 1.*t3470*t8420 - 1.*t8396*t8836 + t9440 + t9442) + t8836*(t5768*t7106 + t4221*t7150 + t5986*t8396 + t4463*t8420 + t9463 + t9465))*var2[14] + (t9357 + t9384 + t5986*(-1.*t3470*t8742 - 1.*t8693*t8836 + t9324 + t9326 + t9328 + t9489) + t8836*(t5986*t8693 + t4463*t8742 + t9359 + t9367 + t9368 + t9502))*var2[15] + (t5986*(-1.*t3470*t6484 - 1.*t6416*t8836 + t9324 + t9325 + t9326 + t9328) + t9357 + t8836*(t5986*t6416 + t4463*t6484 + t9359 + t9366 + t9367 + t9368) + t9384)*var2[16];
  p_output1[21]=t5713;
  p_output1[22]=t5864;
  p_output1[23]=t5985;
  p_output1[24]=(t4451*(t4738*t7096 + t7739 + t7771 + t4589*t7772) + t4770*(-1.*t4061*t7096 - 1.*t3823*t7772 + t7822 + t7847) + t4054*t9531 + t4716*t9561)*var2[5] + (t4451*(t4645*t7096 + t7331 + t7420 + t4589*t7492) + t4770*(-1.*t3972*t7096 - 1.*t3823*t7492 + t7565 + t7592) + t3943*t9531 + t4621*t9561)*var2[13] + (t4138*t9531 + t4905*t9561 + t4451*(t4969*t7096 + t8246 + t8292 + t4589*t8368 + t9608 + t9609) + t4770*(-1.*t4206*t7096 - 1.*t3823*t8368 + t8465 + t8470 + t9622 + t9623))*var2[14] + (t9532 + t4451*(t8628 + t4589*t8676 + t9643) + t4770*(t7190 - 1.*t3823*t8676 + t8777 + t9534 + t9539 + t9655))*var2[15] + (t4451*(t6300 + t4589*t6392 + t9518) + t9532 + t4770*(-1.*t3823*t6392 + t7190 + t7212 + t9534 + t9536 + t9539))*var2[16];
  p_output1[25]=(t3396*(-1.*t4738*t7096 - 1.*t4589*t7772 + t8989 + t8995) + t4770*(t2492*t7096 + t1698*t7772 + t9023 + t9027) + t2405*t9682 + t4716*t9721)*var2[5] + (t3396*(-1.*t4645*t7096 - 1.*t4589*t7492 + t8912 + t8913) + t4770*(t2279*t7096 + t1698*t7492 + t8931 + t8932) + t2076*t9682 + t4621*t9721)*var2[13] + (t2608*t9682 + t4905*t9721 + t3396*(-1.*t4969*t7096 - 1.*t4589*t8368 + t9110 + t9115 + t9773 + t9774) + t4770*(t2726*t7096 + t1698*t8368 + t9129 + t9131 + t9795 + t9797))*var2[14] + (t9685 + t3396*(-1.*t4589*t8676 + t9157 + t9825) + t4770*(t1698*t8676 + t8863 + t9166 + t9691 + t9694 + t9832))*var2[15] + (t3396*(-1.*t4589*t6392 + t8839 + t9674) + t9685 + t4770*(t1698*t6392 + t8863 + t8868 + t9691 + t9693 + t9694))*var2[16];
  p_output1[26]=(t4451*(-1.*t2492*t7096 - 1.*t1698*t7772 + t9268 + t9272) + t3396*(t4061*t7096 + t3823*t7772 + t9288 + t9292) + t4054*t9862 + t2405*t9886)*var2[5] + (t4451*(-1.*t2279*t7096 - 1.*t1698*t7492 + t9186 + t9191) + t3396*(t3972*t7096 + t3823*t7492 + t9219 + t9226) + t3943*t9862 + t2076*t9886)*var2[13] + (t4138*t9862 + t2608*t9886 + t4451*(-1.*t2726*t7096 - 1.*t1698*t8368 + t9440 + t9442 + t9941 + t9944) + t3396*(t4206*t7096 + t3823*t8368 + t9463 + t9465 + t9954 + t9959))*var2[14] + (t9863 + t9888 + t4451*(-1.*t1698*t8676 + t9324 + t9489 + t9848 + t9851 + t9972) + t3396*(t3823*t8676 + t9359 + t9502 + t9869 + t9875 + t9983))*var2[15] + (t4451*(-1.*t1698*t6392 + t9324 + t9325 + t9848 + t9849 + t9851) + t9863 + t3396*(t3823*t6392 + t9359 + t9366 + t9869 + t9870 + t9875) + t9888)*var2[16];
  p_output1[27]=t2405*var2[5] + t2076*var2[13] + t2608*var2[14] + t3170*var2[15] + t3170*var2[16];
  p_output1[28]=t4054*var2[5] + t3943*var2[13] + t4138*var2[14] + t4388*var2[15] + t4388*var2[16];
  p_output1[29]=t4716*var2[5] + t4621*var2[13] + t4905*var2[14];
  p_output1[30]=(t4487*(-1.*t3920*t7015 - 1.*t3926*t7042 - 1.*t3764*t7392 - 1.*t3709*t7401) + t3630*(-1.*t1356*t4518*t7015 + t1240*t4518*t7042 + t4579*t7392 + t4555*t7401))*var2[13] + (-1.*t10043*t1391*t3581 + t305*(-1.*t3764*t7015 - 1.*t3709*t7042 + t9556) + t3630*(t1240*t1391*t7015 + t1356*t1391*t7042 + t1356*t4555*t8255 + t1240*t4579*t8255 + t9608 + t9609) + t4487*(-1.*t1240*t305*t3581*t7015 - 1.*t1356*t305*t3581*t7042 - 1.*t1356*t3709*t8255 - 1.*t1240*t3764*t8255 + t9622 + t9623))*var2[14] + (t10047 + t3630*(t4579*t8585 + t4555*t8619 + t9643) + t4487*(t10059 + t10060 - 1.*t3764*t8585 - 1.*t3709*t8619 + t9534 + t9655))*var2[15] + (t10047 + t3630*(t4579*t6165 + t4555*t6260 + t9518) + t4487*(t10059 + t10060 - 1.*t3764*t6165 - 1.*t3709*t6260 + t9534 + t9536))*var2[16];
  p_output1[31]=(t4487*(t1976*t7015 + t2033*t7042 + t1565*t7392 + t1510*t7401) + (t1356*t4518*t7015 - 1.*t1240*t4518*t7042 - 1.*t4579*t7392 - 1.*t4555*t7401)*t846)*var2[13] + (-1.*t10163*t1391*t781 + t305*(t1565*t7015 + t1510*t7042 + t9715) + t846*(-1.*t1240*t1391*t7015 - 1.*t1356*t1391*t7042 - 1.*t1356*t4555*t8255 - 1.*t1240*t4579*t8255 + t9773 + t9774) + t4487*(t1240*t305*t7015*t781 + t1356*t305*t7042*t781 + t1356*t1510*t8255 + t1240*t1565*t8255 + t9795 + t9797))*var2[14] + (t10166 + t846*(-1.*t4579*t8585 - 1.*t4555*t8619 + t9825) + t4487*(t10175 + t10176 + t1565*t8585 + t1510*t8619 + t9691 + t9832))*var2[15] + (t10166 + t846*(-1.*t4579*t6165 - 1.*t4555*t6260 + t9674) + t4487*(t10175 + t10176 + t1565*t6165 + t1510*t6260 + t9691 + t9693))*var2[16];
  p_output1[32]=(t3630*(-1.*t1976*t7015 - 1.*t2033*t7042 - 1.*t1565*t7392 - 1.*t1510*t7401) + (t3920*t7015 + t3926*t7042 + t3764*t7392 + t3709*t7401)*t846)*var2[13] + (-1.*t10304*t1391*t3581 - 1.*t10330*t1391*t781 + t3630*(-1.*t1240*t305*t7015*t781 - 1.*t1356*t305*t7042*t781 - 1.*t1356*t1510*t8255 - 1.*t1240*t1565*t8255 + t9941 + t9944) + t846*(t1240*t305*t3581*t7015 + t1356*t305*t3581*t7042 + t1356*t3709*t8255 + t1240*t3764*t8255 + t9954 + t9959))*var2[14] + (t10309 + t10331 + t3630*(t10280 + t10292 - 1.*t1565*t8585 - 1.*t1510*t8619 + t9848 + t9972) + t846*(t10310 + t10311 + t3764*t8585 + t3709*t8619 + t9869 + t9983))*var2[15] + (t10309 + t10331 + t3630*(t10280 + t10292 - 1.*t1565*t6165 - 1.*t1510*t6260 + t9848 + t9849) + t846*(t10310 + t10311 + t3764*t6165 + t3709*t6260 + t9869 + t9870))*var2[16];
  p_output1[33]=t10413;
  p_output1[34]=t10425;
  p_output1[35]=t10428;
  p_output1[36]=0;
  p_output1[37]=0;
  p_output1[38]=0;
  p_output1[39]=0;
  p_output1[40]=0;
  p_output1[41]=0;
  p_output1[42]=0;
  p_output1[43]=0;
  p_output1[44]=0;
  p_output1[45]=0;
  p_output1[46]=0;
  p_output1[47]=0;
  p_output1[48]=0;
  p_output1[49]=0;
  p_output1[50]=0;
  p_output1[51]=0;
  p_output1[52]=0;
  p_output1[53]=0;
  p_output1[54]=0;
  p_output1[55]=0;
  p_output1[56]=0;
  p_output1[57]=0;
  p_output1[58]=0;
  p_output1[59]=0;
  p_output1[60]=0;
  p_output1[61]=0;
  p_output1[62]=0;
  p_output1[63]=0;
  p_output1[64]=0;
  p_output1[65]=0;
  p_output1[66]=0;
  p_output1[67]=0;
  p_output1[68]=0;
  p_output1[69]=0;
  p_output1[70]=0;
  p_output1[71]=0;
  p_output1[72]=0;
  p_output1[73]=0;
  p_output1[74]=0;
  p_output1[75]=0;
  p_output1[76]=0;
  p_output1[77]=0;
  p_output1[78]=(-1.*t10432*t1391*t3581 + 0.07996*t305*t781 + t305*(-1.*t3698*t6883 - 1.*t7005*t781 + t9556) + t3630*(t1391*t6883 + t4518*t8255 + t9608 + t9609) + t4487*(-1.*t305*t3581*t6883 - 1.*t3698*t8255 + t9622 + t9623))*var2[14] + (t10460 + t10468 + t10472 + t3630*(t1391*t4518*t8551 + t9643) + t4487*(t10479 + t10483 - 1.*t1391*t3698*t8551 - 1.*t781*t8573 + t9534 + t9655))*var2[15] + (t10460 + t10468 + t10472 + t3630*(t1391*t4518*t6155 + t9518) + t4487*(t10479 + t10483 - 1.*t1391*t3698*t6155 - 1.*t6070*t781 + t9534 + t9536))*var2[16];
  p_output1[79]=(0.07996*t305*t3581 - 1.*t10503*t1391*t781 + t305*(t1484*t6883 + t1321*t7005 + t9715) + t846*(-1.*t1391*t6883 - 1.*t4518*t8255 + t9773 + t9774) + t4487*(t305*t6883*t781 + t1484*t8255 + t9795 + t9797))*var2[14] + (t10530 + t10531 + t10532 + t846*(-1.*t1391*t4518*t8551 + t9825) + t4487*(t10539 + t10540 + t1391*t1484*t8551 + t1321*t8573 + t9691 + t9832))*var2[15] + (t10530 + t10531 + t10532 + t846*(-1.*t1391*t4518*t6155 + t9674) + t4487*(t10539 + t10540 + t1321*t6070 + t1391*t1484*t6155 + t9691 + t9693))*var2[16];
  p_output1[80]=(0.07996*t1391 - 1.*t10580*t1391*t3581 - 1.*t10589*t1391*t781 + t3630*(-1.*t305*t6883*t781 - 1.*t1484*t8255 + t9941 + t9944) + t846*(t305*t3581*t6883 + t3698*t8255 + t9954 + t9959))*var2[14] + (t10596 + t10612 + t3630*(t10597 + t10600 + t10623 - 1.*t1391*t1484*t8551 + t9848 + t9972) + t846*(t10613 + t10616 + t10627 + t1391*t3698*t8551 + t9869 + t9983))*var2[15] + (t10596 + t10612 + t3630*(t10597 + t10600 + t10604 - 1.*t1391*t1484*t6155 + t9848 + t9849) + t846*(t10613 + t10615 + t10616 + t1391*t3698*t6155 + t9869 + t9870))*var2[16];
  p_output1[81]=t10413;
  p_output1[82]=t10425;
  p_output1[83]=t10428;
  p_output1[84]=-0.0022999999999999965*t2998*var2[15] - 0.0022999999999999965*t2998*var2[16];
  p_output1[85]=t10641*var2[15] + t10641*var2[16];
  p_output1[86]=(t10651 + t10659 + t1321*(t10616 + t10627 + t10645 + t3581*t8551) + t781*(t10597 + t10623 + t10653 - 1.*t781*t8551))*var2[15] + (t10651 + t10659 + t1321*(t10615 + t10616 + t10645 + t3581*t6155) + t781*(t10597 + t10604 + t10653 - 1.*t6155*t781))*var2[16];
  p_output1[87]=t2895*var2[15] + t2895*var2[16];
  p_output1[88]=t2998*var2[15] + t2998*var2[16];
  p_output1[89]=0;
  p_output1[90]=(-0.01004*t316 - 1.*t316*t6016 + 0.08055*t629 - 1.*t6047*t629 + t629*t6764 - 1.*t316*t6819)*var2[16];
  p_output1[91]=(0.08055*t316 - 1.*t316*t6047 + 0.01004*t629 + t6016*t629 + t316*t6764 + t629*t6819)*var2[16];
  p_output1[92]=0;
  p_output1[93]=0;
  p_output1[94]=0;
  p_output1[95]=0;
  p_output1[96]=0;
  p_output1[97]=0;
  p_output1[98]=0;
  p_output1[99]=0;
  p_output1[100]=0;
  p_output1[101]=0;
  p_output1[102]=0;
  p_output1[103]=0;
  p_output1[104]=0;
  p_output1[105]=0;
  p_output1[106]=0;
  p_output1[107]=0;
  p_output1[108]=0;
  p_output1[109]=0;
  p_output1[110]=0;
  p_output1[111]=0;
  p_output1[112]=0;
  p_output1[113]=0;
  p_output1[114]=0;
  p_output1[115]=0;
  p_output1[116]=0;
  p_output1[117]=0;
  p_output1[118]=0;
  p_output1[119]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 20 && ncols == 1) && 
      !(mrows == 1 && ncols == 20))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 20 && ncols == 1) && 
      !(mrows == 1 && ncols == 20))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 6, (mwSize) 20, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "dJb_RightKnee_mex.hh"

namespace SymExpression
{

void dJb_RightKnee_mex_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
