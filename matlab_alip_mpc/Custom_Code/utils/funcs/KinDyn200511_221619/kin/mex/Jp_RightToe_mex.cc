/*
 * Automatically Generated from Mathematica.
 * Mon 11 May 2020 22:30:41 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t1611;
  double t1760;
  double t1778;
  double t1817;
  double t1959;
  double t2149;
  double t2122;
  double t2124;
  double t2226;
  double t582;
  double t713;
  double t906;
  double t1020;
  double t2128;
  double t2231;
  double t2283;
  double t2441;
  double t2448;
  double t2473;
  double t432;
  double t2857;
  double t2892;
  double t2897;
  double t2911;
  double t2914;
  double t2915;
  double t2976;
  double t3159;
  double t3171;
  double t3249;
  double t3833;
  double t3876;
  double t3970;
  double t4165;
  double t4189;
  double t4232;
  double t4408;
  double t4546;
  double t4988;
  double t4992;
  double t5204;
  double t5206;
  double t5215;
  double t5235;
  double t5295;
  double t5351;
  double t5380;
  double t5632;
  double t5675;
  double t5705;
  double t5800;
  double t5801;
  double t5853;
  double t5972;
  double t5981;
  double t6051;
  double t6286;
  double t6486;
  double t6546;
  double t6565;
  double t6837;
  double t6849;
  double t6856;
  double t6884;
  double t6897;
  double t6898;
  double t6947;
  double t7073;
  double t7091;
  double t7132;
  double t7344;
  double t7347;
  double t7358;
  double t914;
  double t1059;
  double t1335;
  double t1883;
  double t2095;
  double t2105;
  double t2365;
  double t2374;
  double t2397;
  double t2503;
  double t2549;
  double t2630;
  double t7749;
  double t7757;
  double t7758;
  double t7816;
  double t7865;
  double t7869;
  double t2927;
  double t3025;
  double t3062;
  double t7974;
  double t7991;
  double t8001;
  double t3472;
  double t3606;
  double t3668;
  double t4288;
  double t4492;
  double t4498;
  double t8046;
  double t8057;
  double t8115;
  double t8245;
  double t8258;
  double t8338;
  double t5165;
  double t5167;
  double t5200;
  double t5360;
  double t5398;
  double t5493;
  double t8386;
  double t8402;
  double t8453;
  double t8523;
  double t8535;
  double t8577;
  double t5714;
  double t5749;
  double t5753;
  double t6090;
  double t6305;
  double t6329;
  double t8615;
  double t8617;
  double t8624;
  double t8682;
  double t8728;
  double t8751;
  double t6694;
  double t6773;
  double t6806;
  double t6922;
  double t6984;
  double t7042;
  double t8760;
  double t8778;
  double t8815;
  double t8828;
  double t8833;
  double t8835;
  double t7181;
  double t7197;
  double t7343;
  double t8864;
  double t8881;
  double t8887;
  double t8894;
  double t8901;
  double t8909;
  double t8992;
  double t8997;
  double t9007;
  double t9017;
  double t9030;
  double t9040;
  double t9068;
  double t9069;
  double t9075;
  double t9085;
  double t9088;
  double t9089;
  double t9100;
  double t9105;
  double t9109;
  double t9119;
  double t9123;
  double t9124;
  double t9137;
  double t9141;
  double t9143;
  double t9163;
  double t9167;
  double t9168;
  double t9171;
  double t9175;
  double t9181;
  double t9187;
  double t9188;
  double t9190;
  double t9198;
  double t9201;
  double t9204;
  double t9246;
  double t9247;
  double t9249;
  double t9254;
  double t9261;
  double t9266;
  double t9282;
  double t9284;
  double t9286;
  double t9292;
  double t9299;
  double t9300;
  double t9305;
  double t9308;
  double t9309;
  double t9314;
  double t9317;
  double t9321;
  double t9329;
  double t9332;
  double t9334;
  double t9337;
  double t9346;
  double t9348;
  double t9357;
  double t9359;
  double t9364;
  double t9371;
  double t9372;
  double t9374;
  double t9382;
  double t9386;
  double t9387;
  double t9437;
  double t9438;
  double t9441;
  double t9443;
  double t9445;
  double t9449;
  double t9462;
  double t9465;
  double t9468;
  double t9472;
  double t9475;
  double t9481;
  double t9485;
  double t9486;
  double t9487;
  double t9490;
  double t9493;
  double t9500;
  double t9509;
  double t9515;
  double t9518;
  double t9526;
  double t9530;
  double t9532;
  double t9536;
  double t9538;
  double t9543;
  double t9548;
  double t9549;
  double t9552;
  double t9556;
  double t9557;
  double t9558;
  double t9584;
  double t9586;
  double t9588;
  double t9602;
  double t9608;
  double t9593;
  double t9597;
  double t9598;
  double t9612;
  double t9613;
  double t9614;
  double t9616;
  double t9617;
  double t9619;
  double t9621;
  double t9629;
  double t9634;
  double t9641;
  double t9644;
  double t9650;
  double t9652;
  double t9654;
  double t9655;
  double t9658;
  double t9669;
  double t9671;
  double t9675;
  double t9680;
  double t9683;
  double t9691;
  double t9692;
  double t9699;
  double t9720;
  double t9722;
  double t9726;
  double t9742;
  double t9748;
  double t9758;
  double t9733;
  double t9737;
  double t9769;
  double t9771;
  double t9772;
  double t9783;
  double t9787;
  double t9788;
  double t9797;
  double t9800;
  double t9801;
  double t9806;
  double t9807;
  double t9810;
  double t9814;
  double t9816;
  double t9817;
  double t9822;
  double t9824;
  double t9828;
  double t9838;
  double t9839;
  double t9840;
  double t9852;
  double t9853;
  double t9857;
  double t9910;
  double t9911;
  double t9921;
  double t9901;
  double t9902;
  double t9903;
  double t9928;
  double t9932;
  double t9935;
  double t9946;
  double t9948;
  double t9949;
  double t9954;
  double t9955;
  double t9957;
  double t9959;
  double t9960;
  double t9966;
  double t9972;
  double t9975;
  double t9980;
  double t9988;
  double t9990;
  double t9991;
  double t9996;
  double t9998;
  double t10003;
  double t10009;
  double t10010;
  double t10013;
  double t10066;
  double t10070;
  double t10085;
  double t10087;
  double t10093;
  double t10099;
  double t10101;
  double t10107;
  double t10117;
  double t10120;
  double t10122;
  double t10125;
  double t10127;
  double t10128;
  double t10135;
  double t10136;
  double t10140;
  double t10147;
  double t10152;
  double t10153;
  double t10160;
  double t10162;
  double t10164;
  double t10171;
  double t10182;
  double t10183;
  double t10044;
  double t10048;
  double t10054;
  double t10056;
  double t10062;
  double t10220;
  double t10222;
  double t10223;
  double t10247;
  double t10248;
  double t10230;
  double t10236;
  double t10266;
  double t10267;
  double t10268;
  double t10271;
  double t10272;
  double t10275;
  double t10278;
  double t10279;
  double t10280;
  double t10284;
  double t10290;
  double t10292;
  double t10295;
  double t10296;
  double t10297;
  double t10304;
  double t10311;
  double t10312;
  double t10316;
  double t10320;
  double t10321;
  double t10325;
  double t10326;
  double t10329;
  double t9908;
  double t9922;
  double t9923;
  double t9924;
  double t9940;
  double t9951;
  double t9958;
  double t9967;
  double t9985;
  double t9993;
  double t10005;
  double t10014;
  double t10016;
  double t10018;
  double t10022;
  double t10024;
  double t10028;
  double t10033;
  double t10037;
  double t10040;
  double t8143;
  double t8156;
  double t8158;
  double t10389;
  double t10391;
  double t10399;
  double t10403;
  double t10405;
  double t10407;
  double t10415;
  double t10418;
  double t10420;
  double t10422;
  double t10423;
  double t10424;
  double t10428;
  double t10435;
  double t10436;
  double t10439;
  double t10441;
  double t10443;
  double t10368;
  double t10369;
  double t10370;
  double t10376;
  double t10378;
  double t10463;
  double t10464;
  double t10465;
  double t10467;
  double t10470;
  double t10471;
  double t10482;
  double t10483;
  double t10485;
  double t10487;
  double t10488;
  double t10492;
  double t10495;
  double t10498;
  double t10500;
  double t10503;
  double t10504;
  double t10505;
  double t10508;
  double t10509;
  double t10512;
  double t10514;
  double t10515;
  double t10518;
  double t10535;
  double t10537;
  double t10542;
  double t10545;
  double t10548;
  double t10549;
  double t10562;
  double t10563;
  double t10564;
  double t10567;
  double t10568;
  double t10569;
  double t10572;
  double t10574;
  double t10575;
  double t10580;
  double t10582;
  double t10583;
  double t10585;
  double t10586;
  double t10587;
  double t10589;
  double t10591;
  double t10596;
  double t10624;
  double t10626;
  double t10627;
  double t10630;
  double t10631;
  double t10633;
  double t10634;
  double t10636;
  double t10638;
  double t10639;
  double t10640;
  double t10642;
  double t10643;
  double t10645;
  double t10647;
  double t10650;
  double t10651;
  double t10654;
  double t10655;
  double t10656;
  double t10616;
  double t10617;
  double t10620;
  double t10621;
  double t10622;
  double t10669;
  double t10670;
  double t10671;
  double t10673;
  double t10674;
  double t10675;
  double t10677;
  double t10678;
  double t10681;
  double t10683;
  double t10684;
  double t10685;
  double t10687;
  double t10690;
  double t10691;
  double t10693;
  double t10694;
  double t10695;
  double t10697;
  double t10698;
  double t10699;
  double t10701;
  double t10702;
  double t10703;
  double t10705;
  double t10706;
  double t10707;
  double t10721;
  double t10722;
  double t10723;
  double t10725;
  double t10726;
  double t10727;
  double t10729;
  double t10730;
  double t10731;
  double t10733;
  double t10734;
  double t10735;
  double t10737;
  double t10738;
  double t10739;
  double t10742;
  double t10743;
  double t10744;
  double t10746;
  double t10747;
  double t10748;
  double t10751;
  double t10752;
  double t10753;
  double t10755;
  double t10756;
  double t10757;
  double t10782;
  double t10784;
  double t10788;
  double t10789;
  double t10790;
  double t10792;
  double t10793;
  double t10795;
  double t10796;
  double t10797;
  double t10799;
  double t10801;
  double t10802;
  double t10771;
  double t10773;
  double t10775;
  double t10778;
  double t10779;
  double t10814;
  double t10815;
  double t10816;
  double t10821;
  double t10822;
  double t10824;
  double t10825;
  double t10827;
  double t10828;
  double t10830;
  double t10832;
  double t10833;
  double t10834;
  double t10836;
  double t10837;
  double t10838;
  double t10840;
  double t10841;
  double t10842;
  double t10854;
  double t10855;
  double t10856;
  double t10861;
  double t10862;
  double t10864;
  double t10865;
  double t10867;
  double t10868;
  double t10869;
  double t10871;
  double t10872;
  double t10873;
  double t10875;
  double t10876;
  double t10877;
  double t10879;
  double t10880;
  double t10881;
  double t10900;
  double t10901;
  double t10904;
  double t10905;
  double t10907;
  double t10908;
  double t10909;
  double t10892;
  double t10893;
  double t10895;
  double t10897;
  double t10898;
  double t10922;
  double t10925;
  double t10926;
  double t10929;
  double t10930;
  double t10932;
  double t10933;
  double t10935;
  double t10936;
  double t10937;
  double t10939;
  double t10940;
  double t10941;
  double t10956;
  double t10957;
  double t10959;
  double t10962;
  double t10963;
  double t10965;
  double t10967;
  double t10969;
  double t10970;
  double t10971;
  double t10973;
  double t10974;
  double t10975;
  double t10997;
  double t10998;
  double t8948;
  double t10987;
  double t10988;
  double t10989;
  double t10992;
  double t10994;
  double t11010;
  double t11011;
  double t11012;
  double t11015;
  double t11016;
  double t11019;
  double t11020;
  double t11032;
  double t11033;
  double t11034;
  double t11037;
  double t11038;
  double t11040;
  double t11041;
  double t11001;
  double t8955;
  double t8958;
  double t11052;
  double t11053;
  double t11055;
  double t11056;
  double t11057;
  double t11022;
  double t11066;
  double t11067;
  double t11068;
  double t11027;
  double t11043;
  double t11081;
  double t11082;
  double t11083;
  double t11047;
  t1611 = Sin(var1[3]);
  t1760 = Cos(var1[13]);
  t1778 = -1.*t1760;
  t1817 = 1. + t1778;
  t1959 = Sin(var1[13]);
  t2149 = Cos(var1[3]);
  t2122 = Cos(var1[5]);
  t2124 = Sin(var1[4]);
  t2226 = Sin(var1[5]);
  t582 = Cos(var1[14]);
  t713 = -1.*t582;
  t906 = 1. + t713;
  t1020 = Sin(var1[14]);
  t2128 = -1.*t2122*t1611*t2124;
  t2231 = t2149*t2226;
  t2283 = t2128 + t2231;
  t2441 = -1.*t2149*t2122;
  t2448 = -1.*t1611*t2124*t2226;
  t2473 = t2441 + t2448;
  t432 = Cos(var1[4]);
  t2857 = t1959*t2283;
  t2892 = t1760*t2473;
  t2897 = t2857 + t2892;
  t2911 = Cos(var1[15]);
  t2914 = -1.*t2911;
  t2915 = 1. + t2914;
  t2976 = Sin(var1[15]);
  t3159 = t1760*t2283;
  t3171 = -1.*t1959*t2473;
  t3249 = t3159 + t3171;
  t3833 = -1.*t582*t432*t1611;
  t3876 = t1020*t2897;
  t3970 = t3833 + t3876;
  t4165 = Cos(var1[16]);
  t4189 = -1.*t4165;
  t4232 = 1. + t4189;
  t4408 = Sin(var1[16]);
  t4546 = t2976*t3249;
  t4988 = t2911*t3970;
  t4992 = t4546 + t4988;
  t5204 = t2911*t3249;
  t5206 = -1.*t2976*t3970;
  t5215 = t5204 + t5206;
  t5235 = Cos(var1[17]);
  t5295 = -1.*t5235;
  t5351 = 1. + t5295;
  t5380 = Sin(var1[17]);
  t5632 = -1.*t4408*t4992;
  t5675 = t4165*t5215;
  t5705 = t5632 + t5675;
  t5800 = t4165*t4992;
  t5801 = t4408*t5215;
  t5853 = t5800 + t5801;
  t5972 = Cos(var1[18]);
  t5981 = -1.*t5972;
  t6051 = 1. + t5981;
  t6286 = Sin(var1[18]);
  t6486 = t5380*t5705;
  t6546 = t5235*t5853;
  t6565 = t6486 + t6546;
  t6837 = t5235*t5705;
  t6849 = -1.*t5380*t5853;
  t6856 = t6837 + t6849;
  t6884 = Cos(var1[19]);
  t6897 = -1.*t6884;
  t6898 = 1. + t6897;
  t6947 = Sin(var1[19]);
  t7073 = -1.*t6286*t6565;
  t7091 = t5972*t6856;
  t7132 = t7073 + t7091;
  t7344 = t5972*t6565;
  t7347 = t6286*t6856;
  t7358 = t7344 + t7347;
  t914 = -0.08055*t906;
  t1059 = -0.135*t1020;
  t1335 = 0. + t914 + t1059;
  t1883 = 0.07996*t1817;
  t2095 = 0.135*t1959;
  t2105 = 0. + t1883 + t2095;
  t2365 = -0.135*t1817;
  t2374 = 0.07996*t1959;
  t2397 = 0. + t2365 + t2374;
  t2503 = -0.135*t906;
  t2549 = 0.08055*t1020;
  t2630 = 0. + t2503 + t2549;
  t7749 = t2149*t2122*t2124;
  t7757 = t1611*t2226;
  t7758 = t7749 + t7757;
  t7816 = -1.*t2122*t1611;
  t7865 = t2149*t2124*t2226;
  t7869 = t7816 + t7865;
  t2927 = -0.01004*t2915;
  t3025 = 0.08055*t2976;
  t3062 = 0. + t2927 + t3025;
  t7974 = t1959*t7758;
  t7991 = t1760*t7869;
  t8001 = t7974 + t7991;
  t3472 = -0.08055*t2915;
  t3606 = -0.01004*t2976;
  t3668 = 0. + t3472 + t3606;
  t4288 = -0.08055*t4232;
  t4492 = -0.13004*t4408;
  t4498 = 0. + t4288 + t4492;
  t8046 = t1760*t7758;
  t8057 = -1.*t1959*t7869;
  t8115 = t8046 + t8057;
  t8245 = t582*t2149*t432;
  t8258 = t1020*t8001;
  t8338 = t8245 + t8258;
  t5165 = -0.13004*t4232;
  t5167 = 0.08055*t4408;
  t5200 = 0. + t5165 + t5167;
  t5360 = -0.19074*t5351;
  t5398 = 0.03315*t5380;
  t5493 = 0. + t5360 + t5398;
  t8386 = t2976*t8115;
  t8402 = t2911*t8338;
  t8453 = t8386 + t8402;
  t8523 = t2911*t8115;
  t8535 = -1.*t2976*t8338;
  t8577 = t8523 + t8535;
  t5714 = -0.03315*t5351;
  t5749 = -0.19074*t5380;
  t5753 = 0. + t5714 + t5749;
  t6090 = -0.01315*t6051;
  t6305 = -0.62554*t6286;
  t6329 = 0. + t6090 + t6305;
  t8615 = -1.*t4408*t8453;
  t8617 = t4165*t8577;
  t8624 = t8615 + t8617;
  t8682 = t4165*t8453;
  t8728 = t4408*t8577;
  t8751 = t8682 + t8728;
  t6694 = -0.62554*t6051;
  t6773 = 0.01315*t6286;
  t6806 = 0. + t6694 + t6773;
  t6922 = -1.03354*t6898;
  t6984 = 0.05315*t6947;
  t7042 = 0. + t6922 + t6984;
  t8760 = t5380*t8624;
  t8778 = t5235*t8751;
  t8815 = t8760 + t8778;
  t8828 = t5235*t8624;
  t8833 = -1.*t5380*t8751;
  t8835 = t8828 + t8833;
  t7181 = -0.05315*t6898;
  t7197 = -1.03354*t6947;
  t7343 = 0. + t7181 + t7197;
  t8864 = -1.*t6286*t8815;
  t8881 = t5972*t8835;
  t8887 = t8864 + t8881;
  t8894 = t5972*t8815;
  t8901 = t6286*t8835;
  t8909 = t8894 + t8901;
  t8992 = t2149*t432*t2122*t1959;
  t8997 = t1760*t2149*t432*t2226;
  t9007 = t8992 + t8997;
  t9017 = t1760*t2149*t432*t2122;
  t9030 = -1.*t2149*t432*t1959*t2226;
  t9040 = t9017 + t9030;
  t9068 = -1.*t582*t2149*t2124;
  t9069 = t1020*t9007;
  t9075 = t9068 + t9069;
  t9085 = t2976*t9040;
  t9088 = t2911*t9075;
  t9089 = t9085 + t9088;
  t9100 = t2911*t9040;
  t9105 = -1.*t2976*t9075;
  t9109 = t9100 + t9105;
  t9119 = -1.*t4408*t9089;
  t9123 = t4165*t9109;
  t9124 = t9119 + t9123;
  t9137 = t4165*t9089;
  t9141 = t4408*t9109;
  t9143 = t9137 + t9141;
  t9163 = t5380*t9124;
  t9167 = t5235*t9143;
  t9168 = t9163 + t9167;
  t9171 = t5235*t9124;
  t9175 = -1.*t5380*t9143;
  t9181 = t9171 + t9175;
  t9187 = -1.*t6286*t9168;
  t9188 = t5972*t9181;
  t9190 = t9187 + t9188;
  t9198 = t5972*t9168;
  t9201 = t6286*t9181;
  t9204 = t9198 + t9201;
  t9246 = t432*t2122*t1959*t1611;
  t9247 = t1760*t432*t1611*t2226;
  t9249 = t9246 + t9247;
  t9254 = t1760*t432*t2122*t1611;
  t9261 = -1.*t432*t1959*t1611*t2226;
  t9266 = t9254 + t9261;
  t9282 = -1.*t582*t1611*t2124;
  t9284 = t1020*t9249;
  t9286 = t9282 + t9284;
  t9292 = t2976*t9266;
  t9299 = t2911*t9286;
  t9300 = t9292 + t9299;
  t9305 = t2911*t9266;
  t9308 = -1.*t2976*t9286;
  t9309 = t9305 + t9308;
  t9314 = -1.*t4408*t9300;
  t9317 = t4165*t9309;
  t9321 = t9314 + t9317;
  t9329 = t4165*t9300;
  t9332 = t4408*t9309;
  t9334 = t9329 + t9332;
  t9337 = t5380*t9321;
  t9346 = t5235*t9334;
  t9348 = t9337 + t9346;
  t9357 = t5235*t9321;
  t9359 = -1.*t5380*t9334;
  t9364 = t9357 + t9359;
  t9371 = -1.*t6286*t9348;
  t9372 = t5972*t9364;
  t9374 = t9371 + t9372;
  t9382 = t5972*t9348;
  t9386 = t6286*t9364;
  t9387 = t9382 + t9386;
  t9437 = -1.*t2122*t1959*t2124;
  t9438 = -1.*t1760*t2124*t2226;
  t9441 = t9437 + t9438;
  t9443 = -1.*t1760*t2122*t2124;
  t9445 = t1959*t2124*t2226;
  t9449 = t9443 + t9445;
  t9462 = -1.*t582*t432;
  t9465 = t1020*t9441;
  t9468 = t9462 + t9465;
  t9472 = t2976*t9449;
  t9475 = t2911*t9468;
  t9481 = t9472 + t9475;
  t9485 = t2911*t9449;
  t9486 = -1.*t2976*t9468;
  t9487 = t9485 + t9486;
  t9490 = -1.*t4408*t9481;
  t9493 = t4165*t9487;
  t9500 = t9490 + t9493;
  t9509 = t4165*t9481;
  t9515 = t4408*t9487;
  t9518 = t9509 + t9515;
  t9526 = t5380*t9500;
  t9530 = t5235*t9518;
  t9532 = t9526 + t9530;
  t9536 = t5235*t9500;
  t9538 = -1.*t5380*t9518;
  t9543 = t9536 + t9538;
  t9548 = -1.*t6286*t9532;
  t9549 = t5972*t9543;
  t9552 = t9548 + t9549;
  t9556 = t5972*t9532;
  t9557 = t6286*t9543;
  t9558 = t9556 + t9557;
  t9584 = t2122*t1611;
  t9586 = -1.*t2149*t2124*t2226;
  t9588 = t9584 + t9586;
  t9602 = t1959*t9588;
  t9608 = t8046 + t9602;
  t9593 = -1.*t1959*t7758;
  t9597 = t1760*t9588;
  t9598 = t9593 + t9597;
  t9612 = t2976*t9598;
  t9613 = t2911*t1020*t9608;
  t9614 = t9612 + t9613;
  t9616 = t2911*t9598;
  t9617 = -1.*t1020*t2976*t9608;
  t9619 = t9616 + t9617;
  t9621 = -1.*t4408*t9614;
  t9629 = t4165*t9619;
  t9634 = t9621 + t9629;
  t9641 = t4165*t9614;
  t9644 = t4408*t9619;
  t9650 = t9641 + t9644;
  t9652 = t5380*t9634;
  t9654 = t5235*t9650;
  t9655 = t9652 + t9654;
  t9658 = t5235*t9634;
  t9669 = -1.*t5380*t9650;
  t9671 = t9658 + t9669;
  t9675 = -1.*t6286*t9655;
  t9680 = t5972*t9671;
  t9683 = t9675 + t9680;
  t9691 = t5972*t9655;
  t9692 = t6286*t9671;
  t9699 = t9691 + t9692;
  t9720 = t2122*t1611*t2124;
  t9722 = -1.*t2149*t2226;
  t9726 = t9720 + t9722;
  t9742 = t1760*t9726;
  t9748 = t1959*t2473;
  t9758 = t9742 + t9748;
  t9733 = -1.*t1959*t9726;
  t9737 = t9733 + t2892;
  t9769 = t2976*t9737;
  t9771 = t2911*t1020*t9758;
  t9772 = t9769 + t9771;
  t9783 = t2911*t9737;
  t9787 = -1.*t1020*t2976*t9758;
  t9788 = t9783 + t9787;
  t9797 = -1.*t4408*t9772;
  t9800 = t4165*t9788;
  t9801 = t9797 + t9800;
  t9806 = t4165*t9772;
  t9807 = t4408*t9788;
  t9810 = t9806 + t9807;
  t9814 = t5380*t9801;
  t9816 = t5235*t9810;
  t9817 = t9814 + t9816;
  t9822 = t5235*t9801;
  t9824 = -1.*t5380*t9810;
  t9828 = t9822 + t9824;
  t9838 = -1.*t6286*t9817;
  t9839 = t5972*t9828;
  t9840 = t9838 + t9839;
  t9852 = t5972*t9817;
  t9853 = t6286*t9828;
  t9857 = t9852 + t9853;
  t9910 = t1760*t432*t2122;
  t9911 = -1.*t432*t1959*t2226;
  t9921 = t9910 + t9911;
  t9901 = -1.*t432*t2122*t1959;
  t9902 = -1.*t1760*t432*t2226;
  t9903 = t9901 + t9902;
  t9928 = t2976*t9903;
  t9932 = t2911*t1020*t9921;
  t9935 = t9928 + t9932;
  t9946 = t2911*t9903;
  t9948 = -1.*t1020*t2976*t9921;
  t9949 = t9946 + t9948;
  t9954 = -1.*t4408*t9935;
  t9955 = t4165*t9949;
  t9957 = t9954 + t9955;
  t9959 = t4165*t9935;
  t9960 = t4408*t9949;
  t9966 = t9959 + t9960;
  t9972 = t5380*t9957;
  t9975 = t5235*t9966;
  t9980 = t9972 + t9975;
  t9988 = t5235*t9957;
  t9990 = -1.*t5380*t9966;
  t9991 = t9988 + t9990;
  t9996 = -1.*t6286*t9980;
  t9998 = t5972*t9991;
  t10003 = t9996 + t9998;
  t10009 = t5972*t9980;
  t10010 = t6286*t9991;
  t10013 = t10009 + t10010;
  t10066 = -1.*t1760*t7869;
  t10070 = t9593 + t10066;
  t10085 = t2976*t10070;
  t10087 = t2911*t1020*t8115;
  t10093 = t10085 + t10087;
  t10099 = t2911*t10070;
  t10101 = -1.*t1020*t2976*t8115;
  t10107 = t10099 + t10101;
  t10117 = -1.*t4408*t10093;
  t10120 = t4165*t10107;
  t10122 = t10117 + t10120;
  t10125 = t4165*t10093;
  t10127 = t4408*t10107;
  t10128 = t10125 + t10127;
  t10135 = t5380*t10122;
  t10136 = t5235*t10128;
  t10140 = t10135 + t10136;
  t10147 = t5235*t10122;
  t10152 = -1.*t5380*t10128;
  t10153 = t10147 + t10152;
  t10160 = -1.*t6286*t10140;
  t10162 = t5972*t10153;
  t10164 = t10160 + t10162;
  t10171 = t5972*t10140;
  t10182 = t6286*t10153;
  t10183 = t10171 + t10182;
  t10044 = 0.135*t1760;
  t10048 = t10044 + t2374;
  t10054 = 0.07996*t1760;
  t10056 = -0.135*t1959;
  t10062 = t10054 + t10056;
  t10220 = t2149*t2122;
  t10222 = t1611*t2124*t2226;
  t10223 = t10220 + t10222;
  t10247 = -1.*t1959*t10223;
  t10248 = t9742 + t10247;
  t10230 = -1.*t1760*t10223;
  t10236 = t9733 + t10230;
  t10266 = t2976*t10236;
  t10267 = t2911*t1020*t10248;
  t10268 = t10266 + t10267;
  t10271 = t2911*t10236;
  t10272 = -1.*t1020*t2976*t10248;
  t10275 = t10271 + t10272;
  t10278 = -1.*t4408*t10268;
  t10279 = t4165*t10275;
  t10280 = t10278 + t10279;
  t10284 = t4165*t10268;
  t10290 = t4408*t10275;
  t10292 = t10284 + t10290;
  t10295 = t5380*t10280;
  t10296 = t5235*t10292;
  t10297 = t10295 + t10296;
  t10304 = t5235*t10280;
  t10311 = -1.*t5380*t10292;
  t10312 = t10304 + t10311;
  t10316 = -1.*t6286*t10297;
  t10320 = t5972*t10312;
  t10321 = t10316 + t10320;
  t10325 = t5972*t10297;
  t10326 = t6286*t10312;
  t10329 = t10325 + t10326;
  t9908 = t3062*t9903;
  t9922 = -0.1306*t582*t9921;
  t9923 = t2630*t9921;
  t9924 = t1020*t3668*t9921;
  t9940 = t4498*t9935;
  t9951 = t5200*t9949;
  t9958 = t5493*t9957;
  t9967 = t5753*t9966;
  t9985 = t6329*t9980;
  t9993 = t6806*t9991;
  t10005 = t7042*t10003;
  t10014 = t7343*t10013;
  t10016 = t6947*t10003;
  t10018 = t6884*t10013;
  t10022 = t10016 + t10018;
  t10024 = -0.02565*t10022;
  t10028 = t6884*t10003;
  t10033 = -1.*t6947*t10013;
  t10037 = t10028 + t10033;
  t10040 = -1.03824*t10037;
  t8143 = -1.*t2149*t432*t1020;
  t8156 = t582*t8001;
  t8158 = t8143 + t8156;
  t10389 = -1.*t4165*t2976*t8158;
  t10391 = -1.*t2911*t4408*t8158;
  t10399 = t10389 + t10391;
  t10403 = t2911*t4165*t8158;
  t10405 = -1.*t2976*t4408*t8158;
  t10407 = t10403 + t10405;
  t10415 = t5380*t10399;
  t10418 = t5235*t10407;
  t10420 = t10415 + t10418;
  t10422 = t5235*t10399;
  t10423 = -1.*t5380*t10407;
  t10424 = t10422 + t10423;
  t10428 = -1.*t6286*t10420;
  t10435 = t5972*t10424;
  t10436 = t10428 + t10435;
  t10439 = t5972*t10420;
  t10441 = t6286*t10424;
  t10443 = t10439 + t10441;
  t10368 = -0.135*t582;
  t10369 = -0.08055*t1020;
  t10370 = t10368 + t10369;
  t10376 = 0.08055*t582;
  t10378 = t10376 + t1059;
  t10463 = t1959*t9726;
  t10464 = t1760*t10223;
  t10465 = t10463 + t10464;
  t10467 = -1.*t432*t1020*t1611;
  t10470 = t582*t10465;
  t10471 = t10467 + t10470;
  t10482 = -1.*t4165*t2976*t10471;
  t10483 = -1.*t2911*t4408*t10471;
  t10485 = t10482 + t10483;
  t10487 = t2911*t4165*t10471;
  t10488 = -1.*t2976*t4408*t10471;
  t10492 = t10487 + t10488;
  t10495 = t5380*t10485;
  t10498 = t5235*t10492;
  t10500 = t10495 + t10498;
  t10503 = t5235*t10485;
  t10504 = -1.*t5380*t10492;
  t10505 = t10503 + t10504;
  t10508 = -1.*t6286*t10500;
  t10509 = t5972*t10505;
  t10512 = t10508 + t10509;
  t10514 = t5972*t10500;
  t10515 = t6286*t10505;
  t10518 = t10514 + t10515;
  t10535 = t432*t2122*t1959;
  t10537 = t1760*t432*t2226;
  t10542 = t10535 + t10537;
  t10545 = t1020*t2124;
  t10548 = t582*t10542;
  t10549 = t10545 + t10548;
  t10562 = -1.*t4165*t2976*t10549;
  t10563 = -1.*t2911*t4408*t10549;
  t10564 = t10562 + t10563;
  t10567 = t2911*t4165*t10549;
  t10568 = -1.*t2976*t4408*t10549;
  t10569 = t10567 + t10568;
  t10572 = t5380*t10564;
  t10574 = t5235*t10569;
  t10575 = t10572 + t10574;
  t10580 = t5235*t10564;
  t10582 = -1.*t5380*t10569;
  t10583 = t10580 + t10582;
  t10585 = -1.*t6286*t10575;
  t10586 = t5972*t10583;
  t10587 = t10585 + t10586;
  t10589 = t5972*t10575;
  t10591 = t6286*t10583;
  t10596 = t10589 + t10591;
  t10624 = -1.*t2976*t8115;
  t10626 = -1.*t2911*t8338;
  t10627 = t10624 + t10626;
  t10630 = t4408*t10627;
  t10631 = t10630 + t8617;
  t10633 = t4165*t10627;
  t10634 = -1.*t4408*t8577;
  t10636 = t10633 + t10634;
  t10638 = -1.*t5380*t10631;
  t10639 = t5235*t10636;
  t10640 = t10638 + t10639;
  t10642 = t5235*t10631;
  t10643 = t5380*t10636;
  t10645 = t10642 + t10643;
  t10647 = t6286*t10640;
  t10650 = t5972*t10645;
  t10651 = t10647 + t10650;
  t10654 = t5972*t10640;
  t10655 = -1.*t6286*t10645;
  t10656 = t10654 + t10655;
  t10616 = 0.08055*t2911;
  t10617 = t10616 + t3606;
  t10620 = -0.01004*t2911;
  t10621 = -0.08055*t2976;
  t10622 = t10620 + t10621;
  t10669 = t582*t432*t1611;
  t10670 = t1020*t10465;
  t10671 = t10669 + t10670;
  t10673 = -1.*t2976*t10248;
  t10674 = -1.*t2911*t10671;
  t10675 = t10673 + t10674;
  t10677 = t2911*t10248;
  t10678 = -1.*t2976*t10671;
  t10681 = t10677 + t10678;
  t10683 = t4408*t10675;
  t10684 = t4165*t10681;
  t10685 = t10683 + t10684;
  t10687 = t4165*t10675;
  t10690 = -1.*t4408*t10681;
  t10691 = t10687 + t10690;
  t10693 = -1.*t5380*t10685;
  t10694 = t5235*t10691;
  t10695 = t10693 + t10694;
  t10697 = t5235*t10685;
  t10698 = t5380*t10691;
  t10699 = t10697 + t10698;
  t10701 = t6286*t10695;
  t10702 = t5972*t10699;
  t10703 = t10701 + t10702;
  t10705 = t5972*t10695;
  t10706 = -1.*t6286*t10699;
  t10707 = t10705 + t10706;
  t10721 = -1.*t582*t2124;
  t10722 = t1020*t10542;
  t10723 = t10721 + t10722;
  t10725 = -1.*t2976*t9921;
  t10726 = -1.*t2911*t10723;
  t10727 = t10725 + t10726;
  t10729 = t2911*t9921;
  t10730 = -1.*t2976*t10723;
  t10731 = t10729 + t10730;
  t10733 = t4408*t10727;
  t10734 = t4165*t10731;
  t10735 = t10733 + t10734;
  t10737 = t4165*t10727;
  t10738 = -1.*t4408*t10731;
  t10739 = t10737 + t10738;
  t10742 = -1.*t5380*t10735;
  t10743 = t5235*t10739;
  t10744 = t10742 + t10743;
  t10746 = t5235*t10735;
  t10747 = t5380*t10739;
  t10748 = t10746 + t10747;
  t10751 = t6286*t10744;
  t10752 = t5972*t10748;
  t10753 = t10751 + t10752;
  t10755 = t5972*t10744;
  t10756 = -1.*t6286*t10748;
  t10757 = t10755 + t10756;
  t10782 = -1.*t4165*t8453;
  t10784 = t10782 + t10634;
  t10788 = -1.*t5380*t8624;
  t10789 = t5235*t10784;
  t10790 = t10788 + t10789;
  t10792 = t5380*t10784;
  t10793 = t8828 + t10792;
  t10795 = t6286*t10790;
  t10796 = t5972*t10793;
  t10797 = t10795 + t10796;
  t10799 = t5972*t10790;
  t10801 = -1.*t6286*t10793;
  t10802 = t10799 + t10801;
  t10771 = -0.13004*t4165;
  t10773 = -0.08055*t4408;
  t10775 = t10771 + t10773;
  t10778 = 0.08055*t4165;
  t10779 = t10778 + t4492;
  t10814 = t2976*t10248;
  t10815 = t2911*t10671;
  t10816 = t10814 + t10815;
  t10821 = -1.*t4408*t10816;
  t10822 = t10821 + t10684;
  t10824 = -1.*t4165*t10816;
  t10825 = t10824 + t10690;
  t10827 = -1.*t5380*t10822;
  t10828 = t5235*t10825;
  t10830 = t10827 + t10828;
  t10832 = t5235*t10822;
  t10833 = t5380*t10825;
  t10834 = t10832 + t10833;
  t10836 = t6286*t10830;
  t10837 = t5972*t10834;
  t10838 = t10836 + t10837;
  t10840 = t5972*t10830;
  t10841 = -1.*t6286*t10834;
  t10842 = t10840 + t10841;
  t10854 = t2976*t9921;
  t10855 = t2911*t10723;
  t10856 = t10854 + t10855;
  t10861 = -1.*t4408*t10856;
  t10862 = t10861 + t10734;
  t10864 = -1.*t4165*t10856;
  t10865 = t10864 + t10738;
  t10867 = -1.*t5380*t10862;
  t10868 = t5235*t10865;
  t10869 = t10867 + t10868;
  t10871 = t5235*t10862;
  t10872 = t5380*t10865;
  t10873 = t10871 + t10872;
  t10875 = t6286*t10869;
  t10876 = t5972*t10873;
  t10877 = t10875 + t10876;
  t10879 = t5972*t10869;
  t10880 = -1.*t6286*t10873;
  t10881 = t10879 + t10880;
  t10900 = -1.*t5235*t8751;
  t10901 = t10788 + t10900;
  t10904 = t6286*t10901;
  t10905 = t10904 + t8881;
  t10907 = t5972*t10901;
  t10908 = -1.*t6286*t8835;
  t10909 = t10907 + t10908;
  t10892 = 0.03315*t5235;
  t10893 = t10892 + t5749;
  t10895 = -0.19074*t5235;
  t10897 = -0.03315*t5380;
  t10898 = t10895 + t10897;
  t10922 = t4165*t10816;
  t10925 = t4408*t10681;
  t10926 = t10922 + t10925;
  t10929 = -1.*t5235*t10926;
  t10930 = t10827 + t10929;
  t10932 = -1.*t5380*t10926;
  t10933 = t10832 + t10932;
  t10935 = t6286*t10930;
  t10936 = t5972*t10933;
  t10937 = t10935 + t10936;
  t10939 = t5972*t10930;
  t10940 = -1.*t6286*t10933;
  t10941 = t10939 + t10940;
  t10956 = t4165*t10856;
  t10957 = t4408*t10731;
  t10959 = t10956 + t10957;
  t10962 = -1.*t5235*t10959;
  t10963 = t10867 + t10962;
  t10965 = -1.*t5380*t10959;
  t10967 = t10871 + t10965;
  t10969 = t6286*t10963;
  t10970 = t5972*t10967;
  t10971 = t10969 + t10970;
  t10973 = t5972*t10963;
  t10974 = -1.*t6286*t10967;
  t10975 = t10973 + t10974;
  t10997 = -1.*t5972*t8815;
  t10998 = t10997 + t10908;
  t8948 = t6884*t8887;
  t10987 = -0.62554*t5972;
  t10988 = -0.01315*t6286;
  t10989 = t10987 + t10988;
  t10992 = 0.01315*t5972;
  t10994 = t10992 + t6305;
  t11010 = t5380*t10822;
  t11011 = t5235*t10926;
  t11012 = t11010 + t11011;
  t11015 = -1.*t6286*t11012;
  t11016 = t11015 + t10936;
  t11019 = -1.*t5972*t11012;
  t11020 = t11019 + t10940;
  t11032 = t5380*t10862;
  t11033 = t5235*t10959;
  t11034 = t11032 + t11033;
  t11037 = -1.*t6286*t11034;
  t11038 = t11037 + t10970;
  t11040 = -1.*t5972*t11034;
  t11041 = t11040 + t10974;
  t11001 = -1.*t6947*t8887;
  t8955 = -1.*t6947*t8909;
  t8958 = t8948 + t8955;
  t11052 = 0.05315*t6884;
  t11053 = t11052 + t7197;
  t11055 = -1.03354*t6884;
  t11056 = -0.05315*t6947;
  t11057 = t11055 + t11056;
  t11022 = -1.*t6947*t11016;
  t11066 = t5972*t11012;
  t11067 = t6286*t10933;
  t11068 = t11066 + t11067;
  t11027 = t6884*t11016;
  t11043 = -1.*t6947*t11038;
  t11081 = t5972*t11034;
  t11082 = t6286*t10967;
  t11083 = t11081 + t11082;
  t11047 = t6884*t11038;
  p_output1[0]=1.;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=0;
  p_output1[4]=1.;
  p_output1[5]=0;
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=1.;
  p_output1[9]=t2105*t2283 + t2397*t2473 + t2630*t2897 + t3062*t3249 + t3668*t3970 - 1.*t1335*t1611*t432 + t4498*t4992 + t5200*t5215 + t5493*t5705 - 0.1306*(t1020*t1611*t432 + t2897*t582) + t5753*t5853 + t6329*t6565 + t6806*t6856 + t7042*t7132 + t7343*t7358 - 0.02565*(t6947*t7132 + t6884*t7358) - 1.03824*(t6884*t7132 - 1.*t6947*t7358);
  p_output1[10]=t1335*t2149*t432 + t2105*t7758 + t2397*t7869 + t2630*t8001 + t3062*t8115 - 0.1306*t8158 + t3668*t8338 + t4498*t8453 + t5200*t8577 + t5493*t8624 + t5753*t8751 + t6329*t8815 + t6806*t8835 + t7042*t8887 + t7343*t8909 - 0.02565*(t6947*t8887 + t6884*t8909) - 1.03824*t8958;
  p_output1[11]=0;
  p_output1[12]=-1.*t1335*t2124*t2149 + t2105*t2122*t2149*t432 + t2149*t2226*t2397*t432 + t2630*t9007 - 0.1306*(t1020*t2124*t2149 + t582*t9007) + t3062*t9040 + t3668*t9075 + t4498*t9089 + t5200*t9109 + t5493*t9124 + t5753*t9143 + t6329*t9168 + t6806*t9181 + t7042*t9190 + t7343*t9204 - 0.02565*(t6947*t9190 + t6884*t9204) - 1.03824*(t6884*t9190 - 1.*t6947*t9204);
  p_output1[13]=-1.*t1335*t1611*t2124 + t1611*t2105*t2122*t432 + t1611*t2226*t2397*t432 + t2630*t9249 - 0.1306*(t1020*t1611*t2124 + t582*t9249) + t3062*t9266 + t3668*t9286 + t4498*t9300 + t5200*t9309 + t5493*t9321 + t5753*t9334 + t6329*t9348 + t6806*t9364 + t7042*t9374 + t7343*t9387 - 0.02565*(t6947*t9374 + t6884*t9387) - 1.03824*(t6884*t9374 - 1.*t6947*t9387);
  p_output1[14]=-1.*t2105*t2122*t2124 - 1.*t2124*t2226*t2397 - 1.*t1335*t432 + t2630*t9441 - 0.1306*(t1020*t432 + t582*t9441) + t3062*t9449 + t3668*t9468 + t4498*t9481 + t5200*t9487 + t5493*t9500 + t5753*t9518 + t6329*t9532 + t6806*t9543 + t7042*t9552 + t7343*t9558 - 0.02565*(t6947*t9552 + t6884*t9558) - 1.03824*(t6884*t9552 - 1.*t6947*t9558);
  p_output1[15]=t2397*t7758 + t2105*t9588 + t3062*t9598 + t2630*t9608 + t1020*t3668*t9608 - 0.1306*t582*t9608 + t4498*t9614 + t5200*t9619 + t5493*t9634 + t5753*t9650 + t6329*t9655 + t6806*t9671 + t7042*t9683 + t7343*t9699 - 0.02565*(t6947*t9683 + t6884*t9699) - 1.03824*(t6884*t9683 - 1.*t6947*t9699);
  p_output1[16]=t2105*t2473 + t2397*t9726 + t3062*t9737 + t2630*t9758 + t1020*t3668*t9758 - 0.1306*t582*t9758 + t4498*t9772 + t5200*t9788 + t5493*t9801 + t5753*t9810 + t6329*t9817 + t6806*t9828 + t7042*t9840 + t7343*t9857 - 0.02565*(t6947*t9840 + t6884*t9857) - 1.03824*(t6884*t9840 - 1.*t6947*t9857);
  p_output1[17]=t10005 + t10014 + t10024 + t10040 - 1.*t2105*t2226*t432 + t2122*t2397*t432 + t9908 + t9922 + t9923 + t9924 + t9940 + t9951 + t9958 + t9967 + t9985 + t9993;
  p_output1[18]=0;
  p_output1[19]=0;
  p_output1[20]=0;
  p_output1[21]=0;
  p_output1[22]=0;
  p_output1[23]=0;
  p_output1[24]=0;
  p_output1[25]=0;
  p_output1[26]=0;
  p_output1[27]=0;
  p_output1[28]=0;
  p_output1[29]=0;
  p_output1[30]=0;
  p_output1[31]=0;
  p_output1[32]=0;
  p_output1[33]=0;
  p_output1[34]=0;
  p_output1[35]=0;
  p_output1[36]=0;
  p_output1[37]=0;
  p_output1[38]=0;
  p_output1[39]=t10070*t3062 + t10093*t4498 + t10107*t5200 + t10122*t5493 + t10128*t5753 + t10140*t6329 + t10153*t6806 - 0.02565*(t10183*t6884 + t10164*t6947) - 1.03824*(t10164*t6884 - 1.*t10183*t6947) + t10164*t7042 + t10183*t7343 + t10048*t7758 + t10062*t7869 + t2630*t8115 + t1020*t3668*t8115 - 0.1306*t582*t8115;
  p_output1[40]=t10062*t10223 + t10248*t2630 + t10236*t3062 + t1020*t10248*t3668 + t10268*t4498 + t10275*t5200 + t10280*t5493 + t10292*t5753 - 0.1306*t10248*t582 + t10297*t6329 + t10312*t6806 - 0.02565*(t10329*t6884 + t10321*t6947) - 1.03824*(t10321*t6884 - 1.*t10329*t6947) + t10321*t7042 + t10329*t7343 + t10048*t9726;
  p_output1[41]=t10005 + t10014 + t10024 + t10040 + t10048*t2122*t432 + t10062*t2226*t432 + t9908 + t9922 + t9923 + t9924 + t9940 + t9951 + t9958 + t9967 + t9985 + t9993;
  p_output1[42]=t10370*t2149*t432 + t10399*t5493 + t10407*t5753 + t10420*t6329 + t10424*t6806 - 0.02565*(t10443*t6884 + t10436*t6947) - 1.03824*(t10436*t6884 - 1.*t10443*t6947) + t10436*t7042 + t10443*t7343 + t10378*t8001 - 0.1306*(-1.*t2149*t432*t582 - 1.*t1020*t8001) + t3668*t8158 + t2911*t4498*t8158 - 1.*t2976*t5200*t8158;
  p_output1[43]=t10378*t10465 + t10471*t3668 - 0.1306*(-1.*t1020*t10465 + t3833) + t10370*t1611*t432 + t10471*t2911*t4498 - 1.*t10471*t2976*t5200 + t10485*t5493 + t10492*t5753 + t10500*t6329 + t10505*t6806 - 0.02565*(t10518*t6884 + t10512*t6947) - 1.03824*(t10512*t6884 - 1.*t10518*t6947) + t10512*t7042 + t10518*t7343;
  p_output1[44]=t10378*t10542 - 1.*t10370*t2124 + t10549*t3668 + t10549*t2911*t4498 - 1.*t10549*t2976*t5200 + t10564*t5493 + t10569*t5753 - 0.1306*(-1.*t1020*t10542 + t2124*t582) + t10575*t6329 + t10583*t6806 - 0.02565*(t10596*t6884 + t10587*t6947) - 1.03824*(t10587*t6884 - 1.*t10596*t6947) + t10587*t7042 + t10596*t7343;
  p_output1[45]=t10627*t5200 + t10636*t5493 + t10631*t5753 + t10645*t6329 + t10640*t6806 - 1.03824*(t10656*t6884 - 1.*t10651*t6947) - 0.02565*(t10651*t6884 + t10656*t6947) + t10656*t7042 + t10651*t7343 + t10617*t8115 + t10622*t8338 + t4498*t8577;
  p_output1[46]=t10248*t10617 + t10622*t10671 + t10681*t4498 + t10675*t5200 + t10691*t5493 + t10685*t5753 + t10699*t6329 + t10695*t6806 - 1.03824*(t10707*t6884 - 1.*t10703*t6947) - 0.02565*(t10703*t6884 + t10707*t6947) + t10707*t7042 + t10703*t7343;
  p_output1[47]=t10622*t10723 + t10731*t4498 + t10727*t5200 + t10739*t5493 + t10735*t5753 + t10748*t6329 + t10744*t6806 - 1.03824*(t10757*t6884 - 1.*t10753*t6947) - 0.02565*(t10753*t6884 + t10757*t6947) + t10757*t7042 + t10753*t7343 + t10617*t9921;
  p_output1[48]=t10784*t5493 + t10793*t6329 + t10790*t6806 - 1.03824*(t10802*t6884 - 1.*t10797*t6947) - 0.02565*(t10797*t6884 + t10802*t6947) + t10802*t7042 + t10797*t7343 + t10775*t8453 + t10779*t8577 + t5753*t8624;
  p_output1[49]=t10681*t10779 + t10775*t10816 + t10825*t5493 + t10822*t5753 + t10834*t6329 + t10830*t6806 - 1.03824*(t10842*t6884 - 1.*t10838*t6947) - 0.02565*(t10838*t6884 + t10842*t6947) + t10842*t7042 + t10838*t7343;
  p_output1[50]=t10731*t10779 + t10775*t10856 + t10865*t5493 + t10862*t5753 + t10873*t6329 + t10869*t6806 - 1.03824*(t10881*t6884 - 1.*t10877*t6947) - 0.02565*(t10877*t6884 + t10881*t6947) + t10881*t7042 + t10877*t7343;
  p_output1[51]=t10901*t6806 - 1.03824*(t10909*t6884 - 1.*t10905*t6947) - 0.02565*(t10905*t6884 + t10909*t6947) + t10909*t7042 + t10905*t7343 + t10893*t8624 + t10898*t8751 + t6329*t8835;
  p_output1[52]=t10822*t10893 + t10898*t10926 + t10933*t6329 + t10930*t6806 - 1.03824*(t10941*t6884 - 1.*t10937*t6947) - 0.02565*(t10937*t6884 + t10941*t6947) + t10941*t7042 + t10937*t7343;
  p_output1[53]=t10862*t10893 + t10898*t10959 + t10967*t6329 + t10963*t6806 - 1.03824*(t10975*t6884 - 1.*t10971*t6947) - 0.02565*(t10971*t6884 + t10975*t6947) + t10975*t7042 + t10971*t7343;
  p_output1[54]=-1.03824*(t11001 + t10998*t6884) + t10998*t7042 + t10989*t8815 + t10994*t8835 + t7343*t8887 - 0.02565*(t10998*t6947 + t8948);
  p_output1[55]=t10933*t10994 + t10989*t11012 - 1.03824*(t11022 + t11020*t6884) - 0.02565*(t11027 + t11020*t6947) + t11020*t7042 + t11016*t7343;
  p_output1[56]=t10967*t10994 + t10989*t11034 - 1.03824*(t11043 + t11041*t6884) - 0.02565*(t11047 + t11041*t6947) + t11041*t7042 + t11038*t7343;
  p_output1[57]=t11053*t8887 + t11057*t8909 - 1.03824*(t11001 - 1.*t6884*t8909) - 0.02565*t8958;
  p_output1[58]=t11016*t11053 + t11057*t11068 - 1.03824*(t11022 - 1.*t11068*t6884) - 0.02565*(t11027 - 1.*t11068*t6947);
  p_output1[59]=t11038*t11053 + t11057*t11083 - 1.03824*(t11043 - 1.*t11083*t6884) - 0.02565*(t11047 - 1.*t11083*t6947);
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "One input(s) required (var1).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 20 && ncols == 1) && 
      !(mrows == 1 && ncols == 20))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 3, (mwSize) 20, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1);


}

#else // MATLAB_MEX_FILE

#include "Jp_RightToe_mex.hh"

namespace SymExpression
{

void Jp_RightToe_mex_raw(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}

}

#endif // MATLAB_MEX_FILE
