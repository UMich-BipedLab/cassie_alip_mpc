/*
 * Automatically Generated from Mathematica.
 * Mon 11 May 2020 22:32:48 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t1371;
  double t1316;
  double t1397;
  double t1335;
  double t1415;
  double t1228;
  double t1307;
  double t1336;
  double t1425;
  double t1434;
  double t1545;
  double t1586;
  double t1616;
  double t1631;
  double t1642;
  double t1705;
  double t1709;
  double t1710;
  double t1714;
  double t1730;
  double t1733;
  double t1747;
  double t1810;
  double t943;
  double t963;
  double t1866;
  double t1934;
  double t1764;
  double t1868;
  double t1899;
  double t779;
  double t1943;
  double t1955;
  double t1962;
  double t2032;
  double t1917;
  double t1982;
  double t1988;
  double t765;
  double t2058;
  double t2073;
  double t2075;
  double t2159;
  double t2018;
  double t2090;
  double t2123;
  double t657;
  double t2168;
  double t2175;
  double t2203;
  double t2454;
  double t2463;
  double t2483;
  double t2549;
  double t2597;
  double t2601;
  double t2433;
  double t2486;
  double t2491;
  double t2494;
  double t2614;
  double t2616;
  double t2638;
  double t2655;
  double t2679;
  double t2635;
  double t2687;
  double t2693;
  double t2730;
  double t2736;
  double t2740;
  double t2695;
  double t2750;
  double t2769;
  double t2782;
  double t2783;
  double t2814;
  double t2770;
  double t2816;
  double t2820;
  double t2865;
  double t2888;
  double t2900;
  double t3040;
  double t3044;
  double t3034;
  double t3035;
  double t3037;
  double t3052;
  double t3080;
  double t3102;
  double t3106;
  double t3109;
  double t3101;
  double t3112;
  double t3125;
  double t3144;
  double t3155;
  double t3162;
  double t3128;
  double t3170;
  double t3171;
  double t3180;
  double t3182;
  double t3185;
  double t3173;
  double t3226;
  double t3234;
  double t3242;
  double t3245;
  double t3248;
  double t3364;
  double t3367;
  double t3378;
  double t3328;
  double t3331;
  double t3333;
  double t3346;
  double t3347;
  double t3357;
  double t3363;
  double t3381;
  double t3384;
  double t3407;
  double t3409;
  double t3418;
  double t3393;
  double t3423;
  double t3442;
  double t3462;
  double t3464;
  double t3476;
  double t3453;
  double t3479;
  double t3486;
  double t3490;
  double t3497;
  double t3502;
  double t3487;
  double t3508;
  double t3509;
  double t3526;
  double t3569;
  double t3577;
  double t3689;
  double t3709;
  double t3717;
  double t3669;
  double t3673;
  double t3674;
  double t3737;
  double t3741;
  double t3743;
  double t3653;
  double t3686;
  double t3718;
  double t3719;
  double t3721;
  double t3727;
  double t3732;
  double t3744;
  double t3747;
  double t3775;
  double t3784;
  double t3791;
  double t3758;
  double t3817;
  double t3820;
  double t3824;
  double t3840;
  double t3846;
  double t3821;
  double t3868;
  double t3873;
  double t3880;
  double t3885;
  double t3888;
  double t3876;
  double t3890;
  double t3898;
  double t3915;
  double t3926;
  double t3931;
  double t4044;
  double t4046;
  double t4048;
  double t4060;
  double t4074;
  double t4093;
  double t4103;
  double t4116;
  double t4124;
  double t4094;
  double t4134;
  double t4144;
  double t4148;
  double t4156;
  double t4171;
  double t4145;
  double t4182;
  double t4185;
  double t4196;
  double t4212;
  double t4221;
  double t4187;
  double t4230;
  double t4250;
  double t4256;
  double t4261;
  double t4271;
  double t4361;
  double t4363;
  double t4369;
  double t4395;
  double t4399;
  double t4406;
  double t4413;
  double t4405;
  double t4433;
  double t4438;
  double t4448;
  double t4451;
  double t4456;
  double t4440;
  double t4457;
  double t4466;
  double t4471;
  double t4473;
  double t4479;
  double t4545;
  double t4550;
  double t4552;
  double t4561;
  double t4572;
  double t4589;
  double t4603;
  double t4586;
  double t4608;
  double t4610;
  double t4617;
  double t4630;
  double t4637;
  double t4759;
  double t4760;
  double t4767;
  double t4779;
  double t4780;
  double t4790;
  double t4792;
  double t4782;
  double t4814;
  double t4858;
  double t4870;
  double t4892;
  double t4970;
  double t4982;
  double t4984;
  double t5012;
  double t5015;
  double t5025;
  double t5032;
  double t5055;
  double t5059;
  double t5062;
  double t5065;
  double t5066;
  double t5067;
  double t5070;
  double t5071;
  double t5082;
  double t5083;
  double t5086;
  double t5079;
  double t5088;
  double t5091;
  double t5122;
  double t5133;
  double t5134;
  double t5120;
  double t5135;
  double t5142;
  double t5162;
  double t5171;
  double t5181;
  double t5274;
  double t5296;
  double t5255;
  double t5258;
  double t5261;
  double t5264;
  double t5299;
  double t5312;
  double t5331;
  double t5347;
  double t5365;
  double t5321;
  double t5366;
  double t5385;
  double t5404;
  double t5407;
  double t5408;
  double t5391;
  double t5413;
  double t5414;
  double t5418;
  double t5421;
  double t5425;
  double t5415;
  double t5428;
  double t5429;
  double t5438;
  double t5449;
  double t5471;
  double t5578;
  double t5579;
  double t5558;
  double t5561;
  double t5565;
  double t5587;
  double t5588;
  double t5630;
  double t5637;
  double t5648;
  double t5593;
  double t5649;
  double t5656;
  double t5658;
  double t5670;
  double t5675;
  double t5657;
  double t5676;
  double t5677;
  double t5686;
  double t5690;
  double t5692;
  double t5678;
  double t5710;
  double t5725;
  double t5734;
  double t5744;
  double t5760;
  double t5862;
  double t5870;
  double t5878;
  double t5806;
  double t5820;
  double t5821;
  double t5824;
  double t5826;
  double t5841;
  double t5843;
  double t5891;
  double t5902;
  double t5920;
  double t5947;
  double t5948;
  double t5907;
  double t5952;
  double t5958;
  double t5964;
  double t5965;
  double t5967;
  double t5963;
  double t5969;
  double t5972;
  double t5996;
  double t6010;
  double t6022;
  double t5975;
  double t6023;
  double t6030;
  double t6049;
  double t6053;
  double t6059;
  double t6119;
  double t6129;
  double t6143;
  double t6152;
  double t6158;
  double t6160;
  double t6174;
  double t6175;
  double t6180;
  double t6173;
  double t6186;
  double t6196;
  double t6216;
  double t6228;
  double t6230;
  double t6209;
  double t6231;
  double t6251;
  double t6264;
  double t6279;
  double t6293;
  double t6257;
  double t6300;
  double t6305;
  double t6312;
  double t6313;
  double t6326;
  double t6401;
  double t6402;
  double t6417;
  double t6421;
  double t6442;
  double t6454;
  double t6457;
  double t6449;
  double t6462;
  double t6468;
  double t6482;
  double t6485;
  double t6486;
  double t6480;
  double t6487;
  double t6488;
  double t6499;
  double t6508;
  double t6510;
  double t6584;
  double t6587;
  double t6589;
  double t6591;
  double t6593;
  double t6629;
  double t6630;
  double t6626;
  double t6633;
  double t6640;
  double t6651;
  double t6653;
  double t6656;
  double t6692;
  double t6693;
  double t6710;
  double t6713;
  double t6717;
  double t6738;
  double t6739;
  double t6720;
  double t6760;
  double t6796;
  double t6800;
  double t6802;
  double t4937;
  double t4938;
  double t6859;
  double t6862;
  double t6864;
  double t6871;
  double t6872;
  double t6880;
  double t6882;
  double t6883;
  double t6887;
  double t6901;
  double t6902;
  double t6905;
  double t6895;
  double t6908;
  double t6909;
  double t6911;
  double t6912;
  double t6919;
  double t6910;
  double t6921;
  double t6923;
  double t6925;
  double t6933;
  double t6941;
  double t6993;
  double t6994;
  double t6995;
  double t6978;
  double t6980;
  double t6984;
  double t6988;
  double t6997;
  double t6998;
  double t7010;
  double t7011;
  double t7014;
  double t7002;
  double t7018;
  double t7023;
  double t7032;
  double t7033;
  double t7038;
  double t7025;
  double t7039;
  double t7040;
  double t7045;
  double t7059;
  double t7062;
  double t7044;
  double t7066;
  double t7067;
  double t7072;
  double t7073;
  double t7075;
  double t7068;
  double t7083;
  double t7085;
  double t7088;
  double t7091;
  double t7097;
  double t7100;
  double t7101;
  double t7102;
  double t7112;
  double t7115;
  double t7116;
  double t7120;
  double t7125;
  double t7126;
  double t7140;
  double t7163;
  double t7168;
  double t7138;
  double t7170;
  double t7171;
  double t7184;
  double t7192;
  double t7199;
  double t7183;
  double t7200;
  double t7204;
  double t7209;
  double t7210;
  double t7213;
  double t7207;
  double t7214;
  double t7216;
  double t7222;
  double t7225;
  double t7226;
  double t7255;
  double t7259;
  double t7262;
  double t7268;
  double t7269;
  double t7274;
  double t7279;
  double t7270;
  double t7280;
  double t7283;
  double t7285;
  double t7287;
  double t7293;
  double t7284;
  double t7294;
  double t7304;
  double t7310;
  double t7315;
  double t7320;
  double t7358;
  double t7366;
  double t7369;
  double t7373;
  double t7378;
  double t7392;
  double t7399;
  double t7391;
  double t7400;
  double t7403;
  double t7407;
  double t7408;
  double t7411;
  double t7445;
  double t7454;
  double t7458;
  double t7465;
  double t7466;
  double t7476;
  double t7479;
  double t7472;
  double t7495;
  double t7523;
  double t7524;
  double t7530;
  double t7582;
  double t7584;
  double t7586;
  double t7566;
  double t7568;
  double t7569;
  double t7573;
  double t7574;
  double t7578;
  double t7581;
  double t7587;
  double t7589;
  double t7599;
  double t7603;
  double t7605;
  double t7592;
  double t7607;
  double t7608;
  double t7612;
  double t7619;
  double t7621;
  double t7610;
  double t7625;
  double t7626;
  double t7638;
  double t7646;
  double t7650;
  double t7634;
  double t7659;
  double t7662;
  double t7664;
  double t7665;
  double t7666;
  double t2146;
  double t2218;
  double t2242;
  double t2295;
  double t2302;
  double t2322;
  double t2826;
  double t2927;
  double t2929;
  double t2954;
  double t2973;
  double t2994;
  double t3237;
  double t3251;
  double t3257;
  double t3265;
  double t3286;
  double t3293;
  double t3521;
  double t3589;
  double t3609;
  double t3617;
  double t3627;
  double t3634;
  double t3905;
  double t3962;
  double t3967;
  double t3972;
  double t3986;
  double t4003;
  double t4251;
  double t4277;
  double t4278;
  double t4283;
  double t4298;
  double t4302;
  double t4468;
  double t4492;
  double t4500;
  double t4513;
  double t4514;
  double t4528;
  double t4613;
  double t4640;
  double t4643;
  double t4683;
  double t4685;
  double t4699;
  double t4794;
  double t4799;
  double t4822;
  double t4823;
  double t4894;
  double t4896;
  double t5150;
  double t5209;
  double t5214;
  double t5226;
  double t5227;
  double t5233;
  double t5433;
  double t5476;
  double t5480;
  double t5502;
  double t5528;
  double t5537;
  double t5732;
  double t5764;
  double t5778;
  double t5789;
  double t5794;
  double t5797;
  double t6040;
  double t6064;
  double t6067;
  double t6076;
  double t6079;
  double t6101;
  double t6310;
  double t6331;
  double t6342;
  double t6360;
  double t6361;
  double t6394;
  double t6498;
  double t6531;
  double t6536;
  double t6546;
  double t6564;
  double t6565;
  double t6641;
  double t6658;
  double t6660;
  double t6670;
  double t6671;
  double t6678;
  double t6741;
  double t6755;
  double t6761;
  double t6764;
  double t6805;
  double t6809;
  double t6817;
  double t6827;
  double t6844;
  double t6845;
  double t6846;
  double t4954;
  double t6924;
  double t6942;
  double t6945;
  double t6948;
  double t6957;
  double t6960;
  double t8087;
  double t8088;
  double t8092;
  double t7221;
  double t7227;
  double t7230;
  double t7243;
  double t7244;
  double t7248;
  double t7307;
  double t7321;
  double t7322;
  double t7329;
  double t7331;
  double t7332;
  double t7405;
  double t7419;
  double t7422;
  double t7426;
  double t7430;
  double t7433;
  double t7488;
  double t7491;
  double t7496;
  double t7501;
  double t7531;
  double t7532;
  double t7538;
  double t7544;
  double t7663;
  double t7670;
  double t7671;
  double t7675;
  double t7676;
  double t7679;
  t1371 = Cos(var1[3]);
  t1316 = Cos(var1[5]);
  t1397 = Sin(var1[4]);
  t1335 = Sin(var1[3]);
  t1415 = Sin(var1[5]);
  t1228 = Cos(var1[7]);
  t1307 = Cos(var1[6]);
  t1336 = -1.*t1316*t1335;
  t1425 = t1371*t1397*t1415;
  t1434 = t1336 + t1425;
  t1545 = t1307*t1434;
  t1586 = t1371*t1316*t1397;
  t1616 = t1335*t1415;
  t1631 = t1586 + t1616;
  t1642 = Sin(var1[6]);
  t1705 = t1631*t1642;
  t1709 = t1545 + t1705;
  t1710 = t1228*t1709;
  t1714 = Cos(var1[4]);
  t1730 = Sin(var1[7]);
  t1733 = -1.*t1371*t1714*t1730;
  t1747 = t1710 + t1733;
  t1810 = Cos(var1[9]);
  t943 = Cos(var1[8]);
  t963 = Sin(var1[9]);
  t1866 = Sin(var1[8]);
  t1934 = Cos(var1[10]);
  t1764 = -1.*t943*t963*t1747;
  t1868 = -1.*t1810*t1747*t1866;
  t1899 = t1764 + t1868;
  t779 = Sin(var1[10]);
  t1943 = t1810*t943*t1747;
  t1955 = -1.*t963*t1747*t1866;
  t1962 = t1943 + t1955;
  t2032 = Cos(var1[11]);
  t1917 = t779*t1899;
  t1982 = t1934*t1962;
  t1988 = t1917 + t1982;
  t765 = Sin(var1[11]);
  t2058 = t1934*t1899;
  t2073 = -1.*t779*t1962;
  t2075 = t2058 + t2073;
  t2159 = Cos(var1[12]);
  t2018 = -1.*t765*t1988;
  t2090 = t2032*t2075;
  t2123 = t2018 + t2090;
  t657 = Sin(var1[12]);
  t2168 = t2032*t1988;
  t2175 = t765*t2075;
  t2203 = t2168 + t2175;
  t2454 = t1316*t1335;
  t2463 = -1.*t1371*t1397*t1415;
  t2483 = t2454 + t2463;
  t2549 = t1307*t2483;
  t2597 = -1.*t1631*t1642;
  t2601 = t2549 + t2597;
  t2433 = t1307*t1631;
  t2486 = t2483*t1642;
  t2491 = t2433 + t2486;
  t2494 = t943*t2491*t1730;
  t2614 = t2601*t1866;
  t2616 = t2494 + t2614;
  t2638 = t943*t2601;
  t2655 = -1.*t2491*t1730*t1866;
  t2679 = t2638 + t2655;
  t2635 = -1.*t963*t2616;
  t2687 = t1810*t2679;
  t2693 = t2635 + t2687;
  t2730 = t1810*t2616;
  t2736 = t963*t2679;
  t2740 = t2730 + t2736;
  t2695 = t779*t2693;
  t2750 = t1934*t2740;
  t2769 = t2695 + t2750;
  t2782 = t1934*t2693;
  t2783 = -1.*t779*t2740;
  t2814 = t2782 + t2783;
  t2770 = -1.*t765*t2769;
  t2816 = t2032*t2814;
  t2820 = t2770 + t2816;
  t2865 = t2032*t2769;
  t2888 = t765*t2814;
  t2900 = t2865 + t2888;
  t3040 = -1.*t1307*t1434;
  t3044 = t3040 + t2597;
  t3034 = -1.*t1434*t1642;
  t3035 = t2433 + t3034;
  t3037 = t943*t3035*t1730;
  t3052 = t3044*t1866;
  t3080 = t3037 + t3052;
  t3102 = t943*t3044;
  t3106 = -1.*t3035*t1730*t1866;
  t3109 = t3102 + t3106;
  t3101 = -1.*t963*t3080;
  t3112 = t1810*t3109;
  t3125 = t3101 + t3112;
  t3144 = t1810*t3080;
  t3155 = t963*t3109;
  t3162 = t3144 + t3155;
  t3128 = t779*t3125;
  t3170 = t1934*t3162;
  t3171 = t3128 + t3170;
  t3180 = t1934*t3125;
  t3182 = -1.*t779*t3162;
  t3185 = t3180 + t3182;
  t3173 = -1.*t765*t3171;
  t3226 = t2032*t3185;
  t3234 = t3173 + t3226;
  t3242 = t2032*t3171;
  t3245 = t765*t3185;
  t3248 = t3242 + t3245;
  t3364 = t1371*t1714*t1316*t1307;
  t3367 = -1.*t1371*t1714*t1415*t1642;
  t3378 = t3364 + t3367;
  t3328 = -1.*t1371*t1228*t1397;
  t3331 = t1371*t1714*t1307*t1415;
  t3333 = t1371*t1714*t1316*t1642;
  t3346 = t3331 + t3333;
  t3347 = t3346*t1730;
  t3357 = t3328 + t3347;
  t3363 = t943*t3357;
  t3381 = t3378*t1866;
  t3384 = t3363 + t3381;
  t3407 = t943*t3378;
  t3409 = -1.*t3357*t1866;
  t3418 = t3407 + t3409;
  t3393 = -1.*t963*t3384;
  t3423 = t1810*t3418;
  t3442 = t3393 + t3423;
  t3462 = t1810*t3384;
  t3464 = t963*t3418;
  t3476 = t3462 + t3464;
  t3453 = t779*t3442;
  t3479 = t1934*t3476;
  t3486 = t3453 + t3479;
  t3490 = t1934*t3442;
  t3497 = -1.*t779*t3476;
  t3502 = t3490 + t3497;
  t3487 = -1.*t765*t3486;
  t3508 = t2032*t3502;
  t3509 = t3487 + t3508;
  t3526 = t2032*t3486;
  t3569 = t765*t3502;
  t3577 = t3526 + t3569;
  t3689 = -1.*t1316*t1335*t1397;
  t3709 = t1371*t1415;
  t3717 = t3689 + t3709;
  t3669 = -1.*t1371*t1316;
  t3673 = -1.*t1335*t1397*t1415;
  t3674 = t3669 + t3673;
  t3737 = t1307*t3717;
  t3741 = -1.*t3674*t1642;
  t3743 = t3737 + t3741;
  t3653 = -1.*t1714*t1228*t1335;
  t3686 = t1307*t3674;
  t3718 = t3717*t1642;
  t3719 = t3686 + t3718;
  t3721 = t3719*t1730;
  t3727 = t3653 + t3721;
  t3732 = t943*t3727;
  t3744 = t3743*t1866;
  t3747 = t3732 + t3744;
  t3775 = t943*t3743;
  t3784 = -1.*t3727*t1866;
  t3791 = t3775 + t3784;
  t3758 = -1.*t963*t3747;
  t3817 = t1810*t3791;
  t3820 = t3758 + t3817;
  t3824 = t1810*t3747;
  t3840 = t963*t3791;
  t3846 = t3824 + t3840;
  t3821 = t779*t3820;
  t3868 = t1934*t3846;
  t3873 = t3821 + t3868;
  t3880 = t1934*t3820;
  t3885 = -1.*t779*t3846;
  t3888 = t3880 + t3885;
  t3876 = -1.*t765*t3873;
  t3890 = t2032*t3888;
  t3898 = t3876 + t3890;
  t3915 = t2032*t3873;
  t3926 = t765*t3888;
  t3931 = t3915 + t3926;
  t4044 = t1371*t1714*t1228;
  t4046 = t1709*t1730;
  t4048 = t4044 + t4046;
  t4060 = -1.*t943*t4048;
  t4074 = -1.*t3035*t1866;
  t4093 = t4060 + t4074;
  t4103 = t943*t3035;
  t4116 = -1.*t4048*t1866;
  t4124 = t4103 + t4116;
  t4094 = t963*t4093;
  t4134 = t1810*t4124;
  t4144 = t4094 + t4134;
  t4148 = t1810*t4093;
  t4156 = -1.*t963*t4124;
  t4171 = t4148 + t4156;
  t4145 = -1.*t779*t4144;
  t4182 = t1934*t4171;
  t4185 = t4145 + t4182;
  t4196 = t1934*t4144;
  t4212 = t779*t4171;
  t4221 = t4196 + t4212;
  t4187 = t765*t4185;
  t4230 = t2032*t4221;
  t4250 = t4187 + t4230;
  t4256 = t2032*t4185;
  t4261 = -1.*t765*t4221;
  t4271 = t4256 + t4261;
  t4361 = t943*t4048;
  t4363 = t3035*t1866;
  t4369 = t4361 + t4363;
  t4395 = -1.*t963*t4369;
  t4399 = t4395 + t4134;
  t4406 = -1.*t1810*t4369;
  t4413 = t4406 + t4156;
  t4405 = -1.*t779*t4399;
  t4433 = t1934*t4413;
  t4438 = t4405 + t4433;
  t4448 = t1934*t4399;
  t4451 = t779*t4413;
  t4456 = t4448 + t4451;
  t4440 = t765*t4438;
  t4457 = t2032*t4456;
  t4466 = t4440 + t4457;
  t4471 = t2032*t4438;
  t4473 = -1.*t765*t4456;
  t4479 = t4471 + t4473;
  t4545 = t1810*t4369;
  t4550 = t963*t4124;
  t4552 = t4545 + t4550;
  t4561 = -1.*t1934*t4552;
  t4572 = t4405 + t4561;
  t4589 = -1.*t779*t4552;
  t4603 = t4448 + t4589;
  t4586 = t765*t4572;
  t4608 = t2032*t4603;
  t4610 = t4586 + t4608;
  t4617 = t2032*t4572;
  t4630 = -1.*t765*t4603;
  t4637 = t4617 + t4630;
  t4759 = t779*t4399;
  t4760 = t1934*t4552;
  t4767 = t4759 + t4760;
  t4779 = -1.*t765*t4767;
  t4780 = t4779 + t4608;
  t4790 = -1.*t2032*t4767;
  t4792 = t4790 + t4630;
  t4782 = -1.*t657*t4780;
  t4814 = t2159*t4780;
  t4858 = t2032*t4767;
  t4870 = t765*t4603;
  t4892 = t4858 + t4870;
  t4970 = t1371*t1316;
  t4982 = t1335*t1397*t1415;
  t4984 = t4970 + t4982;
  t5012 = t1307*t4984;
  t5015 = t1316*t1335*t1397;
  t5025 = -1.*t1371*t1415;
  t5032 = t5015 + t5025;
  t5055 = t5032*t1642;
  t5059 = t5012 + t5055;
  t5062 = t1228*t5059;
  t5065 = -1.*t1714*t1335*t1730;
  t5066 = t5062 + t5065;
  t5067 = -1.*t943*t963*t5066;
  t5070 = -1.*t1810*t5066*t1866;
  t5071 = t5067 + t5070;
  t5082 = t1810*t943*t5066;
  t5083 = -1.*t963*t5066*t1866;
  t5086 = t5082 + t5083;
  t5079 = t779*t5071;
  t5088 = t1934*t5086;
  t5091 = t5079 + t5088;
  t5122 = t1934*t5071;
  t5133 = -1.*t779*t5086;
  t5134 = t5122 + t5133;
  t5120 = -1.*t765*t5091;
  t5135 = t2032*t5134;
  t5142 = t5120 + t5135;
  t5162 = t2032*t5091;
  t5171 = t765*t5134;
  t5181 = t5162 + t5171;
  t5274 = -1.*t5032*t1642;
  t5296 = t3686 + t5274;
  t5255 = t1307*t5032;
  t5258 = t3674*t1642;
  t5261 = t5255 + t5258;
  t5264 = t943*t5261*t1730;
  t5299 = t5296*t1866;
  t5312 = t5264 + t5299;
  t5331 = t943*t5296;
  t5347 = -1.*t5261*t1730*t1866;
  t5365 = t5331 + t5347;
  t5321 = -1.*t963*t5312;
  t5366 = t1810*t5365;
  t5385 = t5321 + t5366;
  t5404 = t1810*t5312;
  t5407 = t963*t5365;
  t5408 = t5404 + t5407;
  t5391 = t779*t5385;
  t5413 = t1934*t5408;
  t5414 = t5391 + t5413;
  t5418 = t1934*t5385;
  t5421 = -1.*t779*t5408;
  t5425 = t5418 + t5421;
  t5415 = -1.*t765*t5414;
  t5428 = t2032*t5425;
  t5429 = t5415 + t5428;
  t5438 = t2032*t5414;
  t5449 = t765*t5425;
  t5471 = t5438 + t5449;
  t5578 = -1.*t1307*t4984;
  t5579 = t5578 + t5274;
  t5558 = -1.*t4984*t1642;
  t5561 = t5255 + t5558;
  t5565 = t943*t5561*t1730;
  t5587 = t5579*t1866;
  t5588 = t5565 + t5587;
  t5630 = t943*t5579;
  t5637 = -1.*t5561*t1730*t1866;
  t5648 = t5630 + t5637;
  t5593 = -1.*t963*t5588;
  t5649 = t1810*t5648;
  t5656 = t5593 + t5649;
  t5658 = t1810*t5588;
  t5670 = t963*t5648;
  t5675 = t5658 + t5670;
  t5657 = t779*t5656;
  t5676 = t1934*t5675;
  t5677 = t5657 + t5676;
  t5686 = t1934*t5656;
  t5690 = -1.*t779*t5675;
  t5692 = t5686 + t5690;
  t5678 = -1.*t765*t5677;
  t5710 = t2032*t5692;
  t5725 = t5678 + t5710;
  t5734 = t2032*t5677;
  t5744 = t765*t5692;
  t5760 = t5734 + t5744;
  t5862 = t1714*t1316*t1307*t1335;
  t5870 = -1.*t1714*t1335*t1415*t1642;
  t5878 = t5862 + t5870;
  t5806 = -1.*t1228*t1335*t1397;
  t5820 = t1714*t1307*t1335*t1415;
  t5821 = t1714*t1316*t1335*t1642;
  t5824 = t5820 + t5821;
  t5826 = t5824*t1730;
  t5841 = t5806 + t5826;
  t5843 = t943*t5841;
  t5891 = t5878*t1866;
  t5902 = t5843 + t5891;
  t5920 = t943*t5878;
  t5947 = -1.*t5841*t1866;
  t5948 = t5920 + t5947;
  t5907 = -1.*t963*t5902;
  t5952 = t1810*t5948;
  t5958 = t5907 + t5952;
  t5964 = t1810*t5902;
  t5965 = t963*t5948;
  t5967 = t5964 + t5965;
  t5963 = t779*t5958;
  t5969 = t1934*t5967;
  t5972 = t5963 + t5969;
  t5996 = t1934*t5958;
  t6010 = -1.*t779*t5967;
  t6022 = t5996 + t6010;
  t5975 = -1.*t765*t5972;
  t6023 = t2032*t6022;
  t6030 = t5975 + t6023;
  t6049 = t2032*t5972;
  t6053 = t765*t6022;
  t6059 = t6049 + t6053;
  t6119 = t1714*t1228*t1335;
  t6129 = t5059*t1730;
  t6143 = t6119 + t6129;
  t6152 = -1.*t943*t6143;
  t6158 = -1.*t5561*t1866;
  t6160 = t6152 + t6158;
  t6174 = t943*t5561;
  t6175 = -1.*t6143*t1866;
  t6180 = t6174 + t6175;
  t6173 = t963*t6160;
  t6186 = t1810*t6180;
  t6196 = t6173 + t6186;
  t6216 = t1810*t6160;
  t6228 = -1.*t963*t6180;
  t6230 = t6216 + t6228;
  t6209 = -1.*t779*t6196;
  t6231 = t1934*t6230;
  t6251 = t6209 + t6231;
  t6264 = t1934*t6196;
  t6279 = t779*t6230;
  t6293 = t6264 + t6279;
  t6257 = t765*t6251;
  t6300 = t2032*t6293;
  t6305 = t6257 + t6300;
  t6312 = t2032*t6251;
  t6313 = -1.*t765*t6293;
  t6326 = t6312 + t6313;
  t6401 = t943*t6143;
  t6402 = t5561*t1866;
  t6417 = t6401 + t6402;
  t6421 = -1.*t963*t6417;
  t6442 = t6421 + t6186;
  t6454 = -1.*t1810*t6417;
  t6457 = t6454 + t6228;
  t6449 = -1.*t779*t6442;
  t6462 = t1934*t6457;
  t6468 = t6449 + t6462;
  t6482 = t1934*t6442;
  t6485 = t779*t6457;
  t6486 = t6482 + t6485;
  t6480 = t765*t6468;
  t6487 = t2032*t6486;
  t6488 = t6480 + t6487;
  t6499 = t2032*t6468;
  t6508 = -1.*t765*t6486;
  t6510 = t6499 + t6508;
  t6584 = t1810*t6417;
  t6587 = t963*t6180;
  t6589 = t6584 + t6587;
  t6591 = -1.*t1934*t6589;
  t6593 = t6449 + t6591;
  t6629 = -1.*t779*t6589;
  t6630 = t6482 + t6629;
  t6626 = t765*t6593;
  t6633 = t2032*t6630;
  t6640 = t6626 + t6633;
  t6651 = t2032*t6593;
  t6653 = -1.*t765*t6630;
  t6656 = t6651 + t6653;
  t6692 = t779*t6442;
  t6693 = t1934*t6589;
  t6710 = t6692 + t6693;
  t6713 = -1.*t765*t6710;
  t6717 = t6713 + t6633;
  t6738 = -1.*t2032*t6710;
  t6739 = t6738 + t6653;
  t6720 = -1.*t657*t6717;
  t6760 = t2159*t6717;
  t6796 = t2032*t6710;
  t6800 = t765*t6630;
  t6802 = t6796 + t6800;
  t4937 = -1.*t657*t4892;
  t4938 = t4814 + t4937;
  t6859 = t1714*t1307*t1415;
  t6862 = t1714*t1316*t1642;
  t6864 = t6859 + t6862;
  t6871 = t1228*t6864;
  t6872 = t1397*t1730;
  t6880 = t6871 + t6872;
  t6882 = -1.*t943*t963*t6880;
  t6883 = -1.*t1810*t6880*t1866;
  t6887 = t6882 + t6883;
  t6901 = t1810*t943*t6880;
  t6902 = -1.*t963*t6880*t1866;
  t6905 = t6901 + t6902;
  t6895 = t779*t6887;
  t6908 = t1934*t6905;
  t6909 = t6895 + t6908;
  t6911 = t1934*t6887;
  t6912 = -1.*t779*t6905;
  t6919 = t6911 + t6912;
  t6910 = -1.*t765*t6909;
  t6921 = t2032*t6919;
  t6923 = t6910 + t6921;
  t6925 = t2032*t6909;
  t6933 = t765*t6919;
  t6941 = t6925 + t6933;
  t6993 = -1.*t1714*t1307*t1415;
  t6994 = -1.*t1714*t1316*t1642;
  t6995 = t6993 + t6994;
  t6978 = t1714*t1316*t1307;
  t6980 = -1.*t1714*t1415*t1642;
  t6984 = t6978 + t6980;
  t6988 = t943*t6984*t1730;
  t6997 = t6995*t1866;
  t6998 = t6988 + t6997;
  t7010 = t943*t6995;
  t7011 = -1.*t6984*t1730*t1866;
  t7014 = t7010 + t7011;
  t7002 = -1.*t963*t6998;
  t7018 = t1810*t7014;
  t7023 = t7002 + t7018;
  t7032 = t1810*t6998;
  t7033 = t963*t7014;
  t7038 = t7032 + t7033;
  t7025 = t779*t7023;
  t7039 = t1934*t7038;
  t7040 = t7025 + t7039;
  t7045 = t1934*t7023;
  t7059 = -1.*t779*t7038;
  t7062 = t7045 + t7059;
  t7044 = -1.*t765*t7040;
  t7066 = t2032*t7062;
  t7067 = t7044 + t7066;
  t7072 = t2032*t7040;
  t7073 = t765*t7062;
  t7075 = t7072 + t7073;
  t7068 = t657*t7067;
  t7083 = t2159*t7075;
  t7085 = t7068 + t7083;
  t7088 = 0.642788*t7085;
  t7091 = t2159*t7067;
  t7097 = -1.*t657*t7075;
  t7100 = t7091 + t7097;
  t7101 = 0.766044*t7100;
  t7102 = t7088 + t7101;
  t7112 = -1.*t1228*t1397;
  t7115 = t6864*t1730;
  t7116 = t7112 + t7115;
  t7120 = -1.*t943*t7116;
  t7125 = -1.*t6984*t1866;
  t7126 = t7120 + t7125;
  t7140 = t943*t6984;
  t7163 = -1.*t7116*t1866;
  t7168 = t7140 + t7163;
  t7138 = t963*t7126;
  t7170 = t1810*t7168;
  t7171 = t7138 + t7170;
  t7184 = t1810*t7126;
  t7192 = -1.*t963*t7168;
  t7199 = t7184 + t7192;
  t7183 = -1.*t779*t7171;
  t7200 = t1934*t7199;
  t7204 = t7183 + t7200;
  t7209 = t1934*t7171;
  t7210 = t779*t7199;
  t7213 = t7209 + t7210;
  t7207 = t765*t7204;
  t7214 = t2032*t7213;
  t7216 = t7207 + t7214;
  t7222 = t2032*t7204;
  t7225 = -1.*t765*t7213;
  t7226 = t7222 + t7225;
  t7255 = t943*t7116;
  t7259 = t6984*t1866;
  t7262 = t7255 + t7259;
  t7268 = -1.*t963*t7262;
  t7269 = t7268 + t7170;
  t7274 = -1.*t1810*t7262;
  t7279 = t7274 + t7192;
  t7270 = -1.*t779*t7269;
  t7280 = t1934*t7279;
  t7283 = t7270 + t7280;
  t7285 = t1934*t7269;
  t7287 = t779*t7279;
  t7293 = t7285 + t7287;
  t7284 = t765*t7283;
  t7294 = t2032*t7293;
  t7304 = t7284 + t7294;
  t7310 = t2032*t7283;
  t7315 = -1.*t765*t7293;
  t7320 = t7310 + t7315;
  t7358 = t1810*t7262;
  t7366 = t963*t7168;
  t7369 = t7358 + t7366;
  t7373 = -1.*t1934*t7369;
  t7378 = t7270 + t7373;
  t7392 = -1.*t779*t7369;
  t7399 = t7285 + t7392;
  t7391 = t765*t7378;
  t7400 = t2032*t7399;
  t7403 = t7391 + t7400;
  t7407 = t2032*t7378;
  t7408 = -1.*t765*t7399;
  t7411 = t7407 + t7408;
  t7445 = t779*t7269;
  t7454 = t1934*t7369;
  t7458 = t7445 + t7454;
  t7465 = -1.*t765*t7458;
  t7466 = t7465 + t7400;
  t7476 = -1.*t2032*t7458;
  t7479 = t7476 + t7408;
  t7472 = -1.*t657*t7466;
  t7495 = t2159*t7466;
  t7523 = t2032*t7458;
  t7524 = t765*t7399;
  t7530 = t7523 + t7524;
  t7582 = -1.*t1316*t1307*t1397;
  t7584 = t1397*t1415*t1642;
  t7586 = t7582 + t7584;
  t7566 = -1.*t1714*t1228;
  t7568 = -1.*t1307*t1397*t1415;
  t7569 = -1.*t1316*t1397*t1642;
  t7573 = t7568 + t7569;
  t7574 = t7573*t1730;
  t7578 = t7566 + t7574;
  t7581 = t943*t7578;
  t7587 = t7586*t1866;
  t7589 = t7581 + t7587;
  t7599 = t943*t7586;
  t7603 = -1.*t7578*t1866;
  t7605 = t7599 + t7603;
  t7592 = -1.*t963*t7589;
  t7607 = t1810*t7605;
  t7608 = t7592 + t7607;
  t7612 = t1810*t7589;
  t7619 = t963*t7605;
  t7621 = t7612 + t7619;
  t7610 = t779*t7608;
  t7625 = t1934*t7621;
  t7626 = t7610 + t7625;
  t7638 = t1934*t7608;
  t7646 = -1.*t779*t7621;
  t7650 = t7638 + t7646;
  t7634 = -1.*t765*t7626;
  t7659 = t2032*t7650;
  t7662 = t7634 + t7659;
  t7664 = t2032*t7626;
  t7665 = t765*t7650;
  t7666 = t7664 + t7665;
  t2146 = t657*t2123;
  t2218 = t2159*t2203;
  t2242 = t2146 + t2218;
  t2295 = t2159*t2123;
  t2302 = -1.*t657*t2203;
  t2322 = t2295 + t2302;
  t2826 = t657*t2820;
  t2927 = t2159*t2900;
  t2929 = t2826 + t2927;
  t2954 = t2159*t2820;
  t2973 = -1.*t657*t2900;
  t2994 = t2954 + t2973;
  t3237 = t657*t3234;
  t3251 = t2159*t3248;
  t3257 = t3237 + t3251;
  t3265 = t2159*t3234;
  t3286 = -1.*t657*t3248;
  t3293 = t3265 + t3286;
  t3521 = t657*t3509;
  t3589 = t2159*t3577;
  t3609 = t3521 + t3589;
  t3617 = t2159*t3509;
  t3627 = -1.*t657*t3577;
  t3634 = t3617 + t3627;
  t3905 = t657*t3898;
  t3962 = t2159*t3931;
  t3967 = t3905 + t3962;
  t3972 = t2159*t3898;
  t3986 = -1.*t657*t3931;
  t4003 = t3972 + t3986;
  t4251 = -1.*t657*t4250;
  t4277 = t2159*t4271;
  t4278 = t4251 + t4277;
  t4283 = t2159*t4250;
  t4298 = t657*t4271;
  t4302 = t4283 + t4298;
  t4468 = -1.*t657*t4466;
  t4492 = t2159*t4479;
  t4500 = t4468 + t4492;
  t4513 = t2159*t4466;
  t4514 = t657*t4479;
  t4528 = t4513 + t4514;
  t4613 = -1.*t657*t4610;
  t4640 = t2159*t4637;
  t4643 = t4613 + t4640;
  t4683 = t2159*t4610;
  t4685 = t657*t4637;
  t4699 = t4683 + t4685;
  t4794 = t2159*t4792;
  t4799 = t4782 + t4794;
  t4822 = t657*t4792;
  t4823 = t4814 + t4822;
  t4894 = -1.*t2159*t4892;
  t4896 = t4782 + t4894;
  t5150 = t657*t5142;
  t5209 = t2159*t5181;
  t5214 = t5150 + t5209;
  t5226 = t2159*t5142;
  t5227 = -1.*t657*t5181;
  t5233 = t5226 + t5227;
  t5433 = t657*t5429;
  t5476 = t2159*t5471;
  t5480 = t5433 + t5476;
  t5502 = t2159*t5429;
  t5528 = -1.*t657*t5471;
  t5537 = t5502 + t5528;
  t5732 = t657*t5725;
  t5764 = t2159*t5760;
  t5778 = t5732 + t5764;
  t5789 = t2159*t5725;
  t5794 = -1.*t657*t5760;
  t5797 = t5789 + t5794;
  t6040 = t657*t6030;
  t6064 = t2159*t6059;
  t6067 = t6040 + t6064;
  t6076 = t2159*t6030;
  t6079 = -1.*t657*t6059;
  t6101 = t6076 + t6079;
  t6310 = -1.*t657*t6305;
  t6331 = t2159*t6326;
  t6342 = t6310 + t6331;
  t6360 = t2159*t6305;
  t6361 = t657*t6326;
  t6394 = t6360 + t6361;
  t6498 = -1.*t657*t6488;
  t6531 = t2159*t6510;
  t6536 = t6498 + t6531;
  t6546 = t2159*t6488;
  t6564 = t657*t6510;
  t6565 = t6546 + t6564;
  t6641 = -1.*t657*t6640;
  t6658 = t2159*t6656;
  t6660 = t6641 + t6658;
  t6670 = t2159*t6640;
  t6671 = t657*t6656;
  t6678 = t6670 + t6671;
  t6741 = t2159*t6739;
  t6755 = t6720 + t6741;
  t6761 = t657*t6739;
  t6764 = t6760 + t6761;
  t6805 = -1.*t2159*t6802;
  t6809 = t6720 + t6805;
  t6817 = -1.*t657*t6802;
  t6827 = t6760 + t6817;
  t6844 = t657*t4780;
  t6845 = t2159*t4892;
  t6846 = t6844 + t6845;
  t4954 = 0.642788*t4938;
  t6924 = t657*t6923;
  t6942 = t2159*t6941;
  t6945 = t6924 + t6942;
  t6948 = t2159*t6923;
  t6957 = -1.*t657*t6941;
  t6960 = t6948 + t6957;
  t8087 = -0.766044*t7085;
  t8088 = 0.642788*t7100;
  t8092 = t8087 + t8088;
  t7221 = -1.*t657*t7216;
  t7227 = t2159*t7226;
  t7230 = t7221 + t7227;
  t7243 = t2159*t7216;
  t7244 = t657*t7226;
  t7248 = t7243 + t7244;
  t7307 = -1.*t657*t7304;
  t7321 = t2159*t7320;
  t7322 = t7307 + t7321;
  t7329 = t2159*t7304;
  t7331 = t657*t7320;
  t7332 = t7329 + t7331;
  t7405 = -1.*t657*t7403;
  t7419 = t2159*t7411;
  t7422 = t7405 + t7419;
  t7426 = t2159*t7403;
  t7430 = t657*t7411;
  t7433 = t7426 + t7430;
  t7488 = t2159*t7479;
  t7491 = t7472 + t7488;
  t7496 = t657*t7479;
  t7501 = t7495 + t7496;
  t7531 = -1.*t2159*t7530;
  t7532 = t7472 + t7531;
  t7538 = -1.*t657*t7530;
  t7544 = t7495 + t7538;
  t7663 = t657*t7662;
  t7670 = t2159*t7666;
  t7671 = t7663 + t7670;
  t7675 = t2159*t7662;
  t7676 = -1.*t657*t7666;
  t7679 = t7675 + t7676;
  p_output1[0]=(0.642788*t3967 + 0.766044*t4003)*var2[3] + (0.642788*t3609 + 0.766044*t3634)*var2[4] + (0.642788*t2929 + 0.766044*t2994)*var2[5] + (0.642788*t3257 + 0.766044*t3293)*var2[6] + (0.642788*t2242 + 0.766044*t2322)*var2[7] + (0.766044*t4278 + 0.642788*t4302)*var2[8] + (0.766044*t4500 + 0.642788*t4528)*var2[9] + (0.766044*t4643 + 0.642788*t4699)*var2[10] + (0.766044*t4799 + 0.642788*t4823)*var2[11] + (0.766044*t4896 + t4954)*var2[12];
  p_output1[1]=(0.766044*t4938 + 0.642788*t6846)*var2[3] + (0.642788*t6067 + 0.766044*t6101)*var2[4] + (0.642788*t5480 + 0.766044*t5537)*var2[5] + (0.642788*t5778 + 0.766044*t5797)*var2[6] + (0.642788*t5214 + 0.766044*t5233)*var2[7] + (0.766044*t6342 + 0.642788*t6394)*var2[8] + (0.766044*t6536 + 0.642788*t6565)*var2[9] + (0.766044*t6660 + 0.642788*t6678)*var2[10] + (0.766044*t6755 + 0.642788*t6764)*var2[11] + (0.766044*t6809 + 0.642788*t6827)*var2[12];
  p_output1[2]=(0.642788*t7671 + 0.766044*t7679)*var2[4] + t7102*var2[5] + t7102*var2[6] + (0.642788*t6945 + 0.766044*t6960)*var2[7] + (0.766044*t7230 + 0.642788*t7248)*var2[8] + (0.766044*t7322 + 0.642788*t7332)*var2[9] + (0.766044*t7422 + 0.642788*t7433)*var2[10] + (0.766044*t7491 + 0.642788*t7501)*var2[11] + (0.766044*t7532 + 0.642788*t7544)*var2[12];
  p_output1[3]=(t1335*t1714*t1730 + t1228*t3719)*var2[3] + (t1371*t1397*t1730 + t1228*t3346)*var2[4] + t1228*t2491*var2[5] + t1228*t3035*var2[6] + (-1.*t1228*t1371*t1714 - 1.*t1709*t1730)*var2[7];
  p_output1[4]=t1747*var2[3] + (t1335*t1397*t1730 + t1228*t5824)*var2[4] + t1228*t5261*var2[5] + t1228*t5561*var2[6] + (t3653 - 1.*t1730*t5059)*var2[7];
  p_output1[5]=(t1714*t1730 + t1228*t7573)*var2[4] + t1228*t6984*var2[5] + t1228*t6984*var2[6] + (t1228*t1397 - 1.*t1730*t6864)*var2[7];
  p_output1[6]=(-0.766044*t3967 + 0.642788*t4003)*var2[3] + (-0.766044*t3609 + 0.642788*t3634)*var2[4] + (-0.766044*t2929 + 0.642788*t2994)*var2[5] + (-0.766044*t3257 + 0.642788*t3293)*var2[6] + (-0.766044*t2242 + 0.642788*t2322)*var2[7] + (0.642788*t4278 - 0.766044*t4302)*var2[8] + (0.642788*t4500 - 0.766044*t4528)*var2[9] + (0.642788*t4643 - 0.766044*t4699)*var2[10] + (0.642788*t4799 - 0.766044*t4823)*var2[11] + (0.642788*t4896 - 0.766044*t4938)*var2[12];
  p_output1[7]=(t4954 - 0.766044*t6846)*var2[3] + (-0.766044*t6067 + 0.642788*t6101)*var2[4] + (-0.766044*t5480 + 0.642788*t5537)*var2[5] + (-0.766044*t5778 + 0.642788*t5797)*var2[6] + (-0.766044*t5214 + 0.642788*t5233)*var2[7] + (0.642788*t6342 - 0.766044*t6394)*var2[8] + (0.642788*t6536 - 0.766044*t6565)*var2[9] + (0.642788*t6660 - 0.766044*t6678)*var2[10] + (0.642788*t6755 - 0.766044*t6764)*var2[11] + (0.642788*t6809 - 0.766044*t6827)*var2[12];
  p_output1[8]=(-0.766044*t7671 + 0.642788*t7679)*var2[4] + t8092*var2[5] + t8092*var2[6] + (-0.766044*t6945 + 0.642788*t6960)*var2[7] + (0.642788*t7230 - 0.766044*t7248)*var2[8] + (0.642788*t7322 - 0.766044*t7332)*var2[9] + (0.642788*t7422 - 0.766044*t7433)*var2[10] + (0.642788*t7491 - 0.766044*t7501)*var2[11] + (0.642788*t7532 - 0.766044*t7544)*var2[12];
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 20 && ncols == 1) && 
      !(mrows == 1 && ncols == 20))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 20 && ncols == 1) && 
      !(mrows == 1 && ncols == 20))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 3, (mwSize) 3, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "dR_LeftToeBottomFront_mex.hh"

namespace SymExpression
{

void dR_LeftToeBottomFront_mex_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
