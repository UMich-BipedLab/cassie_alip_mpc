/*
 * Automatically Generated from Mathematica.
 * Mon 11 May 2020 22:32:29 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t405;
  double t80;
  double t216;
  double t280;
  double t546;
  double t723;
  double t732;
  double t847;
  double t860;
  double t967;
  double t975;
  double t1012;
  double t289;
  double t555;
  double t648;
  double t1351;
  double t1371;
  double t1397;
  double t1442;
  double t1315;
  double t1327;
  double t1335;
  double t1528;
  double t2042;
  double t2132;
  double t2163;
  double t2201;
  double t1962;
  double t1986;
  double t2004;
  double t2329;
  double t2331;
  double t2365;
  double t2422;
  double t2501;
  double t2521;
  double t2582;
  double t2755;
  double t2763;
  double t2787;
  double t2890;
  double t2932;
  double t2946;
  double t2970;
  double t2988;
  double t3052;
  double t3174;
  double t3273;
  double t3308;
  double t3320;
  double t3388;
  double t3495;
  double t3535;
  double t3575;
  double t3595;
  double t3604;
  double t3635;
  double t3692;
  double t3722;
  double t3726;
  double t3805;
  double t3820;
  double t3840;
  double t3869;
  double t3871;
  double t3888;
  double t3908;
  double t3980;
  double t3991;
  double t4017;
  double t4185;
  double t4211;
  double t4220;
  double t855;
  double t873;
  double t903;
  double t1024;
  double t1050;
  double t1131;
  double t4554;
  double t4560;
  double t4564;
  double t4522;
  double t4531;
  double t4535;
  double t1398;
  double t1463;
  double t1491;
  double t1581;
  double t1642;
  double t1674;
  double t4603;
  double t4629;
  double t4639;
  double t2193;
  double t2257;
  double t2290;
  double t2374;
  double t2383;
  double t2394;
  double t2531;
  double t2619;
  double t2729;
  double t4767;
  double t4793;
  double t4795;
  double t4836;
  double t4860;
  double t4889;
  double t2832;
  double t2881;
  double t2883;
  double t3071;
  double t3178;
  double t3240;
  double t4905;
  double t4922;
  double t4933;
  double t4939;
  double t4941;
  double t4969;
  double t3341;
  double t3362;
  double t3387;
  double t3631;
  double t3637;
  double t3672;
  double t5026;
  double t5031;
  double t5040;
  double t5074;
  double t5131;
  double t5134;
  double t3774;
  double t3781;
  double t3799;
  double t3894;
  double t3915;
  double t3922;
  double t5213;
  double t5222;
  double t5224;
  double t5230;
  double t5233;
  double t5235;
  double t4142;
  double t4169;
  double t4183;
  double t5297;
  double t5304;
  double t5310;
  double t5325;
  double t5347;
  double t5352;
  double t5537;
  double t5543;
  double t5548;
  double t5671;
  double t5675;
  double t5692;
  double t5722;
  double t5723;
  double t5726;
  double t5741;
  double t5748;
  double t5759;
  double t5765;
  double t5796;
  double t5814;
  double t5854;
  double t5872;
  double t5881;
  double t5936;
  double t5939;
  double t5944;
  double t5990;
  double t5994;
  double t6024;
  double t6055;
  double t6060;
  double t6082;
  double t6096;
  double t6101;
  double t6106;
  double t6115;
  double t6122;
  double t6123;
  double t6237;
  double t6251;
  double t6254;
  double t6324;
  double t6325;
  double t6332;
  double t6357;
  double t6358;
  double t6391;
  double t6403;
  double t6406;
  double t6409;
  double t6435;
  double t6448;
  double t6475;
  double t6492;
  double t6501;
  double t6502;
  double t6513;
  double t6543;
  double t6554;
  double t6582;
  double t6621;
  double t6623;
  double t6629;
  double t6638;
  double t6642;
  double t6668;
  double t6669;
  double t6676;
  double t6716;
  double t6718;
  double t6719;
  double t6856;
  double t6864;
  double t6874;
  double t6913;
  double t6920;
  double t6929;
  double t6950;
  double t6952;
  double t6971;
  double t7005;
  double t7010;
  double t7014;
  double t7030;
  double t7034;
  double t7038;
  double t7043;
  double t7044;
  double t7058;
  double t7070;
  double t7088;
  double t7090;
  double t7103;
  double t7105;
  double t7106;
  double t7112;
  double t7113;
  double t7120;
  double t7125;
  double t7131;
  double t7133;
  double t7162;
  double t7168;
  double t7173;
  double t7251;
  double t7255;
  double t7256;
  double t7310;
  double t7315;
  double t7343;
  double t7351;
  double t7369;
  double t7378;
  double t7385;
  double t7393;
  double t7405;
  double t7406;
  double t7407;
  double t7409;
  double t7419;
  double t7423;
  double t7448;
  double t7469;
  double t7487;
  double t7515;
  double t7522;
  double t7527;
  double t7553;
  double t7558;
  double t7560;
  double t7564;
  double t7568;
  double t7569;
  double t7571;
  double t7574;
  double t7608;
  double t7690;
  double t7691;
  double t7717;
  double t7723;
  double t7733;
  double t7736;
  double t7748;
  double t7750;
  double t7760;
  double t7771;
  double t7776;
  double t7780;
  double t7782;
  double t7794;
  double t7810;
  double t7811;
  double t7818;
  double t7841;
  double t7844;
  double t7875;
  double t7891;
  double t7894;
  double t7905;
  double t7907;
  double t7913;
  double t7916;
  double t7923;
  double t7930;
  double t7931;
  double t7933;
  double t7937;
  double t7938;
  double t8001;
  double t8002;
  double t8009;
  double t8025;
  double t8034;
  double t8037;
  double t8075;
  double t8076;
  double t8077;
  double t8088;
  double t8091;
  double t8093;
  double t8096;
  double t8101;
  double t8106;
  double t8114;
  double t8118;
  double t8119;
  double t8123;
  double t8127;
  double t8129;
  double t8137;
  double t8146;
  double t8147;
  double t8152;
  double t8155;
  double t8162;
  double t8164;
  double t8167;
  double t8168;
  double t8226;
  double t8233;
  double t8244;
  double t8245;
  double t8260;
  double t8268;
  double t8271;
  double t8272;
  double t8274;
  double t8277;
  double t8278;
  double t8290;
  double t8291;
  double t8295;
  double t8302;
  double t8304;
  double t8312;
  double t8314;
  double t8315;
  double t8316;
  double t8319;
  double t8323;
  double t8327;
  double t8337;
  double t8340;
  double t8345;
  double t8199;
  double t8200;
  double t8203;
  double t8206;
  double t8216;
  double t8382;
  double t8384;
  double t8387;
  double t8392;
  double t8393;
  double t8408;
  double t8410;
  double t8415;
  double t8424;
  double t8429;
  double t8431;
  double t8432;
  double t8433;
  double t8437;
  double t8440;
  double t8442;
  double t8444;
  double t8446;
  double t8447;
  double t8450;
  double t8451;
  double t8452;
  double t8456;
  double t8457;
  double t8458;
  double t8461;
  double t8465;
  double t8466;
  double t8470;
  double t8472;
  double t8473;
  double t8010;
  double t8012;
  double t8017;
  double t8061;
  double t8085;
  double t8095;
  double t8111;
  double t8121;
  double t8132;
  double t8148;
  double t8163;
  double t8170;
  double t8172;
  double t8177;
  double t8183;
  double t8189;
  double t8190;
  double t8192;
  double t8193;
  double t8197;
  double t4717;
  double t4720;
  double t4723;
  double t8535;
  double t8536;
  double t8538;
  double t8540;
  double t8541;
  double t8542;
  double t8544;
  double t8548;
  double t8549;
  double t8552;
  double t8553;
  double t8554;
  double t8556;
  double t8557;
  double t8558;
  double t8561;
  double t8563;
  double t8566;
  double t8512;
  double t8513;
  double t8516;
  double t8518;
  double t8519;
  double t8585;
  double t8586;
  double t8588;
  double t8590;
  double t8591;
  double t8592;
  double t8600;
  double t8602;
  double t8603;
  double t8605;
  double t8606;
  double t8608;
  double t8614;
  double t8615;
  double t8616;
  double t8619;
  double t8620;
  double t8621;
  double t8623;
  double t8625;
  double t8626;
  double t8628;
  double t8630;
  double t8632;
  double t8647;
  double t8649;
  double t8650;
  double t8652;
  double t8653;
  double t8654;
  double t8667;
  double t8668;
  double t8669;
  double t8672;
  double t8673;
  double t8674;
  double t8676;
  double t8677;
  double t8679;
  double t8683;
  double t8684;
  double t8686;
  double t8688;
  double t8689;
  double t8691;
  double t8694;
  double t8695;
  double t8696;
  double t8718;
  double t8720;
  double t8721;
  double t8726;
  double t8727;
  double t8729;
  double t8730;
  double t8731;
  double t8733;
  double t8734;
  double t8735;
  double t8737;
  double t8738;
  double t8739;
  double t8741;
  double t8743;
  double t8745;
  double t8747;
  double t8751;
  double t8752;
  double t8710;
  double t8711;
  double t8712;
  double t8715;
  double t8716;
  double t8765;
  double t8766;
  double t8767;
  double t8770;
  double t8771;
  double t8772;
  double t8774;
  double t8775;
  double t8776;
  double t8779;
  double t8780;
  double t8781;
  double t8784;
  double t8785;
  double t8787;
  double t8791;
  double t8792;
  double t8793;
  double t8796;
  double t8797;
  double t8798;
  double t8801;
  double t8802;
  double t8804;
  double t8808;
  double t8809;
  double t8811;
  double t8835;
  double t8836;
  double t8837;
  double t8844;
  double t8845;
  double t8847;
  double t8850;
  double t8851;
  double t8854;
  double t8856;
  double t8858;
  double t8860;
  double t8862;
  double t8863;
  double t8864;
  double t8866;
  double t8868;
  double t8870;
  double t8872;
  double t8873;
  double t8874;
  double t8877;
  double t8878;
  double t8879;
  double t8881;
  double t8882;
  double t8883;
  double t8904;
  double t8905;
  double t8908;
  double t8910;
  double t8911;
  double t8914;
  double t8915;
  double t8918;
  double t8919;
  double t8921;
  double t8924;
  double t8925;
  double t8926;
  double t8895;
  double t8896;
  double t8897;
  double t8899;
  double t8900;
  double t8937;
  double t8938;
  double t8940;
  double t8944;
  double t8945;
  double t8947;
  double t8948;
  double t8951;
  double t8952;
  double t8953;
  double t8955;
  double t8956;
  double t8957;
  double t8959;
  double t8961;
  double t8962;
  double t8964;
  double t8966;
  double t8967;
  double t8983;
  double t8985;
  double t8987;
  double t8990;
  double t8991;
  double t8994;
  double t8995;
  double t8997;
  double t9000;
  double t9001;
  double t9003;
  double t9004;
  double t9005;
  double t9007;
  double t9008;
  double t9010;
  double t9012;
  double t9013;
  double t9014;
  double t9039;
  double t9040;
  double t9044;
  double t9045;
  double t9048;
  double t9049;
  double t9050;
  double t9030;
  double t9031;
  double t9033;
  double t9035;
  double t9036;
  double t9065;
  double t9066;
  double t9068;
  double t9071;
  double t9072;
  double t9075;
  double t9076;
  double t9078;
  double t9079;
  double t9080;
  double t9083;
  double t9084;
  double t9085;
  double t9104;
  double t9105;
  double t9106;
  double t9108;
  double t9110;
  double t9112;
  double t9114;
  double t9118;
  double t9119;
  double t9120;
  double t9124;
  double t9125;
  double t9126;
  double t9150;
  double t9151;
  double t5396;
  double t9139;
  double t9142;
  double t9143;
  double t9145;
  double t9147;
  double t9162;
  double t9163;
  double t9164;
  double t9168;
  double t9169;
  double t9171;
  double t9173;
  double t9186;
  double t9187;
  double t9188;
  double t9191;
  double t9192;
  double t9194;
  double t9195;
  double t9153;
  double t5399;
  double t5400;
  double t9212;
  double t9215;
  double t9217;
  double t9219;
  double t9220;
  double t9175;
  double t9230;
  double t9232;
  double t9233;
  double t9180;
  double t9197;
  double t9243;
  double t9244;
  double t9245;
  double t9203;
  t405 = Cos(var1[3]);
  t80 = Cos(var1[5]);
  t216 = Sin(var1[3]);
  t280 = Sin(var1[4]);
  t546 = Sin(var1[5]);
  t723 = Cos(var1[6]);
  t732 = -1.*t723;
  t847 = 1. + t732;
  t860 = Sin(var1[6]);
  t967 = -1.*t405*t80;
  t975 = -1.*t216*t280*t546;
  t1012 = t967 + t975;
  t289 = -1.*t80*t216*t280;
  t555 = t405*t546;
  t648 = t289 + t555;
  t1351 = Cos(var1[7]);
  t1371 = -1.*t1351;
  t1397 = 1. + t1371;
  t1442 = Sin(var1[7]);
  t1315 = t723*t1012;
  t1327 = t648*t860;
  t1335 = t1315 + t1327;
  t1528 = Cos(var1[4]);
  t2042 = Cos(var1[8]);
  t2132 = -1.*t2042;
  t2163 = 1. + t2132;
  t2201 = Sin(var1[8]);
  t1962 = -1.*t1528*t1351*t216;
  t1986 = t1335*t1442;
  t2004 = t1962 + t1986;
  t2329 = t723*t648;
  t2331 = -1.*t1012*t860;
  t2365 = t2329 + t2331;
  t2422 = Cos(var1[9]);
  t2501 = -1.*t2422;
  t2521 = 1. + t2501;
  t2582 = Sin(var1[9]);
  t2755 = t2042*t2004;
  t2763 = t2365*t2201;
  t2787 = t2755 + t2763;
  t2890 = t2042*t2365;
  t2932 = -1.*t2004*t2201;
  t2946 = t2890 + t2932;
  t2970 = Cos(var1[10]);
  t2988 = -1.*t2970;
  t3052 = 1. + t2988;
  t3174 = Sin(var1[10]);
  t3273 = -1.*t2582*t2787;
  t3308 = t2422*t2946;
  t3320 = t3273 + t3308;
  t3388 = t2422*t2787;
  t3495 = t2582*t2946;
  t3535 = t3388 + t3495;
  t3575 = Cos(var1[11]);
  t3595 = -1.*t3575;
  t3604 = 1. + t3595;
  t3635 = Sin(var1[11]);
  t3692 = t3174*t3320;
  t3722 = t2970*t3535;
  t3726 = t3692 + t3722;
  t3805 = t2970*t3320;
  t3820 = -1.*t3174*t3535;
  t3840 = t3805 + t3820;
  t3869 = Cos(var1[12]);
  t3871 = -1.*t3869;
  t3888 = 1. + t3871;
  t3908 = Sin(var1[12]);
  t3980 = -1.*t3635*t3726;
  t3991 = t3575*t3840;
  t4017 = t3980 + t3991;
  t4185 = t3575*t3726;
  t4211 = t3635*t3840;
  t4220 = t4185 + t4211;
  t855 = 0.07996*t847;
  t873 = -0.135*t860;
  t903 = 0. + t855 + t873;
  t1024 = 0.135*t847;
  t1050 = 0.07996*t860;
  t1131 = 0. + t1024 + t1050;
  t4554 = -1.*t80*t216;
  t4560 = t405*t280*t546;
  t4564 = t4554 + t4560;
  t4522 = t405*t80*t280;
  t4531 = t216*t546;
  t4535 = t4522 + t4531;
  t1398 = 0.135*t1397;
  t1463 = 0.08055*t1442;
  t1491 = 0. + t1398 + t1463;
  t1581 = -0.08055*t1397;
  t1642 = 0.135*t1442;
  t1674 = 0. + t1581 + t1642;
  t4603 = t723*t4564;
  t4629 = t4535*t860;
  t4639 = t4603 + t4629;
  t2193 = -0.08055*t2163;
  t2257 = -0.01004*t2201;
  t2290 = 0. + t2193 + t2257;
  t2374 = -0.01004*t2163;
  t2383 = 0.08055*t2201;
  t2394 = 0. + t2374 + t2383;
  t2531 = -0.08055*t2521;
  t2619 = -0.13004*t2582;
  t2729 = 0. + t2531 + t2619;
  t4767 = t405*t1528*t1351;
  t4793 = t4639*t1442;
  t4795 = t4767 + t4793;
  t4836 = t723*t4535;
  t4860 = -1.*t4564*t860;
  t4889 = t4836 + t4860;
  t2832 = -0.13004*t2521;
  t2881 = 0.08055*t2582;
  t2883 = 0. + t2832 + t2881;
  t3071 = -0.19074*t3052;
  t3178 = 0.03315*t3174;
  t3240 = 0. + t3071 + t3178;
  t4905 = t2042*t4795;
  t4922 = t4889*t2201;
  t4933 = t4905 + t4922;
  t4939 = t2042*t4889;
  t4941 = -1.*t4795*t2201;
  t4969 = t4939 + t4941;
  t3341 = -0.03315*t3052;
  t3362 = -0.19074*t3174;
  t3387 = 0. + t3341 + t3362;
  t3631 = -0.01315*t3604;
  t3637 = -0.62554*t3635;
  t3672 = 0. + t3631 + t3637;
  t5026 = -1.*t2582*t4933;
  t5031 = t2422*t4969;
  t5040 = t5026 + t5031;
  t5074 = t2422*t4933;
  t5131 = t2582*t4969;
  t5134 = t5074 + t5131;
  t3774 = -0.62554*t3604;
  t3781 = 0.01315*t3635;
  t3799 = 0. + t3774 + t3781;
  t3894 = -1.03354*t3888;
  t3915 = 0.05315*t3908;
  t3922 = 0. + t3894 + t3915;
  t5213 = t3174*t5040;
  t5222 = t2970*t5134;
  t5224 = t5213 + t5222;
  t5230 = t2970*t5040;
  t5233 = -1.*t3174*t5134;
  t5235 = t5230 + t5233;
  t4142 = -0.05315*t3888;
  t4169 = -1.03354*t3908;
  t4183 = 0. + t4142 + t4169;
  t5297 = -1.*t3635*t5224;
  t5304 = t3575*t5235;
  t5310 = t5297 + t5304;
  t5325 = t3575*t5224;
  t5347 = t3635*t5235;
  t5352 = t5325 + t5347;
  t5537 = t405*t1528*t723*t546;
  t5543 = t405*t1528*t80*t860;
  t5548 = t5537 + t5543;
  t5671 = -1.*t405*t1351*t280;
  t5675 = t5548*t1442;
  t5692 = t5671 + t5675;
  t5722 = t405*t1528*t80*t723;
  t5723 = -1.*t405*t1528*t546*t860;
  t5726 = t5722 + t5723;
  t5741 = t2042*t5692;
  t5748 = t5726*t2201;
  t5759 = t5741 + t5748;
  t5765 = t2042*t5726;
  t5796 = -1.*t5692*t2201;
  t5814 = t5765 + t5796;
  t5854 = -1.*t2582*t5759;
  t5872 = t2422*t5814;
  t5881 = t5854 + t5872;
  t5936 = t2422*t5759;
  t5939 = t2582*t5814;
  t5944 = t5936 + t5939;
  t5990 = t3174*t5881;
  t5994 = t2970*t5944;
  t6024 = t5990 + t5994;
  t6055 = t2970*t5881;
  t6060 = -1.*t3174*t5944;
  t6082 = t6055 + t6060;
  t6096 = -1.*t3635*t6024;
  t6101 = t3575*t6082;
  t6106 = t6096 + t6101;
  t6115 = t3575*t6024;
  t6122 = t3635*t6082;
  t6123 = t6115 + t6122;
  t6237 = t1528*t723*t216*t546;
  t6251 = t1528*t80*t216*t860;
  t6254 = t6237 + t6251;
  t6324 = -1.*t1351*t216*t280;
  t6325 = t6254*t1442;
  t6332 = t6324 + t6325;
  t6357 = t1528*t80*t723*t216;
  t6358 = -1.*t1528*t216*t546*t860;
  t6391 = t6357 + t6358;
  t6403 = t2042*t6332;
  t6406 = t6391*t2201;
  t6409 = t6403 + t6406;
  t6435 = t2042*t6391;
  t6448 = -1.*t6332*t2201;
  t6475 = t6435 + t6448;
  t6492 = -1.*t2582*t6409;
  t6501 = t2422*t6475;
  t6502 = t6492 + t6501;
  t6513 = t2422*t6409;
  t6543 = t2582*t6475;
  t6554 = t6513 + t6543;
  t6582 = t3174*t6502;
  t6621 = t2970*t6554;
  t6623 = t6582 + t6621;
  t6629 = t2970*t6502;
  t6638 = -1.*t3174*t6554;
  t6642 = t6629 + t6638;
  t6668 = -1.*t3635*t6623;
  t6669 = t3575*t6642;
  t6676 = t6668 + t6669;
  t6716 = t3575*t6623;
  t6718 = t3635*t6642;
  t6719 = t6716 + t6718;
  t6856 = -1.*t723*t280*t546;
  t6864 = -1.*t80*t280*t860;
  t6874 = t6856 + t6864;
  t6913 = -1.*t1528*t1351;
  t6920 = t6874*t1442;
  t6929 = t6913 + t6920;
  t6950 = -1.*t80*t723*t280;
  t6952 = t280*t546*t860;
  t6971 = t6950 + t6952;
  t7005 = t2042*t6929;
  t7010 = t6971*t2201;
  t7014 = t7005 + t7010;
  t7030 = t2042*t6971;
  t7034 = -1.*t6929*t2201;
  t7038 = t7030 + t7034;
  t7043 = -1.*t2582*t7014;
  t7044 = t2422*t7038;
  t7058 = t7043 + t7044;
  t7070 = t2422*t7014;
  t7088 = t2582*t7038;
  t7090 = t7070 + t7088;
  t7103 = t3174*t7058;
  t7105 = t2970*t7090;
  t7106 = t7103 + t7105;
  t7112 = t2970*t7058;
  t7113 = -1.*t3174*t7090;
  t7120 = t7112 + t7113;
  t7125 = -1.*t3635*t7106;
  t7131 = t3575*t7120;
  t7133 = t7125 + t7131;
  t7162 = t3575*t7106;
  t7168 = t3635*t7120;
  t7173 = t7162 + t7168;
  t7251 = t80*t216;
  t7255 = -1.*t405*t280*t546;
  t7256 = t7251 + t7255;
  t7310 = t7256*t860;
  t7315 = t4836 + t7310;
  t7343 = t723*t7256;
  t7351 = -1.*t4535*t860;
  t7369 = t7343 + t7351;
  t7378 = t2042*t7315*t1442;
  t7385 = t7369*t2201;
  t7393 = t7378 + t7385;
  t7405 = t2042*t7369;
  t7406 = -1.*t7315*t1442*t2201;
  t7407 = t7405 + t7406;
  t7409 = -1.*t2582*t7393;
  t7419 = t2422*t7407;
  t7423 = t7409 + t7419;
  t7448 = t2422*t7393;
  t7469 = t2582*t7407;
  t7487 = t7448 + t7469;
  t7515 = t3174*t7423;
  t7522 = t2970*t7487;
  t7527 = t7515 + t7522;
  t7553 = t2970*t7423;
  t7558 = -1.*t3174*t7487;
  t7560 = t7553 + t7558;
  t7564 = -1.*t3635*t7527;
  t7568 = t3575*t7560;
  t7569 = t7564 + t7568;
  t7571 = t3575*t7527;
  t7574 = t3635*t7560;
  t7608 = t7571 + t7574;
  t7690 = t80*t216*t280;
  t7691 = -1.*t405*t546;
  t7717 = t7690 + t7691;
  t7723 = t723*t7717;
  t7733 = t1012*t860;
  t7736 = t7723 + t7733;
  t7748 = -1.*t7717*t860;
  t7750 = t1315 + t7748;
  t7760 = t2042*t7736*t1442;
  t7771 = t7750*t2201;
  t7776 = t7760 + t7771;
  t7780 = t2042*t7750;
  t7782 = -1.*t7736*t1442*t2201;
  t7794 = t7780 + t7782;
  t7810 = -1.*t2582*t7776;
  t7811 = t2422*t7794;
  t7818 = t7810 + t7811;
  t7841 = t2422*t7776;
  t7844 = t2582*t7794;
  t7875 = t7841 + t7844;
  t7891 = t3174*t7818;
  t7894 = t2970*t7875;
  t7905 = t7891 + t7894;
  t7907 = t2970*t7818;
  t7913 = -1.*t3174*t7875;
  t7916 = t7907 + t7913;
  t7923 = -1.*t3635*t7905;
  t7930 = t3575*t7916;
  t7931 = t7923 + t7930;
  t7933 = t3575*t7905;
  t7937 = t3635*t7916;
  t7938 = t7933 + t7937;
  t8001 = t1528*t80*t723;
  t8002 = -1.*t1528*t546*t860;
  t8009 = t8001 + t8002;
  t8025 = -1.*t1528*t723*t546;
  t8034 = -1.*t1528*t80*t860;
  t8037 = t8025 + t8034;
  t8075 = t2042*t8009*t1442;
  t8076 = t8037*t2201;
  t8077 = t8075 + t8076;
  t8088 = t2042*t8037;
  t8091 = -1.*t8009*t1442*t2201;
  t8093 = t8088 + t8091;
  t8096 = -1.*t2582*t8077;
  t8101 = t2422*t8093;
  t8106 = t8096 + t8101;
  t8114 = t2422*t8077;
  t8118 = t2582*t8093;
  t8119 = t8114 + t8118;
  t8123 = t3174*t8106;
  t8127 = t2970*t8119;
  t8129 = t8123 + t8127;
  t8137 = t2970*t8106;
  t8146 = -1.*t3174*t8119;
  t8147 = t8137 + t8146;
  t8152 = -1.*t3635*t8129;
  t8155 = t3575*t8147;
  t8162 = t8152 + t8155;
  t8164 = t3575*t8129;
  t8167 = t3635*t8147;
  t8168 = t8164 + t8167;
  t8226 = -1.*t723*t4564;
  t8233 = t8226 + t7351;
  t8244 = t2042*t4889*t1442;
  t8245 = t8233*t2201;
  t8260 = t8244 + t8245;
  t8268 = t2042*t8233;
  t8271 = -1.*t4889*t1442*t2201;
  t8272 = t8268 + t8271;
  t8274 = -1.*t2582*t8260;
  t8277 = t2422*t8272;
  t8278 = t8274 + t8277;
  t8290 = t2422*t8260;
  t8291 = t2582*t8272;
  t8295 = t8290 + t8291;
  t8302 = t3174*t8278;
  t8304 = t2970*t8295;
  t8312 = t8302 + t8304;
  t8314 = t2970*t8278;
  t8315 = -1.*t3174*t8295;
  t8316 = t8314 + t8315;
  t8319 = -1.*t3635*t8312;
  t8323 = t3575*t8316;
  t8327 = t8319 + t8323;
  t8337 = t3575*t8312;
  t8340 = t3635*t8316;
  t8345 = t8337 + t8340;
  t8199 = -0.135*t723;
  t8200 = t8199 + t1050;
  t8203 = 0.07996*t723;
  t8206 = 0.135*t860;
  t8216 = t8203 + t8206;
  t8382 = t405*t80;
  t8384 = t216*t280*t546;
  t8387 = t8382 + t8384;
  t8392 = -1.*t8387*t860;
  t8393 = t7723 + t8392;
  t8408 = -1.*t723*t8387;
  t8410 = t8408 + t7748;
  t8415 = t2042*t8393*t1442;
  t8424 = t8410*t2201;
  t8429 = t8415 + t8424;
  t8431 = t2042*t8410;
  t8432 = -1.*t8393*t1442*t2201;
  t8433 = t8431 + t8432;
  t8437 = -1.*t2582*t8429;
  t8440 = t2422*t8433;
  t8442 = t8437 + t8440;
  t8444 = t2422*t8429;
  t8446 = t2582*t8433;
  t8447 = t8444 + t8446;
  t8450 = t3174*t8442;
  t8451 = t2970*t8447;
  t8452 = t8450 + t8451;
  t8456 = t2970*t8442;
  t8457 = -1.*t3174*t8447;
  t8458 = t8456 + t8457;
  t8461 = -1.*t3635*t8452;
  t8465 = t3575*t8458;
  t8466 = t8461 + t8465;
  t8470 = t3575*t8452;
  t8472 = t3635*t8458;
  t8473 = t8470 + t8472;
  t8010 = 0.1305*t1351*t8009;
  t8012 = t8009*t1491;
  t8017 = t8009*t1442*t2290;
  t8061 = t8037*t2394;
  t8085 = t2729*t8077;
  t8095 = t2883*t8093;
  t8111 = t3240*t8106;
  t8121 = t3387*t8119;
  t8132 = t3672*t8129;
  t8148 = t3799*t8147;
  t8163 = t3922*t8162;
  t8170 = t4183*t8168;
  t8172 = t3908*t8162;
  t8177 = t3869*t8168;
  t8183 = t8172 + t8177;
  t8189 = 0.046027*t8183;
  t8190 = t3869*t8162;
  t8192 = -1.*t3908*t8168;
  t8193 = t8190 + t8192;
  t8197 = -0.979698*t8193;
  t4717 = t1351*t4639;
  t4720 = -1.*t405*t1528*t1442;
  t4723 = t4717 + t4720;
  t8535 = -1.*t2042*t2582*t4723;
  t8536 = -1.*t2422*t4723*t2201;
  t8538 = t8535 + t8536;
  t8540 = t2422*t2042*t4723;
  t8541 = -1.*t2582*t4723*t2201;
  t8542 = t8540 + t8541;
  t8544 = t3174*t8538;
  t8548 = t2970*t8542;
  t8549 = t8544 + t8548;
  t8552 = t2970*t8538;
  t8553 = -1.*t3174*t8542;
  t8554 = t8552 + t8553;
  t8556 = -1.*t3635*t8549;
  t8557 = t3575*t8554;
  t8558 = t8556 + t8557;
  t8561 = t3575*t8549;
  t8563 = t3635*t8554;
  t8566 = t8561 + t8563;
  t8512 = 0.135*t1351;
  t8513 = -0.08055*t1442;
  t8516 = t8512 + t8513;
  t8518 = 0.08055*t1351;
  t8519 = t8518 + t1642;
  t8585 = t723*t8387;
  t8586 = t7717*t860;
  t8588 = t8585 + t8586;
  t8590 = t1351*t8588;
  t8591 = -1.*t1528*t216*t1442;
  t8592 = t8590 + t8591;
  t8600 = -1.*t2042*t2582*t8592;
  t8602 = -1.*t2422*t8592*t2201;
  t8603 = t8600 + t8602;
  t8605 = t2422*t2042*t8592;
  t8606 = -1.*t2582*t8592*t2201;
  t8608 = t8605 + t8606;
  t8614 = t3174*t8603;
  t8615 = t2970*t8608;
  t8616 = t8614 + t8615;
  t8619 = t2970*t8603;
  t8620 = -1.*t3174*t8608;
  t8621 = t8619 + t8620;
  t8623 = -1.*t3635*t8616;
  t8625 = t3575*t8621;
  t8626 = t8623 + t8625;
  t8628 = t3575*t8616;
  t8630 = t3635*t8621;
  t8632 = t8628 + t8630;
  t8647 = t1528*t723*t546;
  t8649 = t1528*t80*t860;
  t8650 = t8647 + t8649;
  t8652 = t1351*t8650;
  t8653 = t280*t1442;
  t8654 = t8652 + t8653;
  t8667 = -1.*t2042*t2582*t8654;
  t8668 = -1.*t2422*t8654*t2201;
  t8669 = t8667 + t8668;
  t8672 = t2422*t2042*t8654;
  t8673 = -1.*t2582*t8654*t2201;
  t8674 = t8672 + t8673;
  t8676 = t3174*t8669;
  t8677 = t2970*t8674;
  t8679 = t8676 + t8677;
  t8683 = t2970*t8669;
  t8684 = -1.*t3174*t8674;
  t8686 = t8683 + t8684;
  t8688 = -1.*t3635*t8679;
  t8689 = t3575*t8686;
  t8691 = t8688 + t8689;
  t8694 = t3575*t8679;
  t8695 = t3635*t8686;
  t8696 = t8694 + t8695;
  t8718 = -1.*t2042*t4795;
  t8720 = -1.*t4889*t2201;
  t8721 = t8718 + t8720;
  t8726 = t2582*t8721;
  t8727 = t8726 + t5031;
  t8729 = t2422*t8721;
  t8730 = -1.*t2582*t4969;
  t8731 = t8729 + t8730;
  t8733 = -1.*t3174*t8727;
  t8734 = t2970*t8731;
  t8735 = t8733 + t8734;
  t8737 = t2970*t8727;
  t8738 = t3174*t8731;
  t8739 = t8737 + t8738;
  t8741 = t3635*t8735;
  t8743 = t3575*t8739;
  t8745 = t8741 + t8743;
  t8747 = t3575*t8735;
  t8751 = -1.*t3635*t8739;
  t8752 = t8747 + t8751;
  t8710 = -0.01004*t2042;
  t8711 = -0.08055*t2201;
  t8712 = t8710 + t8711;
  t8715 = 0.08055*t2042;
  t8716 = t8715 + t2257;
  t8765 = t1528*t1351*t216;
  t8766 = t8588*t1442;
  t8767 = t8765 + t8766;
  t8770 = -1.*t2042*t8767;
  t8771 = -1.*t8393*t2201;
  t8772 = t8770 + t8771;
  t8774 = t2042*t8393;
  t8775 = -1.*t8767*t2201;
  t8776 = t8774 + t8775;
  t8779 = t2582*t8772;
  t8780 = t2422*t8776;
  t8781 = t8779 + t8780;
  t8784 = t2422*t8772;
  t8785 = -1.*t2582*t8776;
  t8787 = t8784 + t8785;
  t8791 = -1.*t3174*t8781;
  t8792 = t2970*t8787;
  t8793 = t8791 + t8792;
  t8796 = t2970*t8781;
  t8797 = t3174*t8787;
  t8798 = t8796 + t8797;
  t8801 = t3635*t8793;
  t8802 = t3575*t8798;
  t8804 = t8801 + t8802;
  t8808 = t3575*t8793;
  t8809 = -1.*t3635*t8798;
  t8811 = t8808 + t8809;
  t8835 = -1.*t1351*t280;
  t8836 = t8650*t1442;
  t8837 = t8835 + t8836;
  t8844 = -1.*t2042*t8837;
  t8845 = -1.*t8009*t2201;
  t8847 = t8844 + t8845;
  t8850 = t2042*t8009;
  t8851 = -1.*t8837*t2201;
  t8854 = t8850 + t8851;
  t8856 = t2582*t8847;
  t8858 = t2422*t8854;
  t8860 = t8856 + t8858;
  t8862 = t2422*t8847;
  t8863 = -1.*t2582*t8854;
  t8864 = t8862 + t8863;
  t8866 = -1.*t3174*t8860;
  t8868 = t2970*t8864;
  t8870 = t8866 + t8868;
  t8872 = t2970*t8860;
  t8873 = t3174*t8864;
  t8874 = t8872 + t8873;
  t8877 = t3635*t8870;
  t8878 = t3575*t8874;
  t8879 = t8877 + t8878;
  t8881 = t3575*t8870;
  t8882 = -1.*t3635*t8874;
  t8883 = t8881 + t8882;
  t8904 = -1.*t2422*t4933;
  t8905 = t8904 + t8730;
  t8908 = -1.*t3174*t5040;
  t8910 = t2970*t8905;
  t8911 = t8908 + t8910;
  t8914 = t3174*t8905;
  t8915 = t5230 + t8914;
  t8918 = t3635*t8911;
  t8919 = t3575*t8915;
  t8921 = t8918 + t8919;
  t8924 = t3575*t8911;
  t8925 = -1.*t3635*t8915;
  t8926 = t8924 + t8925;
  t8895 = -0.13004*t2422;
  t8896 = -0.08055*t2582;
  t8897 = t8895 + t8896;
  t8899 = 0.08055*t2422;
  t8900 = t8899 + t2619;
  t8937 = t2042*t8767;
  t8938 = t8393*t2201;
  t8940 = t8937 + t8938;
  t8944 = -1.*t2582*t8940;
  t8945 = t8944 + t8780;
  t8947 = -1.*t2422*t8940;
  t8948 = t8947 + t8785;
  t8951 = -1.*t3174*t8945;
  t8952 = t2970*t8948;
  t8953 = t8951 + t8952;
  t8955 = t2970*t8945;
  t8956 = t3174*t8948;
  t8957 = t8955 + t8956;
  t8959 = t3635*t8953;
  t8961 = t3575*t8957;
  t8962 = t8959 + t8961;
  t8964 = t3575*t8953;
  t8966 = -1.*t3635*t8957;
  t8967 = t8964 + t8966;
  t8983 = t2042*t8837;
  t8985 = t8009*t2201;
  t8987 = t8983 + t8985;
  t8990 = -1.*t2582*t8987;
  t8991 = t8990 + t8858;
  t8994 = -1.*t2422*t8987;
  t8995 = t8994 + t8863;
  t8997 = -1.*t3174*t8991;
  t9000 = t2970*t8995;
  t9001 = t8997 + t9000;
  t9003 = t2970*t8991;
  t9004 = t3174*t8995;
  t9005 = t9003 + t9004;
  t9007 = t3635*t9001;
  t9008 = t3575*t9005;
  t9010 = t9007 + t9008;
  t9012 = t3575*t9001;
  t9013 = -1.*t3635*t9005;
  t9014 = t9012 + t9013;
  t9039 = -1.*t2970*t5134;
  t9040 = t8908 + t9039;
  t9044 = t3635*t9040;
  t9045 = t9044 + t5304;
  t9048 = t3575*t9040;
  t9049 = -1.*t3635*t5235;
  t9050 = t9048 + t9049;
  t9030 = 0.03315*t2970;
  t9031 = t9030 + t3362;
  t9033 = -0.19074*t2970;
  t9035 = -0.03315*t3174;
  t9036 = t9033 + t9035;
  t9065 = t2422*t8940;
  t9066 = t2582*t8776;
  t9068 = t9065 + t9066;
  t9071 = -1.*t2970*t9068;
  t9072 = t8951 + t9071;
  t9075 = -1.*t3174*t9068;
  t9076 = t8955 + t9075;
  t9078 = t3635*t9072;
  t9079 = t3575*t9076;
  t9080 = t9078 + t9079;
  t9083 = t3575*t9072;
  t9084 = -1.*t3635*t9076;
  t9085 = t9083 + t9084;
  t9104 = t2422*t8987;
  t9105 = t2582*t8854;
  t9106 = t9104 + t9105;
  t9108 = -1.*t2970*t9106;
  t9110 = t8997 + t9108;
  t9112 = -1.*t3174*t9106;
  t9114 = t9003 + t9112;
  t9118 = t3635*t9110;
  t9119 = t3575*t9114;
  t9120 = t9118 + t9119;
  t9124 = t3575*t9110;
  t9125 = -1.*t3635*t9114;
  t9126 = t9124 + t9125;
  t9150 = -1.*t3575*t5224;
  t9151 = t9150 + t9049;
  t5396 = t3869*t5310;
  t9139 = -0.62554*t3575;
  t9142 = -0.01315*t3635;
  t9143 = t9139 + t9142;
  t9145 = 0.01315*t3575;
  t9147 = t9145 + t3637;
  t9162 = t3174*t8945;
  t9163 = t2970*t9068;
  t9164 = t9162 + t9163;
  t9168 = -1.*t3635*t9164;
  t9169 = t9168 + t9079;
  t9171 = -1.*t3575*t9164;
  t9173 = t9171 + t9084;
  t9186 = t3174*t8991;
  t9187 = t2970*t9106;
  t9188 = t9186 + t9187;
  t9191 = -1.*t3635*t9188;
  t9192 = t9191 + t9119;
  t9194 = -1.*t3575*t9188;
  t9195 = t9194 + t9125;
  t9153 = -1.*t3908*t5310;
  t5399 = -1.*t3908*t5352;
  t5400 = t5396 + t5399;
  t9212 = 0.05315*t3869;
  t9215 = t9212 + t4169;
  t9217 = -1.03354*t3869;
  t9219 = -0.05315*t3908;
  t9220 = t9217 + t9219;
  t9175 = -1.*t3908*t9169;
  t9230 = t3575*t9164;
  t9232 = t3635*t9076;
  t9233 = t9230 + t9232;
  t9180 = t3869*t9169;
  t9197 = -1.*t3908*t9192;
  t9243 = t3575*t9188;
  t9244 = t3635*t9114;
  t9245 = t9243 + t9244;
  t9203 = t3869*t9192;
  p_output1[0]=1.;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=0;
  p_output1[4]=1.;
  p_output1[5]=0;
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=1.;
  p_output1[9]=t1012*t1131 + t1335*t1491 - 1.*t1528*t1674*t216 + 0.1305*(t1335*t1351 + t1442*t1528*t216) + t2004*t2290 + t2365*t2394 + t2729*t2787 + t2883*t2946 + t3240*t3320 + t3387*t3535 + t3672*t3726 + t3799*t3840 + t3922*t4017 + t4183*t4220 + 0.046027*(t3908*t4017 + t3869*t4220) - 0.979698*(t3869*t4017 - 1.*t3908*t4220) + t648*t903;
  p_output1[10]=t1528*t1674*t405 + t1131*t4564 + t1491*t4639 + 0.1305*t4723 + t2290*t4795 + t2394*t4889 + t2729*t4933 + t2883*t4969 + t3240*t5040 + t3387*t5134 + t3672*t5224 + t3799*t5235 + t3922*t5310 + t4183*t5352 + 0.046027*(t3908*t5310 + t3869*t5352) - 0.979698*t5400 + t4535*t903;
  p_output1[11]=0;
  p_output1[12]=-1.*t1674*t280*t405 + t1131*t1528*t405*t546 + t1491*t5548 + 0.1305*(t1442*t280*t405 + t1351*t5548) + t2290*t5692 + t2394*t5726 + t2729*t5759 + t2883*t5814 + t3240*t5881 + t3387*t5944 + t3672*t6024 + t3799*t6082 + t3922*t6106 + t4183*t6123 + 0.046027*(t3908*t6106 + t3869*t6123) - 0.979698*(t3869*t6106 - 1.*t3908*t6123) + t1528*t405*t80*t903;
  p_output1[13]=-1.*t1674*t216*t280 + t1131*t1528*t216*t546 + t1491*t6254 + 0.1305*(t1442*t216*t280 + t1351*t6254) + t2290*t6332 + t2394*t6391 + t2729*t6409 + t2883*t6475 + t3240*t6502 + t3387*t6554 + t3672*t6623 + t3799*t6642 + t3922*t6676 + t4183*t6719 + 0.046027*(t3908*t6676 + t3869*t6719) - 0.979698*(t3869*t6676 - 1.*t3908*t6719) + t1528*t216*t80*t903;
  p_output1[14]=-1.*t1528*t1674 - 1.*t1131*t280*t546 + t1491*t6874 + 0.1305*(t1442*t1528 + t1351*t6874) + t2290*t6929 + t2394*t6971 + t2729*t7014 + t2883*t7038 + t3240*t7058 + t3387*t7090 + t3672*t7106 + t3799*t7120 + t3922*t7133 + t4183*t7173 + 0.046027*(t3908*t7133 + t3869*t7173) - 0.979698*(t3869*t7133 - 1.*t3908*t7173) - 1.*t280*t80*t903;
  p_output1[15]=t1131*t4535 + 0.1305*t1351*t7315 + t1491*t7315 + t1442*t2290*t7315 + t2394*t7369 + t2729*t7393 + t2883*t7407 + t3240*t7423 + t3387*t7487 + t3672*t7527 + t3799*t7560 + t3922*t7569 + t4183*t7608 + 0.046027*(t3908*t7569 + t3869*t7608) - 0.979698*(t3869*t7569 - 1.*t3908*t7608) + t7256*t903;
  p_output1[16]=t1131*t7717 + 0.1305*t1351*t7736 + t1491*t7736 + t1442*t2290*t7736 + t2394*t7750 + t2729*t7776 + t2883*t7794 + t3240*t7818 + t3387*t7875 + t3672*t7905 + t3799*t7916 + t3922*t7931 + t4183*t7938 + 0.046027*(t3908*t7931 + t3869*t7938) - 0.979698*(t3869*t7931 - 1.*t3908*t7938) + t1012*t903;
  p_output1[17]=t1131*t1528*t80 + t8010 + t8012 + t8017 + t8061 + t8085 + t8095 + t8111 + t8121 + t8132 + t8148 + t8163 + t8170 + t8189 + t8197 - 1.*t1528*t546*t903;
  p_output1[18]=0.1305*t1351*t4889 + t1491*t4889 + t1442*t2290*t4889 + t4535*t8200 + t4564*t8216 + t2394*t8233 + t2729*t8260 + t2883*t8272 + t3240*t8278 + t3387*t8295 + t3672*t8312 + t3799*t8316 + t3922*t8327 + t4183*t8345 + 0.046027*(t3908*t8327 + t3869*t8345) - 0.979698*(t3869*t8327 - 1.*t3908*t8345);
  p_output1[19]=t7717*t8200 + t8216*t8387 + 0.1305*t1351*t8393 + t1491*t8393 + t1442*t2290*t8393 + t2394*t8410 + t2729*t8429 + t2883*t8433 + t3240*t8442 + t3387*t8447 + t3672*t8452 + t3799*t8458 + t3922*t8466 + t4183*t8473 + 0.046027*(t3908*t8466 + t3869*t8473) - 0.979698*(t3869*t8466 - 1.*t3908*t8473);
  p_output1[20]=t8010 + t8012 + t8017 + t8061 + t8085 + t8095 + t8111 + t8121 + t8132 + t8148 + t8163 + t8170 + t8189 + t8197 + t1528*t80*t8200 + t1528*t546*t8216;
  p_output1[21]=0.1305*(-1.*t1351*t1528*t405 - 1.*t1442*t4639) + t2290*t4723 + t2042*t2729*t4723 - 1.*t2201*t2883*t4723 + t1528*t405*t8516 + t4639*t8519 + t3240*t8538 + t3387*t8542 + t3672*t8549 + t3799*t8554 + t3922*t8558 + t4183*t8566 + 0.046027*(t3908*t8558 + t3869*t8566) - 0.979698*(t3869*t8558 - 1.*t3908*t8566);
  p_output1[22]=t1528*t216*t8516 + t8519*t8588 + 0.1305*(t1962 - 1.*t1442*t8588) + t2290*t8592 + t2042*t2729*t8592 - 1.*t2201*t2883*t8592 + t3240*t8603 + t3387*t8608 + t3672*t8616 + t3799*t8621 + t3922*t8626 + t4183*t8632 + 0.046027*(t3908*t8626 + t3869*t8632) - 0.979698*(t3869*t8626 - 1.*t3908*t8632);
  p_output1[23]=-1.*t280*t8516 + t8519*t8650 + 0.1305*(t1351*t280 - 1.*t1442*t8650) + t2290*t8654 + t2042*t2729*t8654 - 1.*t2201*t2883*t8654 + t3240*t8669 + t3387*t8674 + t3672*t8679 + t3799*t8686 + t3922*t8691 + t4183*t8696 + 0.046027*(t3908*t8691 + t3869*t8696) - 0.979698*(t3869*t8691 - 1.*t3908*t8696);
  p_output1[24]=t2729*t4969 + t4795*t8712 + t4889*t8716 + t2883*t8721 + t3387*t8727 + t3240*t8731 + t3799*t8735 + t3672*t8739 + t4183*t8745 + t3922*t8752 - 0.979698*(-1.*t3908*t8745 + t3869*t8752) + 0.046027*(t3869*t8745 + t3908*t8752);
  p_output1[25]=t8393*t8716 + t8712*t8767 + t2883*t8772 + t2729*t8776 + t3387*t8781 + t3240*t8787 + t3799*t8793 + t3672*t8798 + t4183*t8804 + t3922*t8811 - 0.979698*(-1.*t3908*t8804 + t3869*t8811) + 0.046027*(t3869*t8804 + t3908*t8811);
  p_output1[26]=t8009*t8716 + t8712*t8837 + t2883*t8847 + t2729*t8854 + t3387*t8860 + t3240*t8864 + t3799*t8870 + t3672*t8874 + t4183*t8879 + t3922*t8883 - 0.979698*(-1.*t3908*t8879 + t3869*t8883) + 0.046027*(t3869*t8879 + t3908*t8883);
  p_output1[27]=t3387*t5040 + t4933*t8897 + t4969*t8900 + t3240*t8905 + t3799*t8911 + t3672*t8915 + t4183*t8921 + t3922*t8926 - 0.979698*(-1.*t3908*t8921 + t3869*t8926) + 0.046027*(t3869*t8921 + t3908*t8926);
  p_output1[28]=t8776*t8900 + t8897*t8940 + t3387*t8945 + t3240*t8948 + t3799*t8953 + t3672*t8957 + t4183*t8962 + t3922*t8967 - 0.979698*(-1.*t3908*t8962 + t3869*t8967) + 0.046027*(t3869*t8962 + t3908*t8967);
  p_output1[29]=t8854*t8900 + t8897*t8987 + t3387*t8991 + t3240*t8995 + t3799*t9001 + t3672*t9005 + t4183*t9010 + t3922*t9014 - 0.979698*(-1.*t3908*t9010 + t3869*t9014) + 0.046027*(t3869*t9010 + t3908*t9014);
  p_output1[30]=t3672*t5235 + t5040*t9031 + t5134*t9036 + t3799*t9040 + t4183*t9045 + t3922*t9050 - 0.979698*(-1.*t3908*t9045 + t3869*t9050) + 0.046027*(t3869*t9045 + t3908*t9050);
  p_output1[31]=t8945*t9031 + t9036*t9068 + t3799*t9072 + t3672*t9076 + t4183*t9080 + t3922*t9085 - 0.979698*(-1.*t3908*t9080 + t3869*t9085) + 0.046027*(t3869*t9080 + t3908*t9085);
  p_output1[32]=t8991*t9031 + t9036*t9106 + t3799*t9110 + t3672*t9114 + t4183*t9120 + t3922*t9126 - 0.979698*(-1.*t3908*t9120 + t3869*t9126) + 0.046027*(t3869*t9120 + t3908*t9126);
  p_output1[33]=t4183*t5310 + t5224*t9143 + t5235*t9147 + t3922*t9151 + 0.046027*(t5396 + t3908*t9151) - 0.979698*(t3869*t9151 + t9153);
  p_output1[34]=t9076*t9147 + t9143*t9164 + t4183*t9169 + t3922*t9173 - 0.979698*(t3869*t9173 + t9175) + 0.046027*(t3908*t9173 + t9180);
  p_output1[35]=t9114*t9147 + t9143*t9188 + t4183*t9192 + t3922*t9195 - 0.979698*(t3869*t9195 + t9197) + 0.046027*(t3908*t9195 + t9203);
  p_output1[36]=0.046027*t5400 - 0.979698*(-1.*t3869*t5352 + t9153) + t5310*t9215 + t5352*t9220;
  p_output1[37]=t9169*t9215 + t9220*t9233 - 0.979698*(t9175 - 1.*t3869*t9233) + 0.046027*(t9180 - 1.*t3908*t9233);
  p_output1[38]=t9192*t9215 + t9220*t9245 - 0.979698*(t9197 - 1.*t3869*t9245) + 0.046027*(t9203 - 1.*t3908*t9245);
  p_output1[39]=0;
  p_output1[40]=0;
  p_output1[41]=0;
  p_output1[42]=0;
  p_output1[43]=0;
  p_output1[44]=0;
  p_output1[45]=0;
  p_output1[46]=0;
  p_output1[47]=0;
  p_output1[48]=0;
  p_output1[49]=0;
  p_output1[50]=0;
  p_output1[51]=0;
  p_output1[52]=0;
  p_output1[53]=0;
  p_output1[54]=0;
  p_output1[55]=0;
  p_output1[56]=0;
  p_output1[57]=0;
  p_output1[58]=0;
  p_output1[59]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "One input(s) required (var1).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 20 && ncols == 1) && 
      !(mrows == 1 && ncols == 20))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 3, (mwSize) 20, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1);


}

#else // MATLAB_MEX_FILE

#include "Jp_LeftToeBottomFront_mex.hh"

namespace SymExpression
{

void Jp_LeftToeBottomFront_mex_raw(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}

}

#endif // MATLAB_MEX_FILE
