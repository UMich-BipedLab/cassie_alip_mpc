/*
 * Automatically Generated from Mathematica.
 * Mon 11 May 2020 22:22:28 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t93;
  double t180;
  double t486;
  double t558;
  double t518;
  double t565;
  double t571;
  double t579;
  double t1107;
  double t1146;
  double t685;
  double t706;
  double t734;
  double t740;
  double t1196;
  double t1203;
  double t1216;
  double t1393;
  double t1395;
  double t1397;
  double t811;
  double t813;
  double t820;
  double t836;
  double t838;
  double t840;
  double t841;
  double t843;
  double t950;
  double t969;
  double t1012;
  double t1065;
  double t1079;
  double t1095;
  double t1106;
  double t1867;
  double t1592;
  double t1602;
  double t1610;
  double t1877;
  double t1869;
  double t1887;
  double t1888;
  double t1948;
  double t1954;
  double t1537;
  double t1544;
  double t1559;
  double t1961;
  double t1964;
  double t1973;
  double t1984;
  double t1992;
  double t2014;
  double t1327;
  double t1328;
  double t1336;
  double t2076;
  double t2078;
  double t2097;
  double t2043;
  double t2050;
  double t2065;
  double t2071;
  double t1894;
  double t1898;
  double t1914;
  double t2290;
  double t2293;
  double t2311;
  double t2327;
  double t2328;
  double t1225;
  double t1240;
  double t1250;
  double t2251;
  double t2136;
  double t2342;
  double t2344;
  double t2345;
  double t2359;
  double t2364;
  double t2370;
  double t2373;
  double t2393;
  double t2394;
  double t2405;
  double t2686;
  double t2690;
  double t2691;
  double t2820;
  double t2825;
  double t2828;
  double t2943;
  double t2956;
  double t2971;
  double t2980;
  double t3149;
  double t3203;
  double t2669;
  double t2672;
  double t2677;
  double t1977;
  double t2028;
  double t2831;
  double t2834;
  double t2844;
  double t3344;
  double t2476;
  double t3156;
  double t3165;
  double t3366;
  double t3368;
  double t3378;
  double t3380;
  double t3406;
  double t2271;
  double t2288;
  double t3250;
  double t3251;
  double t3100;
  double t3104;
  double t3106;
  double t3524;
  double t3535;
  double t3574;
  double t3575;
  double t3536;
  double t3545;
  double t3546;
  double t3036;
  double t3056;
  double t3067;
  double t3577;
  double t3578;
  double t3581;
  double t3585;
  double t3586;
  double t3588;
  double t2106;
  double t2169;
  double t2429;
  double t2439;
  double t3583;
  double t3592;
  double t3593;
  double t3232;
  double t3236;
  double t3606;
  double t3607;
  double t3610;
  double t2491;
  double t2492;
  double t2505;
  double t2510;
  double t3561;
  double t3562;
  double t3564;
  double t3565;
  double t3568;
  double t3569;
  double t2598;
  double t2622;
  double t2624;
  double t2853;
  double t2889;
  double t2915;
  double t2635;
  double t2640;
  double t2703;
  double t2704;
  double t3324;
  double t3326;
  double t3339;
  double t3650;
  double t3654;
  double t3658;
  double t3594;
  double t3600;
  double t3601;
  double t3731;
  double t3744;
  double t3748;
  double t3754;
  double t3761;
  double t3622;
  double t2376;
  double t2377;
  double t3642;
  double t3660;
  double t2304;
  double t2330;
  double t3178;
  double t3183;
  double t3213;
  double t3214;
  double t3927;
  double t3934;
  double t3951;
  double t2785;
  double t2794;
  double t3001;
  double t3005;
  double t3713;
  double t3716;
  double t3719;
  double t4043;
  double t4045;
  double t4046;
  double t3266;
  double t3270;
  double t4021;
  double t4050;
  double t3257;
  double t3259;
  double t2239;
  double t3086;
  double t3090;
  double t3799;
  double t3800;
  double t3808;
  double t4226;
  double t3351;
  double t3352;
  double t3684;
  double t3690;
  double t3693;
  double t3614;
  double t3615;
  double t3392;
  double t3395;
  double t4073;
  double t4081;
  double t4082;
  double t4493;
  double t3408;
  double t3410;
  double t3425;
  double t3426;
  double t4551;
  double t4554;
  double t4569;
  double t3486;
  double t3487;
  double t4258;
  double t4267;
  double t4369;
  double t4388;
  double t4394;
  double t3818;
  double t3824;
  double t4591;
  double t4592;
  double t3456;
  double t3457;
  double t3438;
  double t3442;
  double t4199;
  double t4203;
  double t4205;
  double t3916;
  double t3917;
  double t3922;
  double t3530;
  double t3547;
  double t3549;
  double t3554;
  double t3570;
  double t4992;
  double t5001;
  double t5004;
  double t5011;
  double t4963;
  double t4965;
  double t4967;
  double t5009;
  double t5012;
  double t5016;
  double t5037;
  double t5040;
  double t5042;
  double t3623;
  double t3624;
  double t5153;
  double t5155;
  double t5173;
  double t5181;
  double t5183;
  double t4926;
  double t4942;
  double t4943;
  double t5023;
  double t5044;
  double t5051;
  double t3637;
  double t5329;
  double t5330;
  double t3876;
  double t5335;
  double t5341;
  double t5344;
  double t5347;
  double t3750;
  double t3764;
  double t3784;
  double t3787;
  double t3674;
  double t3675;
  double t3677;
  double t3696;
  double t3697;
  double t4099;
  double t4100;
  double t4102;
  double t3702;
  double t3705;
  double t4447;
  double t4469;
  double t4470;
  double t3913;
  double t3924;
  double t3964;
  double t5553;
  double t5560;
  double t5566;
  double t5582;
  double t5583;
  double t4179;
  double t5641;
  double t5642;
  double t5643;
  double t5648;
  double t4316;
  double t4325;
  double t4351;
  double t4354;
  double t4085;
  double t4092;
  double t4110;
  double t4124;
  double t5215;
  double t5216;
  double t5228;
  double t4282;
  double t4420;
  double t4424;
  double t4425;
  double t4426;
  double t4477;
  double t4485;
  double t4513;
  double t4516;
  double t5057;
  double t5059;
  double t4601;
  double t4617;
  double t6057;
  double t6059;
  double t6060;
  double t6064;
  double t6074;
  double t6080;
  double t6081;
  double t6086;
  double t6093;
  double t6096;
  double t6097;
  double t6101;
  double t4778;
  double t4791;
  double t4725;
  double t4726;
  double t4747;
  double t4751;
  double t4693;
  double t4824;
  double t4831;
  double t4835;
  double t4842;
  double t4847;
  double t4851;
  double t4859;
  double t4868;
  double t4870;
  double t4884;
  double t4889;
  double t4890;
  double t4908;
  double t4910;
  double t4917;
  double t4920;
  double t4922;
  double t4924;
  double t4947;
  double t4953;
  double t4957;
  double t4958;
  double t4971;
  double t4974;
  double t4981;
  double t4982;
  double t4984;
  double t4987;
  double t6198;
  double t6201;
  double t6203;
  double t6212;
  double t5956;
  double t5959;
  double t5960;
  double t6209;
  double t6219;
  double t6221;
  double t5843;
  double t5850;
  double t5854;
  double t6245;
  double t6249;
  double t6250;
  double t5081;
  double t5093;
  double t5097;
  double t5129;
  double t5130;
  double t5132;
  double t5165;
  double t5185;
  double t5944;
  double t5947;
  double t5952;
  double t5193;
  double t5200;
  double t5207;
  double t5232;
  double t5234;
  double t5913;
  double t5914;
  double t5917;
  double t5921;
  double t5925;
  double t5934;
  double t6225;
  double t6226;
  double t6229;
  double t6313;
  double t6346;
  double t6386;
  double t6387;
  double t6388;
  double t6397;
  double t6404;
  double t6234;
  double t6255;
  double t6256;
  double t5263;
  double t5284;
  double t5285;
  double t5293;
  double t5299;
  double t5308;
  double t5315;
  double t5316;
  double t5595;
  double t5599;
  double t5601;
  double t5623;
  double t5631;
  double t5638;
  double t6445;
  double t6446;
  double t6454;
  double t6481;
  double t6482;
  double t5366;
  double t5368;
  double t5370;
  double t5378;
  double t5381;
  double t5382;
  double t5399;
  double t5401;
  double t5668;
  double t5669;
  double t5672;
  double t5692;
  double t5698;
  double t5703;
  double t6535;
  double t6540;
  double t6543;
  double t6554;
  double t5411;
  double t5419;
  double t5452;
  double t5455;
  double t5457;
  double t5462;
  double t5470;
  double t5473;
  double t5479;
  double t5487;
  double t5788;
  double t5789;
  double t5790;
  double t5801;
  double t5804;
  double t5813;
  double t5509;
  double t5522;
  double t6011;
  double t6015;
  double t6016;
  double t6019;
  double t6021;
  double t6022;
  double t5569;
  double t5572;
  double t6838;
  double t6839;
  double t6844;
  double t6845;
  double t6846;
  double t5662;
  double t5665;
  double t6874;
  double t6875;
  double t6876;
  double t6878;
  double t5719;
  double t5743;
  double t5772;
  double t5777;
  double t5816;
  double t5818;
  double t6420;
  double t6426;
  double t5858;
  double t5862;
  double t5869;
  double t5880;
  double t5884;
  double t5899;
  double t7047;
  double t7060;
  double t5973;
  double t5978;
  double t5987;
  double t5991;
  double t7108;
  double t7116;
  double t6040;
  double t6048;
  double t6025;
  double t6027;
  double t6264;
  double t6268;
  double t6107;
  double t6108;
  double t6102;
  double t6103;
  double t7204;
  double t7209;
  double t7217;
  double t7220;
  double t7226;
  double t7227;
  double t7229;
  double t7230;
  double t7231;
  double t7232;
  double t7233;
  double t7236;
  double t6125;
  double t6127;
  double t6133;
  double t6137;
  double t6155;
  double t6163;
  double t6179;
  double t6183;
  double t7134;
  double t7137;
  double t7394;
  double t7398;
  double t7399;
  double t7402;
  double t7400;
  double t7403;
  double t7405;
  double t7411;
  double t7415;
  double t7416;
  double t7015;
  double t7017;
  double t7018;
  double t6282;
  double t6287;
  double t6288;
  double t6290;
  double t6293;
  double t6295;
  double t6303;
  double t6304;
  double t7107;
  double t7110;
  double t7114;
  double t7120;
  double t6308;
  double t6318;
  double t6333;
  double t6350;
  double t6360;
  double t6365;
  double t7046;
  double t7050;
  double t7056;
  double t7063;
  double t6391;
  double t6406;
  double t7146;
  double t7150;
  double t6434;
  double t6435;
  double t6455;
  double t6461;
  double t7087;
  double t7093;
  double t7095;
  double t7098;
  double t7409;
  double t7417;
  double t7418;
  double t7420;
  double t7421;
  double t7422;
  double t6496;
  double t6501;
  double t6510;
  double t6513;
  double t6515;
  double t6516;
  double t6520;
  double t6521;
  double t6855;
  double t6859;
  double t6860;
  double t6863;
  double t6867;
  double t6868;
  double t7557;
  double t7558;
  double t6594;
  double t6596;
  double t6598;
  double t6601;
  double t6610;
  double t6616;
  double t6630;
  double t6631;
  double t6902;
  double t6903;
  double t6904;
  double t6910;
  double t6913;
  double t6916;
  double t7629;
  double t7641;
  double t7643;
  double t7655;
  double t7660;
  double t7663;
  double t7668;
  double t6653;
  double t6656;
  double t7295;
  double t7297;
  double t7299;
  double t7301;
  double t7306;
  double t7311;
  double t6662;
  double t6663;
  double t6686;
  double t6692;
  double t6699;
  double t6708;
  double t6726;
  double t6728;
  double t6934;
  double t6936;
  double t6939;
  double t6944;
  double t6945;
  double t6946;
  double t6764;
  double t6767;
  double t6768;
  double t6799;
  double t6800;
  double t6807;
  double t6813;
  double t6815;
  double t6987;
  double t6988;
  double t6990;
  double t6992;
  double t6993;
  double t6994;
  double t6823;
  double t6826;
  double t7193;
  double t7194;
  double t7196;
  double t7200;
  double t7201;
  double t7202;
  double t7512;
  double t7520;
  double t7868;
  double t7869;
  double t7873;
  double t7874;
  double t7875;
  double t6850;
  double t6851;
  double t7910;
  double t7913;
  double t7922;
  double t7925;
  double t7927;
  double t6894;
  double t6898;
  double t7993;
  double t8002;
  double t8005;
  double t8007;
  double t6922;
  double t6923;
  double t6928;
  double t6930;
  double t6978;
  double t6979;
  double t7000;
  double t7002;
  double t7893;
  double t7895;
  double t7020;
  double t7023;
  double t7030;
  double t7031;
  double t7039;
  double t7040;
  double t7071;
  double t7074;
  double t7082;
  double t7083;
  double t8297;
  double t8308;
  double t7123;
  double t7124;
  double t7127;
  double t7129;
  double t7153;
  double t7154;
  double t7159;
  double t7160;
  double t7175;
  double t7180;
  double t7185;
  double t7187;
  double t7425;
  double t7426;
  double t7238;
  double t7245;
  double t7251;
  double t7252;
  double t8495;
  double t8498;
  double t8501;
  double t8505;
  double t8515;
  double t8516;
  double t8520;
  double t8522;
  double t8523;
  double t8524;
  double t8528;
  double t8530;
  double t7263;
  double t7267;
  double t7271;
  double t7275;
  double t7323;
  double t7324;
  double t7333;
  double t7337;
  double t7361;
  double t7370;
  double t8420;
  double t8430;
  t93 = Cos(var1[3]);
  t180 = Sin(var1[3]);
  t486 = Cos(var1[4]);
  t558 = Sin(var1[4]);
  t518 = -1.*var2[2]*t486*t180;
  t565 = -1.*var2[1]*t558;
  t571 = -1.*var1[1]*t486;
  t579 = var1[2]*t180*t558;
  t1107 = Cos(var1[5]);
  t1146 = Sin(var1[5]);
  t685 = var2[2]*t93*t486;
  t706 = var2[0]*t558;
  t734 = var1[0]*t486;
  t740 = -1.*var1[2]*t93*t558;
  t1196 = t93*t1107*t558;
  t1203 = t180*t1146;
  t1216 = t1196 + t1203;
  t1393 = -1.*t93*t1107;
  t1395 = -1.*t180*t558*t1146;
  t1397 = t1393 + t1395;
  t811 = -1.*var2[1]*t93*t486;
  t813 = var2[0]*t486*t180;
  t820 = var1[0]*t93*t486;
  t836 = var1[1]*t486*t180;
  t838 = t820 + t836;
  t840 = var2[3]*t838;
  t841 = var1[1]*t93*t558;
  t843 = -1.*var1[0]*t180*t558;
  t950 = -1.*var2[3]*t486*t180;
  t969 = -1.*var2[4]*t93*t558;
  t1012 = t950 + t969;
  t1065 = var2[3]*t93*t486;
  t1079 = -1.*var2[4]*t180*t558;
  t1095 = t1065 + t1079;
  t1106 = -1.*var2[4]*t486;
  t1867 = Cos(var1[13]);
  t1592 = t1107*t180*t558;
  t1602 = -1.*t93*t1146;
  t1610 = t1592 + t1602;
  t1877 = Sin(var1[13]);
  t1869 = t1867*t486*t1107;
  t1887 = -1.*t486*t1877*t1146;
  t1888 = t1869 + t1887;
  t1948 = -1.*t1867;
  t1954 = 1. + t1948;
  t1537 = -1.*t1107*t180;
  t1544 = t93*t558*t1146;
  t1559 = t1537 + t1544;
  t1961 = 0.07996*t1954;
  t1964 = 0.135*t1877;
  t1973 = 0. + t1961 + t1964;
  t1984 = -0.135*t1954;
  t1992 = 0.07996*t1877;
  t2014 = 0. + t1984 + t1992;
  t1327 = -1.*t1107*t180*t558;
  t1328 = t93*t1146;
  t1336 = t1327 + t1328;
  t2076 = t1867*t1216;
  t2078 = -1.*t1877*t1559;
  t2097 = t2076 + t2078;
  t2043 = -1.*var1[2];
  t2050 = -1.*t486*t1107*t1973;
  t2065 = -1.*t486*t2014*t1146;
  t2071 = 0. + t2043 + t2050 + t2065;
  t1894 = t93*t1107;
  t1898 = t180*t558*t1146;
  t1914 = t1894 + t1898;
  t2290 = 0.135*t1867;
  t2293 = t2290 + t1992;
  t2311 = 0.07996*t1867;
  t2327 = -0.135*t1877;
  t2328 = t2311 + t2327;
  t1225 = t1107*t180;
  t1240 = -1.*t93*t558*t1146;
  t1250 = t1225 + t1240;
  t2251 = -1.*t1877*t1610;
  t2136 = t1867*t1397;
  t2342 = -1.*t486*t1107*t1877;
  t2344 = -1.*t1867*t486*t1146;
  t2345 = t2342 + t2344;
  t2359 = t1973*t1610;
  t2364 = t2014*t1914;
  t2370 = 0. + var1[1] + t2359 + t2364;
  t2373 = t2345*t2370;
  t2393 = t1867*t1610;
  t2394 = -1.*t1877*t1914;
  t2405 = t2393 + t2394;
  t2686 = -1.*t1867*t1107*t558;
  t2690 = t1877*t558*t1146;
  t2691 = t2686 + t2690;
  t2820 = t486*t1107*t1973;
  t2825 = t486*t2014*t1146;
  t2828 = 0. + var1[2] + t2820 + t2825;
  t2943 = -1.*var1[0];
  t2956 = -1.*t1973*t1216;
  t2971 = -1.*t2014*t1559;
  t2980 = 0. + t2943 + t2956 + t2971;
  t3149 = -1.*t1877*t1216;
  t3203 = t2345*t2980;
  t2669 = t1867*t486*t1107*t180;
  t2672 = -1.*t486*t1877*t180*t1146;
  t2677 = t2669 + t2672;
  t1977 = t1973*t1216;
  t2028 = t2014*t1559;
  t2831 = t1867*t93*t486*t1107;
  t2834 = -1.*t93*t486*t1877*t1146;
  t2844 = t2831 + t2834;
  t3344 = 0. + var1[0] + t1977 + t2028;
  t2476 = t2251 + t2136;
  t3156 = t1867*t1250;
  t3165 = t3149 + t3156;
  t3366 = -1.*var1[1];
  t3368 = -1.*t1973*t1610;
  t3378 = -1.*t2014*t1914;
  t3380 = 0. + t3366 + t3368 + t3378;
  t3406 = 0.08055*t1888;
  t2271 = -1.*t1867*t1914;
  t2288 = t2251 + t2271;
  t3250 = -1.*t1867*t1559;
  t3251 = t3149 + t3250;
  t3100 = t1867*t1336;
  t3104 = -1.*t1877*t1397;
  t3106 = t3100 + t3104;
  t3524 = Sin(var1[14]);
  t3535 = Cos(var1[14]);
  t3574 = -1.*t3535;
  t3575 = 1. + t3574;
  t3536 = t486*t1107*t1877;
  t3545 = t1867*t486*t1146;
  t3546 = t3536 + t3545;
  t3036 = t1877*t1216;
  t3056 = t1867*t1559;
  t3067 = t3036 + t3056;
  t3577 = -0.08055*t3575;
  t3578 = -0.135*t3524;
  t3581 = 0. + t3577 + t3578;
  t3585 = -0.135*t3575;
  t3586 = 0.08055*t3524;
  t3588 = 0. + t3585 + t3586;
  t2106 = t1877*t1336;
  t2169 = t2106 + t2136;
  t2429 = t1877*t1250;
  t2439 = t2076 + t2429;
  t3583 = t3581*t558;
  t3592 = -1.*t3588*t3546;
  t3593 = 0. + t2043 + t2050 + t3583 + t2065 + t3592;
  t3232 = t1877*t1397;
  t3236 = t2393 + t3232;
  t3606 = t3524*t558;
  t3607 = t3535*t3546;
  t3610 = t3606 + t3607;
  t2491 = t2014*t1610;
  t2492 = t1973*t1397;
  t2505 = -1.*t486*t1107*t2014;
  t2510 = t486*t1973*t1146;
  t3561 = -1.*t486*t3524*t180;
  t3562 = t1877*t1610;
  t3564 = t1867*t1914;
  t3565 = t3562 + t3564;
  t3568 = t3535*t3565;
  t3569 = t3561 + t3568;
  t2598 = t93*t486*t1107*t1877;
  t2622 = t1867*t93*t486*t1146;
  t2624 = t2598 + t2622;
  t2853 = t486*t1107*t1877*t180;
  t2889 = t1867*t486*t180*t1146;
  t2915 = t2853 + t2889;
  t2635 = t486*t1107*t1973*t180;
  t2640 = t486*t2014*t180*t1146;
  t2703 = t1107*t1973*t558;
  t2704 = t2014*t558*t1146;
  t3324 = -1.*t1107*t1877*t558;
  t3326 = -1.*t1867*t558*t1146;
  t3339 = t3324 + t3326;
  t3650 = t486*t3581*t180;
  t3654 = t3588*t3565;
  t3658 = 0. + var1[1] + t3650 + t2359 + t2364 + t3654;
  t3594 = -1.*t93*t486*t3524;
  t3600 = t3535*t3067;
  t3601 = t3594 + t3600;
  t3731 = -0.135*t3535;
  t3744 = -0.08055*t3524;
  t3748 = t3731 + t3744;
  t3754 = 0.08055*t3535;
  t3761 = t3754 + t3578;
  t3622 = -1.*t3535*t486*t180;
  t2376 = -1.*t486*t1107*t2293;
  t2377 = -1.*t486*t2328*t1146;
  t3642 = -1.*t3588*t1888;
  t3660 = -1.*t3535*t1888*t3658;
  t2304 = t2293*t1610;
  t2330 = t2328*t1914;
  t3178 = -1.*t2014*t1216;
  t3183 = -1.*t1973*t1250;
  t3213 = t486*t1107*t2014;
  t3214 = -1.*t486*t1973*t1146;
  t3927 = -1.*t3581*t558;
  t3934 = t3588*t3546;
  t3951 = 0. + var1[2] + t2820 + t3927 + t2825 + t3934;
  t2785 = -1.*t93*t486*t1107*t1973;
  t2794 = -1.*t93*t486*t2014*t1146;
  t3001 = -1.*t1107*t1973*t558;
  t3005 = -1.*t2014*t558*t1146;
  t3713 = t486*t3524;
  t3716 = t3535*t3339;
  t3719 = t3713 + t3716;
  t4043 = -1.*t93*t486*t3581;
  t4045 = -1.*t3588*t3067;
  t4046 = 0. + t2943 + t4043 + t2956 + t2971 + t4045;
  t3266 = t486*t1107*t2293;
  t3270 = t486*t2328*t1146;
  t4021 = t3588*t1888;
  t4050 = -1.*t3535*t1888*t4046;
  t3257 = -1.*t2293*t1216;
  t3259 = -1.*t2328*t1559;
  t2239 = 0.08055*t2097;
  t3086 = -1.*t1973*t1336;
  t3090 = -1.*t2014*t1397;
  t3799 = t3535*t558;
  t3800 = -1.*t3524*t3546;
  t3808 = t3799 + t3800;
  t4226 = t486*t3524*t180;
  t3351 = -1.*t486*t1107*t1973*t180;
  t3352 = -1.*t486*t2014*t180*t1146;
  t3684 = t3524*t180*t558;
  t3690 = t3535*t2915;
  t3693 = t3684 + t3690;
  t3614 = t93*t486*t3581;
  t3615 = t3588*t3067;
  t3392 = t93*t486*t1107*t1973;
  t3395 = t93*t486*t2014*t1146;
  t4073 = t93*t3524*t558;
  t4081 = t3535*t2624;
  t4082 = t4073 + t4081;
  t4493 = 0. + var1[0] + t3614 + t1977 + t2028 + t3615;
  t3408 = -1.*t2014*t1610;
  t3410 = -1.*t1973*t1397;
  t3425 = t2014*t1216;
  t3426 = t1973*t1250;
  t4551 = -1.*t486*t3581*t180;
  t4554 = -1.*t3588*t3565;
  t4569 = 0. + t3366 + t4551 + t3368 + t3378 + t4554;
  t3486 = t1973*t1336;
  t3487 = t2014*t1397;
  t4258 = t3535*t2169;
  t4267 = t4226 + t4258;
  t4369 = -1.*t3535*t93*t486;
  t4388 = -1.*t3524*t3067;
  t4394 = t4369 + t4388;
  t3818 = -1.*t3524*t3565;
  t3824 = t3622 + t3818;
  t4591 = 0.08055*t2345;
  t4592 = -0.01004*t3524*t1888;
  t3456 = t2293*t1216;
  t3457 = t2328*t1559;
  t3438 = -1.*t2293*t1610;
  t3442 = -1.*t2328*t1914;
  t4199 = t3535*t93*t486;
  t4203 = t3524*t3067;
  t4205 = t4199 + t4203;
  t3916 = t93*t486*t3524;
  t3917 = -1.*t3535*t3067;
  t3922 = t3916 + t3917;
  t3530 = -1.*t3524*t558;
  t3547 = -1.*t3535*t3546;
  t3549 = t3530 + t3547;
  t3554 = var2[1]*t3549;
  t3570 = var2[2]*t3569;
  t4992 = Cos(var1[15]);
  t5001 = -1.*t4992;
  t5004 = 1. + t5001;
  t5011 = Sin(var1[15]);
  t4963 = -1.*t3535*t558;
  t4965 = t3524*t3546;
  t4967 = t4963 + t4965;
  t5009 = -0.01004*t5004;
  t5012 = 0.08055*t5011;
  t5016 = 0. + t5009 + t5012;
  t5037 = -0.08055*t5004;
  t5040 = -0.01004*t5011;
  t5042 = 0. + t5037 + t5040;
  t3623 = t3524*t2169;
  t3624 = t3622 + t3623;
  t5153 = 0.08055*t4992;
  t5155 = t5153 + t5040;
  t5173 = -0.01004*t4992;
  t5181 = -0.08055*t5011;
  t5183 = t5173 + t5181;
  t4926 = t3535*t486*t180;
  t4942 = t3524*t3565;
  t4943 = t4926 + t4942;
  t5023 = -1.*t5016*t1888;
  t5044 = -1.*t5042*t4967;
  t5051 = 0. + t2043 + t2050 + t3583 + t2065 + t3592 + t5023 + t5044;
  t3637 = t3588*t3236;
  t5329 = -1.*t5016*t2345;
  t5330 = -1.*t3524*t5042*t1888;
  t3876 = t3588*t2405;
  t5335 = t5016*t2405;
  t5341 = t5042*t4943;
  t5344 = 0. + var1[1] + t3650 + t2359 + t2364 + t3654 + t5335 + t5341;
  t5347 = -1.*t3535*t1888*t5344;
  t3750 = t3748*t558;
  t3764 = -1.*t3761*t3546;
  t3784 = t486*t3748*t180;
  t3787 = t3761*t3565;
  t3674 = -1.*t3535*t93*t558;
  t3675 = t3524*t2624;
  t3677 = t3674 + t3675;
  t3696 = -1.*t3581*t180*t558;
  t3697 = t3588*t2915;
  t4099 = -1.*t3535*t180*t558;
  t4100 = t3524*t2915;
  t4102 = t4099 + t4100;
  t3702 = t486*t3581;
  t3705 = -1.*t3588*t3339;
  t4447 = -1.*t3535*t486;
  t4469 = t3524*t3339;
  t4470 = t4447 + t4469;
  t3913 = var2[0]*t3610;
  t3924 = var2[2]*t3922;
  t3964 = -1.*t3588*t2439;
  t5553 = t5016*t1888;
  t5560 = t5042*t4967;
  t5566 = 0. + var1[2] + t2820 + t3927 + t2825 + t3934 + t5553 + t5560;
  t5582 = t5016*t2345;
  t5583 = t3524*t5042*t1888;
  t4179 = -1.*t3588*t2097;
  t5641 = -1.*t5016*t2097;
  t5642 = -1.*t5042*t4205;
  t5643 = 0. + t2943 + t4043 + t2956 + t2971 + t4045 + t5641 + t5642;
  t5648 = -1.*t3535*t1888*t5643;
  t4316 = -1.*t3748*t558;
  t4325 = t3761*t3546;
  t4351 = -1.*t93*t486*t3748;
  t4354 = -1.*t3761*t3067;
  t4085 = t93*t3581*t558;
  t4092 = -1.*t3588*t2624;
  t4110 = -1.*t486*t3581;
  t4124 = t3588*t3339;
  t5215 = t4992*t2097;
  t5216 = -1.*t5011*t4205;
  t5228 = t5215 + t5216;
  t4282 = -1.*t3588*t2169;
  t4420 = var2[1]*t3601;
  t4424 = -1.*t3535*t3565;
  t4425 = t4226 + t4424;
  t4426 = var2[0]*t4425;
  t4477 = t3581*t180*t558;
  t4485 = -1.*t3588*t2915;
  t4513 = -1.*t93*t3581*t558;
  t4516 = t3588*t2624;
  t5057 = t5016*t2097;
  t5059 = t5042*t4205;
  t4601 = -1.*t3588*t3236;
  t4617 = t3588*t2439;
  t6057 = 0. + var1[0] + t3614 + t1977 + t2028 + t3615 + t5057 + t5059;
  t6059 = -1.*t5016*t2405;
  t6060 = -1.*t5042*t4943;
  t6064 = 0. + t3366 + t4551 + t3368 + t3378 + t4554 + t6059 + t6060;
  t6074 = t5011*t2345;
  t6080 = t4992*t3524*t1888;
  t6081 = t6074 + t6080;
  t6086 = -0.13004*t6081;
  t6093 = t4992*t2345;
  t6096 = -1.*t3524*t5011*t1888;
  t6097 = t6093 + t6096;
  t6101 = 0.08055*t6097;
  t4778 = t3588*t2097;
  t4791 = -1.*t3588*t2405;
  t4725 = t93*t486*t3748;
  t4726 = t3761*t3067;
  t4747 = -1.*t486*t3748*t180;
  t4751 = -1.*t3761*t3565;
  t4693 = t3588*t2169;
  t4824 = -1.*t93*t3524*t558;
  t4831 = -1.*t3535*t2624;
  t4835 = t4824 + t4831;
  t4842 = var2[4]*t4835;
  t4847 = -1.*var2[5]*t3535*t2439;
  t4851 = -1.*var2[13]*t3535*t2097;
  t4859 = var2[14]*t4205;
  t4868 = -1.*t3535*t2169;
  t4870 = t3561 + t4868;
  t4884 = var2[3]*t4870;
  t4889 = t4842 + t4847 + t4851 + t4859 + t4884;
  t4890 = -1.*t3524*t180*t558;
  t4908 = -1.*t3535*t2915;
  t4910 = t4890 + t4908;
  t4917 = var2[4]*t4910;
  t4920 = -1.*var2[5]*t3535*t3236;
  t4922 = -1.*var2[13]*t3535*t2405;
  t4924 = var2[3]*t3922;
  t4947 = var2[14]*t4943;
  t4953 = t4917 + t4920 + t4922 + t4924 + t4947;
  t4957 = -1.*var2[13]*t3535*t1888;
  t4958 = -1.*var2[5]*t3535*t1888;
  t4971 = var2[14]*t4967;
  t4974 = -1.*t486*t3524;
  t4981 = -1.*t3535*t3339;
  t4982 = t4974 + t4981;
  t4984 = var2[4]*t4982;
  t4987 = t4957 + t4958 + t4971 + t4984;
  t6198 = Cos(var1[16]);
  t6201 = -1.*t6198;
  t6203 = 1. + t6201;
  t6212 = Sin(var1[16]);
  t5956 = t4992*t1888;
  t5959 = -1.*t5011*t4967;
  t5960 = t5956 + t5959;
  t6209 = -0.08055*t6203;
  t6219 = -0.13004*t6212;
  t6221 = 0. + t6209 + t6219;
  t5843 = t5011*t2097;
  t5850 = t4992*t4205;
  t5854 = t5843 + t5850;
  t6245 = -0.13004*t6203;
  t6249 = 0.08055*t6212;
  t6250 = 0. + t6245 + t6249;
  t5081 = t5011*t3106;
  t5093 = t4992*t3624;
  t5097 = t5081 + t5093;
  t5129 = t4992*t3106;
  t5130 = -1.*t5011*t3624;
  t5132 = t5129 + t5130;
  t5165 = -1.*t5155*t1888;
  t5185 = -1.*t5183*t4967;
  t5944 = -1.*t5011*t1888;
  t5947 = -1.*t4992*t4967;
  t5952 = t5944 + t5947;
  t5193 = -1.*t5011*t2097;
  t5200 = -1.*t4992*t4205;
  t5207 = t5193 + t5200;
  t5232 = t5155*t2405;
  t5234 = t5183*t4943;
  t5913 = -1.*t5011*t2405;
  t5914 = -1.*t4992*t4943;
  t5917 = t5913 + t5914;
  t5921 = t4992*t2405;
  t5925 = -1.*t5011*t4943;
  t5934 = t5921 + t5925;
  t6225 = t5011*t1888;
  t6226 = t4992*t4967;
  t6229 = t6225 + t6226;
  t6313 = t6198*t5228;
  t6346 = -1.*t6212*t5228;
  t6386 = -0.13004*t6198;
  t6387 = -0.08055*t6212;
  t6388 = t6386 + t6387;
  t6397 = 0.08055*t6198;
  t6404 = t6397 + t6219;
  t6234 = -1.*t6221*t6229;
  t6255 = -1.*t6250*t5960;
  t6256 = 0. + t2043 + t2050 + t3583 + t2065 + t3592 + t5023 + t5044 + t6234 + t6255;
  t5263 = t5011*t3165;
  t5284 = t4992*t3524*t2439;
  t5285 = t5263 + t5284;
  t5293 = t4992*t3165;
  t5299 = -1.*t3524*t5011*t2439;
  t5308 = t5293 + t5299;
  t5315 = t5016*t2476;
  t5316 = t3524*t5042*t3236;
  t5595 = t5011*t2476;
  t5599 = t4992*t3524*t3236;
  t5601 = t5595 + t5599;
  t5623 = t4992*t2476;
  t5631 = -1.*t3524*t5011*t3236;
  t5638 = t5623 + t5631;
  t6445 = t5011*t2405;
  t6446 = t4992*t4943;
  t6454 = t6445 + t6446;
  t6481 = -1.*t6221*t6081;
  t6482 = -1.*t6250*t6097;
  t5366 = t5011*t3251;
  t5368 = t4992*t3524*t2097;
  t5370 = t5366 + t5368;
  t5378 = t4992*t3251;
  t5381 = -1.*t3524*t5011*t2097;
  t5382 = t5378 + t5381;
  t5399 = t5016*t2288;
  t5401 = t3524*t5042*t2405;
  t5668 = t5011*t2288;
  t5669 = t4992*t3524*t2405;
  t5672 = t5668 + t5669;
  t5692 = t4992*t2288;
  t5698 = -1.*t3524*t5011*t2405;
  t5703 = t5692 + t5698;
  t6535 = t6221*t6454;
  t6540 = t6250*t5934;
  t6543 = 0. + var1[1] + t3650 + t2359 + t2364 + t3654 + t5335 + t5341 + t6535 + t6540;
  t6554 = -1.*t3535*t1888*t6543;
  t5411 = -1.*t5042*t3610;
  t5419 = t5042*t3569;
  t5452 = t5011*t2844;
  t5455 = t4992*t3677;
  t5457 = t5452 + t5455;
  t5462 = t4992*t2844;
  t5470 = -1.*t5011*t3677;
  t5473 = t5462 + t5470;
  t5479 = t5016*t2677;
  t5487 = t5042*t4102;
  t5788 = t5011*t2677;
  t5789 = t4992*t4102;
  t5790 = t5788 + t5789;
  t5801 = t4992*t2677;
  t5804 = -1.*t5011*t4102;
  t5813 = t5801 + t5804;
  t5509 = -1.*t5016*t2691;
  t5522 = -1.*t5042*t4470;
  t6011 = t5011*t2691;
  t6015 = t4992*t4470;
  t6016 = t6011 + t6015;
  t6019 = t4992*t2691;
  t6021 = -1.*t5011*t4470;
  t6022 = t6019 + t6021;
  t5569 = -1.*t5016*t3165;
  t5572 = -1.*t3524*t5042*t2439;
  t6838 = t6221*t6081;
  t6839 = t6250*t6097;
  t6844 = t6221*t6229;
  t6845 = t6250*t5960;
  t6846 = 0. + var1[2] + t2820 + t3927 + t2825 + t3934 + t5553 + t5560 + t6844 + t6845;
  t5662 = -1.*t5016*t3251;
  t5665 = -1.*t3524*t5042*t2097;
  t6874 = -1.*t6221*t5854;
  t6875 = -1.*t6250*t5228;
  t6876 = 0. + t2943 + t4043 + t2956 + t2971 + t4045 + t5641 + t5642 + t6874 + t6875;
  t6878 = -1.*t3535*t1888*t6876;
  t5719 = t5042*t3610;
  t5743 = -1.*t5042*t3601;
  t5772 = -1.*t5016*t2844;
  t5777 = -1.*t5042*t3677;
  t5816 = t5016*t2691;
  t5818 = t5042*t4470;
  t6420 = -1.*t6212*t5854;
  t6426 = t6420 + t6313;
  t5858 = -1.*t5016*t3106;
  t5862 = -1.*t5042*t3624;
  t5869 = t5155*t1888;
  t5880 = t5183*t4967;
  t5884 = -1.*t5155*t2097;
  t5899 = -1.*t5183*t4205;
  t7047 = t6198*t5934;
  t7060 = -1.*t6212*t5934;
  t5973 = t5155*t2097;
  t5978 = t5183*t4205;
  t5987 = -1.*t5155*t2405;
  t5991 = -1.*t5183*t4943;
  t7108 = t6198*t5960;
  t7116 = -1.*t6212*t5960;
  t6040 = t5016*t2844;
  t6048 = t5042*t3677;
  t6025 = -1.*t5016*t2677;
  t6027 = -1.*t5042*t4102;
  t6264 = t6221*t5854;
  t6268 = t6250*t5228;
  t6107 = t5016*t3165;
  t6108 = t3524*t5042*t2439;
  t6102 = -1.*t5016*t2476;
  t6103 = -1.*t3524*t5042*t3236;
  t7204 = 0. + var1[0] + t3614 + t1977 + t2028 + t3615 + t5057 + t5059 + t6264 + t6268;
  t7209 = -1.*t6221*t6454;
  t7217 = -1.*t6250*t5934;
  t7220 = 0. + t3366 + t4551 + t3368 + t3378 + t4554 + t6059 + t6060 + t7209 + t7217;
  t7226 = -1.*t6212*t6081;
  t7227 = t6198*t6097;
  t7229 = t7226 + t7227;
  t7230 = 0.03315*t7229;
  t7231 = t6198*t6081;
  t7232 = t6212*t6097;
  t7233 = t7231 + t7232;
  t7236 = -0.19074*t7233;
  t6125 = t5016*t3251;
  t6127 = t3524*t5042*t2097;
  t6133 = -1.*t5016*t2288;
  t6137 = -1.*t3524*t5042*t2405;
  t6155 = t5042*t3601;
  t6163 = -1.*t5042*t3569;
  t6179 = t5016*t3106;
  t6183 = t5042*t3624;
  t7134 = -1.*t6212*t6229;
  t7137 = t7134 + t7108;
  t7394 = Cos(var1[17]);
  t7398 = -1.*t7394;
  t7399 = 1. + t7398;
  t7402 = Sin(var1[17]);
  t7400 = -0.19074*t7399;
  t7403 = 0.03315*t7402;
  t7405 = 0. + t7400 + t7403;
  t7411 = -0.03315*t7399;
  t7415 = -0.19074*t7402;
  t7416 = 0. + t7411 + t7415;
  t7015 = t6198*t5854;
  t7017 = t6212*t5228;
  t7018 = t7015 + t7017;
  t6282 = -1.*t6212*t5097;
  t6287 = t6198*t5132;
  t6288 = t6282 + t6287;
  t6290 = t6198*t5097;
  t6293 = t6212*t5132;
  t6295 = t6290 + t6293;
  t6303 = -1.*t6250*t5952;
  t6304 = -1.*t6221*t5960;
  t7107 = t6212*t5952;
  t7110 = t7107 + t7108;
  t7114 = t6198*t5952;
  t7120 = t7114 + t7116;
  t6308 = t6212*t5207;
  t6318 = t6308 + t6313;
  t6333 = t6198*t5207;
  t6350 = t6333 + t6346;
  t6360 = t6250*t5917;
  t6365 = t6221*t5934;
  t7046 = t6212*t5917;
  t7050 = t7046 + t7047;
  t7056 = t6198*t5917;
  t7063 = t7056 + t7060;
  t6391 = -1.*t6388*t6229;
  t6406 = -1.*t6404*t5960;
  t7146 = -1.*t6198*t6229;
  t7150 = t7146 + t7116;
  t6434 = -1.*t6198*t5854;
  t6435 = t6434 + t6346;
  t6455 = t6388*t6454;
  t6461 = t6404*t5934;
  t7087 = -1.*t6212*t6454;
  t7093 = t7087 + t7047;
  t7095 = -1.*t6198*t6454;
  t7098 = t7095 + t7060;
  t7409 = -1.*t7405*t7137;
  t7417 = t6198*t6229;
  t7418 = t6212*t5960;
  t7420 = t7417 + t7418;
  t7421 = -1.*t7416*t7420;
  t7422 = 0. + t2043 + t2050 + t3583 + t2065 + t3592 + t5023 + t5044 + t6234 + t6255 + t7409 + t7421;
  t6496 = -1.*t6212*t5285;
  t6501 = t6198*t5308;
  t6510 = t6496 + t6501;
  t6513 = t6198*t5285;
  t6515 = t6212*t5308;
  t6516 = t6513 + t6515;
  t6520 = t6221*t5601;
  t6521 = t6250*t5638;
  t6855 = -1.*t6212*t5601;
  t6859 = t6198*t5638;
  t6860 = t6855 + t6859;
  t6863 = t6198*t5601;
  t6867 = t6212*t5638;
  t6868 = t6863 + t6867;
  t7557 = -1.*t7405*t7229;
  t7558 = -1.*t7416*t7233;
  t6594 = -1.*t6212*t5370;
  t6596 = t6198*t5382;
  t6598 = t6594 + t6596;
  t6601 = t6198*t5370;
  t6610 = t6212*t5382;
  t6616 = t6601 + t6610;
  t6630 = t6221*t5672;
  t6631 = t6250*t5703;
  t6902 = -1.*t6212*t5672;
  t6903 = t6198*t5703;
  t6904 = t6902 + t6903;
  t6910 = t6198*t5672;
  t6913 = t6212*t5703;
  t6916 = t6910 + t6913;
  t7629 = t7405*t7093;
  t7641 = t6198*t6454;
  t7643 = t6212*t5934;
  t7655 = t7641 + t7643;
  t7660 = t7416*t7655;
  t7663 = 0. + var1[1] + t3650 + t2359 + t2364 + t3654 + t5335 + t5341 + t6535 + t6540 + t7629 + t7660;
  t7668 = -1.*t3535*t1888*t7663;
  t6653 = -1.*t4992*t6221*t3610;
  t6656 = t5011*t6250*t3610;
  t7295 = -1.*t6198*t5011*t3610;
  t7297 = -1.*t4992*t6212*t3610;
  t7299 = t7295 + t7297;
  t7301 = t4992*t6198*t3610;
  t7306 = -1.*t5011*t6212*t3610;
  t7311 = t7301 + t7306;
  t6662 = -1.*t6198*t5011*t3601;
  t6663 = -1.*t4992*t6212*t3601;
  t6686 = t6662 + t6663;
  t6692 = t4992*t6198*t3601;
  t6699 = -1.*t5011*t6212*t3601;
  t6708 = t6692 + t6699;
  t6726 = t4992*t6221*t3569;
  t6728 = -1.*t5011*t6250*t3569;
  t6934 = -1.*t6198*t5011*t3569;
  t6936 = -1.*t4992*t6212*t3569;
  t6939 = t6934 + t6936;
  t6944 = t4992*t6198*t3569;
  t6945 = -1.*t5011*t6212*t3569;
  t6946 = t6944 + t6945;
  t6764 = -1.*t6212*t5457;
  t6767 = t6198*t5473;
  t6768 = t6764 + t6767;
  t6799 = t6198*t5457;
  t6800 = t6212*t5473;
  t6807 = t6799 + t6800;
  t6813 = t6221*t5790;
  t6815 = t6250*t5813;
  t6987 = -1.*t6212*t5790;
  t6988 = t6198*t5813;
  t6990 = t6987 + t6988;
  t6992 = t6198*t5790;
  t6993 = t6212*t5813;
  t6994 = t6992 + t6993;
  t6823 = -1.*t6221*t6016;
  t6826 = -1.*t6250*t6022;
  t7193 = -1.*t6212*t6016;
  t7194 = t6198*t6022;
  t7196 = t7193 + t7194;
  t7200 = t6198*t6016;
  t7201 = t6212*t6022;
  t7202 = t7200 + t7201;
  t7512 = -1.*t7402*t6426;
  t7520 = t7394*t6426;
  t7868 = 0.03315*t7394;
  t7869 = t7868 + t7415;
  t7873 = -0.19074*t7394;
  t7874 = -0.03315*t7402;
  t7875 = t7873 + t7874;
  t6850 = -1.*t6221*t5285;
  t6851 = -1.*t6250*t5308;
  t7910 = t7405*t7229;
  t7913 = t7416*t7233;
  t7922 = t7405*t7137;
  t7925 = t7416*t7420;
  t7927 = 0. + var1[2] + t2820 + t3927 + t2825 + t3934 + t5553 + t5560 + t6844 + t6845 + t7922 + t7925;
  t6894 = -1.*t6221*t5370;
  t6898 = -1.*t6250*t5382;
  t7993 = -1.*t7405*t6426;
  t8002 = -1.*t7416*t7018;
  t8005 = 0. + t2943 + t4043 + t2956 + t2971 + t4045 + t5641 + t5642 + t6874 + t6875 + t7993 + t8002;
  t8007 = -1.*t3535*t1888*t8005;
  t6922 = t4992*t6221*t3610;
  t6923 = -1.*t5011*t6250*t3610;
  t6928 = -1.*t4992*t6221*t3601;
  t6930 = t5011*t6250*t3601;
  t6978 = -1.*t6221*t5457;
  t6979 = -1.*t6250*t5473;
  t7000 = t6221*t6016;
  t7002 = t6250*t6022;
  t7893 = -1.*t7402*t7018;
  t7895 = t7520 + t7893;
  t7020 = -1.*t6221*t5097;
  t7023 = -1.*t6250*t5132;
  t7030 = t6250*t5952;
  t7031 = t6221*t5960;
  t7039 = -1.*t6250*t5207;
  t7040 = -1.*t6221*t5228;
  t7071 = t6388*t6229;
  t7074 = t6404*t5960;
  t7082 = -1.*t6388*t5854;
  t7083 = -1.*t6404*t5228;
  t8297 = -1.*t7402*t7093;
  t8308 = t7394*t7093;
  t7123 = t6250*t5207;
  t7124 = t6221*t5228;
  t7127 = -1.*t6250*t5917;
  t7129 = -1.*t6221*t5934;
  t7153 = t6388*t5854;
  t7154 = t6404*t5228;
  t7159 = -1.*t6388*t6454;
  t7160 = -1.*t6404*t5934;
  t7175 = t6221*t5457;
  t7180 = t6250*t5473;
  t7185 = -1.*t6221*t5790;
  t7187 = -1.*t6250*t5813;
  t7425 = t7405*t6426;
  t7426 = t7416*t7018;
  t7238 = t6221*t5285;
  t7245 = t6250*t5308;
  t7251 = -1.*t6221*t5601;
  t7252 = -1.*t6250*t5638;
  t8495 = 0. + var1[0] + t3614 + t1977 + t2028 + t3615 + t5057 + t5059 + t6264 + t6268 + t7425 + t7426;
  t8498 = -1.*t7405*t7093;
  t8501 = -1.*t7416*t7655;
  t8505 = 0. + t3366 + t4551 + t3368 + t3378 + t4554 + t6059 + t6060 + t7209 + t7217 + t8498 + t8501;
  t8515 = t7402*t7229;
  t8516 = t7394*t7233;
  t8520 = t8515 + t8516;
  t8522 = -0.62554*t8520;
  t8523 = t7394*t7229;
  t8524 = -1.*t7402*t7233;
  t8528 = t8523 + t8524;
  t8530 = 0.01315*t8528;
  t7263 = t6221*t5370;
  t7267 = t6250*t5382;
  t7271 = -1.*t6221*t5672;
  t7275 = -1.*t6250*t5703;
  t7323 = t4992*t6221*t3601;
  t7324 = -1.*t5011*t6250*t3601;
  t7333 = -1.*t4992*t6221*t3569;
  t7337 = t5011*t6250*t3569;
  t7361 = t6221*t5097;
  t7370 = t6250*t5132;
  t8420 = -1.*t7402*t7137;
  t8430 = t7394*t7137;
  p_output1[0]=0;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=0;
  p_output1[4]=0;
  p_output1[5]=0;
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=0;
  p_output1[10]=0;
  p_output1[11]=0;
  p_output1[12]=0;
  p_output1[13]=0;
  p_output1[14]=0;
  p_output1[15]=0;
  p_output1[16]=0;
  p_output1[17]=0;
  p_output1[18]=var2[1];
  p_output1[19]=-1.*var2[0];
  p_output1[20]=0;
  p_output1[21]=0;
  p_output1[22]=0;
  p_output1[23]=0;
  p_output1[24]=-1.*t93*var2[2] + t180*var1[2]*var2[3];
  p_output1[25]=-1.*t180*var2[2] - 1.*t93*var1[2]*var2[3];
  p_output1[26]=t93*var2[0] + t180*var2[1] + (-1.*t180*var1[0] + t93*var1[1])*var2[3];
  p_output1[27]=-1.*t93*var2[3];
  p_output1[28]=-1.*t180*var2[3];
  p_output1[29]=0;
  p_output1[30]=t518 + t565 - 1.*t486*t93*var1[2]*var2[3] + (t571 + t579)*var2[4];
  p_output1[31]=t685 + t706 - 1.*t180*t486*var1[2]*var2[3] + (t734 + t740)*var2[4];
  p_output1[32]=t811 + t813 + t840 + (t841 + t843)*var2[4];
  p_output1[33]=t1012;
  p_output1[34]=t1095;
  p_output1[35]=t1106;
  p_output1[36]=0;
  p_output1[37]=0;
  p_output1[38]=0;
  p_output1[39]=0;
  p_output1[40]=0;
  p_output1[41]=0;
  p_output1[42]=0;
  p_output1[43]=0;
  p_output1[44]=0;
  p_output1[45]=0;
  p_output1[46]=0;
  p_output1[47]=0;
  p_output1[48]=0;
  p_output1[49]=0;
  p_output1[50]=0;
  p_output1[51]=0;
  p_output1[52]=0;
  p_output1[53]=0;
  p_output1[54]=0;
  p_output1[55]=0;
  p_output1[56]=0;
  p_output1[57]=0;
  p_output1[58]=0;
  p_output1[59]=0;
  p_output1[60]=0;
  p_output1[61]=0;
  p_output1[62]=0;
  p_output1[63]=0;
  p_output1[64]=0;
  p_output1[65]=0;
  p_output1[66]=0;
  p_output1[67]=0;
  p_output1[68]=0;
  p_output1[69]=0;
  p_output1[70]=0;
  p_output1[71]=0;
  p_output1[72]=0;
  p_output1[73]=0;
  p_output1[74]=0;
  p_output1[75]=0;
  p_output1[76]=0;
  p_output1[77]=0;
  p_output1[78]=t518 + t565 + (0.135*t1336 + 0.07996*t1397 - 1.*t486*t93*var1[2])*var2[3] + (t571 + t579 + 0.135*t1107*t486*t93 + 0.07996*t1146*t486*t93)*var2[4] + (0.07996*t1216 + 0.135*t1250)*var2[5];
  p_output1[79]=t685 + t706 + (0.135*t1216 + 0.07996*t1559 - 1.*t180*t486*var1[2])*var2[3] + (0.135*t1107*t180*t486 + 0.07996*t1146*t180*t486 + t734 + t740)*var2[4] + (0.135*t1397 + 0.07996*t1610)*var2[5];
  p_output1[80]=t811 + t813 + t840 + (-0.135*t1107*t558 - 0.07996*t1146*t558 + t841 + t843)*var2[4] + (0.07996*t1107*t486 - 0.135*t1146*t486)*var2[5];
  p_output1[81]=t1012;
  p_output1[82]=t1095;
  p_output1[83]=t1106;
  p_output1[84]=t1888*var2[1] + (-1.*t1610*t1867 + t1877*t1914)*var2[2] + (t1888*(t1977 + t2028) + t2071*t2097 + 0.08055*t2169 + 0.135*t180*t486)*var2[3] + (0.08055*t2624 + t1888*(t2635 + t2640) + t2071*t2677 + t2370*t2691 + t2405*(t2703 + t2704) + 0.135*t558*t93)*var2[4] + (t2373 + 0.08055*t2439 + t2071*t2476 + t1888*(t2491 + t2492) + t2405*(t2505 + t2510))*var2[5] + (t2239 + t2071*t2288 + t1888*(t2304 + t2330) + t2373 + (t2376 + t2377)*t2405)*var2[13];
  p_output1[85]=(-1.*t1107*t1867*t486 + t1146*t1877*t486)*var2[0] + t2097*var2[2] + (0.08055*t3067 + t1888*(t3086 + t3090) + t2828*t3106 - 0.135*t486*t93)*var2[3] + (t1888*(t2785 + t2794) + t2828*t2844 + 0.08055*t2915 + t2691*t2980 + t2097*(t3001 + t3005) + 0.135*t180*t558)*var2[4] + (t2828*t3165 + t1888*(t3178 + t3183) + t3203 + t2097*(t3213 + t3214) + 0.08055*t3236)*var2[5] + (0.08055*t2405 + t3203 + t2828*t3251 + t1888*(t3257 + t3259) + t2097*(t3266 + t3270))*var2[13];
  p_output1[86]=t2405*var2[0] + (-1.*t1216*t1867 + t1559*t1877)*var2[1] + (t2097*(t2956 + t2971) + t2097*t3344 + t3106*t3380 + t2405*(t3486 + t3487))*var2[3] + (0.08055*t3339 + t2677*t3344 + t2097*(t3351 + t3352) + t2844*t3380 + t2405*(t3392 + t3395) + 0.135*t486)*var2[4] + (t2476*t3344 + t3165*t3380 + t3406 + t2097*(t3408 + t3410) + t2405*(t3425 + t3426))*var2[5] + (t2288*t3344 + t3251*t3380 + t3406 + t2097*(t3438 + t3442) + t2405*(t3456 + t3457))*var2[13];
  p_output1[87]=t3106*var2[3] + t2844*var2[4] + t3165*var2[5] + t3251*var2[13];
  p_output1[88]=t2097*var2[3] + t2677*var2[4] + t2476*var2[5] + t2288*var2[13];
  p_output1[89]=t2691*var2[4] + t2345*var2[5] + t2345*var2[13];
  p_output1[90]=t3554 + t3570 + (0.08055*t3106 - 1.*t3593*t3601 - 1.*t3610*(t1977 + t2028 + t3614 + t3615) - 0.01004*t3624)*var2[3] + (0.08055*t2844 - 0.01004*t3677 - 1.*t3593*t3693 - 1.*t3610*(t2635 + t2640 + t3696 + t3697) - 1.*t3569*(t2703 + t2704 + t3702 + t3705) - 1.*t3658*t3719)*var2[4] + (0.08055*t3165 - 0.01004*t2439*t3524 - 1.*t3236*t3535*t3593 - 1.*t3610*(t2491 + t2492 + t3637) - 1.*t3569*(t2505 + t2510 + t3642) + t3660)*var2[5] + (0.08055*t3251 - 0.01004*t2097*t3524 - 1.*t2405*t3535*t3593 - 1.*t3569*(t2376 + t2377 + t3642) + t3660 - 1.*t3610*(t2304 + t2330 + t3876))*var2[13] + (-0.01004*t3601 - 1.*t3569*(t3750 + t3764) - 1.*t3610*(t3784 + t3787) - 1.*t3658*t3808 - 1.*t3593*t3824)*var2[14];
  p_output1[91]=t3913 + t3924 + (t2239 - 0.01004*t4205 - 1.*t3951*t4267 - 1.*t3610*(t3086 + t3090 + t3650 + t4282))*var2[3] + (0.08055*t2677 - 1.*t3719*t4046 - 1.*t3951*t4082 - 1.*t3610*(t2785 + t2794 + t4085 + t4092) - 0.01004*t4102 - 1.*t3601*(t3001 + t3005 + t4110 + t4124))*var2[4] + (0.08055*t2476 - 0.01004*t3236*t3524 - 1.*t2439*t3535*t3951 - 1.*t3610*(t3178 + t3183 + t3964) - 1.*t3601*(t3213 + t3214 + t4021) + t4050)*var2[5] + (0.08055*t2288 - 0.01004*t2405*t3524 - 1.*t2097*t3535*t3951 - 1.*t3601*(t3266 + t3270 + t4021) + t4050 - 1.*t3610*(t3257 + t3259 + t4179))*var2[13] + (-0.01004*t3569 - 1.*t3808*t4046 - 1.*t3601*(t4316 + t4325) - 1.*t3610*(t4351 + t4354) - 1.*t3951*t4394)*var2[14];
  p_output1[92]=t4420 + t4426 + (-1.*t3601*(t2956 + t2971 + t4043 + t4045) - 1.*t3601*t4493 - 1.*t4267*t4569 - 1.*t3569*(t3486 + t3487 + t4551 + t4693))*var2[3] + (0.08055*t2691 - 0.01004*t4470 - 1.*t3601*(t3351 + t3352 + t4477 + t4485) - 1.*t3693*t4493 - 1.*t3569*(t3392 + t3395 + t4513 + t4516) - 1.*t4082*t4569)*var2[4] + (-1.*t3236*t3535*t4493 - 1.*t2439*t3535*t4569 + t4591 + t4592 - 1.*t3601*(t3408 + t3410 + t4601) - 1.*t3569*(t3425 + t3426 + t4617))*var2[5] + (-1.*t2405*t3535*t4493 - 1.*t2097*t3535*t4569 + t4591 + t4592 - 1.*t3569*(t3456 + t3457 + t4778) - 1.*t3601*(t3438 + t3442 + t4791))*var2[13] + (-0.01004*t3610 - 1.*t3824*t4493 - 1.*t4394*t4569 - 1.*t3569*(t4725 + t4726) - 1.*t3601*(t4747 + t4751))*var2[14];
  p_output1[93]=t4889;
  p_output1[94]=t4953;
  p_output1[95]=t4987;
  p_output1[96]=t3554 + t3570 + (-1.*t3601*t5051 - 1.*t3610*(t1977 + t2028 + t3614 + t3615 + t5057 + t5059) - 0.13004*t5097 + 0.08055*t5132)*var2[3] + (-1.*t3693*t5051 - 1.*t3719*t5344 - 0.13004*t5457 + 0.08055*t5473 - 1.*t3610*(t2635 + t2640 + t3696 + t3697 + t5479 + t5487) - 1.*t3569*(t2703 + t2704 + t3702 + t3705 + t5509 + t5522))*var2[4] + (-1.*t3236*t3535*t5051 - 0.13004*t5285 + 0.08055*t5308 - 1.*t3610*(t2491 + t2492 + t3637 + t5315 + t5316) - 1.*t3569*(t2505 + t2510 + t3642 + t5329 + t5330) + t5347)*var2[5] + (-1.*t2405*t3535*t5051 - 1.*t3569*(t2376 + t2377 + t3642 + t5329 + t5330) + t5347 - 0.13004*t5370 + 0.08055*t5382 - 1.*t3610*(t2304 + t2330 + t3876 + t5399 + t5401))*var2[13] + (-0.13004*t3601*t4992 - 0.08055*t3601*t5011 - 1.*t3824*t5051 - 1.*t3808*t5344 - 1.*t3569*(t3750 + t3764 + t5411) - 1.*t3610*(t3784 + t3787 + t5419))*var2[14] + (-1.*t3569*(t5165 + t5185) + 0.08055*t5207 - 0.13004*t5228 - 1.*t3610*(t5232 + t5234))*var2[15];
  p_output1[97]=t3913 + t3924 + (0.08055*t5228 - 1.*t4267*t5566 - 0.13004*t5854 - 1.*t3610*(t3086 + t3090 + t3650 + t4282 + t5858 + t5862))*var2[3] + (-1.*t4082*t5566 - 1.*t3719*t5643 - 1.*t3610*(t2785 + t2794 + t4085 + t4092 + t5772 + t5777) - 0.13004*t5790 + 0.08055*t5813 - 1.*t3601*(t3001 + t3005 + t4110 + t4124 + t5816 + t5818))*var2[4] + (-1.*t2439*t3535*t5566 - 1.*t3610*(t3178 + t3183 + t3964 + t5569 + t5572) - 1.*t3601*(t3213 + t3214 + t4021 + t5582 + t5583) - 0.13004*t5601 + 0.08055*t5638 + t5648)*var2[5] + (-1.*t2097*t3535*t5566 - 1.*t3601*(t3266 + t3270 + t4021 + t5582 + t5583) + t5648 - 1.*t3610*(t3257 + t3259 + t4179 + t5662 + t5665) - 0.13004*t5672 + 0.08055*t5703)*var2[13] + (-0.13004*t3569*t4992 - 0.08055*t3569*t5011 - 1.*t4394*t5566 - 1.*t3808*t5643 - 1.*t3601*(t4316 + t4325 + t5719) - 1.*t3610*(t4351 + t4354 + t5743))*var2[14] + (-1.*t3601*(t5869 + t5880) - 1.*t3610*(t5884 + t5899) + 0.08055*t5917 - 0.13004*t5934)*var2[15];
  p_output1[98]=t4420 + t4426 + (-1.*t3601*(t2956 + t2971 + t4043 + t4045 + t5641 + t5642) - 1.*t3601*t6057 - 1.*t4267*t6064 - 1.*t3569*(t3486 + t3487 + t4551 + t4693 + t6179 + t6183))*var2[3] + (-0.13004*t6016 + 0.08055*t6022 - 1.*t3601*(t3351 + t3352 + t4477 + t4485 + t6025 + t6027) - 1.*t3569*(t3392 + t3395 + t4513 + t4516 + t6040 + t6048) - 1.*t3693*t6057 - 1.*t4082*t6064)*var2[4] + (-1.*t3236*t3535*t6057 - 1.*t2439*t3535*t6064 + t6086 + t6101 - 1.*t3601*(t3408 + t3410 + t4601 + t6102 + t6103) - 1.*t3569*(t3425 + t3426 + t4617 + t6107 + t6108))*var2[5] + (-1.*t2405*t3535*t6057 - 1.*t2097*t3535*t6064 + t6086 + t6101 - 1.*t3569*(t3456 + t3457 + t4778 + t6125 + t6127) - 1.*t3601*(t3438 + t3442 + t4791 + t6133 + t6137))*var2[13] + (-0.13004*t3610*t4992 - 0.08055*t3610*t5011 - 1.*t3824*t6057 - 1.*t4394*t6064 - 1.*t3569*(t4725 + t4726 + t6155) - 1.*t3601*(t4747 + t4751 + t6163))*var2[14] + (0.08055*t5952 - 0.13004*t5960 - 1.*t3569*(t5973 + t5978) - 1.*t3601*(t5987 + t5991))*var2[15];
  p_output1[99]=t4889;
  p_output1[100]=t4953;
  p_output1[101]=t4987;
  p_output1[102]=t3554 + t3570 + (-1.*t3601*t6256 - 1.*t3610*(t1977 + t2028 + t3614 + t3615 + t5057 + t5059 + t6264 + t6268) + 0.03315*t6288 - 0.19074*t6295)*var2[3] + (-1.*t3693*t6256 - 1.*t3719*t6543 + 0.03315*t6768 - 0.19074*t6807 - 1.*t3610*(t2635 + t2640 + t3696 + t3697 + t5479 + t5487 + t6813 + t6815) - 1.*t3569*(t2703 + t2704 + t3702 + t3705 + t5509 + t5522 + t6823 + t6826))*var2[4] + (-1.*t3236*t3535*t6256 - 1.*t3569*(t2505 + t2510 + t3642 + t5329 + t5330 + t6481 + t6482) + 0.03315*t6510 - 0.19074*t6516 - 1.*t3610*(t2491 + t2492 + t3637 + t5315 + t5316 + t6520 + t6521) + t6554)*var2[5] + (-1.*t2405*t3535*t6256 - 1.*t3569*(t2376 + t2377 + t3642 + t5329 + t5330 + t6481 + t6482) + t6554 + 0.03315*t6598 - 0.19074*t6616 - 1.*t3610*(t2304 + t2330 + t3876 + t5399 + t5401 + t6630 + t6631))*var2[13] + (-1.*t3824*t6256 - 1.*t3808*t6543 - 1.*t3569*(t3750 + t3764 + t5411 + t6653 + t6656) + 0.03315*t6686 - 0.19074*t6708 - 1.*t3610*(t3784 + t3787 + t5419 + t6726 + t6728))*var2[14] + (-1.*t3569*(t5165 + t5185 + t6303 + t6304) - 0.19074*t6318 + 0.03315*t6350 - 1.*t3610*(t5232 + t5234 + t6360 + t6365))*var2[15] + (-1.*t3569*(t6391 + t6406) - 0.19074*t6426 + 0.03315*t6435 - 1.*t3610*(t6455 + t6461))*var2[16];
  p_output1[103]=t3913 + t3924 + (0.03315*t6426 - 1.*t4267*t6846 - 0.19074*t7018 - 1.*t3610*(t3086 + t3090 + t3650 + t4282 + t5858 + t5862 + t7020 + t7023))*var2[3] + (-1.*t4082*t6846 - 1.*t3719*t6876 - 1.*t3610*(t2785 + t2794 + t4085 + t4092 + t5772 + t5777 + t6978 + t6979) + 0.03315*t6990 - 0.19074*t6994 - 1.*t3601*(t3001 + t3005 + t4110 + t4124 + t5816 + t5818 + t7000 + t7002))*var2[4] + (-1.*t3601*(t3213 + t3214 + t4021 + t5582 + t5583 + t6838 + t6839) - 1.*t2439*t3535*t6846 - 1.*t3610*(t3178 + t3183 + t3964 + t5569 + t5572 + t6850 + t6851) + 0.03315*t6860 - 0.19074*t6868 + t6878)*var2[5] + (-1.*t3601*(t3266 + t3270 + t4021 + t5582 + t5583 + t6838 + t6839) - 1.*t2097*t3535*t6846 + t6878 - 1.*t3610*(t3257 + t3259 + t4179 + t5662 + t5665 + t6894 + t6898) + 0.03315*t6904 - 0.19074*t6916)*var2[13] + (-1.*t4394*t6846 - 1.*t3808*t6876 - 1.*t3601*(t4316 + t4325 + t5719 + t6922 + t6923) - 1.*t3610*(t4351 + t4354 + t5743 + t6928 + t6930) + 0.03315*t6939 - 0.19074*t6946)*var2[14] + (-1.*t3601*(t5869 + t5880 + t7030 + t7031) - 1.*t3610*(t5884 + t5899 + t7039 + t7040) - 0.19074*t7050 + 0.03315*t7063)*var2[15] + (-1.*t3601*(t7071 + t7074) - 1.*t3610*(t7082 + t7083) - 0.19074*t7093 + 0.03315*t7098)*var2[16];
  p_output1[104]=t4420 + t4426 + (-1.*t3601*(t2956 + t2971 + t4043 + t4045 + t5641 + t5642 + t6874 + t6875) - 1.*t3601*t7204 - 1.*t4267*t7220 - 1.*t3569*(t3486 + t3487 + t4551 + t4693 + t6179 + t6183 + t7361 + t7370))*var2[3] + (-1.*t3569*(t3392 + t3395 + t4513 + t4516 + t6040 + t6048 + t7175 + t7180) - 1.*t3601*(t3351 + t3352 + t4477 + t4485 + t6025 + t6027 + t7185 + t7187) + 0.03315*t7196 - 0.19074*t7202 - 1.*t3693*t7204 - 1.*t4082*t7220)*var2[4] + (-1.*t3236*t3535*t7204 - 1.*t2439*t3535*t7220 + t7230 + t7236 - 1.*t3569*(t3425 + t3426 + t4617 + t6107 + t6108 + t7238 + t7245) - 1.*t3601*(t3408 + t3410 + t4601 + t6102 + t6103 + t7251 + t7252))*var2[5] + (-1.*t2405*t3535*t7204 - 1.*t2097*t3535*t7220 + t7230 + t7236 - 1.*t3569*(t3456 + t3457 + t4778 + t6125 + t6127 + t7263 + t7267) - 1.*t3601*(t3438 + t3442 + t4791 + t6133 + t6137 + t7271 + t7275))*var2[13] + (-1.*t3824*t7204 - 1.*t4394*t7220 + 0.03315*t7299 - 0.19074*t7311 - 1.*t3569*(t4725 + t4726 + t6155 + t7323 + t7324) - 1.*t3601*(t4747 + t4751 + t6163 + t7333 + t7337))*var2[14] + (-0.19074*t7110 + 0.03315*t7120 - 1.*t3569*(t5973 + t5978 + t7123 + t7124) - 1.*t3601*(t5987 + t5991 + t7127 + t7129))*var2[15] + (-0.19074*t7137 + 0.03315*t7150 - 1.*t3569*(t7153 + t7154) - 1.*t3601*(t7159 + t7160))*var2[16];
  p_output1[105]=t4889;
  p_output1[106]=t4953;
  p_output1[107]=t4987;
  p_output1[108]=t3554 + t3570 + (-0.62554*(t6295*t7394 + t6288*t7402) + 0.01315*(t6288*t7394 - 1.*t6295*t7402) - 1.*t3601*t7422 - 1.*t3610*(t1977 + t2028 + t3614 + t3615 + t5057 + t5059 + t6264 + t6268 + t7425 + t7426))*var2[3] + (-0.62554*(t6807*t7394 + t6768*t7402) + 0.01315*(t6768*t7394 - 1.*t6807*t7402) - 1.*t3610*(t2635 + t2640 + t3696 + t3697 + t5479 + t5487 + t6813 + t6815 + t6990*t7405 + t6994*t7416) - 1.*t3569*(t2703 + t2704 + t3702 + t3705 + t5509 + t5522 + t6823 + t6826 - 1.*t7196*t7405 - 1.*t7202*t7416) - 1.*t3693*t7422 - 1.*t3719*t7663)*var2[4] + (-0.62554*(t6516*t7394 + t6510*t7402) + 0.01315*(t6510*t7394 - 1.*t6516*t7402) - 1.*t3610*(t2491 + t2492 + t3637 + t5315 + t5316 + t6520 + t6521 + t6860*t7405 + t6868*t7416) - 1.*t3236*t3535*t7422 - 1.*t3569*(t2505 + t2510 + t3642 + t5329 + t5330 + t6481 + t6482 + t7557 + t7558) + t7668)*var2[5] + (-0.62554*(t6616*t7394 + t6598*t7402) + 0.01315*(t6598*t7394 - 1.*t6616*t7402) - 1.*t3610*(t2304 + t2330 + t3876 + t5399 + t5401 + t6630 + t6631 + t6904*t7405 + t6916*t7416) - 1.*t2405*t3535*t7422 - 1.*t3569*(t2376 + t2377 + t3642 + t5329 + t5330 + t6481 + t6482 + t7557 + t7558) + t7668)*var2[13] + (-0.62554*(t6708*t7394 + t6686*t7402) + 0.01315*(t6686*t7394 - 1.*t6708*t7402) - 1.*t3610*(t3784 + t3787 + t5419 + t6726 + t6728 + t6939*t7405 + t6946*t7416) - 1.*t3569*(t3750 + t3764 + t5411 + t6653 + t6656 - 1.*t7299*t7405 - 1.*t7311*t7416) - 1.*t3824*t7422 - 1.*t3808*t7663)*var2[14] + (0.01315*(t6350*t7394 - 1.*t6318*t7402) - 0.62554*(t6318*t7394 + t6350*t7402) - 1.*t3610*(t5232 + t5234 + t6360 + t6365 + t7063*t7405 + t7050*t7416) - 1.*t3569*(t5165 + t5185 + t6303 + t6304 - 1.*t7120*t7405 - 1.*t7110*t7416))*var2[15] + (-1.*t3610*(t6455 + t6461 + t7098*t7405 + t7093*t7416) - 1.*t3569*(t6391 + t6406 - 1.*t7150*t7405 - 1.*t7137*t7416) + 0.01315*(t6435*t7394 + t7512) - 0.62554*(t6435*t7402 + t7520))*var2[16] + (0.01315*(-1.*t7018*t7394 + t7512) - 1.*t3569*(-1.*t7137*t7869 - 1.*t7420*t7875) - 1.*t3610*(t7093*t7869 + t7655*t7875) - 0.62554*t7895)*var2[17];
  p_output1[109]=t3913 + t3924 + (-0.62554*(t7018*t7394 + t6426*t7402) - 1.*t3610*(t3086 + t3090 + t3650 + t4282 + t5858 + t5862 + t7020 + t7023 - 1.*t6288*t7405 - 1.*t6295*t7416) + 0.01315*t7895 - 1.*t4267*t7927)*var2[3] + (-0.62554*(t6994*t7394 + t6990*t7402) + 0.01315*(t6990*t7394 - 1.*t6994*t7402) - 1.*t3610*(t2785 + t2794 + t4085 + t4092 + t5772 + t5777 + t6978 + t6979 - 1.*t6768*t7405 - 1.*t6807*t7416) - 1.*t3601*(t3001 + t3005 + t4110 + t4124 + t5816 + t5818 + t7000 + t7002 + t7196*t7405 + t7202*t7416) - 1.*t4082*t7927 - 1.*t3719*t8005)*var2[4] + (-0.62554*(t6868*t7394 + t6860*t7402) + 0.01315*(t6860*t7394 - 1.*t6868*t7402) - 1.*t3610*(t3178 + t3183 + t3964 + t5569 + t5572 + t6850 + t6851 - 1.*t6510*t7405 - 1.*t6516*t7416) - 1.*t3601*(t3213 + t3214 + t4021 + t5582 + t5583 + t6838 + t6839 + t7910 + t7913) - 1.*t2439*t3535*t7927 + t8007)*var2[5] + (-0.62554*(t6916*t7394 + t6904*t7402) + 0.01315*(t6904*t7394 - 1.*t6916*t7402) - 1.*t3610*(t3257 + t3259 + t4179 + t5662 + t5665 + t6894 + t6898 - 1.*t6598*t7405 - 1.*t6616*t7416) - 1.*t3601*(t3266 + t3270 + t4021 + t5582 + t5583 + t6838 + t6839 + t7910 + t7913) - 1.*t2097*t3535*t7927 + t8007)*var2[13] + (-0.62554*(t6946*t7394 + t6939*t7402) + 0.01315*(t6939*t7394 - 1.*t6946*t7402) - 1.*t3610*(t4351 + t4354 + t5743 + t6928 + t6930 - 1.*t6686*t7405 - 1.*t6708*t7416) - 1.*t3601*(t4316 + t4325 + t5719 + t6922 + t6923 + t7299*t7405 + t7311*t7416) - 1.*t4394*t7927 - 1.*t3808*t8005)*var2[14] + (0.01315*(t7063*t7394 - 1.*t7050*t7402) - 0.62554*(t7050*t7394 + t7063*t7402) - 1.*t3610*(t5884 + t5899 + t7039 + t7040 - 1.*t6350*t7405 - 1.*t6318*t7416) - 1.*t3601*(t5869 + t5880 + t7030 + t7031 + t7120*t7405 + t7110*t7416))*var2[15] + (-1.*t3610*(t7082 + t7083 - 1.*t6435*t7405 - 1.*t6426*t7416) - 1.*t3601*(t7071 + t7074 + t7150*t7405 + t7137*t7416) + 0.01315*(t7098*t7394 + t8297) - 0.62554*(t7098*t7402 + t8308))*var2[16] + (-1.*t3610*(-1.*t6426*t7869 - 1.*t7018*t7875) - 1.*t3601*(t7137*t7869 + t7420*t7875) + 0.01315*(-1.*t7394*t7655 + t8297) - 0.62554*(-1.*t7402*t7655 + t8308))*var2[17];
  p_output1[110]=t4420 + t4426 + (-1.*t3569*(t3486 + t3487 + t4551 + t4693 + t6179 + t6183 + t7361 + t7370 + t6288*t7405 + t6295*t7416) - 1.*t3601*(t2956 + t2971 + t4043 + t4045 + t5641 + t5642 + t6874 + t6875 + t7993 + t8002) - 1.*t3601*t8495 - 1.*t4267*t8505)*var2[3] + (-0.62554*(t7202*t7394 + t7196*t7402) + 0.01315*(t7196*t7394 - 1.*t7202*t7402) - 1.*t3569*(t3392 + t3395 + t4513 + t4516 + t6040 + t6048 + t7175 + t7180 + t6768*t7405 + t6807*t7416) - 1.*t3601*(t3351 + t3352 + t4477 + t4485 + t6025 + t6027 + t7185 + t7187 - 1.*t6990*t7405 - 1.*t6994*t7416) - 1.*t3693*t8495 - 1.*t4082*t8505)*var2[4] + (-1.*t3569*(t3425 + t3426 + t4617 + t6107 + t6108 + t7238 + t7245 + t6510*t7405 + t6516*t7416) - 1.*t3601*(t3408 + t3410 + t4601 + t6102 + t6103 + t7251 + t7252 - 1.*t6860*t7405 - 1.*t6868*t7416) - 1.*t3236*t3535*t8495 - 1.*t2439*t3535*t8505 + t8522 + t8530)*var2[5] + (-1.*t3569*(t3456 + t3457 + t4778 + t6125 + t6127 + t7263 + t7267 + t6598*t7405 + t6616*t7416) - 1.*t3601*(t3438 + t3442 + t4791 + t6133 + t6137 + t7271 + t7275 - 1.*t6904*t7405 - 1.*t6916*t7416) - 1.*t2405*t3535*t8495 - 1.*t2097*t3535*t8505 + t8522 + t8530)*var2[13] + (-0.62554*(t7311*t7394 + t7299*t7402) + 0.01315*(t7299*t7394 - 1.*t7311*t7402) - 1.*t3569*(t4725 + t4726 + t6155 + t7323 + t7324 + t6686*t7405 + t6708*t7416) - 1.*t3601*(t4747 + t4751 + t6163 + t7333 + t7337 - 1.*t6939*t7405 - 1.*t6946*t7416) - 1.*t3824*t8495 - 1.*t4394*t8505)*var2[14] + (0.01315*(t7120*t7394 - 1.*t7110*t7402) - 0.62554*(t7110*t7394 + t7120*t7402) - 1.*t3569*(t5973 + t5978 + t7123 + t7124 + t6350*t7405 + t6318*t7416) - 1.*t3601*(t5987 + t5991 + t7127 + t7129 - 1.*t7063*t7405 - 1.*t7050*t7416))*var2[15] + (-1.*t3569*(t7153 + t7154 + t6435*t7405 + t6426*t7416) - 1.*t3601*(t7159 + t7160 - 1.*t7098*t7405 - 1.*t7093*t7416) + 0.01315*(t7150*t7394 + t8420) - 0.62554*(t7150*t7402 + t8430))*var2[16] + (-1.*t3569*(t6426*t7869 + t7018*t7875) - 1.*t3601*(-1.*t7093*t7869 - 1.*t7655*t7875) + 0.01315*(-1.*t7394*t7420 + t8420) - 0.62554*(-1.*t7402*t7420 + t8430))*var2[17];
  p_output1[111]=t4889;
  p_output1[112]=t4953;
  p_output1[113]=t4987;
  p_output1[114]=0;
  p_output1[115]=0;
  p_output1[116]=0;
  p_output1[117]=0;
  p_output1[118]=0;
  p_output1[119]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 20 && ncols == 1) && 
      !(mrows == 1 && ncols == 20))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 20 && ncols == 1) && 
      !(mrows == 1 && ncols == 20))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 6, (mwSize) 20, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "dJs_RightAnkleJoint_mex.hh"

namespace SymExpression
{

void dJs_RightAnkleJoint_mex_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
