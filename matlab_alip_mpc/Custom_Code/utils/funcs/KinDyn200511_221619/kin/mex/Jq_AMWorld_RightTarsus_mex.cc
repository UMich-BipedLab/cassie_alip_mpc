/*
 * Automatically Generated from Mathematica.
 * Mon 11 May 2020 22:30:28 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t718;
  double t1564;
  double t1399;
  double t1473;
  double t1565;
  double t394;
  double t2497;
  double t1939;
  double t1283;
  double t2720;
  double t2903;
  double t1333;
  double t310;
  double t3005;
  double t3078;
  double t2927;
  double t2963;
  double t4792;
  double t4435;
  double t4447;
  double t4900;
  double t5780;
  double t4455;
  double t4978;
  double t5307;
  double t4422;
  double t6051;
  double t6057;
  double t6084;
  double t7354;
  double t5739;
  double t6441;
  double t6608;
  double t4271;
  double t7387;
  double t7442;
  double t7453;
  double t7689;
  double t7919;
  double t8047;
  double t8085;
  double t8093;
  double t7124;
  double t7458;
  double t7673;
  double t8175;
  double t8198;
  double t8228;
  double t8235;
  double t8236;
  double t8164;
  double t8215;
  double t8223;
  double t8333;
  double t8338;
  double t8348;
  double t8329;
  double t8352;
  double t8363;
  double t8373;
  double t8385;
  double t8408;
  double t8413;
  double t8422;
  double t8426;
  double t8427;
  double t8369;
  double t8387;
  double t8395;
  double t8466;
  double t8468;
  double t8523;
  double t8541;
  double t8546;
  double t8461;
  double t8478;
  double t8497;
  double t2533;
  double t2641;
  double t2965;
  double t3298;
  double t3422;
  double t3707;
  double t3725;
  double t3799;
  double t3826;
  double t3856;
  double t4089;
  double t4124;
  double t4161;
  double t4195;
  double t7676;
  double t8156;
  double t8157;
  double t8224;
  double t8244;
  double t8245;
  double t8251;
  double t8255;
  double t8264;
  double t8278;
  double t8286;
  double t8294;
  double t8297;
  double t8315;
  double t8321;
  double t8406;
  double t8433;
  double t8453;
  double t8514;
  double t8559;
  double t8563;
  double t8582;
  double t8589;
  double t8602;
  double t8607;
  double t8612;
  double t8614;
  double t8615;
  double t8617;
  double t8619;
  double t1500;
  double t1656;
  double t1855;
  double t2030;
  double t2085;
  double t2294;
  double t1877;
  double t2381;
  double t2411;
  double t8682;
  double t8688;
  double t8700;
  double t8713;
  double t8715;
  double t8717;
  double t8704;
  double t8720;
  double t8721;
  double t8728;
  double t8733;
  double t8735;
  double t8725;
  double t8744;
  double t8751;
  double t8757;
  double t8760;
  double t8769;
  double t8755;
  double t8771;
  double t8772;
  double t8778;
  double t8786;
  double t8791;
  double t4265;
  double t8328;
  double t8631;
  double t8649;
  double t8667;
  double t8670;
  double t8673;
  double t8674;
  double t8830;
  double t8831;
  double t8832;
  double t8834;
  double t8835;
  double t8838;
  double t8833;
  double t8840;
  double t8841;
  double t8847;
  double t8849;
  double t8853;
  double t8858;
  double t8859;
  double t8860;
  double t8855;
  double t8864;
  double t8866;
  double t8872;
  double t8873;
  double t8877;
  double t8869;
  double t8878;
  double t8880;
  double t8882;
  double t8883;
  double t8884;
  double t8803;
  double t8804;
  double t8808;
  double t8814;
  double t8881;
  double t8885;
  double t8886;
  double t8888;
  double t8889;
  double t8890;
  double t8829;
  double t8842;
  double t8844;
  double t8939;
  double t8941;
  double t8942;
  double t8946;
  double t8947;
  double t8948;
  double t8951;
  double t8952;
  double t8954;
  double t8950;
  double t8956;
  double t8957;
  double t8962;
  double t8964;
  double t8966;
  double t8961;
  double t8967;
  double t8968;
  double t8971;
  double t8972;
  double t8973;
  double t8970;
  double t8974;
  double t8976;
  double t8978;
  double t8981;
  double t8982;
  double t8903;
  double t8905;
  double t8906;
  double t8911;
  double t8914;
  double t8918;
  double t8920;
  double t8922;
  double t8923;
  double t8887;
  double t8891;
  double t8892;
  double t8894;
  double t8896;
  double t8897;
  double t8910;
  double t8919;
  double t8924;
  double t8933;
  double t9026;
  double t9028;
  double t9029;
  double t9033;
  double t9034;
  double t9035;
  double t9039;
  double t9040;
  double t9042;
  double t9038;
  double t9043;
  double t9044;
  double t9046;
  double t9047;
  double t9048;
  double t9045;
  double t9049;
  double t9050;
  double t9053;
  double t9055;
  double t9056;
  double t9051;
  double t9057;
  double t9058;
  double t9061;
  double t9064;
  double t9065;
  double t8993;
  double t8996;
  double t8997;
  double t8998;
  double t9012;
  double t9013;
  double t9014;
  double t9016;
  double t9017;
  double t9018;
  double t9015;
  double t9019;
  double t9020;
  double t9076;
  double t9077;
  double t9078;
  double t9082;
  double t9083;
  double t9086;
  double t9080;
  double t9089;
  double t9090;
  double t9093;
  double t9094;
  double t9095;
  double t9091;
  double t9096;
  double t9098;
  double t9100;
  double t9101;
  double t9102;
  double t9001;
  double t9003;
  double t9004;
  double t9005;
  double t9099;
  double t9103;
  double t9106;
  double t9109;
  double t9112;
  double t9113;
  double t9126;
  double t9127;
  double t9132;
  double t9144;
  double t9147;
  double t9149;
  double t9152;
  double t9153;
  double t9154;
  double t9150;
  double t9156;
  double t9158;
  double t9160;
  double t9161;
  double t9162;
  double t9159;
  double t9163;
  double t9165;
  double t9168;
  double t9169;
  double t9170;
  double t9167;
  double t9171;
  double t9172;
  double t9175;
  double t9176;
  double t9177;
  double t9138;
  double t9139;
  double t9140;
  double t9186;
  double t9187;
  double t9189;
  double t9191;
  double t9192;
  double t9194;
  double t9190;
  double t9195;
  double t9196;
  double t9198;
  double t9199;
  double t9201;
  double t9197;
  double t9202;
  double t9203;
  double t9206;
  double t9207;
  double t9209;
  double t9204;
  double t9210;
  double t9211;
  double t9214;
  double t9215;
  double t9216;
  double t9254;
  double t9255;
  double t9256;
  double t9257;
  double t9259;
  double t9263;
  double t9265;
  double t9266;
  double t9268;
  double t9270;
  double t9271;
  double t9273;
  double t9274;
  double t9275;
  double t9272;
  double t9276;
  double t9277;
  double t9281;
  double t9282;
  double t9283;
  double t9279;
  double t9284;
  double t9285;
  double t9287;
  double t9288;
  double t9289;
  double t9226;
  double t9227;
  double t9228;
  double t9229;
  double t9230;
  double t9231;
  double t9233;
  double t9236;
  double t9237;
  double t9238;
  double t9239;
  double t9240;
  double t9241;
  double t9242;
  double t9244;
  double t9245;
  double t9246;
  double t9247;
  double t9248;
  double t9249;
  double t9250;
  double t9234;
  double t9243;
  double t9251;
  double t9252;
  double t9008;
  double t9021;
  double t9022;
  double t9310;
  double t9311;
  double t9313;
  double t9315;
  double t9316;
  double t9317;
  double t9318;
  double t9321;
  double t9322;
  double t9323;
  double t9319;
  double t9324;
  double t9325;
  double t9327;
  double t9329;
  double t9331;
  double t9326;
  double t9332;
  double t9333;
  double t9337;
  double t9338;
  double t9339;
  double t9298;
  double t9299;
  double t9300;
  double t9301;
  double t9108;
  double t9114;
  double t9117;
  double t9303;
  double t9304;
  double t9305;
  double t9306;
  double t9119;
  double t9120;
  double t9122;
  double t9125;
  double t9133;
  double t9134;
  double t9355;
  double t9356;
  double t9357;
  double t9358;
  double t9359;
  double t9360;
  double t9362;
  double t9363;
  double t9364;
  double t9361;
  double t9365;
  double t9366;
  double t9368;
  double t9369;
  double t9370;
  double t9367;
  double t9371;
  double t9372;
  double t9374;
  double t9375;
  double t9376;
  double t9174;
  double t9178;
  double t9180;
  double t9182;
  double t9183;
  double t9184;
  double t9410;
  double t9403;
  double t9404;
  double t9408;
  double t9429;
  double t9425;
  double t9426;
  double t9427;
  double t9448;
  double t9449;
  double t9451;
  double t9452;
  double t9453;
  double t9459;
  double t9460;
  double t9461;
  double t9455;
  double t9462;
  double t9463;
  double t9465;
  double t9466;
  double t9467;
  double t9464;
  double t9469;
  double t9471;
  double t9473;
  double t9474;
  double t9476;
  double t9391;
  double t9392;
  double t9393;
  double t9394;
  double t9395;
  double t9397;
  double t9399;
  double t9400;
  double t9401;
  double t9409;
  double t9412;
  double t9413;
  double t9414;
  double t9416;
  double t9417;
  double t9418;
  double t9419;
  double t9420;
  double t9428;
  double t9433;
  double t9434;
  double t9435;
  double t9436;
  double t9437;
  double t9439;
  double t9441;
  double t9442;
  double t9402;
  double t9421;
  double t9443;
  double t9444;
  double t9506;
  double t9507;
  double t9509;
  double t9510;
  double t9513;
  double t9515;
  double t9516;
  double t9518;
  double t9514;
  double t9520;
  double t9521;
  double t9526;
  double t9527;
  double t9528;
  double t9522;
  double t9530;
  double t9531;
  double t9533;
  double t9534;
  double t9535;
  double t9486;
  double t9487;
  double t9488;
  double t9489;
  double t9491;
  double t9493;
  double t9496;
  double t9498;
  double t9354;
  double t9373;
  double t9377;
  double t9379;
  double t9380;
  double t9381;
  double t9382;
  double t9383;
  double t9384;
  double t9625;
  double t9629;
  double t9630;
  double t9631;
  double t9632;
  double t9633;
  double t9636;
  double t9637;
  double t9638;
  double t9634;
  double t9639;
  double t9640;
  double t9644;
  double t9645;
  double t9646;
  double t9560;
  double t9561;
  double t9562;
  double t9563;
  double t9564;
  double t9565;
  double t9567;
  double t9568;
  double t9569;
  double t9570;
  double t9573;
  double t9575;
  double t9576;
  double t9581;
  double t9582;
  double t9583;
  double t9585;
  double t9586;
  double t9588;
  double t9593;
  double t9594;
  double t9595;
  double t9597;
  double t9598;
  double t9599;
  double t9600;
  double t9601;
  double t9604;
  double t9605;
  double t9606;
  double t9607;
  double t9608;
  double t9609;
  double t9611;
  double t9612;
  double t9613;
  double t9614;
  double t9615;
  double t9616;
  double t9619;
  double t9620;
  double t9577;
  double t9602;
  double t9621;
  double t9622;
  double t798;
  double t9674;
  double t9677;
  double t9679;
  double t9682;
  double t9683;
  double t9686;
  double t9687;
  double t9688;
  double t9684;
  double t9692;
  double t9693;
  double t9696;
  double t9697;
  double t9698;
  double t9658;
  double t9659;
  double t9660;
  double t9661;
  double t9663;
  double t9664;
  double t9665;
  double t9666;
  double t9713;
  double t9714;
  double t9715;
  double t9716;
  double t9717;
  double t9718;
  double t9720;
  double t9721;
  double t9723;
  double t9719;
  double t9726;
  double t9727;
  double t9730;
  double t9731;
  double t9732;
  double t9743;
  double t9744;
  double t9745;
  double t9749;
  double t9757;
  double t9758;
  double t9760;
  double t9751;
  double t9752;
  double t9753;
  double t9777;
  double t9778;
  double t9781;
  double t9775;
  double t9790;
  double t9791;
  double t9793;
  double t9786;
  double t9787;
  double t9788;
  double t9811;
  double t9812;
  double t9813;
  double t9814;
  double t9815;
  double t9817;
  double t9820;
  double t9821;
  double t9816;
  double t9824;
  double t9825;
  double t9830;
  double t9831;
  double t9832;
  double t9747;
  double t9748;
  double t9750;
  double t9754;
  double t9762;
  double t9763;
  double t9764;
  double t9765;
  double t9766;
  double t9767;
  double t9769;
  double t9770;
  double t9771;
  double t9772;
  double t9773;
  double t9776;
  double t9782;
  double t9785;
  double t9789;
  double t9794;
  double t9797;
  double t9798;
  double t9799;
  double t9800;
  double t9801;
  double t9802;
  double t9803;
  double t9805;
  double t9806;
  double t9807;
  double t9774;
  double t9808;
  double t9809;
  double t9854;
  double t9856;
  double t9858;
  double t9861;
  double t9864;
  double t9866;
  double t9869;
  double t9875;
  double t9865;
  double t9876;
  double t9877;
  double t9881;
  double t9882;
  double t9883;
  double t9840;
  double t9842;
  double t9843;
  double t9845;
  double t9846;
  double t9847;
  double t9899;
  double t9900;
  double t9902;
  double t9904;
  double t9905;
  double t9907;
  double t9909;
  double t9910;
  double t9906;
  double t9912;
  double t9913;
  double t9917;
  double t9918;
  double t9920;
  double t9933;
  double t9934;
  double t9935;
  double t9936;
  double t9937;
  double t9938;
  double t9939;
  double t9942;
  double t9943;
  double t9944;
  double t9950;
  double t9951;
  double t9952;
  double t9946;
  double t9947;
  double t9948;
  double t9965;
  double t9966;
  double t9968;
  double t9972;
  double t9973;
  double t9974;
  double t9967;
  double t9969;
  double t9970;
  double t9981;
  double t9982;
  double t9983;
  double t9977;
  double t9978;
  double t9979;
  double t10002;
  double t10003;
  double t10001;
  double t10005;
  double t10008;
  double t10010;
  double t10012;
  double t9940;
  double t9941;
  double t9945;
  double t9949;
  double t9953;
  double t9954;
  double t9955;
  double t9956;
  double t9957;
  double t9958;
  double t9959;
  double t9960;
  double t9961;
  double t9962;
  double t9963;
  double t9971;
  double t9975;
  double t9976;
  double t9980;
  double t9984;
  double t9985;
  double t9986;
  double t9987;
  double t9990;
  double t9991;
  double t9992;
  double t9994;
  double t9995;
  double t9996;
  double t9997;
  double t9964;
  double t9998;
  double t9999;
  double t10046;
  double t10048;
  double t10045;
  double t10050;
  double t10053;
  double t10056;
  double t10057;
  double t10030;
  double t10031;
  double t10034;
  double t10036;
  double t10037;
  double t10039;
  double t10078;
  double t10080;
  double t10077;
  double t10082;
  double t10083;
  double t10087;
  double t10089;
  double t10103;
  double t10104;
  double t10106;
  double t10108;
  double t10107;
  double t10109;
  double t10110;
  double t10111;
  double t10112;
  double t10113;
  double t10116;
  double t10117;
  double t10121;
  double t10124;
  double t10125;
  double t10126;
  double t10135;
  double t10136;
  double t10137;
  double t10128;
  double t10130;
  double t10131;
  double t10155;
  double t10158;
  double t10159;
  double t10161;
  double t10162;
  double t10163;
  double t10167;
  double t10168;
  double t10170;
  double t10160;
  double t10164;
  double t10165;
  double t10184;
  double t10186;
  double t10187;
  double t10178;
  double t10179;
  double t10182;
  double t10122;
  double t10123;
  double t10127;
  double t10133;
  double t10138;
  double t10139;
  double t10140;
  double t10141;
  double t10144;
  double t10146;
  double t10147;
  double t10148;
  double t10149;
  double t10151;
  double t10153;
  double t10166;
  double t10171;
  double t10174;
  double t10183;
  double t10189;
  double t10191;
  double t10192;
  double t10193;
  double t10194;
  double t10195;
  double t10196;
  double t10197;
  double t10199;
  double t10200;
  double t10202;
  double t10212;
  double t10213;
  double t10154;
  double t10203;
  double t10205;
  double t10208;
  double t10209;
  double t10210;
  double t10234;
  double t10235;
  double t10223;
  double t10224;
  double t10225;
  double t10253;
  double t10254;
  double t10206;
  double t10211;
  double t10215;
  double t10226;
  double t10231;
  double t10233;
  double t10237;
  double t10246;
  double t10250;
  double t10252;
  double t10256;
  double t10262;
  t718 = Sin(var1[3]);
  t1564 = Cos(var1[3]);
  t1399 = Cos(var1[5]);
  t1473 = Sin(var1[4]);
  t1565 = Sin(var1[5]);
  t394 = Sin(var1[14]);
  t2497 = 0. + t394;
  t1939 = Cos(var1[13]);
  t1283 = Cos(var1[14]);
  t2720 = -1.*t1283;
  t2903 = 0. + t2720;
  t1333 = Sin(var1[13]);
  t310 = Cos(var1[4]);
  t3005 = t2903*t1333;
  t3078 = 0. + t3005;
  t2927 = t1939*t2903;
  t2963 = 0. + t2927;
  t4792 = Cos(var1[17]);
  t4435 = Cos(var1[18]);
  t4447 = Sin(var1[17]);
  t4900 = Sin(var1[18]);
  t5780 = Cos(var1[16]);
  t4455 = t4435*t4447;
  t4978 = t4792*t4900;
  t5307 = 0. + t4455 + t4978;
  t4422 = Sin(var1[16]);
  t6051 = t4792*t4435;
  t6057 = -1.*t4447*t4900;
  t6084 = 0. + t6051 + t6057;
  t7354 = Cos(var1[15]);
  t5739 = -1.*t4422*t5307;
  t6441 = t5780*t6084;
  t6608 = 0. + t5739 + t6441;
  t4271 = Sin(var1[15]);
  t7387 = t5780*t5307;
  t7442 = t4422*t6084;
  t7453 = 0. + t7387 + t7442;
  t7689 = t7354*t6608;
  t7919 = -1.*t4271*t7453;
  t8047 = 0. + t7689 + t7919;
  t8085 = t1283*t8047;
  t8093 = 0. + t8085;
  t7124 = t4271*t6608;
  t7458 = t7354*t7453;
  t7673 = 0. + t7124 + t7458;
  t8175 = t394*t8047;
  t8198 = 0. + t8175;
  t8228 = t1939*t7673;
  t8235 = t1333*t8198;
  t8236 = 0. + t8228 + t8235;
  t8164 = -1.*t1333*t7673;
  t8215 = t1939*t8198;
  t8223 = 0. + t8164 + t8215;
  t8333 = -1.*t4792*t4435;
  t8338 = t4447*t4900;
  t8348 = 0. + t8333 + t8338;
  t8329 = t4422*t5307;
  t8352 = t5780*t8348;
  t8363 = 0. + t8329 + t8352;
  t8373 = -1.*t4422*t8348;
  t8385 = 0. + t7387 + t8373;
  t8408 = -1.*t4271*t8363;
  t8413 = t7354*t8385;
  t8422 = 0. + t8408 + t8413;
  t8426 = t1283*t8422;
  t8427 = 0. + t8426;
  t8369 = t7354*t8363;
  t8387 = t4271*t8385;
  t8395 = 0. + t8369 + t8387;
  t8466 = t394*t8422;
  t8468 = 0. + t8466;
  t8523 = t1939*t8395;
  t8541 = t1333*t8468;
  t8546 = 0. + t8523 + t8541;
  t8461 = -1.*t1333*t8395;
  t8478 = t1939*t8468;
  t8497 = 0. + t8461 + t8478;
  t2533 = var2[13]*t2497;
  t2641 = var2[5]*t2497;
  t2965 = t2963*t1399;
  t3298 = -1.*t3078*t1565;
  t3422 = 0. + t2965 + t3298;
  t3707 = var2[4]*t3422;
  t3725 = -1.*t2497*t1473;
  t3799 = t1399*t3078;
  t3826 = t2963*t1565;
  t3856 = 0. + t3799 + t3826;
  t4089 = t310*t3856;
  t4124 = 0. + t3725 + t4089;
  t4161 = var2[3]*t4124;
  t4195 = 0. + var2[15] + var2[16] + var2[17] + var2[18] + t2533 + t2641 + t3707 + t4161;
  t7676 = var2[14]*t7673;
  t8156 = var2[13]*t8093;
  t8157 = var2[5]*t8093;
  t8224 = t1399*t8223;
  t8244 = -1.*t8236*t1565;
  t8245 = 0. + t8224 + t8244;
  t8251 = var2[4]*t8245;
  t8255 = -1.*t8093*t1473;
  t8264 = t1399*t8236;
  t8278 = t8223*t1565;
  t8286 = 0. + t8264 + t8278;
  t8294 = t310*t8286;
  t8297 = 0. + t8255 + t8294;
  t8315 = var2[3]*t8297;
  t8321 = 0. + t7676 + t8156 + t8157 + t8251 + t8315;
  t8406 = var2[14]*t8395;
  t8433 = var2[13]*t8427;
  t8453 = var2[5]*t8427;
  t8514 = t1399*t8497;
  t8559 = -1.*t8546*t1565;
  t8563 = 0. + t8514 + t8559;
  t8582 = var2[4]*t8563;
  t8589 = -1.*t8427*t1473;
  t8602 = t1399*t8546;
  t8607 = t8497*t1565;
  t8612 = 0. + t8602 + t8607;
  t8614 = t310*t8612;
  t8615 = 0. + t8589 + t8614;
  t8617 = var2[3]*t8615;
  t8619 = 0. + t8406 + t8433 + t8453 + t8582 + t8617;
  t1500 = -1.*t1399*t718*t1473;
  t1656 = t1564*t1565;
  t1855 = t1500 + t1656;
  t2030 = -1.*t1564*t1399;
  t2085 = -1.*t718*t1473*t1565;
  t2294 = t2030 + t2085;
  t1877 = t1333*t1855;
  t2381 = t1939*t2294;
  t2411 = t1877 + t2381;
  t8682 = t1939*t1855;
  t8688 = -1.*t1333*t2294;
  t8700 = t8682 + t8688;
  t8713 = -1.*t1283*t310*t718;
  t8715 = t394*t2411;
  t8717 = t8713 + t8715;
  t8704 = t4271*t8700;
  t8720 = t7354*t8717;
  t8721 = t8704 + t8720;
  t8728 = t7354*t8700;
  t8733 = -1.*t4271*t8717;
  t8735 = t8728 + t8733;
  t8725 = -1.*t4422*t8721;
  t8744 = t5780*t8735;
  t8751 = t8725 + t8744;
  t8757 = t5780*t8721;
  t8760 = t4422*t8735;
  t8769 = t8757 + t8760;
  t8755 = t4447*t8751;
  t8771 = t4792*t8769;
  t8772 = t8755 + t8771;
  t8778 = t4792*t8751;
  t8786 = -1.*t4447*t8769;
  t8791 = t8778 + t8786;
  t4265 = 0.0239*t4195;
  t8328 = -0.000036*t8321;
  t8631 = 0.000063*t8619;
  t8649 = t4265 + t8328 + t8631;
  t8667 = 0.000063*t4195;
  t8670 = -0.00288*t8321;
  t8673 = 0.00113*t8619;
  t8674 = t8667 + t8670 + t8673;
  t8830 = t1564*t1399*t1473;
  t8831 = t718*t1565;
  t8832 = t8830 + t8831;
  t8834 = -1.*t1399*t718;
  t8835 = t1564*t1473*t1565;
  t8838 = t8834 + t8835;
  t8833 = t1333*t8832;
  t8840 = t1939*t8838;
  t8841 = t8833 + t8840;
  t8847 = t1939*t8832;
  t8849 = -1.*t1333*t8838;
  t8853 = t8847 + t8849;
  t8858 = t1283*t1564*t310;
  t8859 = t394*t8841;
  t8860 = t8858 + t8859;
  t8855 = t4271*t8853;
  t8864 = t7354*t8860;
  t8866 = t8855 + t8864;
  t8872 = t7354*t8853;
  t8873 = -1.*t4271*t8860;
  t8877 = t8872 + t8873;
  t8869 = -1.*t4422*t8866;
  t8878 = t5780*t8877;
  t8880 = t8869 + t8878;
  t8882 = t5780*t8866;
  t8883 = t4422*t8877;
  t8884 = t8882 + t8883;
  t8803 = -0.000036*t4195;
  t8804 = 0.0231*t8321;
  t8808 = -0.00288*t8619;
  t8814 = t8803 + t8804 + t8808;
  t8881 = t4447*t8880;
  t8885 = t4792*t8884;
  t8886 = t8881 + t8885;
  t8888 = t4792*t8880;
  t8889 = -1.*t4447*t8884;
  t8890 = t8888 + t8889;
  t8829 = t1564*t310*t394;
  t8842 = -1.*t1283*t8841;
  t8844 = t8829 + t8842;
  t8939 = t1564*t310*t1399*t1333;
  t8941 = t1939*t1564*t310*t1565;
  t8942 = t8939 + t8941;
  t8946 = t1939*t1564*t310*t1399;
  t8947 = -1.*t1564*t310*t1333*t1565;
  t8948 = t8946 + t8947;
  t8951 = -1.*t1283*t1564*t1473;
  t8952 = t394*t8942;
  t8954 = t8951 + t8952;
  t8950 = t4271*t8948;
  t8956 = t7354*t8954;
  t8957 = t8950 + t8956;
  t8962 = t7354*t8948;
  t8964 = -1.*t4271*t8954;
  t8966 = t8962 + t8964;
  t8961 = -1.*t4422*t8957;
  t8967 = t5780*t8966;
  t8968 = t8961 + t8967;
  t8971 = t5780*t8957;
  t8972 = t4422*t8966;
  t8973 = t8971 + t8972;
  t8970 = t4447*t8968;
  t8974 = t4792*t8973;
  t8976 = t8970 + t8974;
  t8978 = t4792*t8968;
  t8981 = -1.*t4447*t8973;
  t8982 = t8978 + t8981;
  t8903 = -1.*t310*t2497;
  t8905 = -1.*t1473*t3856;
  t8906 = t8903 + t8905;
  t8911 = -1.*t310*t8093;
  t8914 = -1.*t1473*t8286;
  t8918 = t8911 + t8914;
  t8920 = -1.*t310*t8427;
  t8922 = -1.*t1473*t8612;
  t8923 = t8920 + t8922;
  t8887 = t4900*t8886;
  t8891 = -1.*t4435*t8890;
  t8892 = t8887 + t8891;
  t8894 = t4435*t8886;
  t8896 = t4900*t8890;
  t8897 = t8894 + t8896;
  t8910 = 0.0239*var2[3]*t8906;
  t8919 = -0.000036*var2[3]*t8918;
  t8924 = 0.000063*var2[3]*t8923;
  t8933 = t8910 + t8919 + t8924;
  t9026 = t310*t1399*t1333*t718;
  t9028 = t1939*t310*t718*t1565;
  t9029 = t9026 + t9028;
  t9033 = t1939*t310*t1399*t718;
  t9034 = -1.*t310*t1333*t718*t1565;
  t9035 = t9033 + t9034;
  t9039 = -1.*t1283*t718*t1473;
  t9040 = t394*t9029;
  t9042 = t9039 + t9040;
  t9038 = t4271*t9035;
  t9043 = t7354*t9042;
  t9044 = t9038 + t9043;
  t9046 = t7354*t9035;
  t9047 = -1.*t4271*t9042;
  t9048 = t9046 + t9047;
  t9045 = -1.*t4422*t9044;
  t9049 = t5780*t9048;
  t9050 = t9045 + t9049;
  t9053 = t5780*t9044;
  t9055 = t4422*t9048;
  t9056 = t9053 + t9055;
  t9051 = t4447*t9050;
  t9057 = t4792*t9056;
  t9058 = t9051 + t9057;
  t9061 = t4792*t9050;
  t9064 = -1.*t4447*t9056;
  t9065 = t9061 + t9064;
  t8993 = 0.000063*var2[3]*t8906;
  t8996 = -0.00288*var2[3]*t8918;
  t8997 = 0.00113*var2[3]*t8923;
  t8998 = t8993 + t8996 + t8997;
  t9012 = t1399*t718*t1473;
  t9013 = -1.*t1564*t1565;
  t9014 = t9012 + t9013;
  t9016 = t1564*t1399;
  t9017 = t718*t1473*t1565;
  t9018 = t9016 + t9017;
  t9015 = t1333*t9014;
  t9019 = t1939*t9018;
  t9020 = t9015 + t9019;
  t9076 = t1939*t9014;
  t9077 = -1.*t1333*t9018;
  t9078 = t9076 + t9077;
  t9082 = t1283*t310*t718;
  t9083 = t394*t9020;
  t9086 = t9082 + t9083;
  t9080 = t4271*t9078;
  t9089 = t7354*t9086;
  t9090 = t9080 + t9089;
  t9093 = t7354*t9078;
  t9094 = -1.*t4271*t9086;
  t9095 = t9093 + t9094;
  t9091 = -1.*t4422*t9090;
  t9096 = t5780*t9095;
  t9098 = t9091 + t9096;
  t9100 = t5780*t9090;
  t9101 = t4422*t9095;
  t9102 = t9100 + t9101;
  t9001 = -0.000036*var2[3]*t8906;
  t9003 = 0.0231*var2[3]*t8918;
  t9004 = -0.00288*var2[3]*t8923;
  t9005 = t9001 + t9003 + t9004;
  t9099 = t4447*t9098;
  t9103 = t4792*t9102;
  t9106 = t9099 + t9103;
  t9109 = t4792*t9098;
  t9112 = -1.*t4447*t9102;
  t9113 = t9109 + t9112;
  t9126 = t310*t1399*t1333;
  t9127 = t1939*t310*t1565;
  t9132 = t9126 + t9127;
  t9144 = t1939*t310*t1399;
  t9147 = -1.*t310*t1333*t1565;
  t9149 = t9144 + t9147;
  t9152 = -1.*t1283*t1473;
  t9153 = t394*t9132;
  t9154 = t9152 + t9153;
  t9150 = t4271*t9149;
  t9156 = t7354*t9154;
  t9158 = t9150 + t9156;
  t9160 = t7354*t9149;
  t9161 = -1.*t4271*t9154;
  t9162 = t9160 + t9161;
  t9159 = -1.*t4422*t9158;
  t9163 = t5780*t9162;
  t9165 = t9159 + t9163;
  t9168 = t5780*t9158;
  t9169 = t4422*t9162;
  t9170 = t9168 + t9169;
  t9167 = t4447*t9165;
  t9171 = t4792*t9170;
  t9172 = t9167 + t9171;
  t9175 = t4792*t9165;
  t9176 = -1.*t4447*t9170;
  t9177 = t9175 + t9176;
  t9138 = -1.*t1399*t1333*t1473;
  t9139 = -1.*t1939*t1473*t1565;
  t9140 = t9138 + t9139;
  t9186 = -1.*t1939*t1399*t1473;
  t9187 = t1333*t1473*t1565;
  t9189 = t9186 + t9187;
  t9191 = -1.*t1283*t310;
  t9192 = t394*t9140;
  t9194 = t9191 + t9192;
  t9190 = t4271*t9189;
  t9195 = t7354*t9194;
  t9196 = t9190 + t9195;
  t9198 = t7354*t9189;
  t9199 = -1.*t4271*t9194;
  t9201 = t9198 + t9199;
  t9197 = -1.*t4422*t9196;
  t9202 = t5780*t9201;
  t9203 = t9197 + t9202;
  t9206 = t5780*t9196;
  t9207 = t4422*t9201;
  t9209 = t9206 + t9207;
  t9204 = t4447*t9203;
  t9210 = t4792*t9209;
  t9211 = t9204 + t9210;
  t9214 = t4792*t9203;
  t9215 = -1.*t4447*t9209;
  t9216 = t9214 + t9215;
  t9254 = t1399*t718;
  t9255 = -1.*t1564*t1473*t1565;
  t9256 = t9254 + t9255;
  t9257 = t1333*t9256;
  t9259 = t8847 + t9257;
  t9263 = -1.*t1333*t8832;
  t9265 = t1939*t9256;
  t9266 = t9263 + t9265;
  t9268 = t4271*t9266;
  t9270 = t7354*t394*t9259;
  t9271 = t9268 + t9270;
  t9273 = t7354*t9266;
  t9274 = -1.*t394*t4271*t9259;
  t9275 = t9273 + t9274;
  t9272 = -1.*t4422*t9271;
  t9276 = t5780*t9275;
  t9277 = t9272 + t9276;
  t9281 = t5780*t9271;
  t9282 = t4422*t9275;
  t9283 = t9281 + t9282;
  t9279 = t4447*t9277;
  t9284 = t4792*t9283;
  t9285 = t9279 + t9284;
  t9287 = t4792*t9277;
  t9288 = -1.*t4447*t9283;
  t9289 = t9287 + t9288;
  t9226 = -1.*t1399*t3078;
  t9227 = -1.*t2963*t1565;
  t9228 = t9226 + t9227;
  t9229 = var2[4]*t9228;
  t9230 = t2965 + t3298;
  t9231 = var2[3]*t310*t9230;
  t9233 = t9229 + t9231;
  t9236 = -1.*t1399*t8236;
  t9237 = -1.*t8223*t1565;
  t9238 = t9236 + t9237;
  t9239 = var2[4]*t9238;
  t9240 = t8224 + t8244;
  t9241 = var2[3]*t310*t9240;
  t9242 = t9239 + t9241;
  t9244 = -1.*t1399*t8546;
  t9245 = -1.*t8497*t1565;
  t9246 = t9244 + t9245;
  t9247 = var2[4]*t9246;
  t9248 = t8514 + t8559;
  t9249 = var2[3]*t310*t9248;
  t9250 = t9247 + t9249;
  t9234 = 0.0239*t9233;
  t9243 = -0.000036*t9242;
  t9251 = 0.000063*t9250;
  t9252 = t9234 + t9243 + t9251;
  t9008 = t310*t394*t718;
  t9021 = -1.*t1283*t9020;
  t9022 = t9008 + t9021;
  t9310 = t1333*t2294;
  t9311 = t9076 + t9310;
  t9313 = -1.*t1333*t9014;
  t9315 = t9313 + t2381;
  t9316 = t4271*t9315;
  t9317 = t7354*t394*t9311;
  t9318 = t9316 + t9317;
  t9321 = t7354*t9315;
  t9322 = -1.*t394*t4271*t9311;
  t9323 = t9321 + t9322;
  t9319 = -1.*t4422*t9318;
  t9324 = t5780*t9323;
  t9325 = t9319 + t9324;
  t9327 = t5780*t9318;
  t9329 = t4422*t9323;
  t9331 = t9327 + t9329;
  t9326 = t4447*t9325;
  t9332 = t4792*t9331;
  t9333 = t9326 + t9332;
  t9337 = t4792*t9325;
  t9338 = -1.*t4447*t9331;
  t9339 = t9337 + t9338;
  t9298 = 0.000063*t9233;
  t9299 = -0.00288*t9242;
  t9300 = 0.00113*t9250;
  t9301 = t9298 + t9299 + t9300;
  t9108 = t4900*t9106;
  t9114 = -1.*t4435*t9113;
  t9117 = t9108 + t9114;
  t9303 = -0.000036*t9233;
  t9304 = 0.0231*t9242;
  t9305 = -0.00288*t9250;
  t9306 = t9303 + t9304 + t9305;
  t9119 = t4435*t9106;
  t9120 = t4900*t9113;
  t9122 = t9119 + t9120;
  t9125 = -1.*t394*t1473;
  t9133 = -1.*t1283*t9132;
  t9134 = t9125 + t9133;
  t9355 = -1.*t310*t1399*t1333;
  t9356 = -1.*t1939*t310*t1565;
  t9357 = t9355 + t9356;
  t9358 = t4271*t9357;
  t9359 = t7354*t394*t9149;
  t9360 = t9358 + t9359;
  t9362 = t7354*t9357;
  t9363 = -1.*t394*t4271*t9149;
  t9364 = t9362 + t9363;
  t9361 = -1.*t4422*t9360;
  t9365 = t5780*t9364;
  t9366 = t9361 + t9365;
  t9368 = t5780*t9360;
  t9369 = t4422*t9364;
  t9370 = t9368 + t9369;
  t9367 = t4447*t9366;
  t9371 = t4792*t9370;
  t9372 = t9367 + t9371;
  t9374 = t4792*t9366;
  t9375 = -1.*t4447*t9370;
  t9376 = t9374 + t9375;
  t9174 = t4900*t9172;
  t9178 = -1.*t4435*t9177;
  t9180 = t9174 + t9178;
  t9182 = t4435*t9172;
  t9183 = t4900*t9177;
  t9184 = t9182 + t9183;
  t9410 = t8164 + t8215;
  t9403 = -1.*t1939*t7673;
  t9404 = -1.*t1333*t8198;
  t9408 = t9403 + t9404;
  t9429 = t8461 + t8478;
  t9425 = -1.*t1939*t8395;
  t9426 = -1.*t1333*t8468;
  t9427 = t9425 + t9426;
  t9448 = -1.*t1939*t8838;
  t9449 = t9263 + t9448;
  t9451 = t4271*t9449;
  t9452 = t7354*t394*t8853;
  t9453 = t9451 + t9452;
  t9459 = t7354*t9449;
  t9460 = -1.*t394*t4271*t8853;
  t9461 = t9459 + t9460;
  t9455 = -1.*t4422*t9453;
  t9462 = t5780*t9461;
  t9463 = t9455 + t9462;
  t9465 = t5780*t9453;
  t9466 = t4422*t9461;
  t9467 = t9465 + t9466;
  t9464 = t4447*t9463;
  t9469 = t4792*t9467;
  t9471 = t9464 + t9469;
  t9473 = t4792*t9463;
  t9474 = -1.*t4447*t9467;
  t9476 = t9473 + t9474;
  t9391 = -1.*t2903*t1399*t1333;
  t9392 = -1.*t1939*t2903*t1565;
  t9393 = t9391 + t9392;
  t9394 = var2[4]*t9393;
  t9395 = t1939*t2903*t1399;
  t9397 = -1.*t2903*t1333*t1565;
  t9399 = t9395 + t9397;
  t9400 = var2[3]*t310*t9399;
  t9401 = t9394 + t9400;
  t9409 = t1399*t9408;
  t9412 = -1.*t9410*t1565;
  t9413 = t9409 + t9412;
  t9414 = var2[4]*t9413;
  t9416 = t1399*t9410;
  t9417 = t9408*t1565;
  t9418 = t9416 + t9417;
  t9419 = var2[3]*t310*t9418;
  t9420 = t9414 + t9419;
  t9428 = t1399*t9427;
  t9433 = -1.*t9429*t1565;
  t9434 = t9428 + t9433;
  t9435 = var2[4]*t9434;
  t9436 = t1399*t9429;
  t9437 = t9427*t1565;
  t9439 = t9436 + t9437;
  t9441 = var2[3]*t310*t9439;
  t9442 = t9435 + t9441;
  t9402 = 0.0239*t9401;
  t9421 = -0.000036*t9420;
  t9443 = 0.000063*t9442;
  t9444 = t9402 + t9421 + t9443;
  t9506 = -1.*t1939*t9018;
  t9507 = t9313 + t9506;
  t9509 = t4271*t9507;
  t9510 = t7354*t394*t9078;
  t9513 = t9509 + t9510;
  t9515 = t7354*t9507;
  t9516 = -1.*t394*t4271*t9078;
  t9518 = t9515 + t9516;
  t9514 = -1.*t4422*t9513;
  t9520 = t5780*t9518;
  t9521 = t9514 + t9520;
  t9526 = t5780*t9513;
  t9527 = t4422*t9518;
  t9528 = t9526 + t9527;
  t9522 = t4447*t9521;
  t9530 = t4792*t9528;
  t9531 = t9522 + t9530;
  t9533 = t4792*t9521;
  t9534 = -1.*t4447*t9528;
  t9535 = t9533 + t9534;
  t9486 = 0.000063*t9401;
  t9487 = -0.00288*t9420;
  t9488 = 0.00113*t9442;
  t9489 = t9486 + t9487 + t9488;
  t9491 = -0.000036*t9401;
  t9493 = 0.0231*t9420;
  t9496 = -0.00288*t9442;
  t9498 = t9491 + t9493 + t9496;
  t9354 = -1.*t1283*t9149*t8649;
  t9373 = t4900*t9372;
  t9377 = -1.*t4435*t9376;
  t9379 = t9373 + t9377;
  t9380 = t8674*t9379;
  t9381 = t4435*t9372;
  t9382 = t4900*t9376;
  t9383 = t9381 + t9382;
  t9384 = t8814*t9383;
  t9625 = -1.*t1564*t310*t394;
  t9629 = t1283*t8841;
  t9630 = t9625 + t9629;
  t9631 = -1.*t5780*t4271*t9630;
  t9632 = -1.*t7354*t4422*t9630;
  t9633 = t9631 + t9632;
  t9636 = t7354*t5780*t9630;
  t9637 = -1.*t4271*t4422*t9630;
  t9638 = t9636 + t9637;
  t9634 = t4447*t9633;
  t9639 = t4792*t9638;
  t9640 = t9634 + t9639;
  t9644 = t4792*t9633;
  t9645 = -1.*t4447*t9638;
  t9646 = t9644 + t9645;
  t9560 = var2[13]*t1283;
  t9561 = var2[5]*t1283;
  t9562 = t1939*t1399*t394;
  t9563 = -1.*t1333*t394*t1565;
  t9564 = t9562 + t9563;
  t9565 = var2[4]*t9564;
  t9567 = t1399*t1333*t394;
  t9568 = t1939*t394*t1565;
  t9569 = t9567 + t9568;
  t9570 = t310*t9569;
  t9573 = t9152 + t9570;
  t9575 = var2[3]*t9573;
  t9576 = t9560 + t9561 + t9565 + t9575;
  t9581 = -1.*var2[13]*t394*t8047;
  t9582 = -1.*var2[5]*t394*t8047;
  t9583 = t1939*t1283*t1399*t8047;
  t9585 = -1.*t1283*t1333*t8047*t1565;
  t9586 = t9583 + t9585;
  t9588 = var2[4]*t9586;
  t9593 = t394*t8047*t1473;
  t9594 = t1283*t1399*t1333*t8047;
  t9595 = t1939*t1283*t8047*t1565;
  t9597 = t9594 + t9595;
  t9598 = t310*t9597;
  t9599 = t9593 + t9598;
  t9600 = var2[3]*t9599;
  t9601 = t9581 + t9582 + t9588 + t9600;
  t9604 = -1.*var2[13]*t394*t8422;
  t9605 = -1.*var2[5]*t394*t8422;
  t9606 = t1939*t1283*t1399*t8422;
  t9607 = -1.*t1283*t1333*t8422*t1565;
  t9608 = t9606 + t9607;
  t9609 = var2[4]*t9608;
  t9611 = t394*t8422*t1473;
  t9612 = t1283*t1399*t1333*t8422;
  t9613 = t1939*t1283*t8422*t1565;
  t9614 = t9612 + t9613;
  t9615 = t310*t9614;
  t9616 = t9611 + t9615;
  t9619 = var2[3]*t9616;
  t9620 = t9604 + t9605 + t9609 + t9619;
  t9577 = 0.0239*t9576;
  t9602 = -0.000036*t9601;
  t9621 = 0.000063*t9620;
  t9622 = t9577 + t9602 + t9621;
  t798 = -1.*t310*t394*t718;
  t9674 = t1283*t9020;
  t9677 = t798 + t9674;
  t9679 = -1.*t5780*t4271*t9677;
  t9682 = -1.*t7354*t4422*t9677;
  t9683 = t9679 + t9682;
  t9686 = t7354*t5780*t9677;
  t9687 = -1.*t4271*t4422*t9677;
  t9688 = t9686 + t9687;
  t9684 = t4447*t9683;
  t9692 = t4792*t9688;
  t9693 = t9684 + t9692;
  t9696 = t4792*t9683;
  t9697 = -1.*t4447*t9688;
  t9698 = t9696 + t9697;
  t9658 = 0.000063*t9576;
  t9659 = -0.00288*t9601;
  t9660 = 0.00113*t9620;
  t9661 = t9658 + t9659 + t9660;
  t9663 = -0.000036*t9576;
  t9664 = 0.0231*t9601;
  t9665 = -0.00288*t9620;
  t9666 = t9663 + t9664 + t9665;
  t9713 = t394*t1473;
  t9714 = t1283*t9132;
  t9715 = t9713 + t9714;
  t9716 = -1.*t5780*t4271*t9715;
  t9717 = -1.*t7354*t4422*t9715;
  t9718 = t9716 + t9717;
  t9720 = t7354*t5780*t9715;
  t9721 = -1.*t4271*t4422*t9715;
  t9723 = t9720 + t9721;
  t9719 = t4447*t9718;
  t9726 = t4792*t9723;
  t9727 = t9719 + t9726;
  t9730 = t4792*t9718;
  t9731 = -1.*t4447*t9723;
  t9732 = t9730 + t9731;
  t9743 = -1.*t4271*t6608;
  t9744 = -1.*t7354*t7453;
  t9745 = t9743 + t9744;
  t9749 = t7689 + t7919;
  t9757 = t1333*t394*t9745;
  t9758 = t1939*t9749;
  t9760 = t9757 + t9758;
  t9751 = t1939*t394*t9745;
  t9752 = -1.*t1333*t9749;
  t9753 = t9751 + t9752;
  t9777 = -1.*t7354*t8363;
  t9778 = -1.*t4271*t8385;
  t9781 = t9777 + t9778;
  t9775 = t8408 + t8413;
  t9790 = t1939*t9775;
  t9791 = t1333*t394*t9781;
  t9793 = t9790 + t9791;
  t9786 = -1.*t1333*t9775;
  t9787 = t1939*t394*t9781;
  t9788 = t9786 + t9787;
  t9811 = -1.*t4271*t8853;
  t9812 = -1.*t7354*t8860;
  t9813 = t9811 + t9812;
  t9814 = t4422*t9813;
  t9815 = t9814 + t8878;
  t9817 = t5780*t9813;
  t9820 = -1.*t4422*t8877;
  t9821 = t9817 + t9820;
  t9816 = -1.*t4447*t9815;
  t9824 = t4792*t9821;
  t9825 = t9816 + t9824;
  t9830 = t4792*t9815;
  t9831 = t4447*t9821;
  t9832 = t9830 + t9831;
  t9747 = var2[13]*t1283*t9745;
  t9748 = var2[5]*t1283*t9745;
  t9750 = var2[14]*t9749;
  t9754 = t1399*t9753;
  t9762 = -1.*t9760*t1565;
  t9763 = t9754 + t9762;
  t9764 = var2[4]*t9763;
  t9765 = -1.*t1283*t9745*t1473;
  t9766 = t1399*t9760;
  t9767 = t9753*t1565;
  t9769 = t9766 + t9767;
  t9770 = t310*t9769;
  t9771 = t9765 + t9770;
  t9772 = var2[3]*t9771;
  t9773 = t9747 + t9748 + t9750 + t9764 + t9772;
  t9776 = var2[14]*t9775;
  t9782 = var2[13]*t1283*t9781;
  t9785 = var2[5]*t1283*t9781;
  t9789 = t1399*t9788;
  t9794 = -1.*t9793*t1565;
  t9797 = t9789 + t9794;
  t9798 = var2[4]*t9797;
  t9799 = -1.*t1283*t9781*t1473;
  t9800 = t1399*t9793;
  t9801 = t9788*t1565;
  t9802 = t9800 + t9801;
  t9803 = t310*t9802;
  t9805 = t9799 + t9803;
  t9806 = var2[3]*t9805;
  t9807 = t9776 + t9782 + t9785 + t9798 + t9806;
  t9774 = -0.000036*t9773;
  t9808 = 0.000063*t9807;
  t9809 = t9774 + t9808;
  t9854 = -1.*t4271*t9078;
  t9856 = -1.*t7354*t9086;
  t9858 = t9854 + t9856;
  t9861 = t4422*t9858;
  t9864 = t9861 + t9096;
  t9866 = t5780*t9858;
  t9869 = -1.*t4422*t9095;
  t9875 = t9866 + t9869;
  t9865 = -1.*t4447*t9864;
  t9876 = t4792*t9875;
  t9877 = t9865 + t9876;
  t9881 = t4792*t9864;
  t9882 = t4447*t9875;
  t9883 = t9881 + t9882;
  t9840 = -0.00288*t9773;
  t9842 = 0.00113*t9807;
  t9843 = t9840 + t9842;
  t9845 = 0.0231*t9773;
  t9846 = -0.00288*t9807;
  t9847 = t9845 + t9846;
  t9899 = -1.*t4271*t9149;
  t9900 = -1.*t7354*t9154;
  t9902 = t9899 + t9900;
  t9904 = t4422*t9902;
  t9905 = t9904 + t9163;
  t9907 = t5780*t9902;
  t9909 = -1.*t4422*t9162;
  t9910 = t9907 + t9909;
  t9906 = -1.*t4447*t9905;
  t9912 = t4792*t9910;
  t9913 = t9906 + t9912;
  t9917 = t4792*t9905;
  t9918 = t4447*t9910;
  t9920 = t9917 + t9918;
  t9933 = t5739 + t6441;
  t9934 = -1.*t4271*t9933;
  t9935 = -1.*t5780*t5307;
  t9936 = -1.*t4422*t6084;
  t9937 = t9935 + t9936;
  t9938 = t7354*t9937;
  t9939 = t9934 + t9938;
  t9942 = t7354*t9933;
  t9943 = t4271*t9937;
  t9944 = t9942 + t9943;
  t9950 = t1333*t394*t9939;
  t9951 = t1939*t9944;
  t9952 = t9950 + t9951;
  t9946 = t1939*t394*t9939;
  t9947 = -1.*t1333*t9944;
  t9948 = t9946 + t9947;
  t9965 = -1.*t5780*t8348;
  t9966 = t5739 + t9965;
  t9968 = t7387 + t8373;
  t9972 = t7354*t9966;
  t9973 = -1.*t4271*t9968;
  t9974 = t9972 + t9973;
  t9967 = t4271*t9966;
  t9969 = t7354*t9968;
  t9970 = t9967 + t9969;
  t9981 = t1939*t9970;
  t9982 = t1333*t394*t9974;
  t9983 = t9981 + t9982;
  t9977 = -1.*t1333*t9970;
  t9978 = t1939*t394*t9974;
  t9979 = t9977 + t9978;
  t10002 = -1.*t5780*t8866;
  t10003 = t10002 + t9820;
  t10001 = -1.*t4447*t8880;
  t10005 = t4792*t10003;
  t10008 = t10001 + t10005;
  t10010 = t4447*t10003;
  t10012 = t8888 + t10010;
  t9940 = var2[13]*t1283*t9939;
  t9941 = var2[5]*t1283*t9939;
  t9945 = var2[14]*t9944;
  t9949 = t1399*t9948;
  t9953 = -1.*t9952*t1565;
  t9954 = t9949 + t9953;
  t9955 = var2[4]*t9954;
  t9956 = -1.*t1283*t9939*t1473;
  t9957 = t1399*t9952;
  t9958 = t9948*t1565;
  t9959 = t9957 + t9958;
  t9960 = t310*t9959;
  t9961 = t9956 + t9960;
  t9962 = var2[3]*t9961;
  t9963 = t9940 + t9941 + t9945 + t9955 + t9962;
  t9971 = var2[14]*t9970;
  t9975 = var2[13]*t1283*t9974;
  t9976 = var2[5]*t1283*t9974;
  t9980 = t1399*t9979;
  t9984 = -1.*t9983*t1565;
  t9985 = t9980 + t9984;
  t9986 = var2[4]*t9985;
  t9987 = -1.*t1283*t9974*t1473;
  t9990 = t1399*t9983;
  t9991 = t9979*t1565;
  t9992 = t9990 + t9991;
  t9994 = t310*t9992;
  t9995 = t9987 + t9994;
  t9996 = var2[3]*t9995;
  t9997 = t9971 + t9975 + t9976 + t9986 + t9996;
  t9964 = -0.000036*t9963;
  t9998 = 0.000063*t9997;
  t9999 = t9964 + t9998;
  t10046 = -1.*t5780*t9090;
  t10048 = t10046 + t9869;
  t10045 = -1.*t4447*t9098;
  t10050 = t4792*t10048;
  t10053 = t10045 + t10050;
  t10056 = t4447*t10048;
  t10057 = t9109 + t10056;
  t10030 = -0.00288*t9963;
  t10031 = 0.00113*t9997;
  t10034 = t10030 + t10031;
  t10036 = 0.0231*t9963;
  t10037 = -0.00288*t9997;
  t10039 = t10036 + t10037;
  t10078 = -1.*t5780*t9158;
  t10080 = t10078 + t9909;
  t10077 = -1.*t4447*t9165;
  t10082 = t4792*t10080;
  t10083 = t10077 + t10082;
  t10087 = t4447*t10080;
  t10089 = t9175 + t10087;
  t10103 = -1.*t4435*t4447;
  t10104 = -1.*t4792*t4900;
  t10106 = t10103 + t10104;
  t10108 = t6051 + t6057;
  t10107 = t4422*t10106;
  t10109 = t5780*t10108;
  t10110 = t10107 + t10109;
  t10111 = -1.*t4271*t10110;
  t10112 = t5780*t10106;
  t10113 = -1.*t4422*t10108;
  t10116 = t10112 + t10113;
  t10117 = t7354*t10116;
  t10121 = t10111 + t10117;
  t10124 = t7354*t10110;
  t10125 = t4271*t10116;
  t10126 = t10124 + t10125;
  t10135 = t1333*t394*t10121;
  t10136 = t1939*t10126;
  t10137 = t10135 + t10136;
  t10128 = t1939*t394*t10121;
  t10130 = -1.*t1333*t10126;
  t10131 = t10128 + t10130;
  t10155 = t4455 + t4978;
  t10158 = -1.*t4422*t10155;
  t10159 = t10158 + t10109;
  t10161 = t5780*t10155;
  t10162 = t4422*t10108;
  t10163 = t10161 + t10162;
  t10167 = t7354*t10159;
  t10168 = -1.*t4271*t10163;
  t10170 = t10167 + t10168;
  t10160 = t4271*t10159;
  t10164 = t7354*t10163;
  t10165 = t10160 + t10164;
  t10184 = t1939*t10165;
  t10186 = t1333*t394*t10170;
  t10187 = t10184 + t10186;
  t10178 = -1.*t1333*t10165;
  t10179 = t1939*t394*t10170;
  t10182 = t10178 + t10179;
  t10122 = var2[13]*t1283*t10121;
  t10123 = var2[5]*t1283*t10121;
  t10127 = var2[14]*t10126;
  t10133 = t1399*t10131;
  t10138 = -1.*t10137*t1565;
  t10139 = t10133 + t10138;
  t10140 = var2[4]*t10139;
  t10141 = -1.*t1283*t10121*t1473;
  t10144 = t1399*t10137;
  t10146 = t10131*t1565;
  t10147 = t10144 + t10146;
  t10148 = t310*t10147;
  t10149 = t10141 + t10148;
  t10151 = var2[3]*t10149;
  t10153 = t10122 + t10123 + t10127 + t10140 + t10151;
  t10166 = var2[14]*t10165;
  t10171 = var2[13]*t1283*t10170;
  t10174 = var2[5]*t1283*t10170;
  t10183 = t1399*t10182;
  t10189 = -1.*t10187*t1565;
  t10191 = t10183 + t10189;
  t10192 = var2[4]*t10191;
  t10193 = -1.*t1283*t10170*t1473;
  t10194 = t1399*t10187;
  t10195 = t10182*t1565;
  t10196 = t10194 + t10195;
  t10197 = t310*t10196;
  t10199 = t10193 + t10197;
  t10200 = var2[3]*t10199;
  t10202 = t10166 + t10171 + t10174 + t10192 + t10200;
  t10212 = -1.*t4792*t8884;
  t10213 = t10001 + t10212;
  t10154 = -0.000036*t10153;
  t10203 = 0.000063*t10202;
  t10205 = t10154 + t10203;
  t10208 = -0.00288*t10153;
  t10209 = 0.00113*t10202;
  t10210 = t10208 + t10209;
  t10234 = -1.*t4792*t9102;
  t10235 = t10045 + t10234;
  t10223 = 0.0231*t10153;
  t10224 = -0.00288*t10202;
  t10225 = t10223 + t10224;
  t10253 = -1.*t4792*t9170;
  t10254 = t10077 + t10253;
  t10206 = t8844*t10205;
  t10211 = t10210*t8892;
  t10215 = t4435*t8890;
  t10226 = t10225*t8897;
  t10231 = t9022*t10205;
  t10233 = t10210*t9117;
  t10237 = t4435*t9113;
  t10246 = t10225*t9122;
  t10250 = t9134*t10205;
  t10252 = t10210*t9180;
  t10256 = t4435*t9177;
  t10262 = t10225*t9184;
  p_output1[0]=0;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=0;
  p_output1[4]=0;
  p_output1[5]=0;
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=(-1.*t1283*t2411 + t798)*t8649 + t8674*(t4900*t8772 - 1.*t4435*t8791) + (t4435*t8772 + t4900*t8791)*t8814;
  p_output1[10]=t8649*t8844 + t8674*t8892 + t8814*t8897;
  p_output1[11]=0;
  p_output1[12]=t8844*t8933 + t8649*(-1.*t1473*t1564*t394 - 1.*t1283*t8942) + t8674*(t4900*t8976 - 1.*t4435*t8982) + t8814*(t4435*t8976 + t4900*t8982) + t8892*t8998 + t8897*t9005;
  p_output1[13]=t8933*t9022 + t8649*(-1.*t1473*t394*t718 - 1.*t1283*t9029) + t8674*(t4900*t9058 - 1.*t4435*t9065) + t8814*(t4435*t9058 + t4900*t9065) + t8998*t9117 + t9005*t9122;
  p_output1[14]=t8933*t9134 + t8649*(-1.*t310*t394 - 1.*t1283*t9140) + t8998*t9180 + t9005*t9184 + t8674*(t4900*t9211 - 1.*t4435*t9216) + t8814*(t4435*t9211 + t4900*t9216);
  p_output1[15]=t8844*t9252 - 1.*t1283*t8649*t9259 + t8674*(t4900*t9285 - 1.*t4435*t9289) + t8814*(t4435*t9285 + t4900*t9289) + t8892*t9301 + t8897*t9306;
  p_output1[16]=t9022*t9252 + t9117*t9301 + t9122*t9306 - 1.*t1283*t8649*t9311 + t8674*(t4900*t9333 - 1.*t4435*t9339) + t8814*(t4435*t9333 + t4900*t9339);
  p_output1[17]=t9134*t9252 + t9180*t9301 + t9184*t9306 + t9354 + t9380 + t9384;
  p_output1[18]=0;
  p_output1[19]=0;
  p_output1[20]=0;
  p_output1[21]=0;
  p_output1[22]=0;
  p_output1[23]=0;
  p_output1[24]=0;
  p_output1[25]=0;
  p_output1[26]=0;
  p_output1[27]=0;
  p_output1[28]=0;
  p_output1[29]=0;
  p_output1[30]=0;
  p_output1[31]=0;
  p_output1[32]=0;
  p_output1[33]=0;
  p_output1[34]=0;
  p_output1[35]=0;
  p_output1[36]=0;
  p_output1[37]=0;
  p_output1[38]=0;
  p_output1[39]=-1.*t1283*t8649*t8853 + t8844*t9444 + t8674*(t4900*t9471 - 1.*t4435*t9476) + t8814*(t4435*t9471 + t4900*t9476) + t8892*t9489 + t8897*t9498;
  p_output1[40]=-1.*t1283*t8649*t9078 + t9022*t9444 + t9117*t9489 + t9122*t9498 + t8674*(t4900*t9531 - 1.*t4435*t9535) + t8814*(t4435*t9531 + t4900*t9535);
  p_output1[41]=t9354 + t9380 + t9384 + t9134*t9444 + t9180*t9489 + t9184*t9498;
  p_output1[42]=t8649*t8860 + t8844*t9622 + t8674*(t4900*t9640 - 1.*t4435*t9646) + t8814*(t4435*t9640 + t4900*t9646) + t8892*t9661 + t8897*t9666;
  p_output1[43]=t8649*t9086 + t9022*t9622 + t9117*t9661 + t9122*t9666 + t8674*(t4900*t9693 - 1.*t4435*t9698) + t8814*(t4435*t9693 + t4900*t9698);
  p_output1[44]=t8649*t9154 + t9134*t9622 + t9180*t9661 + t9184*t9666 + t8674*(t4900*t9727 - 1.*t4435*t9732) + t8814*(t4435*t9727 + t4900*t9732);
  p_output1[45]=t8844*t9809 + t8814*(t4900*t9825 + t4435*t9832) + t8674*(-1.*t4435*t9825 + t4900*t9832) + t8892*t9843 + t8897*t9847;
  p_output1[46]=t9022*t9809 + t9117*t9843 + t9122*t9847 + t8814*(t4900*t9877 + t4435*t9883) + t8674*(-1.*t4435*t9877 + t4900*t9883);
  p_output1[47]=t9134*t9809 + t9180*t9843 + t9184*t9847 + t8814*(t4900*t9913 + t4435*t9920) + t8674*(-1.*t4435*t9913 + t4900*t9920);
  p_output1[48]=(-1.*t10008*t4435 + t10012*t4900)*t8674 + (t10012*t4435 + t10008*t4900)*t8814 + t10034*t8892 + t10039*t8897 + t8844*t9999;
  p_output1[49]=(-1.*t10053*t4435 + t10057*t4900)*t8674 + (t10057*t4435 + t10053*t4900)*t8814 + t10034*t9117 + t10039*t9122 + t9022*t9999;
  p_output1[50]=(-1.*t10083*t4435 + t10089*t4900)*t8674 + (t10089*t4435 + t10083*t4900)*t8814 + t10034*t9180 + t10039*t9184 + t9134*t9999;
  p_output1[51]=t10206 + t10211 + t10226 + (t10215 + t10213*t4900)*t8814 + t8674*(-1.*t10213*t4435 + t8896);
  p_output1[52]=t10231 + t10233 + t10246 + (t10237 + t10235*t4900)*t8814 + t8674*(-1.*t10235*t4435 + t9120);
  p_output1[53]=t10250 + t10252 + t10262 + (t10256 + t10254*t4900)*t8814 + t8674*(-1.*t10254*t4435 + t9183);
  p_output1[54]=t10206 + t10211 + t10226 + t8814*(t10215 - 1.*t4900*t8886) + t8674*t8897;
  p_output1[55]=t10231 + t10233 + t10246 + t8814*(t10237 - 1.*t4900*t9106) + t8674*t9122;
  p_output1[56]=t10250 + t10252 + t10262 + t8814*(t10256 - 1.*t4900*t9172) + t8674*t9184;
  p_output1[57]=0;
  p_output1[58]=0;
  p_output1[59]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 20 && ncols == 1) && 
      !(mrows == 1 && ncols == 20))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 20 && ncols == 1) && 
      !(mrows == 1 && ncols == 20))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 3, (mwSize) 20, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "Jq_AMWorld_RightTarsus_mex.hh"

namespace SymExpression
{

void Jq_AMWorld_RightTarsus_mex_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
