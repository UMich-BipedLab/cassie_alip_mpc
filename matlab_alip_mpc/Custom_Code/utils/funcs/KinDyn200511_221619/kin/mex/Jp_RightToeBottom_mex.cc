/*
 * Automatically Generated from Mathematica.
 * Mon 11 May 2020 22:33:00 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t831;
  double t987;
  double t999;
  double t1036;
  double t1089;
  double t1275;
  double t1182;
  double t1193;
  double t1281;
  double t511;
  double t566;
  double t584;
  double t671;
  double t1272;
  double t1356;
  double t1406;
  double t1682;
  double t1696;
  double t1753;
  double t494;
  double t1870;
  double t1899;
  double t1970;
  double t2010;
  double t2013;
  double t2015;
  double t2102;
  double t2218;
  double t2258;
  double t2273;
  double t2427;
  double t2444;
  double t2508;
  double t2568;
  double t2579;
  double t2591;
  double t2618;
  double t2689;
  double t2693;
  double t2725;
  double t2980;
  double t2994;
  double t3018;
  double t3039;
  double t3052;
  double t3063;
  double t3077;
  double t3144;
  double t3153;
  double t3194;
  double t3260;
  double t3276;
  double t3309;
  double t3325;
  double t3379;
  double t3405;
  double t3433;
  double t3464;
  double t3479;
  double t3507;
  double t3589;
  double t3605;
  double t3634;
  double t3686;
  double t3734;
  double t3735;
  double t3787;
  double t3903;
  double t3918;
  double t3926;
  double t4010;
  double t4011;
  double t4042;
  double t659;
  double t694;
  double t738;
  double t1043;
  double t1095;
  double t1166;
  double t1501;
  double t1601;
  double t1674;
  double t1795;
  double t1806;
  double t1830;
  double t4273;
  double t4292;
  double t4302;
  double t4312;
  double t4322;
  double t4325;
  double t2072;
  double t2143;
  double t2146;
  double t4413;
  double t4443;
  double t4451;
  double t2377;
  double t2380;
  double t2393;
  double t2602;
  double t2638;
  double t2679;
  double t4490;
  double t4492;
  double t4499;
  double t4596;
  double t4601;
  double t4617;
  double t2799;
  double t2807;
  double t2948;
  double t3068;
  double t3109;
  double t3111;
  double t4640;
  double t4643;
  double t4667;
  double t4679;
  double t4683;
  double t4685;
  double t3228;
  double t3251;
  double t3256;
  double t3432;
  double t3442;
  double t3453;
  double t4720;
  double t4729;
  double t4739;
  double t4759;
  double t4760;
  double t4778;
  double t3526;
  double t3547;
  double t3559;
  double t3737;
  double t3799;
  double t3817;
  double t4795;
  double t4800;
  double t4806;
  double t4848;
  double t4851;
  double t4905;
  double t3975;
  double t3989;
  double t3998;
  double t4938;
  double t4941;
  double t4973;
  double t5009;
  double t5012;
  double t5015;
  double t5248;
  double t5253;
  double t5255;
  double t5259;
  double t5264;
  double t5273;
  double t5370;
  double t5380;
  double t5382;
  double t5385;
  double t5391;
  double t5413;
  double t5433;
  double t5442;
  double t5449;
  double t5473;
  double t5498;
  double t5515;
  double t5546;
  double t5548;
  double t5549;
  double t5587;
  double t5634;
  double t5648;
  double t5664;
  double t5668;
  double t5676;
  double t5692;
  double t5706;
  double t5721;
  double t5726;
  double t5734;
  double t5741;
  double t5887;
  double t5889;
  double t5900;
  double t5919;
  double t5920;
  double t5927;
  double t6022;
  double t6030;
  double t6040;
  double t6053;
  double t6064;
  double t6067;
  double t6103;
  double t6106;
  double t6109;
  double t6153;
  double t6159;
  double t6174;
  double t6252;
  double t6264;
  double t6266;
  double t6312;
  double t6332;
  double t6343;
  double t6367;
  double t6394;
  double t6395;
  double t6401;
  double t6411;
  double t6422;
  double t6446;
  double t6448;
  double t6458;
  double t6626;
  double t6633;
  double t6652;
  double t6667;
  double t6685;
  double t6692;
  double t6765;
  double t6771;
  double t6803;
  double t6811;
  double t6829;
  double t6836;
  double t6844;
  double t6846;
  double t6848;
  double t6852;
  double t6853;
  double t6856;
  double t6870;
  double t6871;
  double t6887;
  double t6895;
  double t6908;
  double t6911;
  double t6921;
  double t6923;
  double t6924;
  double t6945;
  double t6946;
  double t6976;
  double t6989;
  double t6995;
  double t7019;
  double t7081;
  double t7083;
  double t7087;
  double t7134;
  double t7138;
  double t7101;
  double t7106;
  double t7126;
  double t7207;
  double t7210;
  double t7214;
  double t7222;
  double t7226;
  double t7227;
  double t7235;
  double t7243;
  double t7249;
  double t7254;
  double t7255;
  double t7259;
  double t7287;
  double t7294;
  double t7309;
  double t7321;
  double t7326;
  double t7327;
  double t7339;
  double t7341;
  double t7345;
  double t7371;
  double t7391;
  double t7400;
  double t7460;
  double t7473;
  double t7474;
  double t7498;
  double t7499;
  double t7501;
  double t7486;
  double t7492;
  double t7520;
  double t7532;
  double t7544;
  double t7551;
  double t7552;
  double t7558;
  double t7561;
  double t7565;
  double t7584;
  double t7599;
  double t7605;
  double t7610;
  double t7638;
  double t7657;
  double t7662;
  double t7665;
  double t7670;
  double t7671;
  double t7675;
  double t7679;
  double t7686;
  double t7693;
  double t7694;
  double t7710;
  double t7778;
  double t7782;
  double t7793;
  double t7766;
  double t7769;
  double t7772;
  double t7824;
  double t7830;
  double t7838;
  double t7863;
  double t7884;
  double t7889;
  double t7894;
  double t7898;
  double t7900;
  double t7909;
  double t7910;
  double t7913;
  double t7920;
  double t7925;
  double t7927;
  double t7930;
  double t7931;
  double t7933;
  double t7935;
  double t7947;
  double t7948;
  double t7952;
  double t7955;
  double t7956;
  double t8030;
  double t8035;
  double t8056;
  double t8057;
  double t8058;
  double t8061;
  double t8065;
  double t8066;
  double t8068;
  double t8069;
  double t8070;
  double t8074;
  double t8087;
  double t8088;
  double t8094;
  double t8095;
  double t8096;
  double t8103;
  double t8109;
  double t8112;
  double t8116;
  double t8118;
  double t8119;
  double t8123;
  double t8124;
  double t8125;
  double t7994;
  double t7997;
  double t8018;
  double t8021;
  double t8026;
  double t8169;
  double t8172;
  double t8173;
  double t8179;
  double t8188;
  double t8175;
  double t8176;
  double t8192;
  double t8194;
  double t8196;
  double t8198;
  double t8200;
  double t8205;
  double t8210;
  double t8213;
  double t8218;
  double t8226;
  double t8249;
  double t8250;
  double t8253;
  double t8258;
  double t8260;
  double t8263;
  double t8264;
  double t8267;
  double t8276;
  double t8277;
  double t8278;
  double t8282;
  double t8286;
  double t8287;
  double t7777;
  double t7805;
  double t7808;
  double t7810;
  double t7859;
  double t7893;
  double t7902;
  double t7914;
  double t7929;
  double t7934;
  double t7949;
  double t7958;
  double t7959;
  double t7963;
  double t7967;
  double t7971;
  double t7972;
  double t7980;
  double t7990;
  double t7991;
  double t4501;
  double t4507;
  double t4511;
  double t8353;
  double t8354;
  double t8355;
  double t8357;
  double t8361;
  double t8362;
  double t8368;
  double t8372;
  double t8374;
  double t8378;
  double t8379;
  double t8381;
  double t8384;
  double t8387;
  double t8388;
  double t8391;
  double t8392;
  double t8393;
  double t8332;
  double t8337;
  double t8338;
  double t8342;
  double t8343;
  double t8407;
  double t8408;
  double t8411;
  double t8417;
  double t8418;
  double t8419;
  double t8427;
  double t8428;
  double t8429;
  double t8433;
  double t8434;
  double t8435;
  double t8438;
  double t8439;
  double t8441;
  double t8443;
  double t8444;
  double t8445;
  double t8447;
  double t8448;
  double t8449;
  double t8451;
  double t8452;
  double t8453;
  double t8469;
  double t8472;
  double t8473;
  double t8477;
  double t8478;
  double t8479;
  double t8513;
  double t8516;
  double t8519;
  double t8523;
  double t8524;
  double t8525;
  double t8527;
  double t8528;
  double t8529;
  double t8531;
  double t8532;
  double t8533;
  double t8536;
  double t8537;
  double t8538;
  double t8540;
  double t8541;
  double t8542;
  double t8570;
  double t8571;
  double t8572;
  double t8575;
  double t8576;
  double t8578;
  double t8579;
  double t8581;
  double t8583;
  double t8584;
  double t8586;
  double t8589;
  double t8590;
  double t8591;
  double t8594;
  double t8595;
  double t8596;
  double t8601;
  double t8602;
  double t8603;
  double t8561;
  double t8563;
  double t8565;
  double t8566;
  double t8567;
  double t8618;
  double t8619;
  double t8620;
  double t8625;
  double t8626;
  double t8627;
  double t8631;
  double t8632;
  double t8633;
  double t8635;
  double t8637;
  double t8641;
  double t8643;
  double t8644;
  double t8645;
  double t8648;
  double t8649;
  double t8650;
  double t8653;
  double t8654;
  double t8656;
  double t8659;
  double t8662;
  double t8663;
  double t8665;
  double t8666;
  double t8667;
  double t8680;
  double t8681;
  double t8682;
  double t8684;
  double t8685;
  double t8686;
  double t8689;
  double t8690;
  double t8691;
  double t8694;
  double t8696;
  double t8697;
  double t8699;
  double t8700;
  double t8701;
  double t8705;
  double t8706;
  double t8707;
  double t8712;
  double t8714;
  double t8715;
  double t8717;
  double t8718;
  double t8719;
  double t8721;
  double t8722;
  double t8723;
  double t8748;
  double t8749;
  double t8752;
  double t8753;
  double t8755;
  double t8760;
  double t8763;
  double t8766;
  double t8768;
  double t8769;
  double t8773;
  double t8774;
  double t8775;
  double t8738;
  double t8740;
  double t8741;
  double t8744;
  double t8745;
  double t8789;
  double t8790;
  double t8791;
  double t8794;
  double t8795;
  double t8797;
  double t8798;
  double t8800;
  double t8801;
  double t8802;
  double t8804;
  double t8805;
  double t8806;
  double t8808;
  double t8809;
  double t8810;
  double t8812;
  double t8813;
  double t8814;
  double t8828;
  double t8829;
  double t8830;
  double t8834;
  double t8835;
  double t8838;
  double t8839;
  double t8841;
  double t8843;
  double t8844;
  double t8846;
  double t8847;
  double t8848;
  double t8852;
  double t8853;
  double t8854;
  double t8857;
  double t8858;
  double t8859;
  double t8882;
  double t8883;
  double t8887;
  double t8889;
  double t8891;
  double t8893;
  double t8895;
  double t8873;
  double t8874;
  double t8877;
  double t8878;
  double t8879;
  double t8907;
  double t8908;
  double t8909;
  double t8911;
  double t8912;
  double t8914;
  double t8915;
  double t8917;
  double t8918;
  double t8919;
  double t8921;
  double t8922;
  double t8923;
  double t8939;
  double t8941;
  double t8942;
  double t8946;
  double t8947;
  double t8949;
  double t8952;
  double t8954;
  double t8955;
  double t8956;
  double t8958;
  double t8959;
  double t8960;
  double t8983;
  double t8984;
  double t5082;
  double t8972;
  double t8973;
  double t8974;
  double t8977;
  double t8979;
  double t8997;
  double t9001;
  double t9003;
  double t9008;
  double t9009;
  double t9011;
  double t9012;
  double t9024;
  double t9025;
  double t9026;
  double t9029;
  double t9030;
  double t9032;
  double t9033;
  double t8987;
  double t5128;
  double t5142;
  double t9044;
  double t9045;
  double t9047;
  double t9048;
  double t9050;
  double t9014;
  double t9059;
  double t9060;
  double t9061;
  double t9019;
  double t9035;
  double t9071;
  double t9072;
  double t9073;
  double t9039;
  t831 = Sin(var1[3]);
  t987 = Cos(var1[13]);
  t999 = -1.*t987;
  t1036 = 1. + t999;
  t1089 = Sin(var1[13]);
  t1275 = Cos(var1[3]);
  t1182 = Cos(var1[5]);
  t1193 = Sin(var1[4]);
  t1281 = Sin(var1[5]);
  t511 = Cos(var1[14]);
  t566 = -1.*t511;
  t584 = 1. + t566;
  t671 = Sin(var1[14]);
  t1272 = -1.*t1182*t831*t1193;
  t1356 = t1275*t1281;
  t1406 = t1272 + t1356;
  t1682 = -1.*t1275*t1182;
  t1696 = -1.*t831*t1193*t1281;
  t1753 = t1682 + t1696;
  t494 = Cos(var1[4]);
  t1870 = t1089*t1406;
  t1899 = t987*t1753;
  t1970 = t1870 + t1899;
  t2010 = Cos(var1[15]);
  t2013 = -1.*t2010;
  t2015 = 1. + t2013;
  t2102 = Sin(var1[15]);
  t2218 = t987*t1406;
  t2258 = -1.*t1089*t1753;
  t2273 = t2218 + t2258;
  t2427 = -1.*t511*t494*t831;
  t2444 = t671*t1970;
  t2508 = t2427 + t2444;
  t2568 = Cos(var1[16]);
  t2579 = -1.*t2568;
  t2591 = 1. + t2579;
  t2618 = Sin(var1[16]);
  t2689 = t2102*t2273;
  t2693 = t2010*t2508;
  t2725 = t2689 + t2693;
  t2980 = t2010*t2273;
  t2994 = -1.*t2102*t2508;
  t3018 = t2980 + t2994;
  t3039 = Cos(var1[17]);
  t3052 = -1.*t3039;
  t3063 = 1. + t3052;
  t3077 = Sin(var1[17]);
  t3144 = -1.*t2618*t2725;
  t3153 = t2568*t3018;
  t3194 = t3144 + t3153;
  t3260 = t2568*t2725;
  t3276 = t2618*t3018;
  t3309 = t3260 + t3276;
  t3325 = Cos(var1[18]);
  t3379 = -1.*t3325;
  t3405 = 1. + t3379;
  t3433 = Sin(var1[18]);
  t3464 = t3077*t3194;
  t3479 = t3039*t3309;
  t3507 = t3464 + t3479;
  t3589 = t3039*t3194;
  t3605 = -1.*t3077*t3309;
  t3634 = t3589 + t3605;
  t3686 = Cos(var1[19]);
  t3734 = -1.*t3686;
  t3735 = 1. + t3734;
  t3787 = Sin(var1[19]);
  t3903 = -1.*t3433*t3507;
  t3918 = t3325*t3634;
  t3926 = t3903 + t3918;
  t4010 = t3325*t3507;
  t4011 = t3433*t3634;
  t4042 = t4010 + t4011;
  t659 = -0.08055*t584;
  t694 = -0.135*t671;
  t738 = 0. + t659 + t694;
  t1043 = 0.07996*t1036;
  t1095 = 0.135*t1089;
  t1166 = 0. + t1043 + t1095;
  t1501 = -0.135*t1036;
  t1601 = 0.07996*t1089;
  t1674 = 0. + t1501 + t1601;
  t1795 = -0.135*t584;
  t1806 = 0.08055*t671;
  t1830 = 0. + t1795 + t1806;
  t4273 = t1275*t1182*t1193;
  t4292 = t831*t1281;
  t4302 = t4273 + t4292;
  t4312 = -1.*t1182*t831;
  t4322 = t1275*t1193*t1281;
  t4325 = t4312 + t4322;
  t2072 = -0.01004*t2015;
  t2143 = 0.08055*t2102;
  t2146 = 0. + t2072 + t2143;
  t4413 = t1089*t4302;
  t4443 = t987*t4325;
  t4451 = t4413 + t4443;
  t2377 = -0.08055*t2015;
  t2380 = -0.01004*t2102;
  t2393 = 0. + t2377 + t2380;
  t2602 = -0.08055*t2591;
  t2638 = -0.13004*t2618;
  t2679 = 0. + t2602 + t2638;
  t4490 = t987*t4302;
  t4492 = -1.*t1089*t4325;
  t4499 = t4490 + t4492;
  t4596 = t511*t1275*t494;
  t4601 = t671*t4451;
  t4617 = t4596 + t4601;
  t2799 = -0.13004*t2591;
  t2807 = 0.08055*t2618;
  t2948 = 0. + t2799 + t2807;
  t3068 = -0.19074*t3063;
  t3109 = 0.03315*t3077;
  t3111 = 0. + t3068 + t3109;
  t4640 = t2102*t4499;
  t4643 = t2010*t4617;
  t4667 = t4640 + t4643;
  t4679 = t2010*t4499;
  t4683 = -1.*t2102*t4617;
  t4685 = t4679 + t4683;
  t3228 = -0.03315*t3063;
  t3251 = -0.19074*t3077;
  t3256 = 0. + t3228 + t3251;
  t3432 = -0.01315*t3405;
  t3442 = -0.62554*t3433;
  t3453 = 0. + t3432 + t3442;
  t4720 = -1.*t2618*t4667;
  t4729 = t2568*t4685;
  t4739 = t4720 + t4729;
  t4759 = t2568*t4667;
  t4760 = t2618*t4685;
  t4778 = t4759 + t4760;
  t3526 = -0.62554*t3405;
  t3547 = 0.01315*t3433;
  t3559 = 0. + t3526 + t3547;
  t3737 = -1.03354*t3735;
  t3799 = 0.05315*t3787;
  t3817 = 0. + t3737 + t3799;
  t4795 = t3077*t4739;
  t4800 = t3039*t4778;
  t4806 = t4795 + t4800;
  t4848 = t3039*t4739;
  t4851 = -1.*t3077*t4778;
  t4905 = t4848 + t4851;
  t3975 = -0.05315*t3735;
  t3989 = -1.03354*t3787;
  t3998 = 0. + t3975 + t3989;
  t4938 = -1.*t3433*t4806;
  t4941 = t3325*t4905;
  t4973 = t4938 + t4941;
  t5009 = t3325*t4806;
  t5012 = t3433*t4905;
  t5015 = t5009 + t5012;
  t5248 = t1275*t494*t1182*t1089;
  t5253 = t987*t1275*t494*t1281;
  t5255 = t5248 + t5253;
  t5259 = t987*t1275*t494*t1182;
  t5264 = -1.*t1275*t494*t1089*t1281;
  t5273 = t5259 + t5264;
  t5370 = -1.*t511*t1275*t1193;
  t5380 = t671*t5255;
  t5382 = t5370 + t5380;
  t5385 = t2102*t5273;
  t5391 = t2010*t5382;
  t5413 = t5385 + t5391;
  t5433 = t2010*t5273;
  t5442 = -1.*t2102*t5382;
  t5449 = t5433 + t5442;
  t5473 = -1.*t2618*t5413;
  t5498 = t2568*t5449;
  t5515 = t5473 + t5498;
  t5546 = t2568*t5413;
  t5548 = t2618*t5449;
  t5549 = t5546 + t5548;
  t5587 = t3077*t5515;
  t5634 = t3039*t5549;
  t5648 = t5587 + t5634;
  t5664 = t3039*t5515;
  t5668 = -1.*t3077*t5549;
  t5676 = t5664 + t5668;
  t5692 = -1.*t3433*t5648;
  t5706 = t3325*t5676;
  t5721 = t5692 + t5706;
  t5726 = t3325*t5648;
  t5734 = t3433*t5676;
  t5741 = t5726 + t5734;
  t5887 = t494*t1182*t1089*t831;
  t5889 = t987*t494*t831*t1281;
  t5900 = t5887 + t5889;
  t5919 = t987*t494*t1182*t831;
  t5920 = -1.*t494*t1089*t831*t1281;
  t5927 = t5919 + t5920;
  t6022 = -1.*t511*t831*t1193;
  t6030 = t671*t5900;
  t6040 = t6022 + t6030;
  t6053 = t2102*t5927;
  t6064 = t2010*t6040;
  t6067 = t6053 + t6064;
  t6103 = t2010*t5927;
  t6106 = -1.*t2102*t6040;
  t6109 = t6103 + t6106;
  t6153 = -1.*t2618*t6067;
  t6159 = t2568*t6109;
  t6174 = t6153 + t6159;
  t6252 = t2568*t6067;
  t6264 = t2618*t6109;
  t6266 = t6252 + t6264;
  t6312 = t3077*t6174;
  t6332 = t3039*t6266;
  t6343 = t6312 + t6332;
  t6367 = t3039*t6174;
  t6394 = -1.*t3077*t6266;
  t6395 = t6367 + t6394;
  t6401 = -1.*t3433*t6343;
  t6411 = t3325*t6395;
  t6422 = t6401 + t6411;
  t6446 = t3325*t6343;
  t6448 = t3433*t6395;
  t6458 = t6446 + t6448;
  t6626 = -1.*t1182*t1089*t1193;
  t6633 = -1.*t987*t1193*t1281;
  t6652 = t6626 + t6633;
  t6667 = -1.*t987*t1182*t1193;
  t6685 = t1089*t1193*t1281;
  t6692 = t6667 + t6685;
  t6765 = -1.*t511*t494;
  t6771 = t671*t6652;
  t6803 = t6765 + t6771;
  t6811 = t2102*t6692;
  t6829 = t2010*t6803;
  t6836 = t6811 + t6829;
  t6844 = t2010*t6692;
  t6846 = -1.*t2102*t6803;
  t6848 = t6844 + t6846;
  t6852 = -1.*t2618*t6836;
  t6853 = t2568*t6848;
  t6856 = t6852 + t6853;
  t6870 = t2568*t6836;
  t6871 = t2618*t6848;
  t6887 = t6870 + t6871;
  t6895 = t3077*t6856;
  t6908 = t3039*t6887;
  t6911 = t6895 + t6908;
  t6921 = t3039*t6856;
  t6923 = -1.*t3077*t6887;
  t6924 = t6921 + t6923;
  t6945 = -1.*t3433*t6911;
  t6946 = t3325*t6924;
  t6976 = t6945 + t6946;
  t6989 = t3325*t6911;
  t6995 = t3433*t6924;
  t7019 = t6989 + t6995;
  t7081 = t1182*t831;
  t7083 = -1.*t1275*t1193*t1281;
  t7087 = t7081 + t7083;
  t7134 = t1089*t7087;
  t7138 = t4490 + t7134;
  t7101 = -1.*t1089*t4302;
  t7106 = t987*t7087;
  t7126 = t7101 + t7106;
  t7207 = t2102*t7126;
  t7210 = t2010*t671*t7138;
  t7214 = t7207 + t7210;
  t7222 = t2010*t7126;
  t7226 = -1.*t671*t2102*t7138;
  t7227 = t7222 + t7226;
  t7235 = -1.*t2618*t7214;
  t7243 = t2568*t7227;
  t7249 = t7235 + t7243;
  t7254 = t2568*t7214;
  t7255 = t2618*t7227;
  t7259 = t7254 + t7255;
  t7287 = t3077*t7249;
  t7294 = t3039*t7259;
  t7309 = t7287 + t7294;
  t7321 = t3039*t7249;
  t7326 = -1.*t3077*t7259;
  t7327 = t7321 + t7326;
  t7339 = -1.*t3433*t7309;
  t7341 = t3325*t7327;
  t7345 = t7339 + t7341;
  t7371 = t3325*t7309;
  t7391 = t3433*t7327;
  t7400 = t7371 + t7391;
  t7460 = t1182*t831*t1193;
  t7473 = -1.*t1275*t1281;
  t7474 = t7460 + t7473;
  t7498 = t987*t7474;
  t7499 = t1089*t1753;
  t7501 = t7498 + t7499;
  t7486 = -1.*t1089*t7474;
  t7492 = t7486 + t1899;
  t7520 = t2102*t7492;
  t7532 = t2010*t671*t7501;
  t7544 = t7520 + t7532;
  t7551 = t2010*t7492;
  t7552 = -1.*t671*t2102*t7501;
  t7558 = t7551 + t7552;
  t7561 = -1.*t2618*t7544;
  t7565 = t2568*t7558;
  t7584 = t7561 + t7565;
  t7599 = t2568*t7544;
  t7605 = t2618*t7558;
  t7610 = t7599 + t7605;
  t7638 = t3077*t7584;
  t7657 = t3039*t7610;
  t7662 = t7638 + t7657;
  t7665 = t3039*t7584;
  t7670 = -1.*t3077*t7610;
  t7671 = t7665 + t7670;
  t7675 = -1.*t3433*t7662;
  t7679 = t3325*t7671;
  t7686 = t7675 + t7679;
  t7693 = t3325*t7662;
  t7694 = t3433*t7671;
  t7710 = t7693 + t7694;
  t7778 = t987*t494*t1182;
  t7782 = -1.*t494*t1089*t1281;
  t7793 = t7778 + t7782;
  t7766 = -1.*t494*t1182*t1089;
  t7769 = -1.*t987*t494*t1281;
  t7772 = t7766 + t7769;
  t7824 = t2102*t7772;
  t7830 = t2010*t671*t7793;
  t7838 = t7824 + t7830;
  t7863 = t2010*t7772;
  t7884 = -1.*t671*t2102*t7793;
  t7889 = t7863 + t7884;
  t7894 = -1.*t2618*t7838;
  t7898 = t2568*t7889;
  t7900 = t7894 + t7898;
  t7909 = t2568*t7838;
  t7910 = t2618*t7889;
  t7913 = t7909 + t7910;
  t7920 = t3077*t7900;
  t7925 = t3039*t7913;
  t7927 = t7920 + t7925;
  t7930 = t3039*t7900;
  t7931 = -1.*t3077*t7913;
  t7933 = t7930 + t7931;
  t7935 = -1.*t3433*t7927;
  t7947 = t3325*t7933;
  t7948 = t7935 + t7947;
  t7952 = t3325*t7927;
  t7955 = t3433*t7933;
  t7956 = t7952 + t7955;
  t8030 = -1.*t987*t4325;
  t8035 = t7101 + t8030;
  t8056 = t2102*t8035;
  t8057 = t2010*t671*t4499;
  t8058 = t8056 + t8057;
  t8061 = t2010*t8035;
  t8065 = -1.*t671*t2102*t4499;
  t8066 = t8061 + t8065;
  t8068 = -1.*t2618*t8058;
  t8069 = t2568*t8066;
  t8070 = t8068 + t8069;
  t8074 = t2568*t8058;
  t8087 = t2618*t8066;
  t8088 = t8074 + t8087;
  t8094 = t3077*t8070;
  t8095 = t3039*t8088;
  t8096 = t8094 + t8095;
  t8103 = t3039*t8070;
  t8109 = -1.*t3077*t8088;
  t8112 = t8103 + t8109;
  t8116 = -1.*t3433*t8096;
  t8118 = t3325*t8112;
  t8119 = t8116 + t8118;
  t8123 = t3325*t8096;
  t8124 = t3433*t8112;
  t8125 = t8123 + t8124;
  t7994 = 0.135*t987;
  t7997 = t7994 + t1601;
  t8018 = 0.07996*t987;
  t8021 = -0.135*t1089;
  t8026 = t8018 + t8021;
  t8169 = t1275*t1182;
  t8172 = t831*t1193*t1281;
  t8173 = t8169 + t8172;
  t8179 = -1.*t1089*t8173;
  t8188 = t7498 + t8179;
  t8175 = -1.*t987*t8173;
  t8176 = t7486 + t8175;
  t8192 = t2102*t8176;
  t8194 = t2010*t671*t8188;
  t8196 = t8192 + t8194;
  t8198 = t2010*t8176;
  t8200 = -1.*t671*t2102*t8188;
  t8205 = t8198 + t8200;
  t8210 = -1.*t2618*t8196;
  t8213 = t2568*t8205;
  t8218 = t8210 + t8213;
  t8226 = t2568*t8196;
  t8249 = t2618*t8205;
  t8250 = t8226 + t8249;
  t8253 = t3077*t8218;
  t8258 = t3039*t8250;
  t8260 = t8253 + t8258;
  t8263 = t3039*t8218;
  t8264 = -1.*t3077*t8250;
  t8267 = t8263 + t8264;
  t8276 = -1.*t3433*t8260;
  t8277 = t3325*t8267;
  t8278 = t8276 + t8277;
  t8282 = t3325*t8260;
  t8286 = t3433*t8267;
  t8287 = t8282 + t8286;
  t7777 = t2146*t7772;
  t7805 = -0.1305*t511*t7793;
  t7808 = t1830*t7793;
  t7810 = t671*t2393*t7793;
  t7859 = t2679*t7838;
  t7893 = t2948*t7889;
  t7902 = t3111*t7900;
  t7914 = t3256*t7913;
  t7929 = t3453*t7927;
  t7934 = t3559*t7933;
  t7949 = t3817*t7948;
  t7958 = t3998*t7956;
  t7959 = t3787*t7948;
  t7963 = t3686*t7956;
  t7967 = t7959 + t7963;
  t7971 = -0.00095*t7967;
  t7972 = t3686*t7948;
  t7980 = -1.*t3787*t7956;
  t7990 = t7972 + t7980;
  t7991 = -1.05124*t7990;
  t4501 = -1.*t1275*t494*t671;
  t4507 = t511*t4451;
  t4511 = t4501 + t4507;
  t8353 = -1.*t2568*t2102*t4511;
  t8354 = -1.*t2010*t2618*t4511;
  t8355 = t8353 + t8354;
  t8357 = t2010*t2568*t4511;
  t8361 = -1.*t2102*t2618*t4511;
  t8362 = t8357 + t8361;
  t8368 = t3077*t8355;
  t8372 = t3039*t8362;
  t8374 = t8368 + t8372;
  t8378 = t3039*t8355;
  t8379 = -1.*t3077*t8362;
  t8381 = t8378 + t8379;
  t8384 = -1.*t3433*t8374;
  t8387 = t3325*t8381;
  t8388 = t8384 + t8387;
  t8391 = t3325*t8374;
  t8392 = t3433*t8381;
  t8393 = t8391 + t8392;
  t8332 = -0.135*t511;
  t8337 = -0.08055*t671;
  t8338 = t8332 + t8337;
  t8342 = 0.08055*t511;
  t8343 = t8342 + t694;
  t8407 = t1089*t7474;
  t8408 = t987*t8173;
  t8411 = t8407 + t8408;
  t8417 = -1.*t494*t671*t831;
  t8418 = t511*t8411;
  t8419 = t8417 + t8418;
  t8427 = -1.*t2568*t2102*t8419;
  t8428 = -1.*t2010*t2618*t8419;
  t8429 = t8427 + t8428;
  t8433 = t2010*t2568*t8419;
  t8434 = -1.*t2102*t2618*t8419;
  t8435 = t8433 + t8434;
  t8438 = t3077*t8429;
  t8439 = t3039*t8435;
  t8441 = t8438 + t8439;
  t8443 = t3039*t8429;
  t8444 = -1.*t3077*t8435;
  t8445 = t8443 + t8444;
  t8447 = -1.*t3433*t8441;
  t8448 = t3325*t8445;
  t8449 = t8447 + t8448;
  t8451 = t3325*t8441;
  t8452 = t3433*t8445;
  t8453 = t8451 + t8452;
  t8469 = t494*t1182*t1089;
  t8472 = t987*t494*t1281;
  t8473 = t8469 + t8472;
  t8477 = t671*t1193;
  t8478 = t511*t8473;
  t8479 = t8477 + t8478;
  t8513 = -1.*t2568*t2102*t8479;
  t8516 = -1.*t2010*t2618*t8479;
  t8519 = t8513 + t8516;
  t8523 = t2010*t2568*t8479;
  t8524 = -1.*t2102*t2618*t8479;
  t8525 = t8523 + t8524;
  t8527 = t3077*t8519;
  t8528 = t3039*t8525;
  t8529 = t8527 + t8528;
  t8531 = t3039*t8519;
  t8532 = -1.*t3077*t8525;
  t8533 = t8531 + t8532;
  t8536 = -1.*t3433*t8529;
  t8537 = t3325*t8533;
  t8538 = t8536 + t8537;
  t8540 = t3325*t8529;
  t8541 = t3433*t8533;
  t8542 = t8540 + t8541;
  t8570 = -1.*t2102*t4499;
  t8571 = -1.*t2010*t4617;
  t8572 = t8570 + t8571;
  t8575 = t2618*t8572;
  t8576 = t8575 + t4729;
  t8578 = t2568*t8572;
  t8579 = -1.*t2618*t4685;
  t8581 = t8578 + t8579;
  t8583 = -1.*t3077*t8576;
  t8584 = t3039*t8581;
  t8586 = t8583 + t8584;
  t8589 = t3039*t8576;
  t8590 = t3077*t8581;
  t8591 = t8589 + t8590;
  t8594 = t3433*t8586;
  t8595 = t3325*t8591;
  t8596 = t8594 + t8595;
  t8601 = t3325*t8586;
  t8602 = -1.*t3433*t8591;
  t8603 = t8601 + t8602;
  t8561 = 0.08055*t2010;
  t8563 = t8561 + t2380;
  t8565 = -0.01004*t2010;
  t8566 = -0.08055*t2102;
  t8567 = t8565 + t8566;
  t8618 = t511*t494*t831;
  t8619 = t671*t8411;
  t8620 = t8618 + t8619;
  t8625 = -1.*t2102*t8188;
  t8626 = -1.*t2010*t8620;
  t8627 = t8625 + t8626;
  t8631 = t2010*t8188;
  t8632 = -1.*t2102*t8620;
  t8633 = t8631 + t8632;
  t8635 = t2618*t8627;
  t8637 = t2568*t8633;
  t8641 = t8635 + t8637;
  t8643 = t2568*t8627;
  t8644 = -1.*t2618*t8633;
  t8645 = t8643 + t8644;
  t8648 = -1.*t3077*t8641;
  t8649 = t3039*t8645;
  t8650 = t8648 + t8649;
  t8653 = t3039*t8641;
  t8654 = t3077*t8645;
  t8656 = t8653 + t8654;
  t8659 = t3433*t8650;
  t8662 = t3325*t8656;
  t8663 = t8659 + t8662;
  t8665 = t3325*t8650;
  t8666 = -1.*t3433*t8656;
  t8667 = t8665 + t8666;
  t8680 = -1.*t511*t1193;
  t8681 = t671*t8473;
  t8682 = t8680 + t8681;
  t8684 = -1.*t2102*t7793;
  t8685 = -1.*t2010*t8682;
  t8686 = t8684 + t8685;
  t8689 = t2010*t7793;
  t8690 = -1.*t2102*t8682;
  t8691 = t8689 + t8690;
  t8694 = t2618*t8686;
  t8696 = t2568*t8691;
  t8697 = t8694 + t8696;
  t8699 = t2568*t8686;
  t8700 = -1.*t2618*t8691;
  t8701 = t8699 + t8700;
  t8705 = -1.*t3077*t8697;
  t8706 = t3039*t8701;
  t8707 = t8705 + t8706;
  t8712 = t3039*t8697;
  t8714 = t3077*t8701;
  t8715 = t8712 + t8714;
  t8717 = t3433*t8707;
  t8718 = t3325*t8715;
  t8719 = t8717 + t8718;
  t8721 = t3325*t8707;
  t8722 = -1.*t3433*t8715;
  t8723 = t8721 + t8722;
  t8748 = -1.*t2568*t4667;
  t8749 = t8748 + t8579;
  t8752 = -1.*t3077*t4739;
  t8753 = t3039*t8749;
  t8755 = t8752 + t8753;
  t8760 = t3077*t8749;
  t8763 = t4848 + t8760;
  t8766 = t3433*t8755;
  t8768 = t3325*t8763;
  t8769 = t8766 + t8768;
  t8773 = t3325*t8755;
  t8774 = -1.*t3433*t8763;
  t8775 = t8773 + t8774;
  t8738 = -0.13004*t2568;
  t8740 = -0.08055*t2618;
  t8741 = t8738 + t8740;
  t8744 = 0.08055*t2568;
  t8745 = t8744 + t2638;
  t8789 = t2102*t8188;
  t8790 = t2010*t8620;
  t8791 = t8789 + t8790;
  t8794 = -1.*t2618*t8791;
  t8795 = t8794 + t8637;
  t8797 = -1.*t2568*t8791;
  t8798 = t8797 + t8644;
  t8800 = -1.*t3077*t8795;
  t8801 = t3039*t8798;
  t8802 = t8800 + t8801;
  t8804 = t3039*t8795;
  t8805 = t3077*t8798;
  t8806 = t8804 + t8805;
  t8808 = t3433*t8802;
  t8809 = t3325*t8806;
  t8810 = t8808 + t8809;
  t8812 = t3325*t8802;
  t8813 = -1.*t3433*t8806;
  t8814 = t8812 + t8813;
  t8828 = t2102*t7793;
  t8829 = t2010*t8682;
  t8830 = t8828 + t8829;
  t8834 = -1.*t2618*t8830;
  t8835 = t8834 + t8696;
  t8838 = -1.*t2568*t8830;
  t8839 = t8838 + t8700;
  t8841 = -1.*t3077*t8835;
  t8843 = t3039*t8839;
  t8844 = t8841 + t8843;
  t8846 = t3039*t8835;
  t8847 = t3077*t8839;
  t8848 = t8846 + t8847;
  t8852 = t3433*t8844;
  t8853 = t3325*t8848;
  t8854 = t8852 + t8853;
  t8857 = t3325*t8844;
  t8858 = -1.*t3433*t8848;
  t8859 = t8857 + t8858;
  t8882 = -1.*t3039*t4778;
  t8883 = t8752 + t8882;
  t8887 = t3433*t8883;
  t8889 = t8887 + t4941;
  t8891 = t3325*t8883;
  t8893 = -1.*t3433*t4905;
  t8895 = t8891 + t8893;
  t8873 = 0.03315*t3039;
  t8874 = t8873 + t3251;
  t8877 = -0.19074*t3039;
  t8878 = -0.03315*t3077;
  t8879 = t8877 + t8878;
  t8907 = t2568*t8791;
  t8908 = t2618*t8633;
  t8909 = t8907 + t8908;
  t8911 = -1.*t3039*t8909;
  t8912 = t8800 + t8911;
  t8914 = -1.*t3077*t8909;
  t8915 = t8804 + t8914;
  t8917 = t3433*t8912;
  t8918 = t3325*t8915;
  t8919 = t8917 + t8918;
  t8921 = t3325*t8912;
  t8922 = -1.*t3433*t8915;
  t8923 = t8921 + t8922;
  t8939 = t2568*t8830;
  t8941 = t2618*t8691;
  t8942 = t8939 + t8941;
  t8946 = -1.*t3039*t8942;
  t8947 = t8841 + t8946;
  t8949 = -1.*t3077*t8942;
  t8952 = t8846 + t8949;
  t8954 = t3433*t8947;
  t8955 = t3325*t8952;
  t8956 = t8954 + t8955;
  t8958 = t3325*t8947;
  t8959 = -1.*t3433*t8952;
  t8960 = t8958 + t8959;
  t8983 = -1.*t3325*t4806;
  t8984 = t8983 + t8893;
  t5082 = t3686*t4973;
  t8972 = -0.62554*t3325;
  t8973 = -0.01315*t3433;
  t8974 = t8972 + t8973;
  t8977 = 0.01315*t3325;
  t8979 = t8977 + t3442;
  t8997 = t3077*t8795;
  t9001 = t3039*t8909;
  t9003 = t8997 + t9001;
  t9008 = -1.*t3433*t9003;
  t9009 = t9008 + t8918;
  t9011 = -1.*t3325*t9003;
  t9012 = t9011 + t8922;
  t9024 = t3077*t8835;
  t9025 = t3039*t8942;
  t9026 = t9024 + t9025;
  t9029 = -1.*t3433*t9026;
  t9030 = t9029 + t8955;
  t9032 = -1.*t3325*t9026;
  t9033 = t9032 + t8959;
  t8987 = -1.*t3787*t4973;
  t5128 = -1.*t3787*t5015;
  t5142 = t5082 + t5128;
  t9044 = 0.05315*t3686;
  t9045 = t9044 + t3989;
  t9047 = -1.03354*t3686;
  t9048 = -0.05315*t3787;
  t9050 = t9047 + t9048;
  t9014 = -1.*t3787*t9009;
  t9059 = t3325*t9003;
  t9060 = t3433*t8915;
  t9061 = t9059 + t9060;
  t9019 = t3686*t9009;
  t9035 = -1.*t3787*t9030;
  t9071 = t3325*t9026;
  t9072 = t3433*t8952;
  t9073 = t9071 + t9072;
  t9039 = t3686*t9030;
  p_output1[0]=1.;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=0;
  p_output1[4]=1.;
  p_output1[5]=0;
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=1.;
  p_output1[9]=t1166*t1406 + t1674*t1753 + t1830*t1970 + t2146*t2273 + t2393*t2508 + t2679*t2725 + t2948*t3018 + t3111*t3194 + t3256*t3309 + t3453*t3507 + t3559*t3634 + t3817*t3926 + t3998*t4042 - 0.00095*(t3787*t3926 + t3686*t4042) - 1.05124*(t3686*t3926 - 1.*t3787*t4042) - 1.*t494*t738*t831 - 0.1305*(t1970*t511 + t494*t671*t831);
  p_output1[10]=t1166*t4302 + t1674*t4325 + t1830*t4451 + t2146*t4499 - 0.1305*t4511 + t2393*t4617 + t2679*t4667 + t2948*t4685 + t3111*t4739 + t3256*t4778 + t3453*t4806 + t3559*t4905 + t3817*t4973 + t3998*t5015 - 0.00095*(t3787*t4973 + t3686*t5015) - 1.05124*t5142 + t1275*t494*t738;
  p_output1[11]=0;
  p_output1[12]=t1166*t1182*t1275*t494 + t1275*t1281*t1674*t494 + t1830*t5255 + t2146*t5273 + t2393*t5382 + t2679*t5413 + t2948*t5449 + t3111*t5515 + t3256*t5549 + t3453*t5648 + t3559*t5676 + t3817*t5721 + t3998*t5741 - 0.00095*(t3787*t5721 + t3686*t5741) - 1.05124*(t3686*t5721 - 1.*t3787*t5741) - 0.1305*(t511*t5255 + t1193*t1275*t671) - 1.*t1193*t1275*t738;
  p_output1[13]=t1830*t5900 + t2146*t5927 + t2393*t6040 + t2679*t6067 + t2948*t6109 + t3111*t6174 + t3256*t6266 + t3453*t6343 + t3559*t6395 + t3817*t6422 + t3998*t6458 - 0.00095*(t3787*t6422 + t3686*t6458) - 1.05124*(t3686*t6422 - 1.*t3787*t6458) + t1166*t1182*t494*t831 + t1281*t1674*t494*t831 - 1.*t1193*t738*t831 - 0.1305*(t511*t5900 + t1193*t671*t831);
  p_output1[14]=-1.*t1166*t1182*t1193 - 1.*t1193*t1281*t1674 + t1830*t6652 + t2146*t6692 - 0.1305*(t511*t6652 + t494*t671) + t2393*t6803 + t2679*t6836 + t2948*t6848 + t3111*t6856 + t3256*t6887 + t3453*t6911 + t3559*t6924 + t3817*t6976 + t3998*t7019 - 0.00095*(t3787*t6976 + t3686*t7019) - 1.05124*(t3686*t6976 - 1.*t3787*t7019) - 1.*t494*t738;
  p_output1[15]=t1674*t4302 + t1166*t7087 + t2146*t7126 + t1830*t7138 - 0.1305*t511*t7138 + t2393*t671*t7138 + t2679*t7214 + t2948*t7227 + t3111*t7249 + t3256*t7259 + t3453*t7309 + t3559*t7327 + t3817*t7345 + t3998*t7400 - 0.00095*(t3787*t7345 + t3686*t7400) - 1.05124*(t3686*t7345 - 1.*t3787*t7400);
  p_output1[16]=t1166*t1753 + t1674*t7474 + t2146*t7492 + t1830*t7501 - 0.1305*t511*t7501 + t2393*t671*t7501 + t2679*t7544 + t2948*t7558 + t3111*t7584 + t3256*t7610 + t3453*t7662 + t3559*t7671 + t3817*t7686 + t3998*t7710 - 0.00095*(t3787*t7686 + t3686*t7710) - 1.05124*(t3686*t7686 - 1.*t3787*t7710);
  p_output1[17]=-1.*t1166*t1281*t494 + t1182*t1674*t494 + t7777 + t7805 + t7808 + t7810 + t7859 + t7893 + t7902 + t7914 + t7929 + t7934 + t7949 + t7958 + t7971 + t7991;
  p_output1[18]=0;
  p_output1[19]=0;
  p_output1[20]=0;
  p_output1[21]=0;
  p_output1[22]=0;
  p_output1[23]=0;
  p_output1[24]=0;
  p_output1[25]=0;
  p_output1[26]=0;
  p_output1[27]=0;
  p_output1[28]=0;
  p_output1[29]=0;
  p_output1[30]=0;
  p_output1[31]=0;
  p_output1[32]=0;
  p_output1[33]=0;
  p_output1[34]=0;
  p_output1[35]=0;
  p_output1[36]=0;
  p_output1[37]=0;
  p_output1[38]=0;
  p_output1[39]=t1830*t4499 - 0.1305*t4499*t511 + t2393*t4499*t671 + t4302*t7997 + t4325*t8026 + t2146*t8035 + t2679*t8058 + t2948*t8066 + t3111*t8070 + t3256*t8088 + t3453*t8096 + t3559*t8112 + t3817*t8119 + t3998*t8125 - 0.00095*(t3787*t8119 + t3686*t8125) - 1.05124*(t3686*t8119 - 1.*t3787*t8125);
  p_output1[40]=t7474*t7997 + t8026*t8173 + t2146*t8176 + t1830*t8188 - 0.1305*t511*t8188 + t2393*t671*t8188 + t2679*t8196 + t2948*t8205 + t3111*t8218 + t3256*t8250 + t3453*t8260 + t3559*t8267 + t3817*t8278 + t3998*t8287 - 0.00095*(t3787*t8278 + t3686*t8287) - 1.05124*(t3686*t8278 - 1.*t3787*t8287);
  p_output1[41]=t7777 + t7805 + t7808 + t7810 + t7859 + t7893 + t7902 + t7914 + t7929 + t7934 + t7949 + t7958 + t7971 + t7991 + t1182*t494*t7997 + t1281*t494*t8026;
  p_output1[42]=t2393*t4511 + t2010*t2679*t4511 - 1.*t2102*t2948*t4511 - 0.1305*(-1.*t1275*t494*t511 - 1.*t4451*t671) + t1275*t494*t8338 + t4451*t8343 + t3111*t8355 + t3256*t8362 + t3453*t8374 + t3559*t8381 + t3817*t8388 + t3998*t8393 - 0.00095*(t3787*t8388 + t3686*t8393) - 1.05124*(t3686*t8388 - 1.*t3787*t8393);
  p_output1[43]=t494*t831*t8338 + t8343*t8411 - 0.1305*(t2427 - 1.*t671*t8411) + t2393*t8419 + t2010*t2679*t8419 - 1.*t2102*t2948*t8419 + t3111*t8429 + t3256*t8435 + t3453*t8441 + t3559*t8445 + t3817*t8449 + t3998*t8453 - 0.00095*(t3787*t8449 + t3686*t8453) - 1.05124*(t3686*t8449 - 1.*t3787*t8453);
  p_output1[44]=-1.*t1193*t8338 + t8343*t8473 - 0.1305*(t1193*t511 - 1.*t671*t8473) + t2393*t8479 + t2010*t2679*t8479 - 1.*t2102*t2948*t8479 + t3111*t8519 + t3256*t8525 + t3453*t8529 + t3559*t8533 + t3817*t8538 + t3998*t8542 - 0.00095*(t3787*t8538 + t3686*t8542) - 1.05124*(t3686*t8538 - 1.*t3787*t8542);
  p_output1[45]=t2679*t4685 + t4499*t8563 + t4617*t8567 + t2948*t8572 + t3256*t8576 + t3111*t8581 + t3559*t8586 + t3453*t8591 + t3998*t8596 + t3817*t8603 - 1.05124*(-1.*t3787*t8596 + t3686*t8603) - 0.00095*(t3686*t8596 + t3787*t8603);
  p_output1[46]=t8188*t8563 + t8567*t8620 + t2948*t8627 + t2679*t8633 + t3256*t8641 + t3111*t8645 + t3559*t8650 + t3453*t8656 + t3998*t8663 + t3817*t8667 - 1.05124*(-1.*t3787*t8663 + t3686*t8667) - 0.00095*(t3686*t8663 + t3787*t8667);
  p_output1[47]=t7793*t8563 + t8567*t8682 + t2948*t8686 + t2679*t8691 + t3256*t8697 + t3111*t8701 + t3559*t8707 + t3453*t8715 + t3998*t8719 + t3817*t8723 - 1.05124*(-1.*t3787*t8719 + t3686*t8723) - 0.00095*(t3686*t8719 + t3787*t8723);
  p_output1[48]=t3256*t4739 + t4667*t8741 + t4685*t8745 + t3111*t8749 + t3559*t8755 + t3453*t8763 + t3998*t8769 + t3817*t8775 - 1.05124*(-1.*t3787*t8769 + t3686*t8775) - 0.00095*(t3686*t8769 + t3787*t8775);
  p_output1[49]=t8633*t8745 + t8741*t8791 + t3256*t8795 + t3111*t8798 + t3559*t8802 + t3453*t8806 + t3998*t8810 + t3817*t8814 - 1.05124*(-1.*t3787*t8810 + t3686*t8814) - 0.00095*(t3686*t8810 + t3787*t8814);
  p_output1[50]=t8691*t8745 + t8741*t8830 + t3256*t8835 + t3111*t8839 + t3559*t8844 + t3453*t8848 + t3998*t8854 + t3817*t8859 - 1.05124*(-1.*t3787*t8854 + t3686*t8859) - 0.00095*(t3686*t8854 + t3787*t8859);
  p_output1[51]=t3453*t4905 + t4739*t8874 + t4778*t8879 + t3559*t8883 + t3998*t8889 + t3817*t8895 - 1.05124*(-1.*t3787*t8889 + t3686*t8895) - 0.00095*(t3686*t8889 + t3787*t8895);
  p_output1[52]=t8795*t8874 + t8879*t8909 + t3559*t8912 + t3453*t8915 + t3998*t8919 + t3817*t8923 - 1.05124*(-1.*t3787*t8919 + t3686*t8923) - 0.00095*(t3686*t8919 + t3787*t8923);
  p_output1[53]=t8835*t8874 + t8879*t8942 + t3559*t8947 + t3453*t8952 + t3998*t8956 + t3817*t8960 - 1.05124*(-1.*t3787*t8956 + t3686*t8960) - 0.00095*(t3686*t8956 + t3787*t8960);
  p_output1[54]=t3998*t4973 + t4806*t8974 + t4905*t8979 + t3817*t8984 - 0.00095*(t5082 + t3787*t8984) - 1.05124*(t3686*t8984 + t8987);
  p_output1[55]=t8915*t8979 + t8974*t9003 + t3998*t9009 + t3817*t9012 - 1.05124*(t3686*t9012 + t9014) - 0.00095*(t3787*t9012 + t9019);
  p_output1[56]=t8952*t8979 + t8974*t9026 + t3998*t9030 + t3817*t9033 - 1.05124*(t3686*t9033 + t9035) - 0.00095*(t3787*t9033 + t9039);
  p_output1[57]=-0.00095*t5142 - 1.05124*(-1.*t3686*t5015 + t8987) + t4973*t9045 + t5015*t9050;
  p_output1[58]=t9009*t9045 + t9050*t9061 - 1.05124*(t9014 - 1.*t3686*t9061) - 0.00095*(t9019 - 1.*t3787*t9061);
  p_output1[59]=t9030*t9045 + t9050*t9073 - 1.05124*(t9035 - 1.*t3686*t9073) - 0.00095*(t9039 - 1.*t3787*t9073);
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "One input(s) required (var1).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 20 && ncols == 1) && 
      !(mrows == 1 && ncols == 20))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 3, (mwSize) 20, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1);


}

#else // MATLAB_MEX_FILE

#include "Jp_RightToeBottom_mex.hh"

namespace SymExpression
{

void Jp_RightToeBottom_mex_raw(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}

}

#endif // MATLAB_MEX_FILE
