/*
 * Automatically Generated from Mathematica.
 * Mon 11 May 2020 22:20:24 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t726;
  double t207;
  double t405;
  double t494;
  double t808;
  double t858;
  double t859;
  double t865;
  double t1240;
  double t1514;
  double t1517;
  double t1569;
  double t645;
  double t826;
  double t836;
  double t2242;
  double t2294;
  double t2358;
  double t2439;
  double t1831;
  double t1871;
  double t2110;
  double t2610;
  double t3338;
  double t3365;
  double t3451;
  double t3967;
  double t2959;
  double t3195;
  double t3323;
  double t4413;
  double t4533;
  double t4809;
  double t5156;
  double t5159;
  double t5232;
  double t5422;
  double t5659;
  double t5748;
  double t5816;
  double t6578;
  double t6621;
  double t6643;
  double t6946;
  double t7015;
  double t7017;
  double t7036;
  double t7093;
  double t7307;
  double t7364;
  double t7439;
  double t7449;
  double t7459;
  double t7471;
  double t7474;
  double t7544;
  double t7610;
  double t7653;
  double t7676;
  double t7691;
  double t7767;
  double t7768;
  double t7770;
  double t7772;
  double t7775;
  double t7778;
  double t7782;
  double t7796;
  double t7799;
  double t7803;
  double t7827;
  double t7829;
  double t7833;
  double t1007;
  double t1293;
  double t1319;
  double t1670;
  double t1688;
  double t1709;
  double t7888;
  double t7891;
  double t7892;
  double t7875;
  double t7880;
  double t7881;
  double t2381;
  double t2492;
  double t2495;
  double t2611;
  double t2664;
  double t2710;
  double t7894;
  double t7895;
  double t7900;
  double t3551;
  double t4001;
  double t4063;
  double t4923;
  double t4958;
  double t5060;
  double t5340;
  double t5506;
  double t5571;
  double t7949;
  double t7955;
  double t7956;
  double t7966;
  double t7967;
  double t7970;
  double t6088;
  double t6503;
  double t6561;
  double t7034;
  double t7082;
  double t7088;
  double t7976;
  double t7977;
  double t7980;
  double t7987;
  double t7988;
  double t7991;
  double t7399;
  double t7407;
  double t7435;
  double t7608;
  double t7612;
  double t7638;
  double t7994;
  double t7995;
  double t7997;
  double t8001;
  double t8003;
  double t8004;
  double t7707;
  double t7759;
  double t7764;
  double t7780;
  double t7783;
  double t7787;
  double t8009;
  double t8012;
  double t8018;
  double t8022;
  double t8023;
  double t8024;
  double t7813;
  double t7816;
  double t7817;
  double t8029;
  double t8030;
  double t8033;
  double t8040;
  double t8041;
  double t8042;
  double t8068;
  double t8071;
  double t8073;
  double t8087;
  double t8088;
  double t8089;
  double t8091;
  double t8097;
  double t8098;
  double t8103;
  double t8104;
  double t8105;
  double t8108;
  double t8111;
  double t8112;
  double t8116;
  double t8117;
  double t8118;
  double t8122;
  double t8123;
  double t8124;
  double t8126;
  double t8128;
  double t8132;
  double t8137;
  double t8139;
  double t8141;
  double t8148;
  double t8150;
  double t8151;
  double t8154;
  double t8156;
  double t8157;
  double t8180;
  double t8181;
  double t8182;
  double t8195;
  double t8201;
  double t8202;
  double t8206;
  double t8209;
  double t8213;
  double t8216;
  double t8218;
  double t8222;
  double t8225;
  double t8226;
  double t8228;
  double t8230;
  double t8231;
  double t8233;
  double t8236;
  double t8237;
  double t8238;
  double t8242;
  double t8244;
  double t8246;
  double t8248;
  double t8249;
  double t8253;
  double t8260;
  double t8261;
  double t8265;
  double t8268;
  double t8270;
  double t8271;
  double t8301;
  double t8302;
  double t8303;
  double t8314;
  double t8315;
  double t8316;
  double t8320;
  double t8321;
  double t8324;
  double t8331;
  double t8334;
  double t8337;
  double t8340;
  double t8348;
  double t8350;
  double t8353;
  double t8355;
  double t8357;
  double t8360;
  double t8364;
  double t8366;
  double t8370;
  double t8371;
  double t8372;
  double t8374;
  double t8375;
  double t8376;
  double t8379;
  double t8381;
  double t8382;
  double t8385;
  double t8387;
  double t8391;
  double t8409;
  double t8411;
  double t8414;
  double t8422;
  double t8423;
  double t8429;
  double t8430;
  double t8431;
  double t8433;
  double t8435;
  double t8436;
  double t8438;
  double t8440;
  double t8441;
  double t8443;
  double t8444;
  double t8445;
  double t8447;
  double t8450;
  double t8452;
  double t8455;
  double t8456;
  double t8457;
  double t8459;
  double t8460;
  double t8461;
  double t8464;
  double t8467;
  double t8468;
  double t8471;
  double t8473;
  double t8474;
  double t8497;
  double t8498;
  double t8500;
  double t8502;
  double t8503;
  double t8505;
  double t8509;
  double t8513;
  double t8515;
  double t8516;
  double t8517;
  double t8520;
  double t8521;
  double t8522;
  double t8524;
  double t8526;
  double t8527;
  double t8529;
  double t8530;
  double t8531;
  double t8533;
  double t8534;
  double t8536;
  double t8538;
  double t8540;
  double t8543;
  double t8547;
  double t8549;
  double t8550;
  double t8553;
  double t8554;
  double t8556;
  double t8573;
  double t8576;
  double t8577;
  double t8583;
  double t8584;
  double t8586;
  double t8588;
  double t8591;
  double t8592;
  double t8597;
  double t8600;
  double t8601;
  double t8604;
  double t8606;
  double t8607;
  double t8611;
  double t8612;
  double t8614;
  double t8617;
  double t8618;
  double t8620;
  double t8623;
  double t8625;
  double t8627;
  double t8629;
  double t8631;
  double t8632;
  double t8637;
  double t8638;
  double t8639;
  double t8685;
  double t8686;
  double t8688;
  double t8689;
  double t8693;
  double t8697;
  double t8698;
  double t8699;
  double t8701;
  double t8702;
  double t8703;
  double t8708;
  double t8709;
  double t8710;
  double t8712;
  double t8713;
  double t8714;
  double t8717;
  double t8719;
  double t8722;
  double t8725;
  double t8728;
  double t8729;
  double t8735;
  double t8737;
  double t8738;
  double t8662;
  double t8663;
  double t8670;
  double t8671;
  double t8672;
  double t8758;
  double t8759;
  double t8760;
  double t8762;
  double t8764;
  double t8769;
  double t8773;
  double t8779;
  double t8781;
  double t8783;
  double t8785;
  double t8786;
  double t8787;
  double t8789;
  double t8790;
  double t8791;
  double t8794;
  double t8795;
  double t8796;
  double t8800;
  double t8801;
  double t8802;
  double t8806;
  double t8809;
  double t8810;
  double t8812;
  double t8813;
  double t8818;
  double t8821;
  double t8822;
  double t8823;
  double t8579;
  double t8580;
  double t8582;
  double t8587;
  double t8595;
  double t8602;
  double t8608;
  double t8616;
  double t8621;
  double t8628;
  double t8635;
  double t8641;
  double t8642;
  double t8645;
  double t8646;
  double t8647;
  double t8649;
  double t8658;
  double t8659;
  double t8660;
  double t7929;
  double t7930;
  double t7936;
  double t8859;
  double t8862;
  double t8866;
  double t8871;
  double t8872;
  double t8873;
  double t8878;
  double t8879;
  double t8880;
  double t8882;
  double t8883;
  double t8884;
  double t8886;
  double t8887;
  double t8889;
  double t8892;
  double t8893;
  double t8894;
  double t8843;
  double t8844;
  double t8845;
  double t8847;
  double t8848;
  double t8914;
  double t8918;
  double t8920;
  double t8923;
  double t8925;
  double t8926;
  double t8939;
  double t8940;
  double t8941;
  double t8943;
  double t8945;
  double t8946;
  double t8948;
  double t8949;
  double t8950;
  double t8952;
  double t8953;
  double t8954;
  double t8956;
  double t8957;
  double t8959;
  double t8961;
  double t8962;
  double t8963;
  double t8989;
  double t8992;
  double t8996;
  double t8999;
  double t9000;
  double t9001;
  double t9016;
  double t9017;
  double t9018;
  double t9021;
  double t9023;
  double t9024;
  double t9026;
  double t9028;
  double t9030;
  double t9032;
  double t9034;
  double t9035;
  double t9037;
  double t9039;
  double t9040;
  double t9043;
  double t9044;
  double t9045;
  double t9077;
  double t9078;
  double t9079;
  double t9084;
  double t9085;
  double t9087;
  double t9088;
  double t9089;
  double t9092;
  double t9093;
  double t9094;
  double t9097;
  double t9099;
  double t9100;
  double t9104;
  double t9105;
  double t9107;
  double t9109;
  double t9110;
  double t9112;
  double t9061;
  double t9064;
  double t9065;
  double t9073;
  double t9074;
  double t9138;
  double t9139;
  double t9140;
  double t9143;
  double t9144;
  double t9147;
  double t9155;
  double t9156;
  double t9160;
  double t9162;
  double t9163;
  double t9164;
  double t9169;
  double t9170;
  double t9173;
  double t9175;
  double t9176;
  double t9178;
  double t9180;
  double t9181;
  double t9184;
  double t9190;
  double t9191;
  double t9193;
  double t9198;
  double t9199;
  double t9201;
  double t9216;
  double t9218;
  double t9221;
  double t9226;
  double t9227;
  double t9231;
  double t9236;
  double t9237;
  double t9238;
  double t9245;
  double t9246;
  double t9250;
  double t9256;
  double t9260;
  double t9263;
  double t9265;
  double t9267;
  double t9269;
  double t9273;
  double t9276;
  double t9277;
  double t9279;
  double t9281;
  double t9283;
  double t9285;
  double t9287;
  double t9289;
  double t9323;
  double t9326;
  double t9328;
  double t9329;
  double t9330;
  double t9332;
  double t9333;
  double t9336;
  double t9337;
  double t9338;
  double t9340;
  double t9341;
  double t9342;
  double t9312;
  double t9313;
  double t9314;
  double t9319;
  double t9320;
  double t9361;
  double t9362;
  double t9363;
  double t9368;
  double t9369;
  double t9371;
  double t9373;
  double t9376;
  double t9377;
  double t9379;
  double t9381;
  double t9382;
  double t9384;
  double t9392;
  double t9393;
  double t9394;
  double t9396;
  double t9398;
  double t9399;
  double t9430;
  double t9432;
  double t9433;
  double t9436;
  double t9437;
  double t9439;
  double t9440;
  double t9442;
  double t9443;
  double t9445;
  double t9447;
  double t9448;
  double t9449;
  double t9451;
  double t9452;
  double t9453;
  double t9455;
  double t9456;
  double t9458;
  double t9476;
  double t9477;
  double t9481;
  double t9483;
  double t9485;
  double t9486;
  double t9487;
  double t9469;
  double t9470;
  double t9472;
  double t9473;
  double t9474;
  double t9501;
  double t9505;
  double t9506;
  double t9508;
  double t9509;
  double t9512;
  double t9513;
  double t9517;
  double t9518;
  double t9521;
  double t9526;
  double t9527;
  double t9528;
  double t9551;
  double t9552;
  double t9553;
  double t9555;
  double t9557;
  double t9559;
  double t9561;
  double t9563;
  double t9564;
  double t9565;
  double t9567;
  double t9568;
  double t9569;
  double t9597;
  double t9598;
  double t8056;
  double t9583;
  double t9584;
  double t9586;
  double t9588;
  double t9589;
  double t9612;
  double t9613;
  double t9614;
  double t9618;
  double t9619;
  double t9622;
  double t9625;
  double t9642;
  double t9643;
  double t9644;
  double t9648;
  double t9649;
  double t9651;
  double t9652;
  double t9603;
  double t8057;
  double t8059;
  double t9664;
  double t9665;
  double t9667;
  double t9668;
  double t9669;
  double t9627;
  double t9678;
  double t9679;
  double t9680;
  double t9634;
  double t9655;
  double t9690;
  double t9692;
  double t9693;
  double t9659;
  t726 = Cos(var1[3]);
  t207 = Cos(var1[5]);
  t405 = Sin(var1[3]);
  t494 = Sin(var1[4]);
  t808 = Sin(var1[5]);
  t858 = Cos(var1[6]);
  t859 = -1.*t858;
  t865 = 1. + t859;
  t1240 = Sin(var1[6]);
  t1514 = -1.*t726*t207;
  t1517 = -1.*t405*t494*t808;
  t1569 = t1514 + t1517;
  t645 = -1.*t207*t405*t494;
  t826 = t726*t808;
  t836 = t645 + t826;
  t2242 = Cos(var1[7]);
  t2294 = -1.*t2242;
  t2358 = 1. + t2294;
  t2439 = Sin(var1[7]);
  t1831 = t858*t1569;
  t1871 = t836*t1240;
  t2110 = t1831 + t1871;
  t2610 = Cos(var1[4]);
  t3338 = Cos(var1[8]);
  t3365 = -1.*t3338;
  t3451 = 1. + t3365;
  t3967 = Sin(var1[8]);
  t2959 = -1.*t2610*t2242*t405;
  t3195 = t2110*t2439;
  t3323 = t2959 + t3195;
  t4413 = t858*t836;
  t4533 = -1.*t1569*t1240;
  t4809 = t4413 + t4533;
  t5156 = Cos(var1[9]);
  t5159 = -1.*t5156;
  t5232 = 1. + t5159;
  t5422 = Sin(var1[9]);
  t5659 = t3338*t3323;
  t5748 = t4809*t3967;
  t5816 = t5659 + t5748;
  t6578 = t3338*t4809;
  t6621 = -1.*t3323*t3967;
  t6643 = t6578 + t6621;
  t6946 = Cos(var1[10]);
  t7015 = -1.*t6946;
  t7017 = 1. + t7015;
  t7036 = Sin(var1[10]);
  t7093 = -1.*t5422*t5816;
  t7307 = t5156*t6643;
  t7364 = t7093 + t7307;
  t7439 = t5156*t5816;
  t7449 = t5422*t6643;
  t7459 = t7439 + t7449;
  t7471 = Cos(var1[11]);
  t7474 = -1.*t7471;
  t7544 = 1. + t7474;
  t7610 = Sin(var1[11]);
  t7653 = t7036*t7364;
  t7676 = t6946*t7459;
  t7691 = t7653 + t7676;
  t7767 = t6946*t7364;
  t7768 = -1.*t7036*t7459;
  t7770 = t7767 + t7768;
  t7772 = Cos(var1[12]);
  t7775 = -1.*t7772;
  t7778 = 1. + t7775;
  t7782 = Sin(var1[12]);
  t7796 = -1.*t7610*t7691;
  t7799 = t7471*t7770;
  t7803 = t7796 + t7799;
  t7827 = t7471*t7691;
  t7829 = t7610*t7770;
  t7833 = t7827 + t7829;
  t1007 = 0.07996*t865;
  t1293 = -0.135*t1240;
  t1319 = 0. + t1007 + t1293;
  t1670 = 0.135*t865;
  t1688 = 0.07996*t1240;
  t1709 = 0. + t1670 + t1688;
  t7888 = -1.*t207*t405;
  t7891 = t726*t494*t808;
  t7892 = t7888 + t7891;
  t7875 = t726*t207*t494;
  t7880 = t405*t808;
  t7881 = t7875 + t7880;
  t2381 = 0.135*t2358;
  t2492 = 0.08055*t2439;
  t2495 = 0. + t2381 + t2492;
  t2611 = -0.08055*t2358;
  t2664 = 0.135*t2439;
  t2710 = 0. + t2611 + t2664;
  t7894 = t858*t7892;
  t7895 = t7881*t1240;
  t7900 = t7894 + t7895;
  t3551 = -0.08055*t3451;
  t4001 = -0.01004*t3967;
  t4063 = 0. + t3551 + t4001;
  t4923 = -0.01004*t3451;
  t4958 = 0.08055*t3967;
  t5060 = 0. + t4923 + t4958;
  t5340 = -0.08055*t5232;
  t5506 = -0.13004*t5422;
  t5571 = 0. + t5340 + t5506;
  t7949 = t726*t2610*t2242;
  t7955 = t7900*t2439;
  t7956 = t7949 + t7955;
  t7966 = t858*t7881;
  t7967 = -1.*t7892*t1240;
  t7970 = t7966 + t7967;
  t6088 = -0.13004*t5232;
  t6503 = 0.08055*t5422;
  t6561 = 0. + t6088 + t6503;
  t7034 = -0.19074*t7017;
  t7082 = 0.03315*t7036;
  t7088 = 0. + t7034 + t7082;
  t7976 = t3338*t7956;
  t7977 = t7970*t3967;
  t7980 = t7976 + t7977;
  t7987 = t3338*t7970;
  t7988 = -1.*t7956*t3967;
  t7991 = t7987 + t7988;
  t7399 = -0.03315*t7017;
  t7407 = -0.19074*t7036;
  t7435 = 0. + t7399 + t7407;
  t7608 = -0.01315*t7544;
  t7612 = -0.62554*t7610;
  t7638 = 0. + t7608 + t7612;
  t7994 = -1.*t5422*t7980;
  t7995 = t5156*t7991;
  t7997 = t7994 + t7995;
  t8001 = t5156*t7980;
  t8003 = t5422*t7991;
  t8004 = t8001 + t8003;
  t7707 = -0.62554*t7544;
  t7759 = 0.01315*t7610;
  t7764 = 0. + t7707 + t7759;
  t7780 = -1.03354*t7778;
  t7783 = 0.05315*t7782;
  t7787 = 0. + t7780 + t7783;
  t8009 = t7036*t7997;
  t8012 = t6946*t8004;
  t8018 = t8009 + t8012;
  t8022 = t6946*t7997;
  t8023 = -1.*t7036*t8004;
  t8024 = t8022 + t8023;
  t7813 = -0.05315*t7778;
  t7816 = -1.03354*t7782;
  t7817 = 0. + t7813 + t7816;
  t8029 = -1.*t7610*t8018;
  t8030 = t7471*t8024;
  t8033 = t8029 + t8030;
  t8040 = t7471*t8018;
  t8041 = t7610*t8024;
  t8042 = t8040 + t8041;
  t8068 = t726*t2610*t858*t808;
  t8071 = t726*t2610*t207*t1240;
  t8073 = t8068 + t8071;
  t8087 = -1.*t726*t2242*t494;
  t8088 = t8073*t2439;
  t8089 = t8087 + t8088;
  t8091 = t726*t2610*t207*t858;
  t8097 = -1.*t726*t2610*t808*t1240;
  t8098 = t8091 + t8097;
  t8103 = t3338*t8089;
  t8104 = t8098*t3967;
  t8105 = t8103 + t8104;
  t8108 = t3338*t8098;
  t8111 = -1.*t8089*t3967;
  t8112 = t8108 + t8111;
  t8116 = -1.*t5422*t8105;
  t8117 = t5156*t8112;
  t8118 = t8116 + t8117;
  t8122 = t5156*t8105;
  t8123 = t5422*t8112;
  t8124 = t8122 + t8123;
  t8126 = t7036*t8118;
  t8128 = t6946*t8124;
  t8132 = t8126 + t8128;
  t8137 = t6946*t8118;
  t8139 = -1.*t7036*t8124;
  t8141 = t8137 + t8139;
  t8148 = -1.*t7610*t8132;
  t8150 = t7471*t8141;
  t8151 = t8148 + t8150;
  t8154 = t7471*t8132;
  t8156 = t7610*t8141;
  t8157 = t8154 + t8156;
  t8180 = t2610*t858*t405*t808;
  t8181 = t2610*t207*t405*t1240;
  t8182 = t8180 + t8181;
  t8195 = -1.*t2242*t405*t494;
  t8201 = t8182*t2439;
  t8202 = t8195 + t8201;
  t8206 = t2610*t207*t858*t405;
  t8209 = -1.*t2610*t405*t808*t1240;
  t8213 = t8206 + t8209;
  t8216 = t3338*t8202;
  t8218 = t8213*t3967;
  t8222 = t8216 + t8218;
  t8225 = t3338*t8213;
  t8226 = -1.*t8202*t3967;
  t8228 = t8225 + t8226;
  t8230 = -1.*t5422*t8222;
  t8231 = t5156*t8228;
  t8233 = t8230 + t8231;
  t8236 = t5156*t8222;
  t8237 = t5422*t8228;
  t8238 = t8236 + t8237;
  t8242 = t7036*t8233;
  t8244 = t6946*t8238;
  t8246 = t8242 + t8244;
  t8248 = t6946*t8233;
  t8249 = -1.*t7036*t8238;
  t8253 = t8248 + t8249;
  t8260 = -1.*t7610*t8246;
  t8261 = t7471*t8253;
  t8265 = t8260 + t8261;
  t8268 = t7471*t8246;
  t8270 = t7610*t8253;
  t8271 = t8268 + t8270;
  t8301 = -1.*t858*t494*t808;
  t8302 = -1.*t207*t494*t1240;
  t8303 = t8301 + t8302;
  t8314 = -1.*t2610*t2242;
  t8315 = t8303*t2439;
  t8316 = t8314 + t8315;
  t8320 = -1.*t207*t858*t494;
  t8321 = t494*t808*t1240;
  t8324 = t8320 + t8321;
  t8331 = t3338*t8316;
  t8334 = t8324*t3967;
  t8337 = t8331 + t8334;
  t8340 = t3338*t8324;
  t8348 = -1.*t8316*t3967;
  t8350 = t8340 + t8348;
  t8353 = -1.*t5422*t8337;
  t8355 = t5156*t8350;
  t8357 = t8353 + t8355;
  t8360 = t5156*t8337;
  t8364 = t5422*t8350;
  t8366 = t8360 + t8364;
  t8370 = t7036*t8357;
  t8371 = t6946*t8366;
  t8372 = t8370 + t8371;
  t8374 = t6946*t8357;
  t8375 = -1.*t7036*t8366;
  t8376 = t8374 + t8375;
  t8379 = -1.*t7610*t8372;
  t8381 = t7471*t8376;
  t8382 = t8379 + t8381;
  t8385 = t7471*t8372;
  t8387 = t7610*t8376;
  t8391 = t8385 + t8387;
  t8409 = t207*t405;
  t8411 = -1.*t726*t494*t808;
  t8414 = t8409 + t8411;
  t8422 = t8414*t1240;
  t8423 = t7966 + t8422;
  t8429 = t858*t8414;
  t8430 = -1.*t7881*t1240;
  t8431 = t8429 + t8430;
  t8433 = t3338*t8423*t2439;
  t8435 = t8431*t3967;
  t8436 = t8433 + t8435;
  t8438 = t3338*t8431;
  t8440 = -1.*t8423*t2439*t3967;
  t8441 = t8438 + t8440;
  t8443 = -1.*t5422*t8436;
  t8444 = t5156*t8441;
  t8445 = t8443 + t8444;
  t8447 = t5156*t8436;
  t8450 = t5422*t8441;
  t8452 = t8447 + t8450;
  t8455 = t7036*t8445;
  t8456 = t6946*t8452;
  t8457 = t8455 + t8456;
  t8459 = t6946*t8445;
  t8460 = -1.*t7036*t8452;
  t8461 = t8459 + t8460;
  t8464 = -1.*t7610*t8457;
  t8467 = t7471*t8461;
  t8468 = t8464 + t8467;
  t8471 = t7471*t8457;
  t8473 = t7610*t8461;
  t8474 = t8471 + t8473;
  t8497 = t207*t405*t494;
  t8498 = -1.*t726*t808;
  t8500 = t8497 + t8498;
  t8502 = t858*t8500;
  t8503 = t1569*t1240;
  t8505 = t8502 + t8503;
  t8509 = -1.*t8500*t1240;
  t8513 = t1831 + t8509;
  t8515 = t3338*t8505*t2439;
  t8516 = t8513*t3967;
  t8517 = t8515 + t8516;
  t8520 = t3338*t8513;
  t8521 = -1.*t8505*t2439*t3967;
  t8522 = t8520 + t8521;
  t8524 = -1.*t5422*t8517;
  t8526 = t5156*t8522;
  t8527 = t8524 + t8526;
  t8529 = t5156*t8517;
  t8530 = t5422*t8522;
  t8531 = t8529 + t8530;
  t8533 = t7036*t8527;
  t8534 = t6946*t8531;
  t8536 = t8533 + t8534;
  t8538 = t6946*t8527;
  t8540 = -1.*t7036*t8531;
  t8543 = t8538 + t8540;
  t8547 = -1.*t7610*t8536;
  t8549 = t7471*t8543;
  t8550 = t8547 + t8549;
  t8553 = t7471*t8536;
  t8554 = t7610*t8543;
  t8556 = t8553 + t8554;
  t8573 = t2610*t207*t858;
  t8576 = -1.*t2610*t808*t1240;
  t8577 = t8573 + t8576;
  t8583 = -1.*t2610*t858*t808;
  t8584 = -1.*t2610*t207*t1240;
  t8586 = t8583 + t8584;
  t8588 = t3338*t8577*t2439;
  t8591 = t8586*t3967;
  t8592 = t8588 + t8591;
  t8597 = t3338*t8586;
  t8600 = -1.*t8577*t2439*t3967;
  t8601 = t8597 + t8600;
  t8604 = -1.*t5422*t8592;
  t8606 = t5156*t8601;
  t8607 = t8604 + t8606;
  t8611 = t5156*t8592;
  t8612 = t5422*t8601;
  t8614 = t8611 + t8612;
  t8617 = t7036*t8607;
  t8618 = t6946*t8614;
  t8620 = t8617 + t8618;
  t8623 = t6946*t8607;
  t8625 = -1.*t7036*t8614;
  t8627 = t8623 + t8625;
  t8629 = -1.*t7610*t8620;
  t8631 = t7471*t8627;
  t8632 = t8629 + t8631;
  t8637 = t7471*t8620;
  t8638 = t7610*t8627;
  t8639 = t8637 + t8638;
  t8685 = -1.*t858*t7892;
  t8686 = t8685 + t8430;
  t8688 = t3338*t7970*t2439;
  t8689 = t8686*t3967;
  t8693 = t8688 + t8689;
  t8697 = t3338*t8686;
  t8698 = -1.*t7970*t2439*t3967;
  t8699 = t8697 + t8698;
  t8701 = -1.*t5422*t8693;
  t8702 = t5156*t8699;
  t8703 = t8701 + t8702;
  t8708 = t5156*t8693;
  t8709 = t5422*t8699;
  t8710 = t8708 + t8709;
  t8712 = t7036*t8703;
  t8713 = t6946*t8710;
  t8714 = t8712 + t8713;
  t8717 = t6946*t8703;
  t8719 = -1.*t7036*t8710;
  t8722 = t8717 + t8719;
  t8725 = -1.*t7610*t8714;
  t8728 = t7471*t8722;
  t8729 = t8725 + t8728;
  t8735 = t7471*t8714;
  t8737 = t7610*t8722;
  t8738 = t8735 + t8737;
  t8662 = -0.135*t858;
  t8663 = t8662 + t1688;
  t8670 = 0.07996*t858;
  t8671 = 0.135*t1240;
  t8672 = t8670 + t8671;
  t8758 = t726*t207;
  t8759 = t405*t494*t808;
  t8760 = t8758 + t8759;
  t8762 = -1.*t8760*t1240;
  t8764 = t8502 + t8762;
  t8769 = -1.*t858*t8760;
  t8773 = t8769 + t8509;
  t8779 = t3338*t8764*t2439;
  t8781 = t8773*t3967;
  t8783 = t8779 + t8781;
  t8785 = t3338*t8773;
  t8786 = -1.*t8764*t2439*t3967;
  t8787 = t8785 + t8786;
  t8789 = -1.*t5422*t8783;
  t8790 = t5156*t8787;
  t8791 = t8789 + t8790;
  t8794 = t5156*t8783;
  t8795 = t5422*t8787;
  t8796 = t8794 + t8795;
  t8800 = t7036*t8791;
  t8801 = t6946*t8796;
  t8802 = t8800 + t8801;
  t8806 = t6946*t8791;
  t8809 = -1.*t7036*t8796;
  t8810 = t8806 + t8809;
  t8812 = -1.*t7610*t8802;
  t8813 = t7471*t8810;
  t8818 = t8812 + t8813;
  t8821 = t7471*t8802;
  t8822 = t7610*t8810;
  t8823 = t8821 + t8822;
  t8579 = 0.1305*t2242*t8577;
  t8580 = t8577*t2495;
  t8582 = t8577*t2439*t4063;
  t8587 = t8586*t5060;
  t8595 = t5571*t8592;
  t8602 = t6561*t8601;
  t8608 = t7088*t8607;
  t8616 = t7435*t8614;
  t8621 = t7638*t8620;
  t8628 = t7764*t8627;
  t8635 = t7787*t8632;
  t8641 = t7817*t8639;
  t8642 = t7782*t8632;
  t8645 = t7772*t8639;
  t8646 = t8642 + t8645;
  t8647 = -0.05315*t8646;
  t8649 = t7772*t8632;
  t8658 = -1.*t7782*t8639;
  t8659 = t8649 + t8658;
  t8660 = -1.03354*t8659;
  t7929 = t2242*t7900;
  t7930 = -1.*t726*t2610*t2439;
  t7936 = t7929 + t7930;
  t8859 = -1.*t3338*t5422*t7936;
  t8862 = -1.*t5156*t7936*t3967;
  t8866 = t8859 + t8862;
  t8871 = t5156*t3338*t7936;
  t8872 = -1.*t5422*t7936*t3967;
  t8873 = t8871 + t8872;
  t8878 = t7036*t8866;
  t8879 = t6946*t8873;
  t8880 = t8878 + t8879;
  t8882 = t6946*t8866;
  t8883 = -1.*t7036*t8873;
  t8884 = t8882 + t8883;
  t8886 = -1.*t7610*t8880;
  t8887 = t7471*t8884;
  t8889 = t8886 + t8887;
  t8892 = t7471*t8880;
  t8893 = t7610*t8884;
  t8894 = t8892 + t8893;
  t8843 = 0.135*t2242;
  t8844 = -0.08055*t2439;
  t8845 = t8843 + t8844;
  t8847 = 0.08055*t2242;
  t8848 = t8847 + t2664;
  t8914 = t858*t8760;
  t8918 = t8500*t1240;
  t8920 = t8914 + t8918;
  t8923 = t2242*t8920;
  t8925 = -1.*t2610*t405*t2439;
  t8926 = t8923 + t8925;
  t8939 = -1.*t3338*t5422*t8926;
  t8940 = -1.*t5156*t8926*t3967;
  t8941 = t8939 + t8940;
  t8943 = t5156*t3338*t8926;
  t8945 = -1.*t5422*t8926*t3967;
  t8946 = t8943 + t8945;
  t8948 = t7036*t8941;
  t8949 = t6946*t8946;
  t8950 = t8948 + t8949;
  t8952 = t6946*t8941;
  t8953 = -1.*t7036*t8946;
  t8954 = t8952 + t8953;
  t8956 = -1.*t7610*t8950;
  t8957 = t7471*t8954;
  t8959 = t8956 + t8957;
  t8961 = t7471*t8950;
  t8962 = t7610*t8954;
  t8963 = t8961 + t8962;
  t8989 = t2610*t858*t808;
  t8992 = t2610*t207*t1240;
  t8996 = t8989 + t8992;
  t8999 = t2242*t8996;
  t9000 = t494*t2439;
  t9001 = t8999 + t9000;
  t9016 = -1.*t3338*t5422*t9001;
  t9017 = -1.*t5156*t9001*t3967;
  t9018 = t9016 + t9017;
  t9021 = t5156*t3338*t9001;
  t9023 = -1.*t5422*t9001*t3967;
  t9024 = t9021 + t9023;
  t9026 = t7036*t9018;
  t9028 = t6946*t9024;
  t9030 = t9026 + t9028;
  t9032 = t6946*t9018;
  t9034 = -1.*t7036*t9024;
  t9035 = t9032 + t9034;
  t9037 = -1.*t7610*t9030;
  t9039 = t7471*t9035;
  t9040 = t9037 + t9039;
  t9043 = t7471*t9030;
  t9044 = t7610*t9035;
  t9045 = t9043 + t9044;
  t9077 = -1.*t3338*t7956;
  t9078 = -1.*t7970*t3967;
  t9079 = t9077 + t9078;
  t9084 = t5422*t9079;
  t9085 = t9084 + t7995;
  t9087 = t5156*t9079;
  t9088 = -1.*t5422*t7991;
  t9089 = t9087 + t9088;
  t9092 = -1.*t7036*t9085;
  t9093 = t6946*t9089;
  t9094 = t9092 + t9093;
  t9097 = t6946*t9085;
  t9099 = t7036*t9089;
  t9100 = t9097 + t9099;
  t9104 = t7610*t9094;
  t9105 = t7471*t9100;
  t9107 = t9104 + t9105;
  t9109 = t7471*t9094;
  t9110 = -1.*t7610*t9100;
  t9112 = t9109 + t9110;
  t9061 = -0.01004*t3338;
  t9064 = -0.08055*t3967;
  t9065 = t9061 + t9064;
  t9073 = 0.08055*t3338;
  t9074 = t9073 + t4001;
  t9138 = t2610*t2242*t405;
  t9139 = t8920*t2439;
  t9140 = t9138 + t9139;
  t9143 = -1.*t3338*t9140;
  t9144 = -1.*t8764*t3967;
  t9147 = t9143 + t9144;
  t9155 = t3338*t8764;
  t9156 = -1.*t9140*t3967;
  t9160 = t9155 + t9156;
  t9162 = t5422*t9147;
  t9163 = t5156*t9160;
  t9164 = t9162 + t9163;
  t9169 = t5156*t9147;
  t9170 = -1.*t5422*t9160;
  t9173 = t9169 + t9170;
  t9175 = -1.*t7036*t9164;
  t9176 = t6946*t9173;
  t9178 = t9175 + t9176;
  t9180 = t6946*t9164;
  t9181 = t7036*t9173;
  t9184 = t9180 + t9181;
  t9190 = t7610*t9178;
  t9191 = t7471*t9184;
  t9193 = t9190 + t9191;
  t9198 = t7471*t9178;
  t9199 = -1.*t7610*t9184;
  t9201 = t9198 + t9199;
  t9216 = -1.*t2242*t494;
  t9218 = t8996*t2439;
  t9221 = t9216 + t9218;
  t9226 = -1.*t3338*t9221;
  t9227 = -1.*t8577*t3967;
  t9231 = t9226 + t9227;
  t9236 = t3338*t8577;
  t9237 = -1.*t9221*t3967;
  t9238 = t9236 + t9237;
  t9245 = t5422*t9231;
  t9246 = t5156*t9238;
  t9250 = t9245 + t9246;
  t9256 = t5156*t9231;
  t9260 = -1.*t5422*t9238;
  t9263 = t9256 + t9260;
  t9265 = -1.*t7036*t9250;
  t9267 = t6946*t9263;
  t9269 = t9265 + t9267;
  t9273 = t6946*t9250;
  t9276 = t7036*t9263;
  t9277 = t9273 + t9276;
  t9279 = t7610*t9269;
  t9281 = t7471*t9277;
  t9283 = t9279 + t9281;
  t9285 = t7471*t9269;
  t9287 = -1.*t7610*t9277;
  t9289 = t9285 + t9287;
  t9323 = -1.*t5156*t7980;
  t9326 = t9323 + t9088;
  t9328 = -1.*t7036*t7997;
  t9329 = t6946*t9326;
  t9330 = t9328 + t9329;
  t9332 = t7036*t9326;
  t9333 = t8022 + t9332;
  t9336 = t7610*t9330;
  t9337 = t7471*t9333;
  t9338 = t9336 + t9337;
  t9340 = t7471*t9330;
  t9341 = -1.*t7610*t9333;
  t9342 = t9340 + t9341;
  t9312 = -0.13004*t5156;
  t9313 = -0.08055*t5422;
  t9314 = t9312 + t9313;
  t9319 = 0.08055*t5156;
  t9320 = t9319 + t5506;
  t9361 = t3338*t9140;
  t9362 = t8764*t3967;
  t9363 = t9361 + t9362;
  t9368 = -1.*t5422*t9363;
  t9369 = t9368 + t9163;
  t9371 = -1.*t5156*t9363;
  t9373 = t9371 + t9170;
  t9376 = -1.*t7036*t9369;
  t9377 = t6946*t9373;
  t9379 = t9376 + t9377;
  t9381 = t6946*t9369;
  t9382 = t7036*t9373;
  t9384 = t9381 + t9382;
  t9392 = t7610*t9379;
  t9393 = t7471*t9384;
  t9394 = t9392 + t9393;
  t9396 = t7471*t9379;
  t9398 = -1.*t7610*t9384;
  t9399 = t9396 + t9398;
  t9430 = t3338*t9221;
  t9432 = t8577*t3967;
  t9433 = t9430 + t9432;
  t9436 = -1.*t5422*t9433;
  t9437 = t9436 + t9246;
  t9439 = -1.*t5156*t9433;
  t9440 = t9439 + t9260;
  t9442 = -1.*t7036*t9437;
  t9443 = t6946*t9440;
  t9445 = t9442 + t9443;
  t9447 = t6946*t9437;
  t9448 = t7036*t9440;
  t9449 = t9447 + t9448;
  t9451 = t7610*t9445;
  t9452 = t7471*t9449;
  t9453 = t9451 + t9452;
  t9455 = t7471*t9445;
  t9456 = -1.*t7610*t9449;
  t9458 = t9455 + t9456;
  t9476 = -1.*t6946*t8004;
  t9477 = t9328 + t9476;
  t9481 = t7610*t9477;
  t9483 = t9481 + t8030;
  t9485 = t7471*t9477;
  t9486 = -1.*t7610*t8024;
  t9487 = t9485 + t9486;
  t9469 = 0.03315*t6946;
  t9470 = t9469 + t7407;
  t9472 = -0.19074*t6946;
  t9473 = -0.03315*t7036;
  t9474 = t9472 + t9473;
  t9501 = t5156*t9363;
  t9505 = t5422*t9160;
  t9506 = t9501 + t9505;
  t9508 = -1.*t6946*t9506;
  t9509 = t9376 + t9508;
  t9512 = -1.*t7036*t9506;
  t9513 = t9381 + t9512;
  t9517 = t7610*t9509;
  t9518 = t7471*t9513;
  t9521 = t9517 + t9518;
  t9526 = t7471*t9509;
  t9527 = -1.*t7610*t9513;
  t9528 = t9526 + t9527;
  t9551 = t5156*t9433;
  t9552 = t5422*t9238;
  t9553 = t9551 + t9552;
  t9555 = -1.*t6946*t9553;
  t9557 = t9442 + t9555;
  t9559 = -1.*t7036*t9553;
  t9561 = t9447 + t9559;
  t9563 = t7610*t9557;
  t9564 = t7471*t9561;
  t9565 = t9563 + t9564;
  t9567 = t7471*t9557;
  t9568 = -1.*t7610*t9561;
  t9569 = t9567 + t9568;
  t9597 = -1.*t7471*t8018;
  t9598 = t9597 + t9486;
  t8056 = t7772*t8033;
  t9583 = -0.62554*t7471;
  t9584 = -0.01315*t7610;
  t9586 = t9583 + t9584;
  t9588 = 0.01315*t7471;
  t9589 = t9588 + t7612;
  t9612 = t7036*t9369;
  t9613 = t6946*t9506;
  t9614 = t9612 + t9613;
  t9618 = -1.*t7610*t9614;
  t9619 = t9618 + t9518;
  t9622 = -1.*t7471*t9614;
  t9625 = t9622 + t9527;
  t9642 = t7036*t9437;
  t9643 = t6946*t9553;
  t9644 = t9642 + t9643;
  t9648 = -1.*t7610*t9644;
  t9649 = t9648 + t9564;
  t9651 = -1.*t7471*t9644;
  t9652 = t9651 + t9568;
  t9603 = -1.*t7782*t8033;
  t8057 = -1.*t7782*t8042;
  t8059 = t8056 + t8057;
  t9664 = 0.05315*t7772;
  t9665 = t9664 + t7816;
  t9667 = -1.03354*t7772;
  t9668 = -0.05315*t7782;
  t9669 = t9667 + t9668;
  t9627 = -1.*t7782*t9619;
  t9678 = t7471*t9614;
  t9679 = t7610*t9513;
  t9680 = t9678 + t9679;
  t9634 = t7772*t9619;
  t9655 = -1.*t7782*t9649;
  t9690 = t7471*t9644;
  t9692 = t7610*t9561;
  t9693 = t9690 + t9692;
  t9659 = t7772*t9649;
  p_output1[0]=1.;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=0;
  p_output1[4]=1.;
  p_output1[5]=0;
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=1.;
  p_output1[9]=t1569*t1709 + t2110*t2495 - 1.*t2610*t2710*t405 + 0.1305*(t2110*t2242 + t2439*t2610*t405) + t3323*t4063 + t4809*t5060 + t5571*t5816 + t6561*t6643 + t7088*t7364 + t7435*t7459 + t7638*t7691 + t7764*t7770 + t7787*t7803 + t7817*t7833 - 0.05315*(t7782*t7803 + t7772*t7833) - 1.03354*(t7772*t7803 - 1.*t7782*t7833) + t1319*t836;
  p_output1[10]=t2610*t2710*t726 + t1319*t7881 + t1709*t7892 + t2495*t7900 + 0.1305*t7936 + t4063*t7956 + t5060*t7970 + t5571*t7980 + t6561*t7991 + t7088*t7997 + t7435*t8004 + t7638*t8018 + t7764*t8024 + t7787*t8033 + t7817*t8042 - 0.05315*(t7782*t8033 + t7772*t8042) - 1.03354*t8059;
  p_output1[11]=0;
  p_output1[12]=t1319*t207*t2610*t726 - 1.*t2710*t494*t726 + t2495*t8073 + 0.1305*(t2439*t494*t726 + t2242*t8073) + t1709*t2610*t726*t808 + t4063*t8089 + t5060*t8098 + t5571*t8105 + t6561*t8112 + t7088*t8118 + t7435*t8124 + t7638*t8132 + t7764*t8141 + t7787*t8151 + t7817*t8157 - 0.05315*(t7782*t8151 + t7772*t8157) - 1.03354*(t7772*t8151 - 1.*t7782*t8157);
  p_output1[13]=t1319*t207*t2610*t405 - 1.*t2710*t405*t494 + t1709*t2610*t405*t808 + t2495*t8182 + 0.1305*(t2439*t405*t494 + t2242*t8182) + t4063*t8202 + t5060*t8213 + t5571*t8222 + t6561*t8228 + t7088*t8233 + t7435*t8238 + t7638*t8246 + t7764*t8253 + t7787*t8265 + t7817*t8271 - 0.05315*(t7782*t8265 + t7772*t8271) - 1.03354*(t7772*t8265 - 1.*t7782*t8271);
  p_output1[14]=-1.*t2610*t2710 - 1.*t1319*t207*t494 - 1.*t1709*t494*t808 + t2495*t8303 + 0.1305*(t2439*t2610 + t2242*t8303) + t4063*t8316 + t5060*t8324 + t5571*t8337 + t6561*t8350 + t7088*t8357 + t7435*t8366 + t7638*t8372 + t7764*t8376 + t7787*t8382 + t7817*t8391 - 0.05315*(t7782*t8382 + t7772*t8391) - 1.03354*(t7772*t8382 - 1.*t7782*t8391);
  p_output1[15]=t1709*t7881 + t1319*t8414 + 0.1305*t2242*t8423 + t2495*t8423 + t2439*t4063*t8423 + t5060*t8431 + t5571*t8436 + t6561*t8441 + t7088*t8445 + t7435*t8452 + t7638*t8457 + t7764*t8461 + t7787*t8468 + t7817*t8474 - 0.05315*(t7782*t8468 + t7772*t8474) - 1.03354*(t7772*t8468 - 1.*t7782*t8474);
  p_output1[16]=t1319*t1569 + t1709*t8500 + 0.1305*t2242*t8505 + t2495*t8505 + t2439*t4063*t8505 + t5060*t8513 + t5571*t8517 + t6561*t8522 + t7088*t8527 + t7435*t8531 + t7638*t8536 + t7764*t8543 + t7787*t8550 + t7817*t8556 - 0.05315*(t7782*t8550 + t7772*t8556) - 1.03354*(t7772*t8550 - 1.*t7782*t8556);
  p_output1[17]=t1709*t207*t2610 - 1.*t1319*t2610*t808 + t8579 + t8580 + t8582 + t8587 + t8595 + t8602 + t8608 + t8616 + t8621 + t8628 + t8635 + t8641 + t8647 + t8660;
  p_output1[18]=0.1305*t2242*t7970 + t2495*t7970 + t2439*t4063*t7970 + t7881*t8663 + t7892*t8672 + t5060*t8686 + t5571*t8693 + t6561*t8699 + t7088*t8703 + t7435*t8710 + t7638*t8714 + t7764*t8722 + t7787*t8729 + t7817*t8738 - 0.05315*(t7782*t8729 + t7772*t8738) - 1.03354*(t7772*t8729 - 1.*t7782*t8738);
  p_output1[19]=t8500*t8663 + t8672*t8760 + 0.1305*t2242*t8764 + t2495*t8764 + t2439*t4063*t8764 + t5060*t8773 + t5571*t8783 + t6561*t8787 + t7088*t8791 + t7435*t8796 + t7638*t8802 + t7764*t8810 + t7787*t8818 + t7817*t8823 - 0.05315*(t7782*t8818 + t7772*t8823) - 1.03354*(t7772*t8818 - 1.*t7782*t8823);
  p_output1[20]=t8579 + t8580 + t8582 + t8587 + t8595 + t8602 + t8608 + t8616 + t8621 + t8628 + t8635 + t8641 + t8647 + t8660 + t207*t2610*t8663 + t2610*t808*t8672;
  p_output1[21]=0.1305*(-1.*t2242*t2610*t726 - 1.*t2439*t7900) + t4063*t7936 + t3338*t5571*t7936 - 1.*t3967*t6561*t7936 + t2610*t726*t8845 + t7900*t8848 + t7088*t8866 + t7435*t8873 + t7638*t8880 + t7764*t8884 + t7787*t8889 + t7817*t8894 - 0.05315*(t7782*t8889 + t7772*t8894) - 1.03354*(t7772*t8889 - 1.*t7782*t8894);
  p_output1[22]=t2610*t405*t8845 + t8848*t8920 + 0.1305*(t2959 - 1.*t2439*t8920) + t4063*t8926 + t3338*t5571*t8926 - 1.*t3967*t6561*t8926 + t7088*t8941 + t7435*t8946 + t7638*t8950 + t7764*t8954 + t7787*t8959 + t7817*t8963 - 0.05315*(t7782*t8959 + t7772*t8963) - 1.03354*(t7772*t8959 - 1.*t7782*t8963);
  p_output1[23]=-1.*t494*t8845 + t8848*t8996 + 0.1305*(t2242*t494 - 1.*t2439*t8996) + t4063*t9001 + t3338*t5571*t9001 - 1.*t3967*t6561*t9001 + t7088*t9018 + t7435*t9024 + t7638*t9030 + t7764*t9035 + t7787*t9040 + t7817*t9045 - 0.05315*(t7782*t9040 + t7772*t9045) - 1.03354*(t7772*t9040 - 1.*t7782*t9045);
  p_output1[24]=t5571*t7991 + t7956*t9065 + t7970*t9074 + t6561*t9079 + t7435*t9085 + t7088*t9089 + t7764*t9094 + t7638*t9100 + t7817*t9107 + t7787*t9112 - 1.03354*(-1.*t7782*t9107 + t7772*t9112) - 0.05315*(t7772*t9107 + t7782*t9112);
  p_output1[25]=t8764*t9074 + t9065*t9140 + t6561*t9147 + t5571*t9160 + t7435*t9164 + t7088*t9173 + t7764*t9178 + t7638*t9184 + t7817*t9193 + t7787*t9201 - 1.03354*(-1.*t7782*t9193 + t7772*t9201) - 0.05315*(t7772*t9193 + t7782*t9201);
  p_output1[26]=t8577*t9074 + t9065*t9221 + t6561*t9231 + t5571*t9238 + t7435*t9250 + t7088*t9263 + t7764*t9269 + t7638*t9277 + t7817*t9283 + t7787*t9289 - 1.03354*(-1.*t7782*t9283 + t7772*t9289) - 0.05315*(t7772*t9283 + t7782*t9289);
  p_output1[27]=t7435*t7997 + t7980*t9314 + t7991*t9320 + t7088*t9326 + t7764*t9330 + t7638*t9333 + t7817*t9338 + t7787*t9342 - 1.03354*(-1.*t7782*t9338 + t7772*t9342) - 0.05315*(t7772*t9338 + t7782*t9342);
  p_output1[28]=t9160*t9320 + t9314*t9363 + t7435*t9369 + t7088*t9373 + t7764*t9379 + t7638*t9384 + t7817*t9394 + t7787*t9399 - 1.03354*(-1.*t7782*t9394 + t7772*t9399) - 0.05315*(t7772*t9394 + t7782*t9399);
  p_output1[29]=t9238*t9320 + t9314*t9433 + t7435*t9437 + t7088*t9440 + t7764*t9445 + t7638*t9449 + t7817*t9453 + t7787*t9458 - 1.03354*(-1.*t7782*t9453 + t7772*t9458) - 0.05315*(t7772*t9453 + t7782*t9458);
  p_output1[30]=t7638*t8024 + t7997*t9470 + t8004*t9474 + t7764*t9477 + t7817*t9483 + t7787*t9487 - 1.03354*(-1.*t7782*t9483 + t7772*t9487) - 0.05315*(t7772*t9483 + t7782*t9487);
  p_output1[31]=t9369*t9470 + t9474*t9506 + t7764*t9509 + t7638*t9513 + t7817*t9521 + t7787*t9528 - 1.03354*(-1.*t7782*t9521 + t7772*t9528) - 0.05315*(t7772*t9521 + t7782*t9528);
  p_output1[32]=t9437*t9470 + t9474*t9553 + t7764*t9557 + t7638*t9561 + t7817*t9565 + t7787*t9569 - 1.03354*(-1.*t7782*t9565 + t7772*t9569) - 0.05315*(t7772*t9565 + t7782*t9569);
  p_output1[33]=t7817*t8033 + t8018*t9586 + t8024*t9589 + t7787*t9598 - 0.05315*(t8056 + t7782*t9598) - 1.03354*(t7772*t9598 + t9603);
  p_output1[34]=t9513*t9589 + t9586*t9614 + t7817*t9619 + t7787*t9625 - 1.03354*(t7772*t9625 + t9627) - 0.05315*(t7782*t9625 + t9634);
  p_output1[35]=t9561*t9589 + t9586*t9644 + t7817*t9649 + t7787*t9652 - 1.03354*(t7772*t9652 + t9655) - 0.05315*(t7782*t9652 + t9659);
  p_output1[36]=-0.05315*t8059 - 1.03354*(-1.*t7772*t8042 + t9603) + t8033*t9665 + t8042*t9669;
  p_output1[37]=t9619*t9665 + t9669*t9680 - 1.03354*(t9627 - 1.*t7772*t9680) - 0.05315*(t9634 - 1.*t7782*t9680);
  p_output1[38]=t9649*t9665 + t9669*t9693 - 1.03354*(t9655 - 1.*t7772*t9693) - 0.05315*(t9659 - 1.*t7782*t9693);
  p_output1[39]=0;
  p_output1[40]=0;
  p_output1[41]=0;
  p_output1[42]=0;
  p_output1[43]=0;
  p_output1[44]=0;
  p_output1[45]=0;
  p_output1[46]=0;
  p_output1[47]=0;
  p_output1[48]=0;
  p_output1[49]=0;
  p_output1[50]=0;
  p_output1[51]=0;
  p_output1[52]=0;
  p_output1[53]=0;
  p_output1[54]=0;
  p_output1[55]=0;
  p_output1[56]=0;
  p_output1[57]=0;
  p_output1[58]=0;
  p_output1[59]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "One input(s) required (var1).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 20 && ncols == 1) && 
      !(mrows == 1 && ncols == 20))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 3, (mwSize) 20, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1);


}

#else // MATLAB_MEX_FILE

#include "Jp_LeftToeJoint_mex.hh"

namespace SymExpression
{

void Jp_LeftToeJoint_mex_raw(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}

}

#endif // MATLAB_MEX_FILE
