/*
 * Automatically Generated from Mathematica.
 * Mon 11 May 2020 22:22:44 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t1491;
  double t1523;
  double t1581;
  double t1642;
  double t1813;
  double t2076;
  double t1971;
  double t2009;
  double t2091;
  double t410;
  double t522;
  double t722;
  double t1109;
  double t2034;
  double t2129;
  double t2131;
  double t2313;
  double t2344;
  double t2374;
  double t82;
  double t2599;
  double t2623;
  double t2666;
  double t3025;
  double t3115;
  double t3126;
  double t3161;
  double t3367;
  double t3369;
  double t3370;
  double t3939;
  double t3991;
  double t4012;
  double t4104;
  double t4229;
  double t4337;
  double t4409;
  double t4618;
  double t4644;
  double t4779;
  double t5067;
  double t5084;
  double t5158;
  double t5240;
  double t5248;
  double t5252;
  double t5300;
  double t5513;
  double t5631;
  double t5674;
  double t6033;
  double t6061;
  double t6068;
  double t6092;
  double t6224;
  double t6257;
  double t6453;
  double t6538;
  double t6549;
  double t6705;
  double t7047;
  double t7281;
  double t7285;
  double t7296;
  double t7307;
  double t7308;
  double t7315;
  double t7403;
  double t7454;
  double t7528;
  double t7561;
  double t7607;
  double t7615;
  double t930;
  double t1287;
  double t1460;
  double t1739;
  double t1903;
  double t1925;
  double t2200;
  double t2222;
  double t2300;
  double t2482;
  double t2541;
  double t2592;
  double t7732;
  double t7739;
  double t7771;
  double t7783;
  double t7808;
  double t7811;
  double t3128;
  double t3289;
  double t3350;
  double t7840;
  double t7843;
  double t7848;
  double t3768;
  double t3795;
  double t3806;
  double t4388;
  double t4508;
  double t4523;
  double t7864;
  double t7870;
  double t7877;
  double t7961;
  double t7967;
  double t7971;
  double t4956;
  double t4994;
  double t5060;
  double t5275;
  double t5305;
  double t5389;
  double t7982;
  double t7987;
  double t7990;
  double t8000;
  double t8014;
  double t8015;
  double t5744;
  double t5753;
  double t5947;
  double t6316;
  double t6465;
  double t6519;
  double t8019;
  double t8022;
  double t8025;
  double t8030;
  double t8038;
  double t8041;
  double t6792;
  double t6817;
  double t6964;
  double t7309;
  double t7318;
  double t7397;
  double t8049;
  double t8050;
  double t8051;
  double t8060;
  double t8063;
  double t8064;
  double t7550;
  double t7552;
  double t7560;
  double t8068;
  double t8074;
  double t8076;
  double t8081;
  double t8084;
  double t8092;
  double t8129;
  double t8132;
  double t8140;
  double t8144;
  double t8147;
  double t8148;
  double t8164;
  double t8166;
  double t8169;
  double t8171;
  double t8172;
  double t8173;
  double t8177;
  double t8178;
  double t8183;
  double t8185;
  double t8187;
  double t8188;
  double t8191;
  double t8195;
  double t8196;
  double t8199;
  double t8200;
  double t8201;
  double t8204;
  double t8208;
  double t8209;
  double t8215;
  double t8216;
  double t8218;
  double t8221;
  double t8224;
  double t8225;
  double t8245;
  double t8246;
  double t8247;
  double t8251;
  double t8252;
  double t8253;
  double t8260;
  double t8261;
  double t8262;
  double t8266;
  double t8267;
  double t8271;
  double t8274;
  double t8275;
  double t8276;
  double t8278;
  double t8279;
  double t8280;
  double t8282;
  double t8284;
  double t8285;
  double t8288;
  double t8289;
  double t8290;
  double t8292;
  double t8293;
  double t8294;
  double t8296;
  double t8298;
  double t8299;
  double t8302;
  double t8303;
  double t8304;
  double t8321;
  double t8322;
  double t8323;
  double t8327;
  double t8329;
  double t8330;
  double t8338;
  double t8339;
  double t8340;
  double t8342;
  double t8343;
  double t8344;
  double t8346;
  double t8347;
  double t8348;
  double t8353;
  double t8354;
  double t8356;
  double t8358;
  double t8361;
  double t8365;
  double t8367;
  double t8368;
  double t8370;
  double t8372;
  double t8373;
  double t8374;
  double t8376;
  double t8379;
  double t8381;
  double t8383;
  double t8384;
  double t8385;
  double t8401;
  double t8402;
  double t8403;
  double t8410;
  double t8411;
  double t8405;
  double t8407;
  double t8408;
  double t8415;
  double t8416;
  double t8417;
  double t8419;
  double t8421;
  double t8422;
  double t8424;
  double t8425;
  double t8428;
  double t8431;
  double t8432;
  double t8433;
  double t8435;
  double t8437;
  double t8438;
  double t8440;
  double t8441;
  double t8442;
  double t8444;
  double t8446;
  double t8447;
  double t8451;
  double t8452;
  double t8454;
  double t8466;
  double t8468;
  double t8469;
  double t8475;
  double t8476;
  double t8477;
  double t8472;
  double t8473;
  double t8482;
  double t8484;
  double t8485;
  double t8488;
  double t8489;
  double t8490;
  double t8494;
  double t8496;
  double t8506;
  double t8511;
  double t8513;
  double t8514;
  double t8516;
  double t8520;
  double t8521;
  double t8525;
  double t8528;
  double t8529;
  double t8532;
  double t8533;
  double t8535;
  double t8540;
  double t8542;
  double t8544;
  double t8567;
  double t8568;
  double t8569;
  double t8561;
  double t8564;
  double t8565;
  double t8574;
  double t8576;
  double t8577;
  double t8580;
  double t8581;
  double t8582;
  double t8588;
  double t8590;
  double t8591;
  double t8593;
  double t8594;
  double t8595;
  double t8597;
  double t8599;
  double t8600;
  double t8602;
  double t8603;
  double t8604;
  double t8607;
  double t8609;
  double t8610;
  double t8613;
  double t8614;
  double t8615;
  double t8637;
  double t8638;
  double t8647;
  double t8648;
  double t8652;
  double t8654;
  double t8655;
  double t8657;
  double t8660;
  double t8662;
  double t8664;
  double t8666;
  double t8667;
  double t8669;
  double t8671;
  double t8672;
  double t8675;
  double t8677;
  double t8678;
  double t8679;
  double t8683;
  double t8685;
  double t8686;
  double t8688;
  double t8689;
  double t8691;
  double t8629;
  double t8630;
  double t8633;
  double t8634;
  double t8635;
  double t8710;
  double t8711;
  double t8712;
  double t8721;
  double t8722;
  double t8714;
  double t8716;
  double t8728;
  double t8730;
  double t8731;
  double t8734;
  double t8735;
  double t8736;
  double t8738;
  double t8740;
  double t8741;
  double t8744;
  double t8745;
  double t8746;
  double t8748;
  double t8749;
  double t8751;
  double t8755;
  double t8756;
  double t8757;
  double t8759;
  double t8760;
  double t8761;
  double t8763;
  double t8765;
  double t8766;
  double t8566;
  double t8570;
  double t8572;
  double t8573;
  double t8579;
  double t8584;
  double t8592;
  double t8596;
  double t8601;
  double t8605;
  double t8611;
  double t8616;
  double t8617;
  double t8618;
  double t8620;
  double t8621;
  double t8622;
  double t8623;
  double t8624;
  double t8626;
  double t7913;
  double t7945;
  double t7948;
  double t8810;
  double t8811;
  double t8812;
  double t8815;
  double t8816;
  double t8818;
  double t8820;
  double t8821;
  double t8822;
  double t8825;
  double t8827;
  double t8828;
  double t8830;
  double t8832;
  double t8834;
  double t8836;
  double t8837;
  double t8838;
  double t8789;
  double t8790;
  double t8791;
  double t8793;
  double t8794;
  double t8852;
  double t8853;
  double t8854;
  double t8858;
  double t8859;
  double t8860;
  double t8871;
  double t8874;
  double t8875;
  double t8878;
  double t8879;
  double t8884;
  double t8890;
  double t8891;
  double t8892;
  double t8897;
  double t8900;
  double t8901;
  double t8903;
  double t8904;
  double t8910;
  double t8913;
  double t8914;
  double t8917;
  double t8935;
  double t8937;
  double t8938;
  double t8941;
  double t8942;
  double t8943;
  double t8954;
  double t8956;
  double t8957;
  double t8959;
  double t8964;
  double t8965;
  double t8967;
  double t8968;
  double t8970;
  double t8972;
  double t8973;
  double t8974;
  double t8977;
  double t8978;
  double t8979;
  double t8982;
  double t8983;
  double t8984;
  double t9008;
  double t9009;
  double t9010;
  double t9013;
  double t9014;
  double t9016;
  double t9017;
  double t9018;
  double t9020;
  double t9021;
  double t9022;
  double t9024;
  double t9025;
  double t9026;
  double t9028;
  double t9029;
  double t9030;
  double t9033;
  double t9034;
  double t9035;
  double t8999;
  double t9000;
  double t9004;
  double t9005;
  double t9006;
  double t9049;
  double t9051;
  double t9052;
  double t9057;
  double t9058;
  double t9059;
  double t9062;
  double t9063;
  double t9066;
  double t9068;
  double t9072;
  double t9074;
  double t9077;
  double t9078;
  double t9079;
  double t9087;
  double t9088;
  double t9089;
  double t9091;
  double t9092;
  double t9093;
  double t9095;
  double t9098;
  double t9101;
  double t9109;
  double t9112;
  double t9113;
  double t9133;
  double t9135;
  double t9136;
  double t9138;
  double t9140;
  double t9142;
  double t9148;
  double t9149;
  double t9150;
  double t9152;
  double t9154;
  double t9156;
  double t9159;
  double t9160;
  double t9161;
  double t9165;
  double t9166;
  double t9167;
  double t9169;
  double t9171;
  double t9172;
  double t9175;
  double t9176;
  double t9177;
  double t9179;
  double t9180;
  double t9182;
  double t9206;
  double t9207;
  double t9210;
  double t9211;
  double t9212;
  double t9214;
  double t9215;
  double t9217;
  double t9220;
  double t9221;
  double t9225;
  double t9226;
  double t9228;
  double t9195;
  double t9197;
  double t9198;
  double t9200;
  double t9202;
  double t9240;
  double t9241;
  double t9242;
  double t9245;
  double t9246;
  double t9248;
  double t9250;
  double t9252;
  double t9253;
  double t9254;
  double t9257;
  double t9258;
  double t9259;
  double t9262;
  double t9264;
  double t9266;
  double t9271;
  double t9272;
  double t9275;
  double t9302;
  double t9303;
  double t9304;
  double t9307;
  double t9308;
  double t9311;
  double t9312;
  double t9314;
  double t9315;
  double t9316;
  double t9322;
  double t9323;
  double t9324;
  double t9326;
  double t9327;
  double t9330;
  double t9332;
  double t9333;
  double t9334;
  double t9361;
  double t9363;
  double t9368;
  double t9369;
  double t9371;
  double t9372;
  double t9373;
  double t9351;
  double t9354;
  double t9356;
  double t9357;
  double t9359;
  double t9388;
  double t9390;
  double t9391;
  double t9393;
  double t9394;
  double t9397;
  double t9398;
  double t9400;
  double t9401;
  double t9402;
  double t9404;
  double t9405;
  double t9406;
  double t9420;
  double t9421;
  double t9422;
  double t9424;
  double t9425;
  double t9427;
  double t9428;
  double t9430;
  double t9431;
  double t9432;
  double t9434;
  double t9435;
  double t9436;
  double t9464;
  double t9465;
  double t8106;
  double t9452;
  double t9453;
  double t9456;
  double t9459;
  double t9460;
  double t9482;
  double t9486;
  double t9487;
  double t9492;
  double t9493;
  double t9498;
  double t9499;
  double t9513;
  double t9515;
  double t9516;
  double t9520;
  double t9522;
  double t9524;
  double t9525;
  double t9467;
  double t8107;
  double t8112;
  double t9545;
  double t9546;
  double t9549;
  double t9550;
  double t9553;
  double t9501;
  double t9569;
  double t9573;
  double t9574;
  double t9507;
  double t9529;
  double t9590;
  double t9591;
  double t9593;
  double t9534;
  t1491 = Sin(var1[3]);
  t1523 = Cos(var1[13]);
  t1581 = -1.*t1523;
  t1642 = 1. + t1581;
  t1813 = Sin(var1[13]);
  t2076 = Cos(var1[3]);
  t1971 = Cos(var1[5]);
  t2009 = Sin(var1[4]);
  t2091 = Sin(var1[5]);
  t410 = Cos(var1[14]);
  t522 = -1.*t410;
  t722 = 1. + t522;
  t1109 = Sin(var1[14]);
  t2034 = -1.*t1971*t1491*t2009;
  t2129 = t2076*t2091;
  t2131 = t2034 + t2129;
  t2313 = -1.*t2076*t1971;
  t2344 = -1.*t1491*t2009*t2091;
  t2374 = t2313 + t2344;
  t82 = Cos(var1[4]);
  t2599 = t1813*t2131;
  t2623 = t1523*t2374;
  t2666 = t2599 + t2623;
  t3025 = Cos(var1[15]);
  t3115 = -1.*t3025;
  t3126 = 1. + t3115;
  t3161 = Sin(var1[15]);
  t3367 = t1523*t2131;
  t3369 = -1.*t1813*t2374;
  t3370 = t3367 + t3369;
  t3939 = -1.*t410*t82*t1491;
  t3991 = t1109*t2666;
  t4012 = t3939 + t3991;
  t4104 = Cos(var1[16]);
  t4229 = -1.*t4104;
  t4337 = 1. + t4229;
  t4409 = Sin(var1[16]);
  t4618 = t3161*t3370;
  t4644 = t3025*t4012;
  t4779 = t4618 + t4644;
  t5067 = t3025*t3370;
  t5084 = -1.*t3161*t4012;
  t5158 = t5067 + t5084;
  t5240 = Cos(var1[17]);
  t5248 = -1.*t5240;
  t5252 = 1. + t5248;
  t5300 = Sin(var1[17]);
  t5513 = -1.*t4409*t4779;
  t5631 = t4104*t5158;
  t5674 = t5513 + t5631;
  t6033 = t4104*t4779;
  t6061 = t4409*t5158;
  t6068 = t6033 + t6061;
  t6092 = Cos(var1[18]);
  t6224 = -1.*t6092;
  t6257 = 1. + t6224;
  t6453 = Sin(var1[18]);
  t6538 = t5300*t5674;
  t6549 = t5240*t6068;
  t6705 = t6538 + t6549;
  t7047 = t5240*t5674;
  t7281 = -1.*t5300*t6068;
  t7285 = t7047 + t7281;
  t7296 = Cos(var1[19]);
  t7307 = -1.*t7296;
  t7308 = 1. + t7307;
  t7315 = Sin(var1[19]);
  t7403 = -1.*t6453*t6705;
  t7454 = t6092*t7285;
  t7528 = t7403 + t7454;
  t7561 = t6092*t6705;
  t7607 = t6453*t7285;
  t7615 = t7561 + t7607;
  t930 = -0.08055*t722;
  t1287 = -0.135*t1109;
  t1460 = 0. + t930 + t1287;
  t1739 = 0.07996*t1642;
  t1903 = 0.135*t1813;
  t1925 = 0. + t1739 + t1903;
  t2200 = -0.135*t1642;
  t2222 = 0.07996*t1813;
  t2300 = 0. + t2200 + t2222;
  t2482 = -0.135*t722;
  t2541 = 0.08055*t1109;
  t2592 = 0. + t2482 + t2541;
  t7732 = t2076*t1971*t2009;
  t7739 = t1491*t2091;
  t7771 = t7732 + t7739;
  t7783 = -1.*t1971*t1491;
  t7808 = t2076*t2009*t2091;
  t7811 = t7783 + t7808;
  t3128 = -0.01004*t3126;
  t3289 = 0.08055*t3161;
  t3350 = 0. + t3128 + t3289;
  t7840 = t1813*t7771;
  t7843 = t1523*t7811;
  t7848 = t7840 + t7843;
  t3768 = -0.08055*t3126;
  t3795 = -0.01004*t3161;
  t3806 = 0. + t3768 + t3795;
  t4388 = -0.08055*t4337;
  t4508 = -0.13004*t4409;
  t4523 = 0. + t4388 + t4508;
  t7864 = t1523*t7771;
  t7870 = -1.*t1813*t7811;
  t7877 = t7864 + t7870;
  t7961 = t410*t2076*t82;
  t7967 = t1109*t7848;
  t7971 = t7961 + t7967;
  t4956 = -0.13004*t4337;
  t4994 = 0.08055*t4409;
  t5060 = 0. + t4956 + t4994;
  t5275 = -0.19074*t5252;
  t5305 = 0.03315*t5300;
  t5389 = 0. + t5275 + t5305;
  t7982 = t3161*t7877;
  t7987 = t3025*t7971;
  t7990 = t7982 + t7987;
  t8000 = t3025*t7877;
  t8014 = -1.*t3161*t7971;
  t8015 = t8000 + t8014;
  t5744 = -0.03315*t5252;
  t5753 = -0.19074*t5300;
  t5947 = 0. + t5744 + t5753;
  t6316 = -0.01315*t6257;
  t6465 = -0.62554*t6453;
  t6519 = 0. + t6316 + t6465;
  t8019 = -1.*t4409*t7990;
  t8022 = t4104*t8015;
  t8025 = t8019 + t8022;
  t8030 = t4104*t7990;
  t8038 = t4409*t8015;
  t8041 = t8030 + t8038;
  t6792 = -0.62554*t6257;
  t6817 = 0.01315*t6453;
  t6964 = 0. + t6792 + t6817;
  t7309 = -1.03354*t7308;
  t7318 = 0.05315*t7315;
  t7397 = 0. + t7309 + t7318;
  t8049 = t5300*t8025;
  t8050 = t5240*t8041;
  t8051 = t8049 + t8050;
  t8060 = t5240*t8025;
  t8063 = -1.*t5300*t8041;
  t8064 = t8060 + t8063;
  t7550 = -0.05315*t7308;
  t7552 = -1.03354*t7315;
  t7560 = 0. + t7550 + t7552;
  t8068 = -1.*t6453*t8051;
  t8074 = t6092*t8064;
  t8076 = t8068 + t8074;
  t8081 = t6092*t8051;
  t8084 = t6453*t8064;
  t8092 = t8081 + t8084;
  t8129 = t2076*t82*t1971*t1813;
  t8132 = t1523*t2076*t82*t2091;
  t8140 = t8129 + t8132;
  t8144 = t1523*t2076*t82*t1971;
  t8147 = -1.*t2076*t82*t1813*t2091;
  t8148 = t8144 + t8147;
  t8164 = -1.*t410*t2076*t2009;
  t8166 = t1109*t8140;
  t8169 = t8164 + t8166;
  t8171 = t3161*t8148;
  t8172 = t3025*t8169;
  t8173 = t8171 + t8172;
  t8177 = t3025*t8148;
  t8178 = -1.*t3161*t8169;
  t8183 = t8177 + t8178;
  t8185 = -1.*t4409*t8173;
  t8187 = t4104*t8183;
  t8188 = t8185 + t8187;
  t8191 = t4104*t8173;
  t8195 = t4409*t8183;
  t8196 = t8191 + t8195;
  t8199 = t5300*t8188;
  t8200 = t5240*t8196;
  t8201 = t8199 + t8200;
  t8204 = t5240*t8188;
  t8208 = -1.*t5300*t8196;
  t8209 = t8204 + t8208;
  t8215 = -1.*t6453*t8201;
  t8216 = t6092*t8209;
  t8218 = t8215 + t8216;
  t8221 = t6092*t8201;
  t8224 = t6453*t8209;
  t8225 = t8221 + t8224;
  t8245 = t82*t1971*t1813*t1491;
  t8246 = t1523*t82*t1491*t2091;
  t8247 = t8245 + t8246;
  t8251 = t1523*t82*t1971*t1491;
  t8252 = -1.*t82*t1813*t1491*t2091;
  t8253 = t8251 + t8252;
  t8260 = -1.*t410*t1491*t2009;
  t8261 = t1109*t8247;
  t8262 = t8260 + t8261;
  t8266 = t3161*t8253;
  t8267 = t3025*t8262;
  t8271 = t8266 + t8267;
  t8274 = t3025*t8253;
  t8275 = -1.*t3161*t8262;
  t8276 = t8274 + t8275;
  t8278 = -1.*t4409*t8271;
  t8279 = t4104*t8276;
  t8280 = t8278 + t8279;
  t8282 = t4104*t8271;
  t8284 = t4409*t8276;
  t8285 = t8282 + t8284;
  t8288 = t5300*t8280;
  t8289 = t5240*t8285;
  t8290 = t8288 + t8289;
  t8292 = t5240*t8280;
  t8293 = -1.*t5300*t8285;
  t8294 = t8292 + t8293;
  t8296 = -1.*t6453*t8290;
  t8298 = t6092*t8294;
  t8299 = t8296 + t8298;
  t8302 = t6092*t8290;
  t8303 = t6453*t8294;
  t8304 = t8302 + t8303;
  t8321 = -1.*t1971*t1813*t2009;
  t8322 = -1.*t1523*t2009*t2091;
  t8323 = t8321 + t8322;
  t8327 = -1.*t1523*t1971*t2009;
  t8329 = t1813*t2009*t2091;
  t8330 = t8327 + t8329;
  t8338 = -1.*t410*t82;
  t8339 = t1109*t8323;
  t8340 = t8338 + t8339;
  t8342 = t3161*t8330;
  t8343 = t3025*t8340;
  t8344 = t8342 + t8343;
  t8346 = t3025*t8330;
  t8347 = -1.*t3161*t8340;
  t8348 = t8346 + t8347;
  t8353 = -1.*t4409*t8344;
  t8354 = t4104*t8348;
  t8356 = t8353 + t8354;
  t8358 = t4104*t8344;
  t8361 = t4409*t8348;
  t8365 = t8358 + t8361;
  t8367 = t5300*t8356;
  t8368 = t5240*t8365;
  t8370 = t8367 + t8368;
  t8372 = t5240*t8356;
  t8373 = -1.*t5300*t8365;
  t8374 = t8372 + t8373;
  t8376 = -1.*t6453*t8370;
  t8379 = t6092*t8374;
  t8381 = t8376 + t8379;
  t8383 = t6092*t8370;
  t8384 = t6453*t8374;
  t8385 = t8383 + t8384;
  t8401 = t1971*t1491;
  t8402 = -1.*t2076*t2009*t2091;
  t8403 = t8401 + t8402;
  t8410 = t1813*t8403;
  t8411 = t7864 + t8410;
  t8405 = -1.*t1813*t7771;
  t8407 = t1523*t8403;
  t8408 = t8405 + t8407;
  t8415 = t3161*t8408;
  t8416 = t3025*t1109*t8411;
  t8417 = t8415 + t8416;
  t8419 = t3025*t8408;
  t8421 = -1.*t1109*t3161*t8411;
  t8422 = t8419 + t8421;
  t8424 = -1.*t4409*t8417;
  t8425 = t4104*t8422;
  t8428 = t8424 + t8425;
  t8431 = t4104*t8417;
  t8432 = t4409*t8422;
  t8433 = t8431 + t8432;
  t8435 = t5300*t8428;
  t8437 = t5240*t8433;
  t8438 = t8435 + t8437;
  t8440 = t5240*t8428;
  t8441 = -1.*t5300*t8433;
  t8442 = t8440 + t8441;
  t8444 = -1.*t6453*t8438;
  t8446 = t6092*t8442;
  t8447 = t8444 + t8446;
  t8451 = t6092*t8438;
  t8452 = t6453*t8442;
  t8454 = t8451 + t8452;
  t8466 = t1971*t1491*t2009;
  t8468 = -1.*t2076*t2091;
  t8469 = t8466 + t8468;
  t8475 = t1523*t8469;
  t8476 = t1813*t2374;
  t8477 = t8475 + t8476;
  t8472 = -1.*t1813*t8469;
  t8473 = t8472 + t2623;
  t8482 = t3161*t8473;
  t8484 = t3025*t1109*t8477;
  t8485 = t8482 + t8484;
  t8488 = t3025*t8473;
  t8489 = -1.*t1109*t3161*t8477;
  t8490 = t8488 + t8489;
  t8494 = -1.*t4409*t8485;
  t8496 = t4104*t8490;
  t8506 = t8494 + t8496;
  t8511 = t4104*t8485;
  t8513 = t4409*t8490;
  t8514 = t8511 + t8513;
  t8516 = t5300*t8506;
  t8520 = t5240*t8514;
  t8521 = t8516 + t8520;
  t8525 = t5240*t8506;
  t8528 = -1.*t5300*t8514;
  t8529 = t8525 + t8528;
  t8532 = -1.*t6453*t8521;
  t8533 = t6092*t8529;
  t8535 = t8532 + t8533;
  t8540 = t6092*t8521;
  t8542 = t6453*t8529;
  t8544 = t8540 + t8542;
  t8567 = t1523*t82*t1971;
  t8568 = -1.*t82*t1813*t2091;
  t8569 = t8567 + t8568;
  t8561 = -1.*t82*t1971*t1813;
  t8564 = -1.*t1523*t82*t2091;
  t8565 = t8561 + t8564;
  t8574 = t3161*t8565;
  t8576 = t3025*t1109*t8569;
  t8577 = t8574 + t8576;
  t8580 = t3025*t8565;
  t8581 = -1.*t1109*t3161*t8569;
  t8582 = t8580 + t8581;
  t8588 = -1.*t4409*t8577;
  t8590 = t4104*t8582;
  t8591 = t8588 + t8590;
  t8593 = t4104*t8577;
  t8594 = t4409*t8582;
  t8595 = t8593 + t8594;
  t8597 = t5300*t8591;
  t8599 = t5240*t8595;
  t8600 = t8597 + t8599;
  t8602 = t5240*t8591;
  t8603 = -1.*t5300*t8595;
  t8604 = t8602 + t8603;
  t8607 = -1.*t6453*t8600;
  t8609 = t6092*t8604;
  t8610 = t8607 + t8609;
  t8613 = t6092*t8600;
  t8614 = t6453*t8604;
  t8615 = t8613 + t8614;
  t8637 = -1.*t1523*t7811;
  t8638 = t8405 + t8637;
  t8647 = t3161*t8638;
  t8648 = t3025*t1109*t7877;
  t8652 = t8647 + t8648;
  t8654 = t3025*t8638;
  t8655 = -1.*t1109*t3161*t7877;
  t8657 = t8654 + t8655;
  t8660 = -1.*t4409*t8652;
  t8662 = t4104*t8657;
  t8664 = t8660 + t8662;
  t8666 = t4104*t8652;
  t8667 = t4409*t8657;
  t8669 = t8666 + t8667;
  t8671 = t5300*t8664;
  t8672 = t5240*t8669;
  t8675 = t8671 + t8672;
  t8677 = t5240*t8664;
  t8678 = -1.*t5300*t8669;
  t8679 = t8677 + t8678;
  t8683 = -1.*t6453*t8675;
  t8685 = t6092*t8679;
  t8686 = t8683 + t8685;
  t8688 = t6092*t8675;
  t8689 = t6453*t8679;
  t8691 = t8688 + t8689;
  t8629 = 0.135*t1523;
  t8630 = t8629 + t2222;
  t8633 = 0.07996*t1523;
  t8634 = -0.135*t1813;
  t8635 = t8633 + t8634;
  t8710 = t2076*t1971;
  t8711 = t1491*t2009*t2091;
  t8712 = t8710 + t8711;
  t8721 = -1.*t1813*t8712;
  t8722 = t8475 + t8721;
  t8714 = -1.*t1523*t8712;
  t8716 = t8472 + t8714;
  t8728 = t3161*t8716;
  t8730 = t3025*t1109*t8722;
  t8731 = t8728 + t8730;
  t8734 = t3025*t8716;
  t8735 = -1.*t1109*t3161*t8722;
  t8736 = t8734 + t8735;
  t8738 = -1.*t4409*t8731;
  t8740 = t4104*t8736;
  t8741 = t8738 + t8740;
  t8744 = t4104*t8731;
  t8745 = t4409*t8736;
  t8746 = t8744 + t8745;
  t8748 = t5300*t8741;
  t8749 = t5240*t8746;
  t8751 = t8748 + t8749;
  t8755 = t5240*t8741;
  t8756 = -1.*t5300*t8746;
  t8757 = t8755 + t8756;
  t8759 = -1.*t6453*t8751;
  t8760 = t6092*t8757;
  t8761 = t8759 + t8760;
  t8763 = t6092*t8751;
  t8765 = t6453*t8757;
  t8766 = t8763 + t8765;
  t8566 = t3350*t8565;
  t8570 = -0.1305*t410*t8569;
  t8572 = t2592*t8569;
  t8573 = t1109*t3806*t8569;
  t8579 = t4523*t8577;
  t8584 = t5060*t8582;
  t8592 = t5389*t8591;
  t8596 = t5947*t8595;
  t8601 = t6519*t8600;
  t8605 = t6964*t8604;
  t8611 = t7397*t8610;
  t8616 = t7560*t8615;
  t8617 = t7315*t8610;
  t8618 = t7296*t8615;
  t8620 = t8617 + t8618;
  t8621 = -0.05315*t8620;
  t8622 = t7296*t8610;
  t8623 = -1.*t7315*t8615;
  t8624 = t8622 + t8623;
  t8626 = -1.03354*t8624;
  t7913 = -1.*t2076*t82*t1109;
  t7945 = t410*t7848;
  t7948 = t7913 + t7945;
  t8810 = -1.*t4104*t3161*t7948;
  t8811 = -1.*t3025*t4409*t7948;
  t8812 = t8810 + t8811;
  t8815 = t3025*t4104*t7948;
  t8816 = -1.*t3161*t4409*t7948;
  t8818 = t8815 + t8816;
  t8820 = t5300*t8812;
  t8821 = t5240*t8818;
  t8822 = t8820 + t8821;
  t8825 = t5240*t8812;
  t8827 = -1.*t5300*t8818;
  t8828 = t8825 + t8827;
  t8830 = -1.*t6453*t8822;
  t8832 = t6092*t8828;
  t8834 = t8830 + t8832;
  t8836 = t6092*t8822;
  t8837 = t6453*t8828;
  t8838 = t8836 + t8837;
  t8789 = -0.135*t410;
  t8790 = -0.08055*t1109;
  t8791 = t8789 + t8790;
  t8793 = 0.08055*t410;
  t8794 = t8793 + t1287;
  t8852 = t1813*t8469;
  t8853 = t1523*t8712;
  t8854 = t8852 + t8853;
  t8858 = -1.*t82*t1109*t1491;
  t8859 = t410*t8854;
  t8860 = t8858 + t8859;
  t8871 = -1.*t4104*t3161*t8860;
  t8874 = -1.*t3025*t4409*t8860;
  t8875 = t8871 + t8874;
  t8878 = t3025*t4104*t8860;
  t8879 = -1.*t3161*t4409*t8860;
  t8884 = t8878 + t8879;
  t8890 = t5300*t8875;
  t8891 = t5240*t8884;
  t8892 = t8890 + t8891;
  t8897 = t5240*t8875;
  t8900 = -1.*t5300*t8884;
  t8901 = t8897 + t8900;
  t8903 = -1.*t6453*t8892;
  t8904 = t6092*t8901;
  t8910 = t8903 + t8904;
  t8913 = t6092*t8892;
  t8914 = t6453*t8901;
  t8917 = t8913 + t8914;
  t8935 = t82*t1971*t1813;
  t8937 = t1523*t82*t2091;
  t8938 = t8935 + t8937;
  t8941 = t1109*t2009;
  t8942 = t410*t8938;
  t8943 = t8941 + t8942;
  t8954 = -1.*t4104*t3161*t8943;
  t8956 = -1.*t3025*t4409*t8943;
  t8957 = t8954 + t8956;
  t8959 = t3025*t4104*t8943;
  t8964 = -1.*t3161*t4409*t8943;
  t8965 = t8959 + t8964;
  t8967 = t5300*t8957;
  t8968 = t5240*t8965;
  t8970 = t8967 + t8968;
  t8972 = t5240*t8957;
  t8973 = -1.*t5300*t8965;
  t8974 = t8972 + t8973;
  t8977 = -1.*t6453*t8970;
  t8978 = t6092*t8974;
  t8979 = t8977 + t8978;
  t8982 = t6092*t8970;
  t8983 = t6453*t8974;
  t8984 = t8982 + t8983;
  t9008 = -1.*t3161*t7877;
  t9009 = -1.*t3025*t7971;
  t9010 = t9008 + t9009;
  t9013 = t4409*t9010;
  t9014 = t9013 + t8022;
  t9016 = t4104*t9010;
  t9017 = -1.*t4409*t8015;
  t9018 = t9016 + t9017;
  t9020 = -1.*t5300*t9014;
  t9021 = t5240*t9018;
  t9022 = t9020 + t9021;
  t9024 = t5240*t9014;
  t9025 = t5300*t9018;
  t9026 = t9024 + t9025;
  t9028 = t6453*t9022;
  t9029 = t6092*t9026;
  t9030 = t9028 + t9029;
  t9033 = t6092*t9022;
  t9034 = -1.*t6453*t9026;
  t9035 = t9033 + t9034;
  t8999 = 0.08055*t3025;
  t9000 = t8999 + t3795;
  t9004 = -0.01004*t3025;
  t9005 = -0.08055*t3161;
  t9006 = t9004 + t9005;
  t9049 = t410*t82*t1491;
  t9051 = t1109*t8854;
  t9052 = t9049 + t9051;
  t9057 = -1.*t3161*t8722;
  t9058 = -1.*t3025*t9052;
  t9059 = t9057 + t9058;
  t9062 = t3025*t8722;
  t9063 = -1.*t3161*t9052;
  t9066 = t9062 + t9063;
  t9068 = t4409*t9059;
  t9072 = t4104*t9066;
  t9074 = t9068 + t9072;
  t9077 = t4104*t9059;
  t9078 = -1.*t4409*t9066;
  t9079 = t9077 + t9078;
  t9087 = -1.*t5300*t9074;
  t9088 = t5240*t9079;
  t9089 = t9087 + t9088;
  t9091 = t5240*t9074;
  t9092 = t5300*t9079;
  t9093 = t9091 + t9092;
  t9095 = t6453*t9089;
  t9098 = t6092*t9093;
  t9101 = t9095 + t9098;
  t9109 = t6092*t9089;
  t9112 = -1.*t6453*t9093;
  t9113 = t9109 + t9112;
  t9133 = -1.*t410*t2009;
  t9135 = t1109*t8938;
  t9136 = t9133 + t9135;
  t9138 = -1.*t3161*t8569;
  t9140 = -1.*t3025*t9136;
  t9142 = t9138 + t9140;
  t9148 = t3025*t8569;
  t9149 = -1.*t3161*t9136;
  t9150 = t9148 + t9149;
  t9152 = t4409*t9142;
  t9154 = t4104*t9150;
  t9156 = t9152 + t9154;
  t9159 = t4104*t9142;
  t9160 = -1.*t4409*t9150;
  t9161 = t9159 + t9160;
  t9165 = -1.*t5300*t9156;
  t9166 = t5240*t9161;
  t9167 = t9165 + t9166;
  t9169 = t5240*t9156;
  t9171 = t5300*t9161;
  t9172 = t9169 + t9171;
  t9175 = t6453*t9167;
  t9176 = t6092*t9172;
  t9177 = t9175 + t9176;
  t9179 = t6092*t9167;
  t9180 = -1.*t6453*t9172;
  t9182 = t9179 + t9180;
  t9206 = -1.*t4104*t7990;
  t9207 = t9206 + t9017;
  t9210 = -1.*t5300*t8025;
  t9211 = t5240*t9207;
  t9212 = t9210 + t9211;
  t9214 = t5300*t9207;
  t9215 = t8060 + t9214;
  t9217 = t6453*t9212;
  t9220 = t6092*t9215;
  t9221 = t9217 + t9220;
  t9225 = t6092*t9212;
  t9226 = -1.*t6453*t9215;
  t9228 = t9225 + t9226;
  t9195 = -0.13004*t4104;
  t9197 = -0.08055*t4409;
  t9198 = t9195 + t9197;
  t9200 = 0.08055*t4104;
  t9202 = t9200 + t4508;
  t9240 = t3161*t8722;
  t9241 = t3025*t9052;
  t9242 = t9240 + t9241;
  t9245 = -1.*t4409*t9242;
  t9246 = t9245 + t9072;
  t9248 = -1.*t4104*t9242;
  t9250 = t9248 + t9078;
  t9252 = -1.*t5300*t9246;
  t9253 = t5240*t9250;
  t9254 = t9252 + t9253;
  t9257 = t5240*t9246;
  t9258 = t5300*t9250;
  t9259 = t9257 + t9258;
  t9262 = t6453*t9254;
  t9264 = t6092*t9259;
  t9266 = t9262 + t9264;
  t9271 = t6092*t9254;
  t9272 = -1.*t6453*t9259;
  t9275 = t9271 + t9272;
  t9302 = t3161*t8569;
  t9303 = t3025*t9136;
  t9304 = t9302 + t9303;
  t9307 = -1.*t4409*t9304;
  t9308 = t9307 + t9154;
  t9311 = -1.*t4104*t9304;
  t9312 = t9311 + t9160;
  t9314 = -1.*t5300*t9308;
  t9315 = t5240*t9312;
  t9316 = t9314 + t9315;
  t9322 = t5240*t9308;
  t9323 = t5300*t9312;
  t9324 = t9322 + t9323;
  t9326 = t6453*t9316;
  t9327 = t6092*t9324;
  t9330 = t9326 + t9327;
  t9332 = t6092*t9316;
  t9333 = -1.*t6453*t9324;
  t9334 = t9332 + t9333;
  t9361 = -1.*t5240*t8041;
  t9363 = t9210 + t9361;
  t9368 = t6453*t9363;
  t9369 = t9368 + t8074;
  t9371 = t6092*t9363;
  t9372 = -1.*t6453*t8064;
  t9373 = t9371 + t9372;
  t9351 = 0.03315*t5240;
  t9354 = t9351 + t5753;
  t9356 = -0.19074*t5240;
  t9357 = -0.03315*t5300;
  t9359 = t9356 + t9357;
  t9388 = t4104*t9242;
  t9390 = t4409*t9066;
  t9391 = t9388 + t9390;
  t9393 = -1.*t5240*t9391;
  t9394 = t9252 + t9393;
  t9397 = -1.*t5300*t9391;
  t9398 = t9257 + t9397;
  t9400 = t6453*t9394;
  t9401 = t6092*t9398;
  t9402 = t9400 + t9401;
  t9404 = t6092*t9394;
  t9405 = -1.*t6453*t9398;
  t9406 = t9404 + t9405;
  t9420 = t4104*t9304;
  t9421 = t4409*t9150;
  t9422 = t9420 + t9421;
  t9424 = -1.*t5240*t9422;
  t9425 = t9314 + t9424;
  t9427 = -1.*t5300*t9422;
  t9428 = t9322 + t9427;
  t9430 = t6453*t9425;
  t9431 = t6092*t9428;
  t9432 = t9430 + t9431;
  t9434 = t6092*t9425;
  t9435 = -1.*t6453*t9428;
  t9436 = t9434 + t9435;
  t9464 = -1.*t6092*t8051;
  t9465 = t9464 + t9372;
  t8106 = t7296*t8076;
  t9452 = -0.62554*t6092;
  t9453 = -0.01315*t6453;
  t9456 = t9452 + t9453;
  t9459 = 0.01315*t6092;
  t9460 = t9459 + t6465;
  t9482 = t5300*t9246;
  t9486 = t5240*t9391;
  t9487 = t9482 + t9486;
  t9492 = -1.*t6453*t9487;
  t9493 = t9492 + t9401;
  t9498 = -1.*t6092*t9487;
  t9499 = t9498 + t9405;
  t9513 = t5300*t9308;
  t9515 = t5240*t9422;
  t9516 = t9513 + t9515;
  t9520 = -1.*t6453*t9516;
  t9522 = t9520 + t9431;
  t9524 = -1.*t6092*t9516;
  t9525 = t9524 + t9435;
  t9467 = -1.*t7315*t8076;
  t8107 = -1.*t7315*t8092;
  t8112 = t8106 + t8107;
  t9545 = 0.05315*t7296;
  t9546 = t9545 + t7552;
  t9549 = -1.03354*t7296;
  t9550 = -0.05315*t7315;
  t9553 = t9549 + t9550;
  t9501 = -1.*t7315*t9493;
  t9569 = t6092*t9487;
  t9573 = t6453*t9398;
  t9574 = t9569 + t9573;
  t9507 = t7296*t9493;
  t9529 = -1.*t7315*t9522;
  t9590 = t6092*t9516;
  t9591 = t6453*t9428;
  t9593 = t9590 + t9591;
  t9534 = t7296*t9522;
  p_output1[0]=1.;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=0;
  p_output1[4]=1.;
  p_output1[5]=0;
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=1.;
  p_output1[9]=t1925*t2131 + t2300*t2374 + t2592*t2666 + t3350*t3370 + t3806*t4012 + t4523*t4779 + t5060*t5158 + t5389*t5674 + t5947*t6068 + t6519*t6705 + t6964*t7285 + t7397*t7528 + t7560*t7615 - 0.05315*(t7315*t7528 + t7296*t7615) - 1.03354*(t7296*t7528 - 1.*t7315*t7615) - 1.*t1460*t1491*t82 - 0.1305*(t2666*t410 + t1109*t1491*t82);
  p_output1[10]=t1925*t7771 + t2300*t7811 + t2592*t7848 + t3350*t7877 - 0.1305*t7948 + t3806*t7971 + t4523*t7990 + t5060*t8015 + t5389*t8025 + t5947*t8041 + t6519*t8051 + t6964*t8064 + t7397*t8076 + t7560*t8092 - 0.05315*(t7315*t8076 + t7296*t8092) - 1.03354*t8112 + t1460*t2076*t82;
  p_output1[11]=0;
  p_output1[12]=-1.*t1460*t2009*t2076 + t2592*t8140 - 0.1305*(t1109*t2009*t2076 + t410*t8140) + t3350*t8148 + t3806*t8169 + t4523*t8173 + t5060*t8183 + t5389*t8188 + t5947*t8196 + t1925*t1971*t2076*t82 + t2076*t2091*t2300*t82 + t6519*t8201 + t6964*t8209 + t7397*t8218 + t7560*t8225 - 0.05315*(t7315*t8218 + t7296*t8225) - 1.03354*(t7296*t8218 - 1.*t7315*t8225);
  p_output1[13]=-1.*t1460*t1491*t2009 + t1491*t1925*t1971*t82 + t1491*t2091*t2300*t82 + t2592*t8247 - 0.1305*(t1109*t1491*t2009 + t410*t8247) + t3350*t8253 + t3806*t8262 + t4523*t8271 + t5060*t8276 + t5389*t8280 + t5947*t8285 + t6519*t8290 + t6964*t8294 + t7397*t8299 + t7560*t8304 - 0.05315*(t7315*t8299 + t7296*t8304) - 1.03354*(t7296*t8299 - 1.*t7315*t8304);
  p_output1[14]=-1.*t1925*t1971*t2009 - 1.*t2009*t2091*t2300 - 1.*t1460*t82 + t2592*t8323 - 0.1305*(t1109*t82 + t410*t8323) + t3350*t8330 + t3806*t8340 + t4523*t8344 + t5060*t8348 + t5389*t8356 + t5947*t8365 + t6519*t8370 + t6964*t8374 + t7397*t8381 + t7560*t8385 - 0.05315*(t7315*t8381 + t7296*t8385) - 1.03354*(t7296*t8381 - 1.*t7315*t8385);
  p_output1[15]=t2300*t7771 + t1925*t8403 + t3350*t8408 + t2592*t8411 + t1109*t3806*t8411 - 0.1305*t410*t8411 + t4523*t8417 + t5060*t8422 + t5389*t8428 + t5947*t8433 + t6519*t8438 + t6964*t8442 + t7397*t8447 + t7560*t8454 - 0.05315*(t7315*t8447 + t7296*t8454) - 1.03354*(t7296*t8447 - 1.*t7315*t8454);
  p_output1[16]=t1925*t2374 + t2300*t8469 + t3350*t8473 + t2592*t8477 + t1109*t3806*t8477 - 0.1305*t410*t8477 + t4523*t8485 + t5060*t8490 + t5389*t8506 + t5947*t8514 + t6519*t8521 + t6964*t8529 + t7397*t8535 + t7560*t8544 - 0.05315*(t7315*t8535 + t7296*t8544) - 1.03354*(t7296*t8535 - 1.*t7315*t8544);
  p_output1[17]=-1.*t1925*t2091*t82 + t1971*t2300*t82 + t8566 + t8570 + t8572 + t8573 + t8579 + t8584 + t8592 + t8596 + t8601 + t8605 + t8611 + t8616 + t8621 + t8626;
  p_output1[18]=0;
  p_output1[19]=0;
  p_output1[20]=0;
  p_output1[21]=0;
  p_output1[22]=0;
  p_output1[23]=0;
  p_output1[24]=0;
  p_output1[25]=0;
  p_output1[26]=0;
  p_output1[27]=0;
  p_output1[28]=0;
  p_output1[29]=0;
  p_output1[30]=0;
  p_output1[31]=0;
  p_output1[32]=0;
  p_output1[33]=0;
  p_output1[34]=0;
  p_output1[35]=0;
  p_output1[36]=0;
  p_output1[37]=0;
  p_output1[38]=0;
  p_output1[39]=t2592*t7877 + t1109*t3806*t7877 - 0.1305*t410*t7877 + t7771*t8630 + t7811*t8635 + t3350*t8638 + t4523*t8652 + t5060*t8657 + t5389*t8664 + t5947*t8669 + t6519*t8675 + t6964*t8679 + t7397*t8686 + t7560*t8691 - 0.05315*(t7315*t8686 + t7296*t8691) - 1.03354*(t7296*t8686 - 1.*t7315*t8691);
  p_output1[40]=t8469*t8630 + t8635*t8712 + t3350*t8716 + t2592*t8722 + t1109*t3806*t8722 - 0.1305*t410*t8722 + t4523*t8731 + t5060*t8736 + t5389*t8741 + t5947*t8746 + t6519*t8751 + t6964*t8757 + t7397*t8761 + t7560*t8766 - 0.05315*(t7315*t8761 + t7296*t8766) - 1.03354*(t7296*t8761 - 1.*t7315*t8766);
  p_output1[41]=t8566 + t8570 + t8572 + t8573 + t8579 + t8584 + t8592 + t8596 + t8601 + t8605 + t8611 + t8616 + t8621 + t8626 + t1971*t82*t8630 + t2091*t82*t8635;
  p_output1[42]=t3806*t7948 + t3025*t4523*t7948 - 1.*t3161*t5060*t7948 - 0.1305*(-1.*t1109*t7848 - 1.*t2076*t410*t82) + t2076*t82*t8791 + t7848*t8794 + t5389*t8812 + t5947*t8818 + t6519*t8822 + t6964*t8828 + t7397*t8834 + t7560*t8838 - 0.05315*(t7315*t8834 + t7296*t8838) - 1.03354*(t7296*t8834 - 1.*t7315*t8838);
  p_output1[43]=t1491*t82*t8791 + t8794*t8854 - 0.1305*(t3939 - 1.*t1109*t8854) + t3806*t8860 + t3025*t4523*t8860 - 1.*t3161*t5060*t8860 + t5389*t8875 + t5947*t8884 + t6519*t8892 + t6964*t8901 + t7397*t8910 + t7560*t8917 - 0.05315*(t7315*t8910 + t7296*t8917) - 1.03354*(t7296*t8910 - 1.*t7315*t8917);
  p_output1[44]=-1.*t2009*t8791 + t8794*t8938 - 0.1305*(t2009*t410 - 1.*t1109*t8938) + t3806*t8943 + t3025*t4523*t8943 - 1.*t3161*t5060*t8943 + t5389*t8957 + t5947*t8965 + t6519*t8970 + t6964*t8974 + t7397*t8979 + t7560*t8984 - 0.05315*(t7315*t8979 + t7296*t8984) - 1.03354*(t7296*t8979 - 1.*t7315*t8984);
  p_output1[45]=t4523*t8015 + t7877*t9000 + t7971*t9006 + t5060*t9010 + t5947*t9014 + t5389*t9018 + t6964*t9022 + t6519*t9026 + t7560*t9030 + t7397*t9035 - 1.03354*(-1.*t7315*t9030 + t7296*t9035) - 0.05315*(t7296*t9030 + t7315*t9035);
  p_output1[46]=t8722*t9000 + t9006*t9052 + t5060*t9059 + t4523*t9066 + t5947*t9074 + t5389*t9079 + t6964*t9089 + t6519*t9093 + t7560*t9101 + t7397*t9113 - 1.03354*(-1.*t7315*t9101 + t7296*t9113) - 0.05315*(t7296*t9101 + t7315*t9113);
  p_output1[47]=t8569*t9000 + t9006*t9136 + t5060*t9142 + t4523*t9150 + t5947*t9156 + t5389*t9161 + t6964*t9167 + t6519*t9172 + t7560*t9177 + t7397*t9182 - 1.03354*(-1.*t7315*t9177 + t7296*t9182) - 0.05315*(t7296*t9177 + t7315*t9182);
  p_output1[48]=t5947*t8025 + t7990*t9198 + t8015*t9202 + t5389*t9207 + t6964*t9212 + t6519*t9215 + t7560*t9221 + t7397*t9228 - 1.03354*(-1.*t7315*t9221 + t7296*t9228) - 0.05315*(t7296*t9221 + t7315*t9228);
  p_output1[49]=t9066*t9202 + t9198*t9242 + t5947*t9246 + t5389*t9250 + t6964*t9254 + t6519*t9259 + t7560*t9266 + t7397*t9275 - 1.03354*(-1.*t7315*t9266 + t7296*t9275) - 0.05315*(t7296*t9266 + t7315*t9275);
  p_output1[50]=t9150*t9202 + t9198*t9304 + t5947*t9308 + t5389*t9312 + t6964*t9316 + t6519*t9324 + t7560*t9330 + t7397*t9334 - 1.03354*(-1.*t7315*t9330 + t7296*t9334) - 0.05315*(t7296*t9330 + t7315*t9334);
  p_output1[51]=t6519*t8064 + t8025*t9354 + t8041*t9359 + t6964*t9363 + t7560*t9369 + t7397*t9373 - 1.03354*(-1.*t7315*t9369 + t7296*t9373) - 0.05315*(t7296*t9369 + t7315*t9373);
  p_output1[52]=t9246*t9354 + t9359*t9391 + t6964*t9394 + t6519*t9398 + t7560*t9402 + t7397*t9406 - 1.03354*(-1.*t7315*t9402 + t7296*t9406) - 0.05315*(t7296*t9402 + t7315*t9406);
  p_output1[53]=t9308*t9354 + t9359*t9422 + t6964*t9425 + t6519*t9428 + t7560*t9432 + t7397*t9436 - 1.03354*(-1.*t7315*t9432 + t7296*t9436) - 0.05315*(t7296*t9432 + t7315*t9436);
  p_output1[54]=t7560*t8076 + t8051*t9456 + t8064*t9460 + t7397*t9465 - 0.05315*(t8106 + t7315*t9465) - 1.03354*(t7296*t9465 + t9467);
  p_output1[55]=t9398*t9460 + t9456*t9487 + t7560*t9493 + t7397*t9499 - 1.03354*(t7296*t9499 + t9501) - 0.05315*(t7315*t9499 + t9507);
  p_output1[56]=t9428*t9460 + t9456*t9516 + t7560*t9522 + t7397*t9525 - 1.03354*(t7296*t9525 + t9529) - 0.05315*(t7315*t9525 + t9534);
  p_output1[57]=-0.05315*t8112 - 1.03354*(-1.*t7296*t8092 + t9467) + t8076*t9546 + t8092*t9553;
  p_output1[58]=t9493*t9546 + t9553*t9574 - 1.03354*(t9501 - 1.*t7296*t9574) - 0.05315*(t9507 - 1.*t7315*t9574);
  p_output1[59]=t9522*t9546 + t9553*t9593 - 1.03354*(t9529 - 1.*t7296*t9593) - 0.05315*(t9534 - 1.*t7315*t9593);
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "One input(s) required (var1).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 20 && ncols == 1) && 
      !(mrows == 1 && ncols == 20))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 3, (mwSize) 20, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1);


}

#else // MATLAB_MEX_FILE

#include "Jp_RightToeJoint_mex.hh"

namespace SymExpression
{

void Jp_RightToeJoint_mex_raw(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}

}

#endif // MATLAB_MEX_FILE
