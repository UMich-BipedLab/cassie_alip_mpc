/*
 * Automatically Generated from Mathematica.
 * Mon 11 May 2020 22:30:10 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t129;
  double t154;
  double t496;
  double t606;
  double t547;
  double t610;
  double t613;
  double t626;
  double t1153;
  double t1169;
  double t670;
  double t706;
  double t717;
  double t732;
  double t1238;
  double t1242;
  double t1244;
  double t1414;
  double t1430;
  double t1431;
  double t774;
  double t775;
  double t804;
  double t824;
  double t873;
  double t905;
  double t916;
  double t990;
  double t1031;
  double t1063;
  double t1064;
  double t1066;
  double t1068;
  double t1089;
  double t1093;
  double t1992;
  double t1668;
  double t1686;
  double t1712;
  double t2008;
  double t2001;
  double t2035;
  double t2046;
  double t2166;
  double t2177;
  double t1549;
  double t1573;
  double t1601;
  double t2204;
  double t2209;
  double t2215;
  double t2235;
  double t2253;
  double t2262;
  double t1378;
  double t1383;
  double t1395;
  double t2401;
  double t2403;
  double t2407;
  double t2368;
  double t2374;
  double t2393;
  double t2396;
  double t2056;
  double t2084;
  double t2091;
  double t2514;
  double t2517;
  double t2529;
  double t2535;
  double t2559;
  double t1258;
  double t1263;
  double t1320;
  double t2490;
  double t2447;
  double t2589;
  double t2605;
  double t2620;
  double t2621;
  double t2626;
  double t2632;
  double t2646;
  double t2675;
  double t2685;
  double t2694;
  double t2838;
  double t2844;
  double t2845;
  double t2944;
  double t2946;
  double t2951;
  double t2976;
  double t2979;
  double t2980;
  double t2995;
  double t3098;
  double t3139;
  double t2817;
  double t2824;
  double t2825;
  double t2222;
  double t2290;
  double t2953;
  double t2954;
  double t2959;
  double t3330;
  double t2726;
  double t3101;
  double t3103;
  double t3355;
  double t3363;
  double t3370;
  double t3373;
  double t3401;
  double t2491;
  double t2496;
  double t3187;
  double t3192;
  double t3071;
  double t3072;
  double t3078;
  double t3591;
  double t3607;
  double t3664;
  double t3670;
  double t3609;
  double t3614;
  double t3620;
  double t3024;
  double t3042;
  double t3046;
  double t3671;
  double t3674;
  double t3675;
  double t3684;
  double t3685;
  double t3686;
  double t2439;
  double t2455;
  double t2708;
  double t2711;
  double t3682;
  double t3688;
  double t3696;
  double t3162;
  double t3166;
  double t3720;
  double t3726;
  double t3727;
  double t2730;
  double t2734;
  double t2740;
  double t2741;
  double t3630;
  double t3632;
  double t3636;
  double t3637;
  double t3643;
  double t3661;
  double t2779;
  double t2782;
  double t2794;
  double t2962;
  double t2971;
  double t2973;
  double t2801;
  double t2805;
  double t2858;
  double t2870;
  double t3318;
  double t3320;
  double t3326;
  double t3818;
  double t3819;
  double t3823;
  double t3697;
  double t3702;
  double t3715;
  double t3923;
  double t3924;
  double t3925;
  double t3936;
  double t3940;
  double t3744;
  double t2658;
  double t2659;
  double t3802;
  double t3824;
  double t2524;
  double t2563;
  double t3119;
  double t3126;
  double t3150;
  double t3151;
  double t4123;
  double t4125;
  double t4127;
  double t2934;
  double t2936;
  double t2998;
  double t2999;
  double t3885;
  double t3889;
  double t3891;
  double t4194;
  double t4196;
  double t4202;
  double t3223;
  double t3224;
  double t4174;
  double t4204;
  double t3201;
  double t3205;
  double t2488;
  double t3059;
  double t3060;
  double t3962;
  double t3964;
  double t3965;
  double t4341;
  double t3342;
  double t3346;
  double t3854;
  double t3858;
  double t3859;
  double t3728;
  double t3738;
  double t3384;
  double t3387;
  double t4216;
  double t4220;
  double t4221;
  double t4530;
  double t3411;
  double t3419;
  double t3444;
  double t3446;
  double t4559;
  double t4573;
  double t4577;
  double t3509;
  double t3512;
  double t4346;
  double t4354;
  double t4446;
  double t4448;
  double t4449;
  double t3982;
  double t3983;
  double t4593;
  double t4594;
  double t3482;
  double t3485;
  double t3465;
  double t3473;
  double t4311;
  double t4312;
  double t4322;
  double t4094;
  double t4101;
  double t4110;
  double t3592;
  double t3621;
  double t3627;
  double t3629;
  double t3662;
  double t4951;
  double t4952;
  double t4953;
  double t4955;
  double t4932;
  double t4933;
  double t4934;
  double t4954;
  double t4960;
  double t4962;
  double t4970;
  double t4971;
  double t4977;
  double t3747;
  double t3748;
  double t5080;
  double t5085;
  double t5088;
  double t5093;
  double t5095;
  double t4909;
  double t4913;
  double t4915;
  double t4968;
  double t5003;
  double t5016;
  double t3775;
  double t5186;
  double t5188;
  double t4044;
  double t5196;
  double t5202;
  double t5203;
  double t5209;
  double t3927;
  double t3941;
  double t3954;
  double t3956;
  double t3837;
  double t3843;
  double t3849;
  double t3863;
  double t3867;
  double t4241;
  double t4243;
  double t4246;
  double t3875;
  double t3877;
  double t4496;
  double t4497;
  double t4501;
  double t4079;
  double t4117;
  double t4164;
  double t5359;
  double t5362;
  double t5363;
  double t5373;
  double t5374;
  double t4293;
  double t5404;
  double t5407;
  double t5414;
  double t5420;
  double t4397;
  double t4402;
  double t4409;
  double t4419;
  double t4233;
  double t4237;
  double t4253;
  double t4261;
  double t5127;
  double t5132;
  double t5137;
  double t4369;
  double t4475;
  double t4476;
  double t4483;
  double t4484;
  double t4507;
  double t4516;
  double t4535;
  double t4539;
  double t5019;
  double t5027;
  double t4605;
  double t4611;
  double t5871;
  double t5874;
  double t5875;
  double t5882;
  double t5888;
  double t5889;
  double t5894;
  double t5895;
  double t5897;
  double t5899;
  double t5900;
  double t5901;
  double t4770;
  double t4793;
  double t4712;
  double t4719;
  double t4728;
  double t4729;
  double t4656;
  double t4812;
  double t4815;
  double t4817;
  double t4819;
  double t4821;
  double t4830;
  double t4831;
  double t4851;
  double t4856;
  double t4860;
  double t4866;
  double t4867;
  double t4874;
  double t4875;
  double t4878;
  double t4893;
  double t4907;
  double t4908;
  double t4916;
  double t4918;
  double t4922;
  double t4928;
  double t4935;
  double t4936;
  double t4943;
  double t4946;
  double t4947;
  double t4950;
  double t6045;
  double t6046;
  double t6051;
  double t6054;
  double t5775;
  double t5776;
  double t5778;
  double t6052;
  double t6058;
  double t6060;
  double t5639;
  double t5644;
  double t5645;
  double t6076;
  double t6078;
  double t6079;
  double t5040;
  double t5043;
  double t5044;
  double t5053;
  double t5054;
  double t5059;
  double t5087;
  double t5100;
  double t5742;
  double t5749;
  double t5764;
  double t5105;
  double t5106;
  double t5107;
  double t5140;
  double t5141;
  double t5690;
  double t5691;
  double t5693;
  double t5702;
  double t5705;
  double t5717;
  double t6061;
  double t6064;
  double t6065;
  double t6153;
  double t6157;
  double t6179;
  double t6180;
  double t6181;
  double t6183;
  double t6192;
  double t6070;
  double t6080;
  double t6082;
  double t5158;
  double t5159;
  double t5160;
  double t5168;
  double t5170;
  double t5172;
  double t5174;
  double t5177;
  double t5381;
  double t5382;
  double t5384;
  double t5391;
  double t5392;
  double t5401;
  double t6207;
  double t6208;
  double t6210;
  double t6244;
  double t6245;
  double t5214;
  double t5217;
  double t5222;
  double t5227;
  double t5230;
  double t5231;
  double t5239;
  double t5240;
  double t5472;
  double t5478;
  double t5481;
  double t5485;
  double t5500;
  double t5501;
  double t6294;
  double t6295;
  double t6298;
  double t6326;
  double t5261;
  double t5271;
  double t5301;
  double t5303;
  double t5306;
  double t5310;
  double t5312;
  double t5313;
  double t5317;
  double t5318;
  double t5558;
  double t5565;
  double t5585;
  double t5590;
  double t5602;
  double t5603;
  double t5331;
  double t5332;
  double t5828;
  double t5834;
  double t5840;
  double t5844;
  double t5846;
  double t5850;
  double t5365;
  double t5366;
  double t6508;
  double t6509;
  double t6514;
  double t6519;
  double t6520;
  double t5455;
  double t5459;
  double t6561;
  double t6563;
  double t6565;
  double t6567;
  double t5510;
  double t5525;
  double t5552;
  double t5553;
  double t5606;
  double t5607;
  double t6199;
  double t6200;
  double t5648;
  double t5649;
  double t5662;
  double t5664;
  double t5685;
  double t5686;
  double t6790;
  double t6797;
  double t5800;
  double t5801;
  double t5815;
  double t5818;
  double t6871;
  double t6878;
  double t5863;
  double t5864;
  double t5856;
  double t5857;
  double t6087;
  double t6092;
  double t5913;
  double t5916;
  double t5902;
  double t5907;
  double t7015;
  double t7042;
  double t7044;
  double t7045;
  double t7055;
  double t7056;
  double t7057;
  double t7060;
  double t7063;
  double t7065;
  double t7067;
  double t7070;
  double t5931;
  double t5932;
  double t5949;
  double t5951;
  double t5976;
  double t5987;
  double t6008;
  double t6012;
  double t6917;
  double t6919;
  double t7260;
  double t7264;
  double t7265;
  double t7280;
  double t7268;
  double t7286;
  double t7293;
  double t7295;
  double t7299;
  double t7311;
  double t6760;
  double t6761;
  double t6762;
  double t6102;
  double t6112;
  double t6113;
  double t6119;
  double t6124;
  double t6125;
  double t6135;
  double t6146;
  double t6863;
  double t6873;
  double t6877;
  double t6879;
  double t6152;
  double t6154;
  double t6156;
  double t6160;
  double t6163;
  double t6164;
  double t6789;
  double t6793;
  double t6796;
  double t6798;
  double t6182;
  double t6195;
  double t6921;
  double t6923;
  double t6202;
  double t6204;
  double t6219;
  double t6220;
  double t6831;
  double t6838;
  double t6841;
  double t6843;
  double t7294;
  double t7312;
  double t7327;
  double t7332;
  double t7334;
  double t7338;
  double t6258;
  double t6261;
  double t6263;
  double t6269;
  double t6274;
  double t6276;
  double t6283;
  double t6284;
  double t6546;
  double t6547;
  double t6548;
  double t6552;
  double t6555;
  double t6556;
  double t7493;
  double t7495;
  double t6345;
  double t6346;
  double t6347;
  double t6352;
  double t6360;
  double t6361;
  double t6370;
  double t6376;
  double t6595;
  double t6596;
  double t6599;
  double t6604;
  double t6610;
  double t6613;
  double t7538;
  double t7540;
  double t7541;
  double t7544;
  double t7552;
  double t7553;
  double t7554;
  double t6382;
  double t6385;
  double t7152;
  double t7153;
  double t7155;
  double t7159;
  double t7160;
  double t7161;
  double t6406;
  double t6407;
  double t6419;
  double t6428;
  double t6431;
  double t6435;
  double t6448;
  double t6449;
  double t6667;
  double t6669;
  double t6678;
  double t6682;
  double t6686;
  double t6687;
  double t6458;
  double t6459;
  double t6460;
  double t6466;
  double t6467;
  double t6473;
  double t6482;
  double t6485;
  double t6726;
  double t6730;
  double t6736;
  double t6738;
  double t6739;
  double t6740;
  double t6490;
  double t6491;
  double t6984;
  double t6992;
  double t6993;
  double t7003;
  double t7004;
  double t7008;
  double t7458;
  double t7476;
  double t7677;
  double t7678;
  double t7693;
  double t7694;
  double t7697;
  double t6529;
  double t6530;
  double t7762;
  double t7763;
  double t7767;
  double t7773;
  double t7777;
  double t6580;
  double t6581;
  double t7809;
  double t7810;
  double t7814;
  double t7817;
  double t6623;
  double t6624;
  double t6652;
  double t6653;
  double t6709;
  double t6710;
  double t6743;
  double t6744;
  double t7719;
  double t7726;
  double t6764;
  double t6765;
  double t6776;
  double t6778;
  double t6783;
  double t6785;
  double t6806;
  double t6807;
  double t6811;
  double t6816;
  double t8044;
  double t8055;
  double t6883;
  double t6884;
  double t6893;
  double t6894;
  double t6928;
  double t6929;
  double t6934;
  double t6935;
  double t6943;
  double t6950;
  double t6974;
  double t6976;
  double t7345;
  double t7346;
  double t7072;
  double t7075;
  double t7083;
  double t7084;
  double t8230;
  double t8238;
  double t8240;
  double t8241;
  double t8257;
  double t8260;
  double t8261;
  double t8263;
  double t8265;
  double t8267;
  double t8268;
  double t8269;
  double t7104;
  double t7112;
  double t7123;
  double t7128;
  double t7171;
  double t7172;
  double t7180;
  double t7181;
  double t7215;
  double t7216;
  double t8143;
  double t8154;
  t129 = Cos(var1[3]);
  t154 = Sin(var1[3]);
  t496 = Cos(var1[4]);
  t606 = Sin(var1[4]);
  t547 = -1.*var2[2]*t496*t154;
  t610 = -1.*var2[1]*t606;
  t613 = -1.*var1[1]*t496;
  t626 = var1[2]*t154*t606;
  t1153 = Cos(var1[5]);
  t1169 = Sin(var1[5]);
  t670 = var2[2]*t129*t496;
  t706 = var2[0]*t606;
  t717 = var1[0]*t496;
  t732 = -1.*var1[2]*t129*t606;
  t1238 = t129*t1153*t606;
  t1242 = t154*t1169;
  t1244 = t1238 + t1242;
  t1414 = -1.*t129*t1153;
  t1430 = -1.*t154*t606*t1169;
  t1431 = t1414 + t1430;
  t774 = -1.*var2[1]*t129*t496;
  t775 = var2[0]*t496*t154;
  t804 = var1[0]*t129*t496;
  t824 = var1[1]*t496*t154;
  t873 = t804 + t824;
  t905 = var2[3]*t873;
  t916 = var1[1]*t129*t606;
  t990 = -1.*var1[0]*t154*t606;
  t1031 = -1.*var2[3]*t496*t154;
  t1063 = -1.*var2[4]*t129*t606;
  t1064 = t1031 + t1063;
  t1066 = var2[3]*t129*t496;
  t1068 = -1.*var2[4]*t154*t606;
  t1089 = t1066 + t1068;
  t1093 = -1.*var2[4]*t496;
  t1992 = Cos(var1[13]);
  t1668 = t1153*t154*t606;
  t1686 = -1.*t129*t1169;
  t1712 = t1668 + t1686;
  t2008 = Sin(var1[13]);
  t2001 = t1992*t496*t1153;
  t2035 = -1.*t496*t2008*t1169;
  t2046 = t2001 + t2035;
  t2166 = -1.*t1992;
  t2177 = 1. + t2166;
  t1549 = -1.*t1153*t154;
  t1573 = t129*t606*t1169;
  t1601 = t1549 + t1573;
  t2204 = 0.07996*t2177;
  t2209 = 0.135*t2008;
  t2215 = 0. + t2204 + t2209;
  t2235 = -0.135*t2177;
  t2253 = 0.07996*t2008;
  t2262 = 0. + t2235 + t2253;
  t1378 = -1.*t1153*t154*t606;
  t1383 = t129*t1169;
  t1395 = t1378 + t1383;
  t2401 = t1992*t1244;
  t2403 = -1.*t2008*t1601;
  t2407 = t2401 + t2403;
  t2368 = -1.*var1[2];
  t2374 = -1.*t496*t1153*t2215;
  t2393 = -1.*t496*t2262*t1169;
  t2396 = 0. + t2368 + t2374 + t2393;
  t2056 = t129*t1153;
  t2084 = t154*t606*t1169;
  t2091 = t2056 + t2084;
  t2514 = 0.135*t1992;
  t2517 = t2514 + t2253;
  t2529 = 0.07996*t1992;
  t2535 = -0.135*t2008;
  t2559 = t2529 + t2535;
  t1258 = t1153*t154;
  t1263 = -1.*t129*t606*t1169;
  t1320 = t1258 + t1263;
  t2490 = -1.*t2008*t1712;
  t2447 = t1992*t1431;
  t2589 = -1.*t496*t1153*t2008;
  t2605 = -1.*t1992*t496*t1169;
  t2620 = t2589 + t2605;
  t2621 = t2215*t1712;
  t2626 = t2262*t2091;
  t2632 = 0. + var1[1] + t2621 + t2626;
  t2646 = t2620*t2632;
  t2675 = t1992*t1712;
  t2685 = -1.*t2008*t2091;
  t2694 = t2675 + t2685;
  t2838 = -1.*t1992*t1153*t606;
  t2844 = t2008*t606*t1169;
  t2845 = t2838 + t2844;
  t2944 = t496*t1153*t2215;
  t2946 = t496*t2262*t1169;
  t2951 = 0. + var1[2] + t2944 + t2946;
  t2976 = -1.*var1[0];
  t2979 = -1.*t2215*t1244;
  t2980 = -1.*t2262*t1601;
  t2995 = 0. + t2976 + t2979 + t2980;
  t3098 = -1.*t2008*t1244;
  t3139 = t2620*t2995;
  t2817 = t1992*t496*t1153*t154;
  t2824 = -1.*t496*t2008*t154*t1169;
  t2825 = t2817 + t2824;
  t2222 = t2215*t1244;
  t2290 = t2262*t1601;
  t2953 = t1992*t129*t496*t1153;
  t2954 = -1.*t129*t496*t2008*t1169;
  t2959 = t2953 + t2954;
  t3330 = 0. + var1[0] + t2222 + t2290;
  t2726 = t2490 + t2447;
  t3101 = t1992*t1320;
  t3103 = t3098 + t3101;
  t3355 = -1.*var1[1];
  t3363 = -1.*t2215*t1712;
  t3370 = -1.*t2262*t2091;
  t3373 = 0. + t3355 + t3363 + t3370;
  t3401 = 0.08055*t2046;
  t2491 = -1.*t1992*t2091;
  t2496 = t2490 + t2491;
  t3187 = -1.*t1992*t1601;
  t3192 = t3098 + t3187;
  t3071 = t1992*t1395;
  t3072 = -1.*t2008*t1431;
  t3078 = t3071 + t3072;
  t3591 = Sin(var1[14]);
  t3607 = Cos(var1[14]);
  t3664 = -1.*t3607;
  t3670 = 1. + t3664;
  t3609 = t496*t1153*t2008;
  t3614 = t1992*t496*t1169;
  t3620 = t3609 + t3614;
  t3024 = t2008*t1244;
  t3042 = t1992*t1601;
  t3046 = t3024 + t3042;
  t3671 = -0.08055*t3670;
  t3674 = -0.135*t3591;
  t3675 = 0. + t3671 + t3674;
  t3684 = -0.135*t3670;
  t3685 = 0.08055*t3591;
  t3686 = 0. + t3684 + t3685;
  t2439 = t2008*t1395;
  t2455 = t2439 + t2447;
  t2708 = t2008*t1320;
  t2711 = t2401 + t2708;
  t3682 = t3675*t606;
  t3688 = -1.*t3686*t3620;
  t3696 = 0. + t2368 + t2374 + t3682 + t2393 + t3688;
  t3162 = t2008*t1431;
  t3166 = t2675 + t3162;
  t3720 = t3591*t606;
  t3726 = t3607*t3620;
  t3727 = t3720 + t3726;
  t2730 = t2262*t1712;
  t2734 = t2215*t1431;
  t2740 = -1.*t496*t1153*t2262;
  t2741 = t496*t2215*t1169;
  t3630 = -1.*t496*t3591*t154;
  t3632 = t2008*t1712;
  t3636 = t1992*t2091;
  t3637 = t3632 + t3636;
  t3643 = t3607*t3637;
  t3661 = t3630 + t3643;
  t2779 = t129*t496*t1153*t2008;
  t2782 = t1992*t129*t496*t1169;
  t2794 = t2779 + t2782;
  t2962 = t496*t1153*t2008*t154;
  t2971 = t1992*t496*t154*t1169;
  t2973 = t2962 + t2971;
  t2801 = t496*t1153*t2215*t154;
  t2805 = t496*t2262*t154*t1169;
  t2858 = t1153*t2215*t606;
  t2870 = t2262*t606*t1169;
  t3318 = -1.*t1153*t2008*t606;
  t3320 = -1.*t1992*t606*t1169;
  t3326 = t3318 + t3320;
  t3818 = t496*t3675*t154;
  t3819 = t3686*t3637;
  t3823 = 0. + var1[1] + t3818 + t2621 + t2626 + t3819;
  t3697 = -1.*t129*t496*t3591;
  t3702 = t3607*t3046;
  t3715 = t3697 + t3702;
  t3923 = -0.135*t3607;
  t3924 = -0.08055*t3591;
  t3925 = t3923 + t3924;
  t3936 = 0.08055*t3607;
  t3940 = t3936 + t3674;
  t3744 = -1.*t3607*t496*t154;
  t2658 = -1.*t496*t1153*t2517;
  t2659 = -1.*t496*t2559*t1169;
  t3802 = -1.*t3686*t2046;
  t3824 = -1.*t3607*t2046*t3823;
  t2524 = t2517*t1712;
  t2563 = t2559*t2091;
  t3119 = -1.*t2262*t1244;
  t3126 = -1.*t2215*t1320;
  t3150 = t496*t1153*t2262;
  t3151 = -1.*t496*t2215*t1169;
  t4123 = -1.*t3675*t606;
  t4125 = t3686*t3620;
  t4127 = 0. + var1[2] + t2944 + t4123 + t2946 + t4125;
  t2934 = -1.*t129*t496*t1153*t2215;
  t2936 = -1.*t129*t496*t2262*t1169;
  t2998 = -1.*t1153*t2215*t606;
  t2999 = -1.*t2262*t606*t1169;
  t3885 = t496*t3591;
  t3889 = t3607*t3326;
  t3891 = t3885 + t3889;
  t4194 = -1.*t129*t496*t3675;
  t4196 = -1.*t3686*t3046;
  t4202 = 0. + t2976 + t4194 + t2979 + t2980 + t4196;
  t3223 = t496*t1153*t2517;
  t3224 = t496*t2559*t1169;
  t4174 = t3686*t2046;
  t4204 = -1.*t3607*t2046*t4202;
  t3201 = -1.*t2517*t1244;
  t3205 = -1.*t2559*t1601;
  t2488 = 0.08055*t2407;
  t3059 = -1.*t2215*t1395;
  t3060 = -1.*t2262*t1431;
  t3962 = t3607*t606;
  t3964 = -1.*t3591*t3620;
  t3965 = t3962 + t3964;
  t4341 = t496*t3591*t154;
  t3342 = -1.*t496*t1153*t2215*t154;
  t3346 = -1.*t496*t2262*t154*t1169;
  t3854 = t3591*t154*t606;
  t3858 = t3607*t2973;
  t3859 = t3854 + t3858;
  t3728 = t129*t496*t3675;
  t3738 = t3686*t3046;
  t3384 = t129*t496*t1153*t2215;
  t3387 = t129*t496*t2262*t1169;
  t4216 = t129*t3591*t606;
  t4220 = t3607*t2794;
  t4221 = t4216 + t4220;
  t4530 = 0. + var1[0] + t3728 + t2222 + t2290 + t3738;
  t3411 = -1.*t2262*t1712;
  t3419 = -1.*t2215*t1431;
  t3444 = t2262*t1244;
  t3446 = t2215*t1320;
  t4559 = -1.*t496*t3675*t154;
  t4573 = -1.*t3686*t3637;
  t4577 = 0. + t3355 + t4559 + t3363 + t3370 + t4573;
  t3509 = t2215*t1395;
  t3512 = t2262*t1431;
  t4346 = t3607*t2455;
  t4354 = t4341 + t4346;
  t4446 = -1.*t3607*t129*t496;
  t4448 = -1.*t3591*t3046;
  t4449 = t4446 + t4448;
  t3982 = -1.*t3591*t3637;
  t3983 = t3744 + t3982;
  t4593 = 0.08055*t2620;
  t4594 = -0.01004*t3591*t2046;
  t3482 = t2517*t1244;
  t3485 = t2559*t1601;
  t3465 = -1.*t2517*t1712;
  t3473 = -1.*t2559*t2091;
  t4311 = t3607*t129*t496;
  t4312 = t3591*t3046;
  t4322 = t4311 + t4312;
  t4094 = t129*t496*t3591;
  t4101 = -1.*t3607*t3046;
  t4110 = t4094 + t4101;
  t3592 = -1.*t3591*t606;
  t3621 = -1.*t3607*t3620;
  t3627 = t3592 + t3621;
  t3629 = var2[1]*t3627;
  t3662 = var2[2]*t3661;
  t4951 = Cos(var1[15]);
  t4952 = -1.*t4951;
  t4953 = 1. + t4952;
  t4955 = Sin(var1[15]);
  t4932 = -1.*t3607*t606;
  t4933 = t3591*t3620;
  t4934 = t4932 + t4933;
  t4954 = -0.01004*t4953;
  t4960 = 0.08055*t4955;
  t4962 = 0. + t4954 + t4960;
  t4970 = -0.08055*t4953;
  t4971 = -0.01004*t4955;
  t4977 = 0. + t4970 + t4971;
  t3747 = t3591*t2455;
  t3748 = t3744 + t3747;
  t5080 = 0.08055*t4951;
  t5085 = t5080 + t4971;
  t5088 = -0.01004*t4951;
  t5093 = -0.08055*t4955;
  t5095 = t5088 + t5093;
  t4909 = t3607*t496*t154;
  t4913 = t3591*t3637;
  t4915 = t4909 + t4913;
  t4968 = -1.*t4962*t2046;
  t5003 = -1.*t4977*t4934;
  t5016 = 0. + t2368 + t2374 + t3682 + t2393 + t3688 + t4968 + t5003;
  t3775 = t3686*t3166;
  t5186 = -1.*t4962*t2620;
  t5188 = -1.*t3591*t4977*t2046;
  t4044 = t3686*t2694;
  t5196 = t4962*t2694;
  t5202 = t4977*t4915;
  t5203 = 0. + var1[1] + t3818 + t2621 + t2626 + t3819 + t5196 + t5202;
  t5209 = -1.*t3607*t2046*t5203;
  t3927 = t3925*t606;
  t3941 = -1.*t3940*t3620;
  t3954 = t496*t3925*t154;
  t3956 = t3940*t3637;
  t3837 = -1.*t3607*t129*t606;
  t3843 = t3591*t2794;
  t3849 = t3837 + t3843;
  t3863 = -1.*t3675*t154*t606;
  t3867 = t3686*t2973;
  t4241 = -1.*t3607*t154*t606;
  t4243 = t3591*t2973;
  t4246 = t4241 + t4243;
  t3875 = t496*t3675;
  t3877 = -1.*t3686*t3326;
  t4496 = -1.*t3607*t496;
  t4497 = t3591*t3326;
  t4501 = t4496 + t4497;
  t4079 = var2[0]*t3727;
  t4117 = var2[2]*t4110;
  t4164 = -1.*t3686*t2711;
  t5359 = t4962*t2046;
  t5362 = t4977*t4934;
  t5363 = 0. + var1[2] + t2944 + t4123 + t2946 + t4125 + t5359 + t5362;
  t5373 = t4962*t2620;
  t5374 = t3591*t4977*t2046;
  t4293 = -1.*t3686*t2407;
  t5404 = -1.*t4962*t2407;
  t5407 = -1.*t4977*t4322;
  t5414 = 0. + t2976 + t4194 + t2979 + t2980 + t4196 + t5404 + t5407;
  t5420 = -1.*t3607*t2046*t5414;
  t4397 = -1.*t3925*t606;
  t4402 = t3940*t3620;
  t4409 = -1.*t129*t496*t3925;
  t4419 = -1.*t3940*t3046;
  t4233 = t129*t3675*t606;
  t4237 = -1.*t3686*t2794;
  t4253 = -1.*t496*t3675;
  t4261 = t3686*t3326;
  t5127 = t4951*t2407;
  t5132 = -1.*t4955*t4322;
  t5137 = t5127 + t5132;
  t4369 = -1.*t3686*t2455;
  t4475 = var2[1]*t3715;
  t4476 = -1.*t3607*t3637;
  t4483 = t4341 + t4476;
  t4484 = var2[0]*t4483;
  t4507 = t3675*t154*t606;
  t4516 = -1.*t3686*t2973;
  t4535 = -1.*t129*t3675*t606;
  t4539 = t3686*t2794;
  t5019 = t4962*t2407;
  t5027 = t4977*t4322;
  t4605 = -1.*t3686*t3166;
  t4611 = t3686*t2711;
  t5871 = 0. + var1[0] + t3728 + t2222 + t2290 + t3738 + t5019 + t5027;
  t5874 = -1.*t4962*t2694;
  t5875 = -1.*t4977*t4915;
  t5882 = 0. + t3355 + t4559 + t3363 + t3370 + t4573 + t5874 + t5875;
  t5888 = t4955*t2620;
  t5889 = t4951*t3591*t2046;
  t5894 = t5888 + t5889;
  t5895 = -0.13004*t5894;
  t5897 = t4951*t2620;
  t5899 = -1.*t3591*t4955*t2046;
  t5900 = t5897 + t5899;
  t5901 = 0.08055*t5900;
  t4770 = t3686*t2407;
  t4793 = -1.*t3686*t2694;
  t4712 = t129*t496*t3925;
  t4719 = t3940*t3046;
  t4728 = -1.*t496*t3925*t154;
  t4729 = -1.*t3940*t3637;
  t4656 = t3686*t2455;
  t4812 = -1.*t129*t3591*t606;
  t4815 = -1.*t3607*t2794;
  t4817 = t4812 + t4815;
  t4819 = var2[4]*t4817;
  t4821 = -1.*var2[5]*t3607*t2711;
  t4830 = -1.*var2[13]*t3607*t2407;
  t4831 = var2[14]*t4322;
  t4851 = -1.*t3607*t2455;
  t4856 = t3630 + t4851;
  t4860 = var2[3]*t4856;
  t4866 = t4819 + t4821 + t4830 + t4831 + t4860;
  t4867 = -1.*t3591*t154*t606;
  t4874 = -1.*t3607*t2973;
  t4875 = t4867 + t4874;
  t4878 = var2[4]*t4875;
  t4893 = -1.*var2[5]*t3607*t3166;
  t4907 = -1.*var2[13]*t3607*t2694;
  t4908 = var2[3]*t4110;
  t4916 = var2[14]*t4915;
  t4918 = t4878 + t4893 + t4907 + t4908 + t4916;
  t4922 = -1.*var2[13]*t3607*t2046;
  t4928 = -1.*var2[5]*t3607*t2046;
  t4935 = var2[14]*t4934;
  t4936 = -1.*t496*t3591;
  t4943 = -1.*t3607*t3326;
  t4946 = t4936 + t4943;
  t4947 = var2[4]*t4946;
  t4950 = t4922 + t4928 + t4935 + t4947;
  t6045 = Cos(var1[16]);
  t6046 = -1.*t6045;
  t6051 = 1. + t6046;
  t6054 = Sin(var1[16]);
  t5775 = t4951*t2046;
  t5776 = -1.*t4955*t4934;
  t5778 = t5775 + t5776;
  t6052 = -0.08055*t6051;
  t6058 = -0.13004*t6054;
  t6060 = 0. + t6052 + t6058;
  t5639 = t4955*t2407;
  t5644 = t4951*t4322;
  t5645 = t5639 + t5644;
  t6076 = -0.13004*t6051;
  t6078 = 0.08055*t6054;
  t6079 = 0. + t6076 + t6078;
  t5040 = t4955*t3078;
  t5043 = t4951*t3748;
  t5044 = t5040 + t5043;
  t5053 = t4951*t3078;
  t5054 = -1.*t4955*t3748;
  t5059 = t5053 + t5054;
  t5087 = -1.*t5085*t2046;
  t5100 = -1.*t5095*t4934;
  t5742 = -1.*t4955*t2046;
  t5749 = -1.*t4951*t4934;
  t5764 = t5742 + t5749;
  t5105 = -1.*t4955*t2407;
  t5106 = -1.*t4951*t4322;
  t5107 = t5105 + t5106;
  t5140 = t5085*t2694;
  t5141 = t5095*t4915;
  t5690 = -1.*t4955*t2694;
  t5691 = -1.*t4951*t4915;
  t5693 = t5690 + t5691;
  t5702 = t4951*t2694;
  t5705 = -1.*t4955*t4915;
  t5717 = t5702 + t5705;
  t6061 = t4955*t2046;
  t6064 = t4951*t4934;
  t6065 = t6061 + t6064;
  t6153 = t6045*t5137;
  t6157 = -1.*t6054*t5137;
  t6179 = -0.13004*t6045;
  t6180 = -0.08055*t6054;
  t6181 = t6179 + t6180;
  t6183 = 0.08055*t6045;
  t6192 = t6183 + t6058;
  t6070 = -1.*t6060*t6065;
  t6080 = -1.*t6079*t5778;
  t6082 = 0. + t2368 + t2374 + t3682 + t2393 + t3688 + t4968 + t5003 + t6070 + t6080;
  t5158 = t4955*t3103;
  t5159 = t4951*t3591*t2711;
  t5160 = t5158 + t5159;
  t5168 = t4951*t3103;
  t5170 = -1.*t3591*t4955*t2711;
  t5172 = t5168 + t5170;
  t5174 = t4962*t2726;
  t5177 = t3591*t4977*t3166;
  t5381 = t4955*t2726;
  t5382 = t4951*t3591*t3166;
  t5384 = t5381 + t5382;
  t5391 = t4951*t2726;
  t5392 = -1.*t3591*t4955*t3166;
  t5401 = t5391 + t5392;
  t6207 = t4955*t2694;
  t6208 = t4951*t4915;
  t6210 = t6207 + t6208;
  t6244 = -1.*t6060*t5894;
  t6245 = -1.*t6079*t5900;
  t5214 = t4955*t3192;
  t5217 = t4951*t3591*t2407;
  t5222 = t5214 + t5217;
  t5227 = t4951*t3192;
  t5230 = -1.*t3591*t4955*t2407;
  t5231 = t5227 + t5230;
  t5239 = t4962*t2496;
  t5240 = t3591*t4977*t2694;
  t5472 = t4955*t2496;
  t5478 = t4951*t3591*t2694;
  t5481 = t5472 + t5478;
  t5485 = t4951*t2496;
  t5500 = -1.*t3591*t4955*t2694;
  t5501 = t5485 + t5500;
  t6294 = t6060*t6210;
  t6295 = t6079*t5717;
  t6298 = 0. + var1[1] + t3818 + t2621 + t2626 + t3819 + t5196 + t5202 + t6294 + t6295;
  t6326 = -1.*t3607*t2046*t6298;
  t5261 = -1.*t4977*t3727;
  t5271 = t4977*t3661;
  t5301 = t4955*t2959;
  t5303 = t4951*t3849;
  t5306 = t5301 + t5303;
  t5310 = t4951*t2959;
  t5312 = -1.*t4955*t3849;
  t5313 = t5310 + t5312;
  t5317 = t4962*t2825;
  t5318 = t4977*t4246;
  t5558 = t4955*t2825;
  t5565 = t4951*t4246;
  t5585 = t5558 + t5565;
  t5590 = t4951*t2825;
  t5602 = -1.*t4955*t4246;
  t5603 = t5590 + t5602;
  t5331 = -1.*t4962*t2845;
  t5332 = -1.*t4977*t4501;
  t5828 = t4955*t2845;
  t5834 = t4951*t4501;
  t5840 = t5828 + t5834;
  t5844 = t4951*t2845;
  t5846 = -1.*t4955*t4501;
  t5850 = t5844 + t5846;
  t5365 = -1.*t4962*t3103;
  t5366 = -1.*t3591*t4977*t2711;
  t6508 = t6060*t5894;
  t6509 = t6079*t5900;
  t6514 = t6060*t6065;
  t6519 = t6079*t5778;
  t6520 = 0. + var1[2] + t2944 + t4123 + t2946 + t4125 + t5359 + t5362 + t6514 + t6519;
  t5455 = -1.*t4962*t3192;
  t5459 = -1.*t3591*t4977*t2407;
  t6561 = -1.*t6060*t5645;
  t6563 = -1.*t6079*t5137;
  t6565 = 0. + t2976 + t4194 + t2979 + t2980 + t4196 + t5404 + t5407 + t6561 + t6563;
  t6567 = -1.*t3607*t2046*t6565;
  t5510 = t4977*t3727;
  t5525 = -1.*t4977*t3715;
  t5552 = -1.*t4962*t2959;
  t5553 = -1.*t4977*t3849;
  t5606 = t4962*t2845;
  t5607 = t4977*t4501;
  t6199 = -1.*t6054*t5645;
  t6200 = t6199 + t6153;
  t5648 = -1.*t4962*t3078;
  t5649 = -1.*t4977*t3748;
  t5662 = t5085*t2046;
  t5664 = t5095*t4934;
  t5685 = -1.*t5085*t2407;
  t5686 = -1.*t5095*t4322;
  t6790 = t6045*t5717;
  t6797 = -1.*t6054*t5717;
  t5800 = t5085*t2407;
  t5801 = t5095*t4322;
  t5815 = -1.*t5085*t2694;
  t5818 = -1.*t5095*t4915;
  t6871 = t6045*t5778;
  t6878 = -1.*t6054*t5778;
  t5863 = t4962*t2959;
  t5864 = t4977*t3849;
  t5856 = -1.*t4962*t2825;
  t5857 = -1.*t4977*t4246;
  t6087 = t6060*t5645;
  t6092 = t6079*t5137;
  t5913 = t4962*t3103;
  t5916 = t3591*t4977*t2711;
  t5902 = -1.*t4962*t2726;
  t5907 = -1.*t3591*t4977*t3166;
  t7015 = 0. + var1[0] + t3728 + t2222 + t2290 + t3738 + t5019 + t5027 + t6087 + t6092;
  t7042 = -1.*t6060*t6210;
  t7044 = -1.*t6079*t5717;
  t7045 = 0. + t3355 + t4559 + t3363 + t3370 + t4573 + t5874 + t5875 + t7042 + t7044;
  t7055 = -1.*t6054*t5894;
  t7056 = t6045*t5900;
  t7057 = t7055 + t7056;
  t7060 = 0.03315*t7057;
  t7063 = t6045*t5894;
  t7065 = t6054*t5900;
  t7067 = t7063 + t7065;
  t7070 = -0.19074*t7067;
  t5931 = t4962*t3192;
  t5932 = t3591*t4977*t2407;
  t5949 = -1.*t4962*t2496;
  t5951 = -1.*t3591*t4977*t2694;
  t5976 = t4977*t3715;
  t5987 = -1.*t4977*t3661;
  t6008 = t4962*t3078;
  t6012 = t4977*t3748;
  t6917 = -1.*t6054*t6065;
  t6919 = t6917 + t6871;
  t7260 = Cos(var1[17]);
  t7264 = -1.*t7260;
  t7265 = 1. + t7264;
  t7280 = Sin(var1[17]);
  t7268 = -0.19074*t7265;
  t7286 = 0.03315*t7280;
  t7293 = 0. + t7268 + t7286;
  t7295 = -0.03315*t7265;
  t7299 = -0.19074*t7280;
  t7311 = 0. + t7295 + t7299;
  t6760 = t6045*t5645;
  t6761 = t6054*t5137;
  t6762 = t6760 + t6761;
  t6102 = -1.*t6054*t5044;
  t6112 = t6045*t5059;
  t6113 = t6102 + t6112;
  t6119 = t6045*t5044;
  t6124 = t6054*t5059;
  t6125 = t6119 + t6124;
  t6135 = -1.*t6079*t5764;
  t6146 = -1.*t6060*t5778;
  t6863 = t6054*t5764;
  t6873 = t6863 + t6871;
  t6877 = t6045*t5764;
  t6879 = t6877 + t6878;
  t6152 = t6054*t5107;
  t6154 = t6152 + t6153;
  t6156 = t6045*t5107;
  t6160 = t6156 + t6157;
  t6163 = t6079*t5693;
  t6164 = t6060*t5717;
  t6789 = t6054*t5693;
  t6793 = t6789 + t6790;
  t6796 = t6045*t5693;
  t6798 = t6796 + t6797;
  t6182 = -1.*t6181*t6065;
  t6195 = -1.*t6192*t5778;
  t6921 = -1.*t6045*t6065;
  t6923 = t6921 + t6878;
  t6202 = -1.*t6045*t5645;
  t6204 = t6202 + t6157;
  t6219 = t6181*t6210;
  t6220 = t6192*t5717;
  t6831 = -1.*t6054*t6210;
  t6838 = t6831 + t6790;
  t6841 = -1.*t6045*t6210;
  t6843 = t6841 + t6797;
  t7294 = -1.*t7293*t6919;
  t7312 = t6045*t6065;
  t7327 = t6054*t5778;
  t7332 = t7312 + t7327;
  t7334 = -1.*t7311*t7332;
  t7338 = 0. + t2368 + t2374 + t3682 + t2393 + t3688 + t4968 + t5003 + t6070 + t6080 + t7294 + t7334;
  t6258 = -1.*t6054*t5160;
  t6261 = t6045*t5172;
  t6263 = t6258 + t6261;
  t6269 = t6045*t5160;
  t6274 = t6054*t5172;
  t6276 = t6269 + t6274;
  t6283 = t6060*t5384;
  t6284 = t6079*t5401;
  t6546 = -1.*t6054*t5384;
  t6547 = t6045*t5401;
  t6548 = t6546 + t6547;
  t6552 = t6045*t5384;
  t6555 = t6054*t5401;
  t6556 = t6552 + t6555;
  t7493 = -1.*t7293*t7057;
  t7495 = -1.*t7311*t7067;
  t6345 = -1.*t6054*t5222;
  t6346 = t6045*t5231;
  t6347 = t6345 + t6346;
  t6352 = t6045*t5222;
  t6360 = t6054*t5231;
  t6361 = t6352 + t6360;
  t6370 = t6060*t5481;
  t6376 = t6079*t5501;
  t6595 = -1.*t6054*t5481;
  t6596 = t6045*t5501;
  t6599 = t6595 + t6596;
  t6604 = t6045*t5481;
  t6610 = t6054*t5501;
  t6613 = t6604 + t6610;
  t7538 = t7293*t6838;
  t7540 = t6045*t6210;
  t7541 = t6054*t5717;
  t7544 = t7540 + t7541;
  t7552 = t7311*t7544;
  t7553 = 0. + var1[1] + t3818 + t2621 + t2626 + t3819 + t5196 + t5202 + t6294 + t6295 + t7538 + t7552;
  t7554 = -1.*t3607*t2046*t7553;
  t6382 = -1.*t4951*t6060*t3727;
  t6385 = t4955*t6079*t3727;
  t7152 = -1.*t6045*t4955*t3727;
  t7153 = -1.*t4951*t6054*t3727;
  t7155 = t7152 + t7153;
  t7159 = t4951*t6045*t3727;
  t7160 = -1.*t4955*t6054*t3727;
  t7161 = t7159 + t7160;
  t6406 = -1.*t6045*t4955*t3715;
  t6407 = -1.*t4951*t6054*t3715;
  t6419 = t6406 + t6407;
  t6428 = t4951*t6045*t3715;
  t6431 = -1.*t4955*t6054*t3715;
  t6435 = t6428 + t6431;
  t6448 = t4951*t6060*t3661;
  t6449 = -1.*t4955*t6079*t3661;
  t6667 = -1.*t6045*t4955*t3661;
  t6669 = -1.*t4951*t6054*t3661;
  t6678 = t6667 + t6669;
  t6682 = t4951*t6045*t3661;
  t6686 = -1.*t4955*t6054*t3661;
  t6687 = t6682 + t6686;
  t6458 = -1.*t6054*t5306;
  t6459 = t6045*t5313;
  t6460 = t6458 + t6459;
  t6466 = t6045*t5306;
  t6467 = t6054*t5313;
  t6473 = t6466 + t6467;
  t6482 = t6060*t5585;
  t6485 = t6079*t5603;
  t6726 = -1.*t6054*t5585;
  t6730 = t6045*t5603;
  t6736 = t6726 + t6730;
  t6738 = t6045*t5585;
  t6739 = t6054*t5603;
  t6740 = t6738 + t6739;
  t6490 = -1.*t6060*t5840;
  t6491 = -1.*t6079*t5850;
  t6984 = -1.*t6054*t5840;
  t6992 = t6045*t5850;
  t6993 = t6984 + t6992;
  t7003 = t6045*t5840;
  t7004 = t6054*t5850;
  t7008 = t7003 + t7004;
  t7458 = -1.*t7280*t6200;
  t7476 = t7260*t6200;
  t7677 = 0.03315*t7260;
  t7678 = t7677 + t7299;
  t7693 = -0.19074*t7260;
  t7694 = -0.03315*t7280;
  t7697 = t7693 + t7694;
  t6529 = -1.*t6060*t5160;
  t6530 = -1.*t6079*t5172;
  t7762 = t7293*t7057;
  t7763 = t7311*t7067;
  t7767 = t7293*t6919;
  t7773 = t7311*t7332;
  t7777 = 0. + var1[2] + t2944 + t4123 + t2946 + t4125 + t5359 + t5362 + t6514 + t6519 + t7767 + t7773;
  t6580 = -1.*t6060*t5222;
  t6581 = -1.*t6079*t5231;
  t7809 = -1.*t7293*t6200;
  t7810 = -1.*t7311*t6762;
  t7814 = 0. + t2976 + t4194 + t2979 + t2980 + t4196 + t5404 + t5407 + t6561 + t6563 + t7809 + t7810;
  t7817 = -1.*t3607*t2046*t7814;
  t6623 = t4951*t6060*t3727;
  t6624 = -1.*t4955*t6079*t3727;
  t6652 = -1.*t4951*t6060*t3715;
  t6653 = t4955*t6079*t3715;
  t6709 = -1.*t6060*t5306;
  t6710 = -1.*t6079*t5313;
  t6743 = t6060*t5840;
  t6744 = t6079*t5850;
  t7719 = -1.*t7280*t6762;
  t7726 = t7476 + t7719;
  t6764 = -1.*t6060*t5044;
  t6765 = -1.*t6079*t5059;
  t6776 = t6079*t5764;
  t6778 = t6060*t5778;
  t6783 = -1.*t6079*t5107;
  t6785 = -1.*t6060*t5137;
  t6806 = t6181*t6065;
  t6807 = t6192*t5778;
  t6811 = -1.*t6181*t5645;
  t6816 = -1.*t6192*t5137;
  t8044 = -1.*t7280*t6838;
  t8055 = t7260*t6838;
  t6883 = t6079*t5107;
  t6884 = t6060*t5137;
  t6893 = -1.*t6079*t5693;
  t6894 = -1.*t6060*t5717;
  t6928 = t6181*t5645;
  t6929 = t6192*t5137;
  t6934 = -1.*t6181*t6210;
  t6935 = -1.*t6192*t5717;
  t6943 = t6060*t5306;
  t6950 = t6079*t5313;
  t6974 = -1.*t6060*t5585;
  t6976 = -1.*t6079*t5603;
  t7345 = t7293*t6200;
  t7346 = t7311*t6762;
  t7072 = t6060*t5160;
  t7075 = t6079*t5172;
  t7083 = -1.*t6060*t5384;
  t7084 = -1.*t6079*t5401;
  t8230 = 0. + var1[0] + t3728 + t2222 + t2290 + t3738 + t5019 + t5027 + t6087 + t6092 + t7345 + t7346;
  t8238 = -1.*t7293*t6838;
  t8240 = -1.*t7311*t7544;
  t8241 = 0. + t3355 + t4559 + t3363 + t3370 + t4573 + t5874 + t5875 + t7042 + t7044 + t8238 + t8240;
  t8257 = t7280*t7057;
  t8260 = t7260*t7067;
  t8261 = t8257 + t8260;
  t8263 = -0.62554*t8261;
  t8265 = t7260*t7057;
  t8267 = -1.*t7280*t7067;
  t8268 = t8265 + t8267;
  t8269 = 0.01315*t8268;
  t7104 = t6060*t5222;
  t7112 = t6079*t5231;
  t7123 = -1.*t6060*t5481;
  t7128 = -1.*t6079*t5501;
  t7171 = t4951*t6060*t3715;
  t7172 = -1.*t4955*t6079*t3715;
  t7180 = -1.*t4951*t6060*t3661;
  t7181 = t4955*t6079*t3661;
  t7215 = t6060*t5044;
  t7216 = t6079*t5059;
  t8143 = -1.*t7280*t6919;
  t8154 = t7260*t6919;
  p_output1[0]=0;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=0;
  p_output1[4]=0;
  p_output1[5]=0;
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=0;
  p_output1[10]=0;
  p_output1[11]=0;
  p_output1[12]=0;
  p_output1[13]=0;
  p_output1[14]=0;
  p_output1[15]=0;
  p_output1[16]=0;
  p_output1[17]=0;
  p_output1[18]=var2[1];
  p_output1[19]=-1.*var2[0];
  p_output1[20]=0;
  p_output1[21]=0;
  p_output1[22]=0;
  p_output1[23]=0;
  p_output1[24]=-1.*t129*var2[2] + t154*var1[2]*var2[3];
  p_output1[25]=-1.*t154*var2[2] - 1.*t129*var1[2]*var2[3];
  p_output1[26]=t129*var2[0] + t154*var2[1] + (-1.*t154*var1[0] + t129*var1[1])*var2[3];
  p_output1[27]=-1.*t129*var2[3];
  p_output1[28]=-1.*t154*var2[3];
  p_output1[29]=0;
  p_output1[30]=t547 + t610 - 1.*t129*t496*var1[2]*var2[3] + (t613 + t626)*var2[4];
  p_output1[31]=t670 + t706 - 1.*t154*t496*var1[2]*var2[3] + (t717 + t732)*var2[4];
  p_output1[32]=t774 + t775 + t905 + (t916 + t990)*var2[4];
  p_output1[33]=t1064;
  p_output1[34]=t1089;
  p_output1[35]=t1093;
  p_output1[36]=0;
  p_output1[37]=0;
  p_output1[38]=0;
  p_output1[39]=0;
  p_output1[40]=0;
  p_output1[41]=0;
  p_output1[42]=0;
  p_output1[43]=0;
  p_output1[44]=0;
  p_output1[45]=0;
  p_output1[46]=0;
  p_output1[47]=0;
  p_output1[48]=0;
  p_output1[49]=0;
  p_output1[50]=0;
  p_output1[51]=0;
  p_output1[52]=0;
  p_output1[53]=0;
  p_output1[54]=0;
  p_output1[55]=0;
  p_output1[56]=0;
  p_output1[57]=0;
  p_output1[58]=0;
  p_output1[59]=0;
  p_output1[60]=0;
  p_output1[61]=0;
  p_output1[62]=0;
  p_output1[63]=0;
  p_output1[64]=0;
  p_output1[65]=0;
  p_output1[66]=0;
  p_output1[67]=0;
  p_output1[68]=0;
  p_output1[69]=0;
  p_output1[70]=0;
  p_output1[71]=0;
  p_output1[72]=0;
  p_output1[73]=0;
  p_output1[74]=0;
  p_output1[75]=0;
  p_output1[76]=0;
  p_output1[77]=0;
  p_output1[78]=t547 + t610 + (0.135*t1395 + 0.07996*t1431 - 1.*t129*t496*var1[2])*var2[3] + (0.135*t1153*t129*t496 + 0.07996*t1169*t129*t496 + t613 + t626)*var2[4] + (0.07996*t1244 + 0.135*t1320)*var2[5];
  p_output1[79]=t670 + t706 + (0.135*t1244 + 0.07996*t1601 - 1.*t154*t496*var1[2])*var2[3] + (0.135*t1153*t154*t496 + 0.07996*t1169*t154*t496 + t717 + t732)*var2[4] + (0.135*t1431 + 0.07996*t1712)*var2[5];
  p_output1[80]=t774 + t775 + t905 + (-0.135*t1153*t606 - 0.07996*t1169*t606 + t916 + t990)*var2[4] + (0.07996*t1153*t496 - 0.135*t1169*t496)*var2[5];
  p_output1[81]=t1064;
  p_output1[82]=t1089;
  p_output1[83]=t1093;
  p_output1[84]=t2046*var2[1] + (-1.*t1712*t1992 + t2008*t2091)*var2[2] + (t2046*(t2222 + t2290) + t2396*t2407 + 0.08055*t2455 + 0.135*t154*t496)*var2[3] + (0.08055*t2794 + t2046*(t2801 + t2805) + t2396*t2825 + t2632*t2845 + t2694*(t2858 + t2870) + 0.135*t129*t606)*var2[4] + (t2646 + 0.08055*t2711 + t2396*t2726 + t2046*(t2730 + t2734) + t2694*(t2740 + t2741))*var2[5] + (t2488 + t2396*t2496 + t2046*(t2524 + t2563) + t2646 + (t2658 + t2659)*t2694)*var2[13];
  p_output1[85]=(-1.*t1153*t1992*t496 + t1169*t2008*t496)*var2[0] + t2407*var2[2] + (0.08055*t3046 + t2046*(t3059 + t3060) + t2951*t3078 - 0.135*t129*t496)*var2[3] + (t2046*(t2934 + t2936) + t2951*t2959 + 0.08055*t2973 + t2845*t2995 + t2407*(t2998 + t2999) + 0.135*t154*t606)*var2[4] + (t2951*t3103 + t2046*(t3119 + t3126) + t3139 + t2407*(t3150 + t3151) + 0.08055*t3166)*var2[5] + (0.08055*t2694 + t3139 + t2951*t3192 + t2046*(t3201 + t3205) + t2407*(t3223 + t3224))*var2[13];
  p_output1[86]=t2694*var2[0] + (-1.*t1244*t1992 + t1601*t2008)*var2[1] + (t2407*(t2979 + t2980) + t2407*t3330 + t3078*t3373 + t2694*(t3509 + t3512))*var2[3] + (0.08055*t3326 + t2825*t3330 + t2407*(t3342 + t3346) + t2959*t3373 + t2694*(t3384 + t3387) + 0.135*t496)*var2[4] + (t2726*t3330 + t3103*t3373 + t3401 + t2407*(t3411 + t3419) + t2694*(t3444 + t3446))*var2[5] + (t2496*t3330 + t3192*t3373 + t3401 + t2407*(t3465 + t3473) + t2694*(t3482 + t3485))*var2[13];
  p_output1[87]=t3078*var2[3] + t2959*var2[4] + t3103*var2[5] + t3192*var2[13];
  p_output1[88]=t2407*var2[3] + t2825*var2[4] + t2726*var2[5] + t2496*var2[13];
  p_output1[89]=t2845*var2[4] + t2620*var2[5] + t2620*var2[13];
  p_output1[90]=t3629 + t3662 + (0.08055*t3078 - 1.*t3696*t3715 - 1.*t3727*(t2222 + t2290 + t3728 + t3738) - 0.01004*t3748)*var2[3] + (0.08055*t2959 - 0.01004*t3849 - 1.*t3696*t3859 - 1.*t3727*(t2801 + t2805 + t3863 + t3867) - 1.*t3661*(t2858 + t2870 + t3875 + t3877) - 1.*t3823*t3891)*var2[4] + (0.08055*t3103 - 0.01004*t2711*t3591 - 1.*t3166*t3607*t3696 - 1.*t3727*(t2730 + t2734 + t3775) - 1.*t3661*(t2740 + t2741 + t3802) + t3824)*var2[5] + (0.08055*t3192 - 0.01004*t2407*t3591 - 1.*t2694*t3607*t3696 - 1.*t3661*(t2658 + t2659 + t3802) + t3824 - 1.*t3727*(t2524 + t2563 + t4044))*var2[13] + (-0.01004*t3715 - 1.*t3661*(t3927 + t3941) - 1.*t3727*(t3954 + t3956) - 1.*t3823*t3965 - 1.*t3696*t3983)*var2[14];
  p_output1[91]=t4079 + t4117 + (t2488 - 0.01004*t4322 - 1.*t4127*t4354 - 1.*t3727*(t3059 + t3060 + t3818 + t4369))*var2[3] + (0.08055*t2825 - 1.*t3891*t4202 - 1.*t4127*t4221 - 1.*t3727*(t2934 + t2936 + t4233 + t4237) - 0.01004*t4246 - 1.*t3715*(t2998 + t2999 + t4253 + t4261))*var2[4] + (0.08055*t2726 - 0.01004*t3166*t3591 - 1.*t2711*t3607*t4127 - 1.*t3727*(t3119 + t3126 + t4164) - 1.*t3715*(t3150 + t3151 + t4174) + t4204)*var2[5] + (0.08055*t2496 - 0.01004*t2694*t3591 - 1.*t2407*t3607*t4127 - 1.*t3715*(t3223 + t3224 + t4174) + t4204 - 1.*t3727*(t3201 + t3205 + t4293))*var2[13] + (-0.01004*t3661 - 1.*t3965*t4202 - 1.*t3715*(t4397 + t4402) - 1.*t3727*(t4409 + t4419) - 1.*t4127*t4449)*var2[14];
  p_output1[92]=t4475 + t4484 + (-1.*t3715*(t2979 + t2980 + t4194 + t4196) - 1.*t3715*t4530 - 1.*t4354*t4577 - 1.*t3661*(t3509 + t3512 + t4559 + t4656))*var2[3] + (0.08055*t2845 - 0.01004*t4501 - 1.*t3715*(t3342 + t3346 + t4507 + t4516) - 1.*t3859*t4530 - 1.*t3661*(t3384 + t3387 + t4535 + t4539) - 1.*t4221*t4577)*var2[4] + (-1.*t3166*t3607*t4530 - 1.*t2711*t3607*t4577 + t4593 + t4594 - 1.*t3715*(t3411 + t3419 + t4605) - 1.*t3661*(t3444 + t3446 + t4611))*var2[5] + (-1.*t2694*t3607*t4530 - 1.*t2407*t3607*t4577 + t4593 + t4594 - 1.*t3661*(t3482 + t3485 + t4770) - 1.*t3715*(t3465 + t3473 + t4793))*var2[13] + (-0.01004*t3727 - 1.*t3983*t4530 - 1.*t4449*t4577 - 1.*t3661*(t4712 + t4719) - 1.*t3715*(t4728 + t4729))*var2[14];
  p_output1[93]=t4866;
  p_output1[94]=t4918;
  p_output1[95]=t4950;
  p_output1[96]=t3629 + t3662 + (-1.*t3715*t5016 - 1.*t3727*(t2222 + t2290 + t3728 + t3738 + t5019 + t5027) - 0.13004*t5044 + 0.08055*t5059)*var2[3] + (-1.*t3859*t5016 - 1.*t3891*t5203 - 0.13004*t5306 + 0.08055*t5313 - 1.*t3727*(t2801 + t2805 + t3863 + t3867 + t5317 + t5318) - 1.*t3661*(t2858 + t2870 + t3875 + t3877 + t5331 + t5332))*var2[4] + (-1.*t3166*t3607*t5016 - 0.13004*t5160 + 0.08055*t5172 - 1.*t3727*(t2730 + t2734 + t3775 + t5174 + t5177) - 1.*t3661*(t2740 + t2741 + t3802 + t5186 + t5188) + t5209)*var2[5] + (-1.*t2694*t3607*t5016 - 1.*t3661*(t2658 + t2659 + t3802 + t5186 + t5188) + t5209 - 0.13004*t5222 + 0.08055*t5231 - 1.*t3727*(t2524 + t2563 + t4044 + t5239 + t5240))*var2[13] + (-0.13004*t3715*t4951 - 0.08055*t3715*t4955 - 1.*t3983*t5016 - 1.*t3965*t5203 - 1.*t3661*(t3927 + t3941 + t5261) - 1.*t3727*(t3954 + t3956 + t5271))*var2[14] + (-1.*t3661*(t5087 + t5100) + 0.08055*t5107 - 0.13004*t5137 - 1.*t3727*(t5140 + t5141))*var2[15];
  p_output1[97]=t4079 + t4117 + (0.08055*t5137 - 1.*t4354*t5363 - 0.13004*t5645 - 1.*t3727*(t3059 + t3060 + t3818 + t4369 + t5648 + t5649))*var2[3] + (-1.*t4221*t5363 - 1.*t3891*t5414 - 1.*t3727*(t2934 + t2936 + t4233 + t4237 + t5552 + t5553) - 0.13004*t5585 + 0.08055*t5603 - 1.*t3715*(t2998 + t2999 + t4253 + t4261 + t5606 + t5607))*var2[4] + (-1.*t2711*t3607*t5363 - 1.*t3727*(t3119 + t3126 + t4164 + t5365 + t5366) - 1.*t3715*(t3150 + t3151 + t4174 + t5373 + t5374) - 0.13004*t5384 + 0.08055*t5401 + t5420)*var2[5] + (-1.*t2407*t3607*t5363 - 1.*t3715*(t3223 + t3224 + t4174 + t5373 + t5374) + t5420 - 1.*t3727*(t3201 + t3205 + t4293 + t5455 + t5459) - 0.13004*t5481 + 0.08055*t5501)*var2[13] + (-0.13004*t3661*t4951 - 0.08055*t3661*t4955 - 1.*t4449*t5363 - 1.*t3965*t5414 - 1.*t3715*(t4397 + t4402 + t5510) - 1.*t3727*(t4409 + t4419 + t5525))*var2[14] + (-1.*t3715*(t5662 + t5664) - 1.*t3727*(t5685 + t5686) + 0.08055*t5693 - 0.13004*t5717)*var2[15];
  p_output1[98]=t4475 + t4484 + (-1.*t3715*(t2979 + t2980 + t4194 + t4196 + t5404 + t5407) - 1.*t3715*t5871 - 1.*t4354*t5882 - 1.*t3661*(t3509 + t3512 + t4559 + t4656 + t6008 + t6012))*var2[3] + (-0.13004*t5840 + 0.08055*t5850 - 1.*t3715*(t3342 + t3346 + t4507 + t4516 + t5856 + t5857) - 1.*t3661*(t3384 + t3387 + t4535 + t4539 + t5863 + t5864) - 1.*t3859*t5871 - 1.*t4221*t5882)*var2[4] + (-1.*t3166*t3607*t5871 - 1.*t2711*t3607*t5882 + t5895 + t5901 - 1.*t3715*(t3411 + t3419 + t4605 + t5902 + t5907) - 1.*t3661*(t3444 + t3446 + t4611 + t5913 + t5916))*var2[5] + (-1.*t2694*t3607*t5871 - 1.*t2407*t3607*t5882 + t5895 + t5901 - 1.*t3661*(t3482 + t3485 + t4770 + t5931 + t5932) - 1.*t3715*(t3465 + t3473 + t4793 + t5949 + t5951))*var2[13] + (-0.13004*t3727*t4951 - 0.08055*t3727*t4955 - 1.*t3983*t5871 - 1.*t4449*t5882 - 1.*t3661*(t4712 + t4719 + t5976) - 1.*t3715*(t4728 + t4729 + t5987))*var2[14] + (0.08055*t5764 - 0.13004*t5778 - 1.*t3661*(t5800 + t5801) - 1.*t3715*(t5815 + t5818))*var2[15];
  p_output1[99]=t4866;
  p_output1[100]=t4918;
  p_output1[101]=t4950;
  p_output1[102]=t3629 + t3662 + (-1.*t3715*t6082 - 1.*t3727*(t2222 + t2290 + t3728 + t3738 + t5019 + t5027 + t6087 + t6092) + 0.03315*t6113 - 0.19074*t6125)*var2[3] + (-1.*t3859*t6082 - 1.*t3891*t6298 + 0.03315*t6460 - 0.19074*t6473 - 1.*t3727*(t2801 + t2805 + t3863 + t3867 + t5317 + t5318 + t6482 + t6485) - 1.*t3661*(t2858 + t2870 + t3875 + t3877 + t5331 + t5332 + t6490 + t6491))*var2[4] + (-1.*t3166*t3607*t6082 - 1.*t3661*(t2740 + t2741 + t3802 + t5186 + t5188 + t6244 + t6245) + 0.03315*t6263 - 0.19074*t6276 - 1.*t3727*(t2730 + t2734 + t3775 + t5174 + t5177 + t6283 + t6284) + t6326)*var2[5] + (-1.*t2694*t3607*t6082 - 1.*t3661*(t2658 + t2659 + t3802 + t5186 + t5188 + t6244 + t6245) + t6326 + 0.03315*t6347 - 0.19074*t6361 - 1.*t3727*(t2524 + t2563 + t4044 + t5239 + t5240 + t6370 + t6376))*var2[13] + (-1.*t3983*t6082 - 1.*t3965*t6298 - 1.*t3661*(t3927 + t3941 + t5261 + t6382 + t6385) + 0.03315*t6419 - 0.19074*t6435 - 1.*t3727*(t3954 + t3956 + t5271 + t6448 + t6449))*var2[14] + (-1.*t3661*(t5087 + t5100 + t6135 + t6146) - 0.19074*t6154 + 0.03315*t6160 - 1.*t3727*(t5140 + t5141 + t6163 + t6164))*var2[15] + (-1.*t3661*(t6182 + t6195) - 0.19074*t6200 + 0.03315*t6204 - 1.*t3727*(t6219 + t6220))*var2[16];
  p_output1[103]=t4079 + t4117 + (0.03315*t6200 - 1.*t4354*t6520 - 0.19074*t6762 - 1.*t3727*(t3059 + t3060 + t3818 + t4369 + t5648 + t5649 + t6764 + t6765))*var2[3] + (-1.*t4221*t6520 - 1.*t3891*t6565 - 1.*t3727*(t2934 + t2936 + t4233 + t4237 + t5552 + t5553 + t6709 + t6710) + 0.03315*t6736 - 0.19074*t6740 - 1.*t3715*(t2998 + t2999 + t4253 + t4261 + t5606 + t5607 + t6743 + t6744))*var2[4] + (-1.*t3715*(t3150 + t3151 + t4174 + t5373 + t5374 + t6508 + t6509) - 1.*t2711*t3607*t6520 - 1.*t3727*(t3119 + t3126 + t4164 + t5365 + t5366 + t6529 + t6530) + 0.03315*t6548 - 0.19074*t6556 + t6567)*var2[5] + (-1.*t3715*(t3223 + t3224 + t4174 + t5373 + t5374 + t6508 + t6509) - 1.*t2407*t3607*t6520 + t6567 - 1.*t3727*(t3201 + t3205 + t4293 + t5455 + t5459 + t6580 + t6581) + 0.03315*t6599 - 0.19074*t6613)*var2[13] + (-1.*t4449*t6520 - 1.*t3965*t6565 - 1.*t3715*(t4397 + t4402 + t5510 + t6623 + t6624) - 1.*t3727*(t4409 + t4419 + t5525 + t6652 + t6653) + 0.03315*t6678 - 0.19074*t6687)*var2[14] + (-1.*t3715*(t5662 + t5664 + t6776 + t6778) - 1.*t3727*(t5685 + t5686 + t6783 + t6785) - 0.19074*t6793 + 0.03315*t6798)*var2[15] + (-1.*t3715*(t6806 + t6807) - 1.*t3727*(t6811 + t6816) - 0.19074*t6838 + 0.03315*t6843)*var2[16];
  p_output1[104]=t4475 + t4484 + (-1.*t3715*(t2979 + t2980 + t4194 + t4196 + t5404 + t5407 + t6561 + t6563) - 1.*t3715*t7015 - 1.*t4354*t7045 - 1.*t3661*(t3509 + t3512 + t4559 + t4656 + t6008 + t6012 + t7215 + t7216))*var2[3] + (-1.*t3661*(t3384 + t3387 + t4535 + t4539 + t5863 + t5864 + t6943 + t6950) - 1.*t3715*(t3342 + t3346 + t4507 + t4516 + t5856 + t5857 + t6974 + t6976) + 0.03315*t6993 - 0.19074*t7008 - 1.*t3859*t7015 - 1.*t4221*t7045)*var2[4] + (-1.*t3166*t3607*t7015 - 1.*t2711*t3607*t7045 + t7060 + t7070 - 1.*t3661*(t3444 + t3446 + t4611 + t5913 + t5916 + t7072 + t7075) - 1.*t3715*(t3411 + t3419 + t4605 + t5902 + t5907 + t7083 + t7084))*var2[5] + (-1.*t2694*t3607*t7015 - 1.*t2407*t3607*t7045 + t7060 + t7070 - 1.*t3661*(t3482 + t3485 + t4770 + t5931 + t5932 + t7104 + t7112) - 1.*t3715*(t3465 + t3473 + t4793 + t5949 + t5951 + t7123 + t7128))*var2[13] + (-1.*t3983*t7015 - 1.*t4449*t7045 + 0.03315*t7155 - 0.19074*t7161 - 1.*t3661*(t4712 + t4719 + t5976 + t7171 + t7172) - 1.*t3715*(t4728 + t4729 + t5987 + t7180 + t7181))*var2[14] + (-0.19074*t6873 + 0.03315*t6879 - 1.*t3661*(t5800 + t5801 + t6883 + t6884) - 1.*t3715*(t5815 + t5818 + t6893 + t6894))*var2[15] + (-0.19074*t6919 + 0.03315*t6923 - 1.*t3661*(t6928 + t6929) - 1.*t3715*(t6934 + t6935))*var2[16];
  p_output1[105]=t4866;
  p_output1[106]=t4918;
  p_output1[107]=t4950;
  p_output1[108]=t3629 + t3662 + (-0.62554*(t6125*t7260 + t6113*t7280) + 0.01315*(t6113*t7260 - 1.*t6125*t7280) - 1.*t3715*t7338 - 1.*t3727*(t2222 + t2290 + t3728 + t3738 + t5019 + t5027 + t6087 + t6092 + t7345 + t7346))*var2[3] + (-0.62554*(t6473*t7260 + t6460*t7280) + 0.01315*(t6460*t7260 - 1.*t6473*t7280) - 1.*t3727*(t2801 + t2805 + t3863 + t3867 + t5317 + t5318 + t6482 + t6485 + t6736*t7293 + t6740*t7311) - 1.*t3661*(t2858 + t2870 + t3875 + t3877 + t5331 + t5332 + t6490 + t6491 - 1.*t6993*t7293 - 1.*t7008*t7311) - 1.*t3859*t7338 - 1.*t3891*t7553)*var2[4] + (-0.62554*(t6276*t7260 + t6263*t7280) + 0.01315*(t6263*t7260 - 1.*t6276*t7280) - 1.*t3727*(t2730 + t2734 + t3775 + t5174 + t5177 + t6283 + t6284 + t6548*t7293 + t6556*t7311) - 1.*t3166*t3607*t7338 - 1.*t3661*(t2740 + t2741 + t3802 + t5186 + t5188 + t6244 + t6245 + t7493 + t7495) + t7554)*var2[5] + (-0.62554*(t6361*t7260 + t6347*t7280) + 0.01315*(t6347*t7260 - 1.*t6361*t7280) - 1.*t3727*(t2524 + t2563 + t4044 + t5239 + t5240 + t6370 + t6376 + t6599*t7293 + t6613*t7311) - 1.*t2694*t3607*t7338 - 1.*t3661*(t2658 + t2659 + t3802 + t5186 + t5188 + t6244 + t6245 + t7493 + t7495) + t7554)*var2[13] + (-0.62554*(t6435*t7260 + t6419*t7280) + 0.01315*(t6419*t7260 - 1.*t6435*t7280) - 1.*t3727*(t3954 + t3956 + t5271 + t6448 + t6449 + t6678*t7293 + t6687*t7311) - 1.*t3661*(t3927 + t3941 + t5261 + t6382 + t6385 - 1.*t7155*t7293 - 1.*t7161*t7311) - 1.*t3983*t7338 - 1.*t3965*t7553)*var2[14] + (0.01315*(t6160*t7260 - 1.*t6154*t7280) - 0.62554*(t6154*t7260 + t6160*t7280) - 1.*t3727*(t5140 + t5141 + t6163 + t6164 + t6798*t7293 + t6793*t7311) - 1.*t3661*(t5087 + t5100 + t6135 + t6146 - 1.*t6879*t7293 - 1.*t6873*t7311))*var2[15] + (-1.*t3727*(t6219 + t6220 + t6843*t7293 + t6838*t7311) - 1.*t3661*(t6182 + t6195 - 1.*t6923*t7293 - 1.*t6919*t7311) + 0.01315*(t6204*t7260 + t7458) - 0.62554*(t6204*t7280 + t7476))*var2[16] + (0.01315*(-1.*t6762*t7260 + t7458) - 1.*t3661*(-1.*t6919*t7678 - 1.*t7332*t7697) - 1.*t3727*(t6838*t7678 + t7544*t7697) - 0.62554*t7726)*var2[17];
  p_output1[109]=t4079 + t4117 + (-0.62554*(t6762*t7260 + t6200*t7280) - 1.*t3727*(t3059 + t3060 + t3818 + t4369 + t5648 + t5649 + t6764 + t6765 - 1.*t6113*t7293 - 1.*t6125*t7311) + 0.01315*t7726 - 1.*t4354*t7777)*var2[3] + (-0.62554*(t6740*t7260 + t6736*t7280) + 0.01315*(t6736*t7260 - 1.*t6740*t7280) - 1.*t3727*(t2934 + t2936 + t4233 + t4237 + t5552 + t5553 + t6709 + t6710 - 1.*t6460*t7293 - 1.*t6473*t7311) - 1.*t3715*(t2998 + t2999 + t4253 + t4261 + t5606 + t5607 + t6743 + t6744 + t6993*t7293 + t7008*t7311) - 1.*t4221*t7777 - 1.*t3891*t7814)*var2[4] + (-0.62554*(t6556*t7260 + t6548*t7280) + 0.01315*(t6548*t7260 - 1.*t6556*t7280) - 1.*t3727*(t3119 + t3126 + t4164 + t5365 + t5366 + t6529 + t6530 - 1.*t6263*t7293 - 1.*t6276*t7311) - 1.*t3715*(t3150 + t3151 + t4174 + t5373 + t5374 + t6508 + t6509 + t7762 + t7763) - 1.*t2711*t3607*t7777 + t7817)*var2[5] + (-0.62554*(t6613*t7260 + t6599*t7280) + 0.01315*(t6599*t7260 - 1.*t6613*t7280) - 1.*t3727*(t3201 + t3205 + t4293 + t5455 + t5459 + t6580 + t6581 - 1.*t6347*t7293 - 1.*t6361*t7311) - 1.*t3715*(t3223 + t3224 + t4174 + t5373 + t5374 + t6508 + t6509 + t7762 + t7763) - 1.*t2407*t3607*t7777 + t7817)*var2[13] + (-0.62554*(t6687*t7260 + t6678*t7280) + 0.01315*(t6678*t7260 - 1.*t6687*t7280) - 1.*t3727*(t4409 + t4419 + t5525 + t6652 + t6653 - 1.*t6419*t7293 - 1.*t6435*t7311) - 1.*t3715*(t4397 + t4402 + t5510 + t6623 + t6624 + t7155*t7293 + t7161*t7311) - 1.*t4449*t7777 - 1.*t3965*t7814)*var2[14] + (0.01315*(t6798*t7260 - 1.*t6793*t7280) - 0.62554*(t6793*t7260 + t6798*t7280) - 1.*t3727*(t5685 + t5686 + t6783 + t6785 - 1.*t6160*t7293 - 1.*t6154*t7311) - 1.*t3715*(t5662 + t5664 + t6776 + t6778 + t6879*t7293 + t6873*t7311))*var2[15] + (-1.*t3727*(t6811 + t6816 - 1.*t6204*t7293 - 1.*t6200*t7311) - 1.*t3715*(t6806 + t6807 + t6923*t7293 + t6919*t7311) + 0.01315*(t6843*t7260 + t8044) - 0.62554*(t6843*t7280 + t8055))*var2[16] + (-1.*t3727*(-1.*t6200*t7678 - 1.*t6762*t7697) - 1.*t3715*(t6919*t7678 + t7332*t7697) + 0.01315*(-1.*t7260*t7544 + t8044) - 0.62554*(-1.*t7280*t7544 + t8055))*var2[17];
  p_output1[110]=t4475 + t4484 + (-1.*t3661*(t3509 + t3512 + t4559 + t4656 + t6008 + t6012 + t7215 + t7216 + t6113*t7293 + t6125*t7311) - 1.*t3715*(t2979 + t2980 + t4194 + t4196 + t5404 + t5407 + t6561 + t6563 + t7809 + t7810) - 1.*t3715*t8230 - 1.*t4354*t8241)*var2[3] + (-0.62554*(t7008*t7260 + t6993*t7280) + 0.01315*(t6993*t7260 - 1.*t7008*t7280) - 1.*t3661*(t3384 + t3387 + t4535 + t4539 + t5863 + t5864 + t6943 + t6950 + t6460*t7293 + t6473*t7311) - 1.*t3715*(t3342 + t3346 + t4507 + t4516 + t5856 + t5857 + t6974 + t6976 - 1.*t6736*t7293 - 1.*t6740*t7311) - 1.*t3859*t8230 - 1.*t4221*t8241)*var2[4] + (-1.*t3661*(t3444 + t3446 + t4611 + t5913 + t5916 + t7072 + t7075 + t6263*t7293 + t6276*t7311) - 1.*t3715*(t3411 + t3419 + t4605 + t5902 + t5907 + t7083 + t7084 - 1.*t6548*t7293 - 1.*t6556*t7311) - 1.*t3166*t3607*t8230 - 1.*t2711*t3607*t8241 + t8263 + t8269)*var2[5] + (-1.*t3661*(t3482 + t3485 + t4770 + t5931 + t5932 + t7104 + t7112 + t6347*t7293 + t6361*t7311) - 1.*t3715*(t3465 + t3473 + t4793 + t5949 + t5951 + t7123 + t7128 - 1.*t6599*t7293 - 1.*t6613*t7311) - 1.*t2694*t3607*t8230 - 1.*t2407*t3607*t8241 + t8263 + t8269)*var2[13] + (-0.62554*(t7161*t7260 + t7155*t7280) + 0.01315*(t7155*t7260 - 1.*t7161*t7280) - 1.*t3661*(t4712 + t4719 + t5976 + t7171 + t7172 + t6419*t7293 + t6435*t7311) - 1.*t3715*(t4728 + t4729 + t5987 + t7180 + t7181 - 1.*t6678*t7293 - 1.*t6687*t7311) - 1.*t3983*t8230 - 1.*t4449*t8241)*var2[14] + (0.01315*(t6879*t7260 - 1.*t6873*t7280) - 0.62554*(t6873*t7260 + t6879*t7280) - 1.*t3661*(t5800 + t5801 + t6883 + t6884 + t6160*t7293 + t6154*t7311) - 1.*t3715*(t5815 + t5818 + t6893 + t6894 - 1.*t6798*t7293 - 1.*t6793*t7311))*var2[15] + (-1.*t3661*(t6928 + t6929 + t6204*t7293 + t6200*t7311) - 1.*t3715*(t6934 + t6935 - 1.*t6843*t7293 - 1.*t6838*t7311) + 0.01315*(t6923*t7260 + t8143) - 0.62554*(t6923*t7280 + t8154))*var2[16] + (-1.*t3661*(t6200*t7678 + t6762*t7697) - 1.*t3715*(-1.*t6838*t7678 - 1.*t7544*t7697) + 0.01315*(-1.*t7260*t7332 + t8143) - 0.62554*(-1.*t7280*t7332 + t8154))*var2[17];
  p_output1[111]=t4866;
  p_output1[112]=t4918;
  p_output1[113]=t4950;
  p_output1[114]=0;
  p_output1[115]=0;
  p_output1[116]=0;
  p_output1[117]=0;
  p_output1[118]=0;
  p_output1[119]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 20 && ncols == 1) && 
      !(mrows == 1 && ncols == 20))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 20 && ncols == 1) && 
      !(mrows == 1 && ncols == 20))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 6, (mwSize) 20, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "dJs_RightTarsus_mex.hh"

namespace SymExpression
{

void dJs_RightTarsus_mex_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
