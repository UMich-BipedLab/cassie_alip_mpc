/*
 * Automatically Generated from Mathematica.
 * Mon 11 May 2020 22:22:18 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t1126;
  double t1350;
  double t1445;
  double t1457;
  double t1515;
  double t1703;
  double t1657;
  double t1673;
  double t1754;
  double t323;
  double t411;
  double t413;
  double t796;
  double t1701;
  double t1757;
  double t1864;
  double t2296;
  double t2299;
  double t2305;
  double t49;
  double t2514;
  double t2551;
  double t2581;
  double t2659;
  double t2840;
  double t3018;
  double t3037;
  double t3306;
  double t3541;
  double t3681;
  double t4219;
  double t4229;
  double t4355;
  double t4534;
  double t4536;
  double t4592;
  double t4625;
  double t4866;
  double t4907;
  double t4926;
  double t5224;
  double t5441;
  double t5587;
  double t5726;
  double t5979;
  double t5989;
  double t6270;
  double t6300;
  double t6312;
  double t6315;
  double t6477;
  double t6496;
  double t6540;
  double t6647;
  double t6657;
  double t6666;
  double t6794;
  double t6867;
  double t6903;
  double t6907;
  double t6972;
  double t7000;
  double t7014;
  double t640;
  double t938;
  double t956;
  double t1479;
  double t1516;
  double t1563;
  double t1993;
  double t2184;
  double t2248;
  double t2381;
  double t2426;
  double t2473;
  double t7140;
  double t7166;
  double t7176;
  double t7197;
  double t7208;
  double t7218;
  double t3021;
  double t3089;
  double t3163;
  double t7224;
  double t7268;
  double t7276;
  double t4155;
  double t4156;
  double t4160;
  double t4609;
  double t4643;
  double t4846;
  double t7282;
  double t7284;
  double t7288;
  double t7310;
  double t7311;
  double t7315;
  double t5171;
  double t5184;
  double t5208;
  double t6269;
  double t6278;
  double t6284;
  double t7320;
  double t7329;
  double t7334;
  double t7336;
  double t7337;
  double t7338;
  double t6455;
  double t6465;
  double t6469;
  double t6701;
  double t6799;
  double t6864;
  double t7343;
  double t7346;
  double t7352;
  double t7364;
  double t7366;
  double t7367;
  double t6948;
  double t6960;
  double t6962;
  double t7374;
  double t7375;
  double t7376;
  double t7378;
  double t7382;
  double t7384;
  double t7433;
  double t7435;
  double t7437;
  double t7446;
  double t7449;
  double t7450;
  double t7458;
  double t7459;
  double t7460;
  double t7462;
  double t7463;
  double t7465;
  double t7471;
  double t7473;
  double t7474;
  double t7481;
  double t7483;
  double t7484;
  double t7486;
  double t7487;
  double t7488;
  double t7490;
  double t7491;
  double t7492;
  double t7494;
  double t7495;
  double t7496;
  double t7523;
  double t7529;
  double t7530;
  double t7534;
  double t7535;
  double t7536;
  double t7544;
  double t7545;
  double t7546;
  double t7548;
  double t7549;
  double t7550;
  double t7552;
  double t7553;
  double t7558;
  double t7564;
  double t7566;
  double t7567;
  double t7570;
  double t7571;
  double t7572;
  double t7574;
  double t7575;
  double t7576;
  double t7584;
  double t7585;
  double t7587;
  double t7609;
  double t7610;
  double t7611;
  double t7616;
  double t7618;
  double t7619;
  double t7629;
  double t7631;
  double t7634;
  double t7636;
  double t7637;
  double t7638;
  double t7643;
  double t7646;
  double t7647;
  double t7656;
  double t7658;
  double t7664;
  double t7671;
  double t7672;
  double t7673;
  double t7678;
  double t7680;
  double t7688;
  double t7693;
  double t7695;
  double t7698;
  double t7727;
  double t7728;
  double t7729;
  double t7737;
  double t7738;
  double t7732;
  double t7733;
  double t7735;
  double t7746;
  double t7748;
  double t7749;
  double t7751;
  double t7752;
  double t7754;
  double t7757;
  double t7758;
  double t7760;
  double t7762;
  double t7763;
  double t7764;
  double t7767;
  double t7768;
  double t7770;
  double t7773;
  double t7774;
  double t7777;
  double t7791;
  double t7793;
  double t7794;
  double t7802;
  double t7803;
  double t7804;
  double t7799;
  double t7800;
  double t7812;
  double t7813;
  double t7814;
  double t7818;
  double t7819;
  double t7821;
  double t7823;
  double t7824;
  double t7825;
  double t7829;
  double t7830;
  double t7833;
  double t7835;
  double t7836;
  double t7837;
  double t7839;
  double t7840;
  double t7843;
  double t7869;
  double t7870;
  double t7872;
  double t7863;
  double t7865;
  double t7866;
  double t7877;
  double t7879;
  double t7881;
  double t7883;
  double t7884;
  double t7885;
  double t7888;
  double t7890;
  double t7891;
  double t7895;
  double t7896;
  double t7899;
  double t7902;
  double t7904;
  double t7905;
  double t7907;
  double t7911;
  double t7912;
  double t7937;
  double t7938;
  double t7948;
  double t7950;
  double t7951;
  double t7953;
  double t7954;
  double t7955;
  double t7960;
  double t7963;
  double t7964;
  double t7966;
  double t7968;
  double t7969;
  double t7971;
  double t7974;
  double t7975;
  double t7978;
  double t7979;
  double t7981;
  double t7927;
  double t7928;
  double t7932;
  double t7933;
  double t7934;
  double t8013;
  double t8014;
  double t8016;
  double t8024;
  double t8026;
  double t8019;
  double t8020;
  double t8031;
  double t8033;
  double t8035;
  double t8038;
  double t8039;
  double t8040;
  double t8043;
  double t8047;
  double t8049;
  double t8053;
  double t8056;
  double t8057;
  double t8063;
  double t8066;
  double t8068;
  double t8071;
  double t8073;
  double t8074;
  double t7868;
  double t7873;
  double t7874;
  double t7876;
  double t7882;
  double t7886;
  double t7893;
  double t7900;
  double t7906;
  double t7913;
  double t7914;
  double t7915;
  double t7917;
  double t7918;
  double t7919;
  double t7920;
  double t7924;
  double t7925;
  double t7293;
  double t7294;
  double t7297;
  double t8158;
  double t8160;
  double t8161;
  double t8163;
  double t8164;
  double t8165;
  double t8167;
  double t8168;
  double t8169;
  double t8173;
  double t8175;
  double t8177;
  double t8120;
  double t8127;
  double t8132;
  double t8136;
  double t8137;
  double t8201;
  double t8203;
  double t8204;
  double t8206;
  double t8207;
  double t8208;
  double t8216;
  double t8218;
  double t8219;
  double t8221;
  double t8226;
  double t8227;
  double t8230;
  double t8232;
  double t8234;
  double t8236;
  double t8237;
  double t8238;
  double t8256;
  double t8257;
  double t8258;
  double t8262;
  double t8263;
  double t8265;
  double t8280;
  double t8282;
  double t8283;
  double t8286;
  double t8287;
  double t8289;
  double t8294;
  double t8296;
  double t8301;
  double t8306;
  double t8307;
  double t8308;
  double t8342;
  double t8343;
  double t8344;
  double t8348;
  double t8350;
  double t8352;
  double t8353;
  double t8354;
  double t8360;
  double t8361;
  double t8362;
  double t8364;
  double t8365;
  double t8367;
  double t8333;
  double t8334;
  double t8338;
  double t8339;
  double t8340;
  double t8395;
  double t8397;
  double t8399;
  double t8403;
  double t8406;
  double t8408;
  double t8411;
  double t8412;
  double t8413;
  double t8416;
  double t8417;
  double t8419;
  double t8424;
  double t8425;
  double t8426;
  double t8430;
  double t8431;
  double t8432;
  double t8437;
  double t8440;
  double t8441;
  double t8462;
  double t8464;
  double t8465;
  double t8467;
  double t8468;
  double t8469;
  double t8471;
  double t8474;
  double t8477;
  double t8480;
  double t8482;
  double t8483;
  double t8487;
  double t8488;
  double t8489;
  double t8492;
  double t8493;
  double t8497;
  double t8502;
  double t8504;
  double t8505;
  double t8540;
  double t8542;
  double t8545;
  double t8546;
  double t8547;
  double t8551;
  double t8552;
  double t8529;
  double t8530;
  double t8531;
  double t8535;
  double t8536;
  double t8571;
  double t8575;
  double t8577;
  double t8581;
  double t8583;
  double t8585;
  double t8586;
  double t8590;
  double t8591;
  double t8592;
  double t8600;
  double t8603;
  double t8604;
  double t8620;
  double t8621;
  double t8622;
  double t8627;
  double t8632;
  double t8634;
  double t8635;
  double t8640;
  double t8646;
  double t8647;
  double t8652;
  double t8655;
  double t8657;
  double t8680;
  double t8681;
  double t7395;
  double t8671;
  double t8672;
  double t8674;
  double t8675;
  double t8676;
  double t8695;
  double t8696;
  double t8697;
  double t8699;
  double t8700;
  double t8703;
  double t8705;
  double t8727;
  double t8728;
  double t8729;
  double t8732;
  double t8733;
  double t8742;
  double t8746;
  double t7393;
  double t7403;
  double t8688;
  double t8766;
  double t8767;
  double t8771;
  double t8774;
  double t8775;
  double t8784;
  double t8786;
  double t8787;
  double t8713;
  double t8718;
  double t8799;
  double t8800;
  double t8801;
  double t8752;
  double t8760;
  t1126 = Sin(var1[3]);
  t1350 = Cos(var1[13]);
  t1445 = -1.*t1350;
  t1457 = 1. + t1445;
  t1515 = Sin(var1[13]);
  t1703 = Cos(var1[3]);
  t1657 = Cos(var1[5]);
  t1673 = Sin(var1[4]);
  t1754 = Sin(var1[5]);
  t323 = Cos(var1[14]);
  t411 = -1.*t323;
  t413 = 1. + t411;
  t796 = Sin(var1[14]);
  t1701 = -1.*t1657*t1126*t1673;
  t1757 = t1703*t1754;
  t1864 = t1701 + t1757;
  t2296 = -1.*t1703*t1657;
  t2299 = -1.*t1126*t1673*t1754;
  t2305 = t2296 + t2299;
  t49 = Cos(var1[4]);
  t2514 = t1515*t1864;
  t2551 = t1350*t2305;
  t2581 = t2514 + t2551;
  t2659 = Cos(var1[15]);
  t2840 = -1.*t2659;
  t3018 = 1. + t2840;
  t3037 = Sin(var1[15]);
  t3306 = t1350*t1864;
  t3541 = -1.*t1515*t2305;
  t3681 = t3306 + t3541;
  t4219 = -1.*t323*t49*t1126;
  t4229 = t796*t2581;
  t4355 = t4219 + t4229;
  t4534 = Cos(var1[16]);
  t4536 = -1.*t4534;
  t4592 = 1. + t4536;
  t4625 = Sin(var1[16]);
  t4866 = t3037*t3681;
  t4907 = t2659*t4355;
  t4926 = t4866 + t4907;
  t5224 = t2659*t3681;
  t5441 = -1.*t3037*t4355;
  t5587 = t5224 + t5441;
  t5726 = Cos(var1[17]);
  t5979 = -1.*t5726;
  t5989 = 1. + t5979;
  t6270 = Sin(var1[17]);
  t6300 = -1.*t4625*t4926;
  t6312 = t4534*t5587;
  t6315 = t6300 + t6312;
  t6477 = t4534*t4926;
  t6496 = t4625*t5587;
  t6540 = t6477 + t6496;
  t6647 = Cos(var1[18]);
  t6657 = -1.*t6647;
  t6666 = 1. + t6657;
  t6794 = Sin(var1[18]);
  t6867 = t6270*t6315;
  t6903 = t5726*t6540;
  t6907 = t6867 + t6903;
  t6972 = t5726*t6315;
  t7000 = -1.*t6270*t6540;
  t7014 = t6972 + t7000;
  t640 = -0.08055*t413;
  t938 = -0.135*t796;
  t956 = 0. + t640 + t938;
  t1479 = 0.07996*t1457;
  t1516 = 0.135*t1515;
  t1563 = 0. + t1479 + t1516;
  t1993 = -0.135*t1457;
  t2184 = 0.07996*t1515;
  t2248 = 0. + t1993 + t2184;
  t2381 = -0.135*t413;
  t2426 = 0.08055*t796;
  t2473 = 0. + t2381 + t2426;
  t7140 = t1703*t1657*t1673;
  t7166 = t1126*t1754;
  t7176 = t7140 + t7166;
  t7197 = -1.*t1657*t1126;
  t7208 = t1703*t1673*t1754;
  t7218 = t7197 + t7208;
  t3021 = -0.01004*t3018;
  t3089 = 0.08055*t3037;
  t3163 = 0. + t3021 + t3089;
  t7224 = t1515*t7176;
  t7268 = t1350*t7218;
  t7276 = t7224 + t7268;
  t4155 = -0.08055*t3018;
  t4156 = -0.01004*t3037;
  t4160 = 0. + t4155 + t4156;
  t4609 = -0.08055*t4592;
  t4643 = -0.13004*t4625;
  t4846 = 0. + t4609 + t4643;
  t7282 = t1350*t7176;
  t7284 = -1.*t1515*t7218;
  t7288 = t7282 + t7284;
  t7310 = t323*t1703*t49;
  t7311 = t796*t7276;
  t7315 = t7310 + t7311;
  t5171 = -0.13004*t4592;
  t5184 = 0.08055*t4625;
  t5208 = 0. + t5171 + t5184;
  t6269 = -0.19074*t5989;
  t6278 = 0.03315*t6270;
  t6284 = 0. + t6269 + t6278;
  t7320 = t3037*t7288;
  t7329 = t2659*t7315;
  t7334 = t7320 + t7329;
  t7336 = t2659*t7288;
  t7337 = -1.*t3037*t7315;
  t7338 = t7336 + t7337;
  t6455 = -0.03315*t5989;
  t6465 = -0.19074*t6270;
  t6469 = 0. + t6455 + t6465;
  t6701 = -0.01315*t6666;
  t6799 = -0.62554*t6794;
  t6864 = 0. + t6701 + t6799;
  t7343 = -1.*t4625*t7334;
  t7346 = t4534*t7338;
  t7352 = t7343 + t7346;
  t7364 = t4534*t7334;
  t7366 = t4625*t7338;
  t7367 = t7364 + t7366;
  t6948 = -0.62554*t6666;
  t6960 = 0.01315*t6794;
  t6962 = 0. + t6948 + t6960;
  t7374 = t6270*t7352;
  t7375 = t5726*t7367;
  t7376 = t7374 + t7375;
  t7378 = t5726*t7352;
  t7382 = -1.*t6270*t7367;
  t7384 = t7378 + t7382;
  t7433 = t1703*t49*t1657*t1515;
  t7435 = t1350*t1703*t49*t1754;
  t7437 = t7433 + t7435;
  t7446 = t1350*t1703*t49*t1657;
  t7449 = -1.*t1703*t49*t1515*t1754;
  t7450 = t7446 + t7449;
  t7458 = -1.*t323*t1703*t1673;
  t7459 = t796*t7437;
  t7460 = t7458 + t7459;
  t7462 = t3037*t7450;
  t7463 = t2659*t7460;
  t7465 = t7462 + t7463;
  t7471 = t2659*t7450;
  t7473 = -1.*t3037*t7460;
  t7474 = t7471 + t7473;
  t7481 = -1.*t4625*t7465;
  t7483 = t4534*t7474;
  t7484 = t7481 + t7483;
  t7486 = t4534*t7465;
  t7487 = t4625*t7474;
  t7488 = t7486 + t7487;
  t7490 = t6270*t7484;
  t7491 = t5726*t7488;
  t7492 = t7490 + t7491;
  t7494 = t5726*t7484;
  t7495 = -1.*t6270*t7488;
  t7496 = t7494 + t7495;
  t7523 = t49*t1657*t1515*t1126;
  t7529 = t1350*t49*t1126*t1754;
  t7530 = t7523 + t7529;
  t7534 = t1350*t49*t1657*t1126;
  t7535 = -1.*t49*t1515*t1126*t1754;
  t7536 = t7534 + t7535;
  t7544 = -1.*t323*t1126*t1673;
  t7545 = t796*t7530;
  t7546 = t7544 + t7545;
  t7548 = t3037*t7536;
  t7549 = t2659*t7546;
  t7550 = t7548 + t7549;
  t7552 = t2659*t7536;
  t7553 = -1.*t3037*t7546;
  t7558 = t7552 + t7553;
  t7564 = -1.*t4625*t7550;
  t7566 = t4534*t7558;
  t7567 = t7564 + t7566;
  t7570 = t4534*t7550;
  t7571 = t4625*t7558;
  t7572 = t7570 + t7571;
  t7574 = t6270*t7567;
  t7575 = t5726*t7572;
  t7576 = t7574 + t7575;
  t7584 = t5726*t7567;
  t7585 = -1.*t6270*t7572;
  t7587 = t7584 + t7585;
  t7609 = -1.*t1657*t1515*t1673;
  t7610 = -1.*t1350*t1673*t1754;
  t7611 = t7609 + t7610;
  t7616 = -1.*t1350*t1657*t1673;
  t7618 = t1515*t1673*t1754;
  t7619 = t7616 + t7618;
  t7629 = -1.*t323*t49;
  t7631 = t796*t7611;
  t7634 = t7629 + t7631;
  t7636 = t3037*t7619;
  t7637 = t2659*t7634;
  t7638 = t7636 + t7637;
  t7643 = t2659*t7619;
  t7646 = -1.*t3037*t7634;
  t7647 = t7643 + t7646;
  t7656 = -1.*t4625*t7638;
  t7658 = t4534*t7647;
  t7664 = t7656 + t7658;
  t7671 = t4534*t7638;
  t7672 = t4625*t7647;
  t7673 = t7671 + t7672;
  t7678 = t6270*t7664;
  t7680 = t5726*t7673;
  t7688 = t7678 + t7680;
  t7693 = t5726*t7664;
  t7695 = -1.*t6270*t7673;
  t7698 = t7693 + t7695;
  t7727 = t1657*t1126;
  t7728 = -1.*t1703*t1673*t1754;
  t7729 = t7727 + t7728;
  t7737 = t1515*t7729;
  t7738 = t7282 + t7737;
  t7732 = -1.*t1515*t7176;
  t7733 = t1350*t7729;
  t7735 = t7732 + t7733;
  t7746 = t3037*t7735;
  t7748 = t2659*t796*t7738;
  t7749 = t7746 + t7748;
  t7751 = t2659*t7735;
  t7752 = -1.*t796*t3037*t7738;
  t7754 = t7751 + t7752;
  t7757 = -1.*t4625*t7749;
  t7758 = t4534*t7754;
  t7760 = t7757 + t7758;
  t7762 = t4534*t7749;
  t7763 = t4625*t7754;
  t7764 = t7762 + t7763;
  t7767 = t6270*t7760;
  t7768 = t5726*t7764;
  t7770 = t7767 + t7768;
  t7773 = t5726*t7760;
  t7774 = -1.*t6270*t7764;
  t7777 = t7773 + t7774;
  t7791 = t1657*t1126*t1673;
  t7793 = -1.*t1703*t1754;
  t7794 = t7791 + t7793;
  t7802 = t1350*t7794;
  t7803 = t1515*t2305;
  t7804 = t7802 + t7803;
  t7799 = -1.*t1515*t7794;
  t7800 = t7799 + t2551;
  t7812 = t3037*t7800;
  t7813 = t2659*t796*t7804;
  t7814 = t7812 + t7813;
  t7818 = t2659*t7800;
  t7819 = -1.*t796*t3037*t7804;
  t7821 = t7818 + t7819;
  t7823 = -1.*t4625*t7814;
  t7824 = t4534*t7821;
  t7825 = t7823 + t7824;
  t7829 = t4534*t7814;
  t7830 = t4625*t7821;
  t7833 = t7829 + t7830;
  t7835 = t6270*t7825;
  t7836 = t5726*t7833;
  t7837 = t7835 + t7836;
  t7839 = t5726*t7825;
  t7840 = -1.*t6270*t7833;
  t7843 = t7839 + t7840;
  t7869 = t1350*t49*t1657;
  t7870 = -1.*t49*t1515*t1754;
  t7872 = t7869 + t7870;
  t7863 = -1.*t49*t1657*t1515;
  t7865 = -1.*t1350*t49*t1754;
  t7866 = t7863 + t7865;
  t7877 = t3037*t7866;
  t7879 = t2659*t796*t7872;
  t7881 = t7877 + t7879;
  t7883 = t2659*t7866;
  t7884 = -1.*t796*t3037*t7872;
  t7885 = t7883 + t7884;
  t7888 = -1.*t4625*t7881;
  t7890 = t4534*t7885;
  t7891 = t7888 + t7890;
  t7895 = t4534*t7881;
  t7896 = t4625*t7885;
  t7899 = t7895 + t7896;
  t7902 = t6270*t7891;
  t7904 = t5726*t7899;
  t7905 = t7902 + t7904;
  t7907 = t5726*t7891;
  t7911 = -1.*t6270*t7899;
  t7912 = t7907 + t7911;
  t7937 = -1.*t1350*t7218;
  t7938 = t7732 + t7937;
  t7948 = t3037*t7938;
  t7950 = t2659*t796*t7288;
  t7951 = t7948 + t7950;
  t7953 = t2659*t7938;
  t7954 = -1.*t796*t3037*t7288;
  t7955 = t7953 + t7954;
  t7960 = -1.*t4625*t7951;
  t7963 = t4534*t7955;
  t7964 = t7960 + t7963;
  t7966 = t4534*t7951;
  t7968 = t4625*t7955;
  t7969 = t7966 + t7968;
  t7971 = t6270*t7964;
  t7974 = t5726*t7969;
  t7975 = t7971 + t7974;
  t7978 = t5726*t7964;
  t7979 = -1.*t6270*t7969;
  t7981 = t7978 + t7979;
  t7927 = 0.135*t1350;
  t7928 = t7927 + t2184;
  t7932 = 0.07996*t1350;
  t7933 = -0.135*t1515;
  t7934 = t7932 + t7933;
  t8013 = t1703*t1657;
  t8014 = t1126*t1673*t1754;
  t8016 = t8013 + t8014;
  t8024 = -1.*t1515*t8016;
  t8026 = t7802 + t8024;
  t8019 = -1.*t1350*t8016;
  t8020 = t7799 + t8019;
  t8031 = t3037*t8020;
  t8033 = t2659*t796*t8026;
  t8035 = t8031 + t8033;
  t8038 = t2659*t8020;
  t8039 = -1.*t796*t3037*t8026;
  t8040 = t8038 + t8039;
  t8043 = -1.*t4625*t8035;
  t8047 = t4534*t8040;
  t8049 = t8043 + t8047;
  t8053 = t4534*t8035;
  t8056 = t4625*t8040;
  t8057 = t8053 + t8056;
  t8063 = t6270*t8049;
  t8066 = t5726*t8057;
  t8068 = t8063 + t8066;
  t8071 = t5726*t8049;
  t8073 = -1.*t6270*t8057;
  t8074 = t8071 + t8073;
  t7868 = t3163*t7866;
  t7873 = -0.1305*t323*t7872;
  t7874 = t2473*t7872;
  t7876 = t796*t4160*t7872;
  t7882 = t4846*t7881;
  t7886 = t5208*t7885;
  t7893 = t6284*t7891;
  t7900 = t6469*t7899;
  t7906 = t6864*t7905;
  t7913 = t6962*t7912;
  t7914 = -1.*t6794*t7905;
  t7915 = t6647*t7912;
  t7917 = t7914 + t7915;
  t7918 = -0.62554*t7917;
  t7919 = t6647*t7905;
  t7920 = t6794*t7912;
  t7924 = t7919 + t7920;
  t7925 = -0.01315*t7924;
  t7293 = -1.*t1703*t49*t796;
  t7294 = t323*t7276;
  t7297 = t7293 + t7294;
  t8158 = -1.*t4534*t3037*t7297;
  t8160 = -1.*t2659*t4625*t7297;
  t8161 = t8158 + t8160;
  t8163 = t2659*t4534*t7297;
  t8164 = -1.*t3037*t4625*t7297;
  t8165 = t8163 + t8164;
  t8167 = t6270*t8161;
  t8168 = t5726*t8165;
  t8169 = t8167 + t8168;
  t8173 = t5726*t8161;
  t8175 = -1.*t6270*t8165;
  t8177 = t8173 + t8175;
  t8120 = -0.135*t323;
  t8127 = -0.08055*t796;
  t8132 = t8120 + t8127;
  t8136 = 0.08055*t323;
  t8137 = t8136 + t938;
  t8201 = t1515*t7794;
  t8203 = t1350*t8016;
  t8204 = t8201 + t8203;
  t8206 = -1.*t49*t796*t1126;
  t8207 = t323*t8204;
  t8208 = t8206 + t8207;
  t8216 = -1.*t4534*t3037*t8208;
  t8218 = -1.*t2659*t4625*t8208;
  t8219 = t8216 + t8218;
  t8221 = t2659*t4534*t8208;
  t8226 = -1.*t3037*t4625*t8208;
  t8227 = t8221 + t8226;
  t8230 = t6270*t8219;
  t8232 = t5726*t8227;
  t8234 = t8230 + t8232;
  t8236 = t5726*t8219;
  t8237 = -1.*t6270*t8227;
  t8238 = t8236 + t8237;
  t8256 = t49*t1657*t1515;
  t8257 = t1350*t49*t1754;
  t8258 = t8256 + t8257;
  t8262 = t796*t1673;
  t8263 = t323*t8258;
  t8265 = t8262 + t8263;
  t8280 = -1.*t4534*t3037*t8265;
  t8282 = -1.*t2659*t4625*t8265;
  t8283 = t8280 + t8282;
  t8286 = t2659*t4534*t8265;
  t8287 = -1.*t3037*t4625*t8265;
  t8289 = t8286 + t8287;
  t8294 = t6270*t8283;
  t8296 = t5726*t8289;
  t8301 = t8294 + t8296;
  t8306 = t5726*t8283;
  t8307 = -1.*t6270*t8289;
  t8308 = t8306 + t8307;
  t8342 = -1.*t3037*t7288;
  t8343 = -1.*t2659*t7315;
  t8344 = t8342 + t8343;
  t8348 = t4625*t8344;
  t8350 = t8348 + t7346;
  t8352 = t4534*t8344;
  t8353 = -1.*t4625*t7338;
  t8354 = t8352 + t8353;
  t8360 = -1.*t6270*t8350;
  t8361 = t5726*t8354;
  t8362 = t8360 + t8361;
  t8364 = t5726*t8350;
  t8365 = t6270*t8354;
  t8367 = t8364 + t8365;
  t8333 = 0.08055*t2659;
  t8334 = t8333 + t4156;
  t8338 = -0.01004*t2659;
  t8339 = -0.08055*t3037;
  t8340 = t8338 + t8339;
  t8395 = t323*t49*t1126;
  t8397 = t796*t8204;
  t8399 = t8395 + t8397;
  t8403 = -1.*t3037*t8026;
  t8406 = -1.*t2659*t8399;
  t8408 = t8403 + t8406;
  t8411 = t2659*t8026;
  t8412 = -1.*t3037*t8399;
  t8413 = t8411 + t8412;
  t8416 = t4625*t8408;
  t8417 = t4534*t8413;
  t8419 = t8416 + t8417;
  t8424 = t4534*t8408;
  t8425 = -1.*t4625*t8413;
  t8426 = t8424 + t8425;
  t8430 = -1.*t6270*t8419;
  t8431 = t5726*t8426;
  t8432 = t8430 + t8431;
  t8437 = t5726*t8419;
  t8440 = t6270*t8426;
  t8441 = t8437 + t8440;
  t8462 = -1.*t323*t1673;
  t8464 = t796*t8258;
  t8465 = t8462 + t8464;
  t8467 = -1.*t3037*t7872;
  t8468 = -1.*t2659*t8465;
  t8469 = t8467 + t8468;
  t8471 = t2659*t7872;
  t8474 = -1.*t3037*t8465;
  t8477 = t8471 + t8474;
  t8480 = t4625*t8469;
  t8482 = t4534*t8477;
  t8483 = t8480 + t8482;
  t8487 = t4534*t8469;
  t8488 = -1.*t4625*t8477;
  t8489 = t8487 + t8488;
  t8492 = -1.*t6270*t8483;
  t8493 = t5726*t8489;
  t8497 = t8492 + t8493;
  t8502 = t5726*t8483;
  t8504 = t6270*t8489;
  t8505 = t8502 + t8504;
  t8540 = -1.*t4534*t7334;
  t8542 = t8540 + t8353;
  t8545 = -1.*t6270*t7352;
  t8546 = t5726*t8542;
  t8547 = t8545 + t8546;
  t8551 = t6270*t8542;
  t8552 = t7378 + t8551;
  t8529 = -0.13004*t4534;
  t8530 = -0.08055*t4625;
  t8531 = t8529 + t8530;
  t8535 = 0.08055*t4534;
  t8536 = t8535 + t4643;
  t8571 = t3037*t8026;
  t8575 = t2659*t8399;
  t8577 = t8571 + t8575;
  t8581 = -1.*t4625*t8577;
  t8583 = t8581 + t8417;
  t8585 = -1.*t4534*t8577;
  t8586 = t8585 + t8425;
  t8590 = -1.*t6270*t8583;
  t8591 = t5726*t8586;
  t8592 = t8590 + t8591;
  t8600 = t5726*t8583;
  t8603 = t6270*t8586;
  t8604 = t8600 + t8603;
  t8620 = t3037*t7872;
  t8621 = t2659*t8465;
  t8622 = t8620 + t8621;
  t8627 = -1.*t4625*t8622;
  t8632 = t8627 + t8482;
  t8634 = -1.*t4534*t8622;
  t8635 = t8634 + t8488;
  t8640 = -1.*t6270*t8632;
  t8646 = t5726*t8635;
  t8647 = t8640 + t8646;
  t8652 = t5726*t8632;
  t8655 = t6270*t8635;
  t8657 = t8652 + t8655;
  t8680 = -1.*t5726*t7367;
  t8681 = t8545 + t8680;
  t7395 = t6647*t7384;
  t8671 = 0.03315*t5726;
  t8672 = t8671 + t6465;
  t8674 = -0.19074*t5726;
  t8675 = -0.03315*t6270;
  t8676 = t8674 + t8675;
  t8695 = t4534*t8577;
  t8696 = t4625*t8413;
  t8697 = t8695 + t8696;
  t8699 = -1.*t5726*t8697;
  t8700 = t8590 + t8699;
  t8703 = -1.*t6270*t8697;
  t8705 = t8600 + t8703;
  t8727 = t4534*t8622;
  t8728 = t4625*t8477;
  t8729 = t8727 + t8728;
  t8732 = -1.*t5726*t8729;
  t8733 = t8640 + t8732;
  t8742 = -1.*t6270*t8729;
  t8746 = t8652 + t8742;
  t7393 = -1.*t6794*t7376;
  t7403 = t7393 + t7395;
  t8688 = -1.*t6794*t7384;
  t8766 = -0.62554*t6647;
  t8767 = -0.01315*t6794;
  t8771 = t8766 + t8767;
  t8774 = 0.01315*t6647;
  t8775 = t8774 + t6799;
  t8784 = t6270*t8583;
  t8786 = t5726*t8697;
  t8787 = t8784 + t8786;
  t8713 = t6647*t8705;
  t8718 = -1.*t6794*t8705;
  t8799 = t6270*t8632;
  t8800 = t5726*t8729;
  t8801 = t8799 + t8800;
  t8752 = t6647*t8746;
  t8760 = -1.*t6794*t8746;
  p_output1[0]=1.;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=0;
  p_output1[4]=1.;
  p_output1[5]=0;
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=1.;
  p_output1[9]=t1563*t1864 + t2248*t2305 + t2473*t2581 + t3163*t3681 + t4160*t4355 + t4846*t4926 + t5208*t5587 + t6284*t6315 + t6469*t6540 + t6864*t6907 + t6962*t7014 - 0.62554*(-1.*t6794*t6907 + t6647*t7014) - 0.01315*(t6647*t6907 + t6794*t7014) - 0.1305*(t2581*t323 + t1126*t49*t796) - 1.*t1126*t49*t956;
  p_output1[10]=t1563*t7176 + t2248*t7218 + t2473*t7276 + t3163*t7288 - 0.1305*t7297 + t4160*t7315 + t4846*t7334 + t5208*t7338 + t6284*t7352 + t6469*t7367 + t6864*t7376 + t6962*t7384 - 0.01315*(t6647*t7376 + t6794*t7384) - 0.62554*t7403 + t1703*t49*t956;
  p_output1[11]=0;
  p_output1[12]=t1563*t1657*t1703*t49 + t1703*t1754*t2248*t49 + t2473*t7437 + t3163*t7450 + t4160*t7460 + t4846*t7465 + t5208*t7474 + t6284*t7484 + t6469*t7488 + t6864*t7492 + t6962*t7496 - 0.62554*(-1.*t6794*t7492 + t6647*t7496) - 0.01315*(t6647*t7492 + t6794*t7496) - 0.1305*(t323*t7437 + t1673*t1703*t796) - 1.*t1673*t1703*t956;
  p_output1[13]=t1126*t1563*t1657*t49 + t1126*t1754*t2248*t49 + t2473*t7530 + t3163*t7536 + t4160*t7546 + t4846*t7550 + t5208*t7558 + t6284*t7567 + t6469*t7572 + t6864*t7576 + t6962*t7587 - 0.62554*(-1.*t6794*t7576 + t6647*t7587) - 0.01315*(t6647*t7576 + t6794*t7587) - 0.1305*(t323*t7530 + t1126*t1673*t796) - 1.*t1126*t1673*t956;
  p_output1[14]=-1.*t1563*t1657*t1673 - 1.*t1673*t1754*t2248 + t2473*t7611 + t3163*t7619 + t4160*t7634 + t4846*t7638 + t5208*t7647 + t6284*t7664 + t6469*t7673 + t6864*t7688 + t6962*t7698 - 0.62554*(-1.*t6794*t7688 + t6647*t7698) - 0.01315*(t6647*t7688 + t6794*t7698) - 0.1305*(t323*t7611 + t49*t796) - 1.*t49*t956;
  p_output1[15]=t2248*t7176 + t1563*t7729 + t3163*t7735 + t2473*t7738 - 0.1305*t323*t7738 + t4846*t7749 + t5208*t7754 + t6284*t7760 + t6469*t7764 + t6864*t7770 + t6962*t7777 - 0.62554*(-1.*t6794*t7770 + t6647*t7777) - 0.01315*(t6647*t7770 + t6794*t7777) + t4160*t7738*t796;
  p_output1[16]=t1563*t2305 + t2248*t7794 + t3163*t7800 + t2473*t7804 - 0.1305*t323*t7804 + t4846*t7814 + t5208*t7821 + t6284*t7825 + t6469*t7833 + t6864*t7837 + t6962*t7843 - 0.62554*(-1.*t6794*t7837 + t6647*t7843) - 0.01315*(t6647*t7837 + t6794*t7843) + t4160*t7804*t796;
  p_output1[17]=-1.*t1563*t1754*t49 + t1657*t2248*t49 + t7868 + t7873 + t7874 + t7876 + t7882 + t7886 + t7893 + t7900 + t7906 + t7913 + t7918 + t7925;
  p_output1[18]=0;
  p_output1[19]=0;
  p_output1[20]=0;
  p_output1[21]=0;
  p_output1[22]=0;
  p_output1[23]=0;
  p_output1[24]=0;
  p_output1[25]=0;
  p_output1[26]=0;
  p_output1[27]=0;
  p_output1[28]=0;
  p_output1[29]=0;
  p_output1[30]=0;
  p_output1[31]=0;
  p_output1[32]=0;
  p_output1[33]=0;
  p_output1[34]=0;
  p_output1[35]=0;
  p_output1[36]=0;
  p_output1[37]=0;
  p_output1[38]=0;
  p_output1[39]=t2473*t7288 - 0.1305*t323*t7288 + t7176*t7928 + t7218*t7934 + t3163*t7938 + t4846*t7951 + t5208*t7955 + t4160*t7288*t796 + t6284*t7964 + t6469*t7969 + t6864*t7975 + t6962*t7981 - 0.62554*(-1.*t6794*t7975 + t6647*t7981) - 0.01315*(t6647*t7975 + t6794*t7981);
  p_output1[40]=t7794*t7928 + t7934*t8016 + t3163*t8020 + t2473*t8026 - 0.1305*t323*t8026 + t4160*t796*t8026 + t4846*t8035 + t5208*t8040 + t6284*t8049 + t6469*t8057 + t6864*t8068 + t6962*t8074 - 0.62554*(-1.*t6794*t8068 + t6647*t8074) - 0.01315*(t6647*t8068 + t6794*t8074);
  p_output1[41]=t7868 + t7873 + t7874 + t7876 + t7882 + t7886 + t7893 + t7900 + t7906 + t7913 + t7918 + t7925 + t1657*t49*t7928 + t1754*t49*t7934;
  p_output1[42]=t4160*t7297 + t2659*t4846*t7297 - 1.*t3037*t5208*t7297 - 0.1305*(-1.*t1703*t323*t49 - 1.*t7276*t796) + t1703*t49*t8132 + t7276*t8137 + t6284*t8161 + t6469*t8165 + t6864*t8169 + t6962*t8177 - 0.62554*(-1.*t6794*t8169 + t6647*t8177) - 0.01315*(t6647*t8169 + t6794*t8177);
  p_output1[43]=t1126*t49*t8132 + t8137*t8204 - 0.1305*(t4219 - 1.*t796*t8204) + t4160*t8208 + t2659*t4846*t8208 - 1.*t3037*t5208*t8208 + t6284*t8219 + t6469*t8227 + t6864*t8234 + t6962*t8238 - 0.62554*(-1.*t6794*t8234 + t6647*t8238) - 0.01315*(t6647*t8234 + t6794*t8238);
  p_output1[44]=-1.*t1673*t8132 + t8137*t8258 - 0.1305*(t1673*t323 - 1.*t796*t8258) + t4160*t8265 + t2659*t4846*t8265 - 1.*t3037*t5208*t8265 + t6284*t8283 + t6469*t8289 + t6864*t8301 + t6962*t8308 - 0.62554*(-1.*t6794*t8301 + t6647*t8308) - 0.01315*(t6647*t8301 + t6794*t8308);
  p_output1[45]=t4846*t7338 + t7288*t8334 + t7315*t8340 + t5208*t8344 + t6469*t8350 + t6284*t8354 + t6962*t8362 + t6864*t8367 - 0.01315*(t6794*t8362 + t6647*t8367) - 0.62554*(t6647*t8362 - 1.*t6794*t8367);
  p_output1[46]=t8026*t8334 + t8340*t8399 + t5208*t8408 + t4846*t8413 + t6469*t8419 + t6284*t8426 + t6962*t8432 + t6864*t8441 - 0.01315*(t6794*t8432 + t6647*t8441) - 0.62554*(t6647*t8432 - 1.*t6794*t8441);
  p_output1[47]=t7872*t8334 + t8340*t8465 + t5208*t8469 + t4846*t8477 + t6469*t8483 + t6284*t8489 + t6962*t8497 + t6864*t8505 - 0.01315*(t6794*t8497 + t6647*t8505) - 0.62554*(t6647*t8497 - 1.*t6794*t8505);
  p_output1[48]=t6469*t7352 + t7334*t8531 + t7338*t8536 + t6284*t8542 + t6962*t8547 + t6864*t8552 - 0.01315*(t6794*t8547 + t6647*t8552) - 0.62554*(t6647*t8547 - 1.*t6794*t8552);
  p_output1[49]=t8413*t8536 + t8531*t8577 + t6469*t8583 + t6284*t8586 + t6962*t8592 + t6864*t8604 - 0.01315*(t6794*t8592 + t6647*t8604) - 0.62554*(t6647*t8592 - 1.*t6794*t8604);
  p_output1[50]=t8477*t8536 + t8531*t8622 + t6469*t8632 + t6284*t8635 + t6962*t8647 + t6864*t8657 - 0.01315*(t6794*t8647 + t6647*t8657) - 0.62554*(t6647*t8647 - 1.*t6794*t8657);
  p_output1[51]=t6864*t7384 + t7352*t8672 + t7367*t8676 + t6962*t8681 - 0.01315*(t7395 + t6794*t8681) - 0.62554*(t6647*t8681 + t8688);
  p_output1[52]=t8583*t8672 + t8676*t8697 + t6962*t8700 + t6864*t8705 - 0.01315*(t6794*t8700 + t8713) - 0.62554*(t6647*t8700 + t8718);
  p_output1[53]=t8632*t8672 + t8676*t8729 + t6962*t8733 + t6864*t8746 - 0.01315*(t6794*t8733 + t8752) - 0.62554*(t6647*t8733 + t8760);
  p_output1[54]=-0.01315*t7403 - 0.62554*(-1.*t6647*t7376 + t8688) + t7376*t8771 + t7384*t8775;
  p_output1[55]=t8705*t8775 + t8771*t8787 - 0.62554*(t8718 - 1.*t6647*t8787) - 0.01315*(t8713 - 1.*t6794*t8787);
  p_output1[56]=t8746*t8775 + t8771*t8801 - 0.62554*(t8760 - 1.*t6647*t8801) - 0.01315*(t8752 - 1.*t6794*t8801);
  p_output1[57]=0;
  p_output1[58]=0;
  p_output1[59]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "One input(s) required (var1).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 20 && ncols == 1) && 
      !(mrows == 1 && ncols == 20))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 3, (mwSize) 20, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1);


}

#else // MATLAB_MEX_FILE

#include "Jp_RightAnkleJoint_mex.hh"

namespace SymExpression
{

void Jp_RightAnkleJoint_mex_raw(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}

}

#endif // MATLAB_MEX_FILE
