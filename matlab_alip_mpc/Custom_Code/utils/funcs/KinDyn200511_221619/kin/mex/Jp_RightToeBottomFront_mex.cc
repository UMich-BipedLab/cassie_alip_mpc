/*
 * Automatically Generated from Mathematica.
 * Mon 11 May 2020 22:34:01 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t933;
  double t1120;
  double t1128;
  double t1132;
  double t1161;
  double t1251;
  double t1181;
  double t1214;
  double t1313;
  double t520;
  double t582;
  double t603;
  double t828;
  double t1245;
  double t1323;
  double t1339;
  double t1425;
  double t1452;
  double t1521;
  double t416;
  double t1613;
  double t1616;
  double t1639;
  double t1775;
  double t1826;
  double t1846;
  double t1864;
  double t1883;
  double t1891;
  double t2018;
  double t2184;
  double t2226;
  double t2241;
  double t2303;
  double t2351;
  double t2542;
  double t2591;
  double t2606;
  double t2637;
  double t2654;
  double t2916;
  double t2930;
  double t2934;
  double t3068;
  double t3084;
  double t3109;
  double t3125;
  double t3202;
  double t3232;
  double t3252;
  double t3419;
  double t3470;
  double t3494;
  double t3510;
  double t3539;
  double t3541;
  double t3607;
  double t3635;
  double t3636;
  double t3661;
  double t3723;
  double t3734;
  double t3787;
  double t3826;
  double t3827;
  double t3869;
  double t3904;
  double t3955;
  double t4041;
  double t4065;
  double t4096;
  double t4152;
  double t4165;
  double t767;
  double t873;
  double t890;
  double t1150;
  double t1169;
  double t1173;
  double t1371;
  double t1383;
  double t1401;
  double t1531;
  double t1560;
  double t1591;
  double t4379;
  double t4380;
  double t4391;
  double t4410;
  double t4440;
  double t4445;
  double t1848;
  double t1880;
  double t1882;
  double t4524;
  double t4539;
  double t4540;
  double t2129;
  double t2145;
  double t2159;
  double t2546;
  double t2598;
  double t2600;
  double t4564;
  double t4569;
  double t4582;
  double t4663;
  double t4677;
  double t4681;
  double t2709;
  double t2729;
  double t2804;
  double t3119;
  double t3186;
  double t3198;
  double t4711;
  double t4719;
  double t4726;
  double t4736;
  double t4739;
  double t4763;
  double t3334;
  double t3373;
  double t3417;
  double t3542;
  double t3618;
  double t3633;
  double t4808;
  double t4812;
  double t4823;
  double t4856;
  double t4859;
  double t4861;
  double t3688;
  double t3706;
  double t3715;
  double t3891;
  double t3931;
  double t3951;
  double t4888;
  double t4901;
  double t4909;
  double t4936;
  double t4962;
  double t4976;
  double t4076;
  double t4081;
  double t4089;
  double t4984;
  double t4988;
  double t4997;
  double t5008;
  double t5032;
  double t5034;
  double t5185;
  double t5206;
  double t5223;
  double t5235;
  double t5250;
  double t5254;
  double t5323;
  double t5331;
  double t5424;
  double t5450;
  double t5455;
  double t5468;
  double t5492;
  double t5493;
  double t5494;
  double t5501;
  double t5502;
  double t5533;
  double t5543;
  double t5547;
  double t5554;
  double t5558;
  double t5559;
  double t5560;
  double t5588;
  double t5600;
  double t5624;
  double t5660;
  double t5674;
  double t5686;
  double t5705;
  double t5737;
  double t5738;
  double t5947;
  double t5972;
  double t5975;
  double t5988;
  double t5992;
  double t5996;
  double t6052;
  double t6055;
  double t6066;
  double t6089;
  double t6094;
  double t6099;
  double t6115;
  double t6117;
  double t6139;
  double t6161;
  double t6178;
  double t6187;
  double t6195;
  double t6208;
  double t6235;
  double t6251;
  double t6259;
  double t6269;
  double t6280;
  double t6284;
  double t6293;
  double t6311;
  double t6313;
  double t6321;
  double t6331;
  double t6337;
  double t6362;
  double t6490;
  double t6498;
  double t6512;
  double t6530;
  double t6570;
  double t6572;
  double t6631;
  double t6649;
  double t6662;
  double t6687;
  double t6691;
  double t6751;
  double t6769;
  double t6777;
  double t6778;
  double t6788;
  double t6799;
  double t6808;
  double t6815;
  double t6859;
  double t6863;
  double t6895;
  double t6908;
  double t6910;
  double t6922;
  double t6929;
  double t6965;
  double t6996;
  double t7001;
  double t7003;
  double t7015;
  double t7020;
  double t7042;
  double t7121;
  double t7124;
  double t7125;
  double t7166;
  double t7168;
  double t7128;
  double t7129;
  double t7130;
  double t7192;
  double t7197;
  double t7217;
  double t7247;
  double t7253;
  double t7264;
  double t7268;
  double t7273;
  double t7275;
  double t7284;
  double t7289;
  double t7290;
  double t7293;
  double t7307;
  double t7311;
  double t7318;
  double t7349;
  double t7354;
  double t7383;
  double t7394;
  double t7405;
  double t7433;
  double t7435;
  double t7438;
  double t7556;
  double t7557;
  double t7563;
  double t7592;
  double t7600;
  double t7602;
  double t7574;
  double t7580;
  double t7631;
  double t7633;
  double t7640;
  double t7646;
  double t7667;
  double t7686;
  double t7688;
  double t7695;
  double t7702;
  double t7716;
  double t7720;
  double t7728;
  double t7759;
  double t7765;
  double t7766;
  double t7781;
  double t7785;
  double t7791;
  double t7798;
  double t7804;
  double t7805;
  double t7816;
  double t7817;
  double t7821;
  double t7915;
  double t7920;
  double t7927;
  double t7906;
  double t7907;
  double t7912;
  double t7935;
  double t7942;
  double t7949;
  double t7957;
  double t7960;
  double t7969;
  double t7977;
  double t7983;
  double t7987;
  double t8003;
  double t8005;
  double t8006;
  double t8034;
  double t8038;
  double t8045;
  double t8048;
  double t8051;
  double t8053;
  double t8063;
  double t8071;
  double t8074;
  double t8078;
  double t8084;
  double t8086;
  double t8140;
  double t8143;
  double t8159;
  double t8160;
  double t8163;
  double t8170;
  double t8173;
  double t8174;
  double t8177;
  double t8180;
  double t8181;
  double t8187;
  double t8188;
  double t8189;
  double t8192;
  double t8194;
  double t8196;
  double t8202;
  double t8210;
  double t8213;
  double t8220;
  double t8221;
  double t8222;
  double t8225;
  double t8226;
  double t8227;
  double t8104;
  double t8105;
  double t8108;
  double t8113;
  double t8120;
  double t8270;
  double t8271;
  double t8272;
  double t8279;
  double t8289;
  double t8276;
  double t8277;
  double t8299;
  double t8300;
  double t8305;
  double t8313;
  double t8323;
  double t8325;
  double t8331;
  double t8335;
  double t8336;
  double t8340;
  double t8345;
  double t8349;
  double t8358;
  double t8359;
  double t8360;
  double t8364;
  double t8367;
  double t8369;
  double t8371;
  double t8372;
  double t8374;
  double t8380;
  double t8384;
  double t8385;
  double t7913;
  double t7928;
  double t7929;
  double t7930;
  double t7955;
  double t7970;
  double t8000;
  double t8028;
  double t8046;
  double t8055;
  double t8076;
  double t8087;
  double t8088;
  double t8090;
  double t8091;
  double t8094;
  double t8096;
  double t8097;
  double t8101;
  double t8102;
  double t4605;
  double t4624;
  double t4659;
  double t8437;
  double t8438;
  double t8440;
  double t8442;
  double t8443;
  double t8444;
  double t8446;
  double t8447;
  double t8448;
  double t8453;
  double t8454;
  double t8455;
  double t8457;
  double t8458;
  double t8461;
  double t8465;
  double t8466;
  double t8467;
  double t8408;
  double t8409;
  double t8411;
  double t8418;
  double t8419;
  double t8509;
  double t8512;
  double t8515;
  double t8525;
  double t8526;
  double t8527;
  double t8543;
  double t8544;
  double t8545;
  double t8548;
  double t8551;
  double t8552;
  double t8559;
  double t8560;
  double t8561;
  double t8567;
  double t8568;
  double t8569;
  double t8574;
  double t8575;
  double t8581;
  double t8584;
  double t8585;
  double t8586;
  double t8608;
  double t8609;
  double t8610;
  double t8612;
  double t8616;
  double t8618;
  double t8632;
  double t8633;
  double t8634;
  double t8638;
  double t8639;
  double t8641;
  double t8644;
  double t8645;
  double t8647;
  double t8656;
  double t8657;
  double t8658;
  double t8672;
  double t8680;
  double t8682;
  double t8684;
  double t8685;
  double t8686;
  double t8708;
  double t8709;
  double t8710;
  double t8716;
  double t8717;
  double t8721;
  double t8723;
  double t8724;
  double t8726;
  double t8727;
  double t8729;
  double t8732;
  double t8734;
  double t8735;
  double t8738;
  double t8739;
  double t8740;
  double t8742;
  double t8743;
  double t8744;
  double t8700;
  double t8701;
  double t8704;
  double t8705;
  double t8706;
  double t8762;
  double t8763;
  double t8764;
  double t8768;
  double t8769;
  double t8772;
  double t8775;
  double t8776;
  double t8777;
  double t8779;
  double t8780;
  double t8781;
  double t8784;
  double t8785;
  double t8786;
  double t8791;
  double t8792;
  double t8794;
  double t8796;
  double t8797;
  double t8798;
  double t8801;
  double t8802;
  double t8803;
  double t8805;
  double t8806;
  double t8807;
  double t8822;
  double t8823;
  double t8825;
  double t8827;
  double t8828;
  double t8829;
  double t8831;
  double t8832;
  double t8833;
  double t8835;
  double t8836;
  double t8837;
  double t8840;
  double t8841;
  double t8842;
  double t8844;
  double t8845;
  double t8846;
  double t8848;
  double t8849;
  double t8850;
  double t8853;
  double t8855;
  double t8856;
  double t8859;
  double t8860;
  double t8862;
  double t8884;
  double t8885;
  double t8887;
  double t8888;
  double t8889;
  double t8891;
  double t8892;
  double t8894;
  double t8895;
  double t8896;
  double t8898;
  double t8900;
  double t8901;
  double t8874;
  double t8876;
  double t8877;
  double t8879;
  double t8880;
  double t8913;
  double t8914;
  double t8915;
  double t8918;
  double t8919;
  double t8921;
  double t8922;
  double t8924;
  double t8925;
  double t8926;
  double t8929;
  double t8931;
  double t8932;
  double t8939;
  double t8940;
  double t8941;
  double t8944;
  double t8946;
  double t8948;
  double t8968;
  double t8971;
  double t8973;
  double t8977;
  double t8978;
  double t8981;
  double t8982;
  double t8987;
  double t8990;
  double t8991;
  double t8993;
  double t8994;
  double t8995;
  double t8998;
  double t9000;
  double t9001;
  double t9006;
  double t9007;
  double t9008;
  double t9034;
  double t9035;
  double t9040;
  double t9041;
  double t9043;
  double t9044;
  double t9045;
  double t9025;
  double t9026;
  double t9029;
  double t9030;
  double t9031;
  double t9071;
  double t9072;
  double t9073;
  double t9080;
  double t9081;
  double t9086;
  double t9087;
  double t9092;
  double t9093;
  double t9095;
  double t9098;
  double t9100;
  double t9104;
  double t9119;
  double t9120;
  double t9121;
  double t9124;
  double t9126;
  double t9128;
  double t9129;
  double t9132;
  double t9135;
  double t9136;
  double t9139;
  double t9142;
  double t9143;
  double t9168;
  double t9170;
  double t5104;
  double t9157;
  double t9158;
  double t9159;
  double t9162;
  double t9164;
  double t9190;
  double t9191;
  double t9192;
  double t9200;
  double t9203;
  double t9205;
  double t9206;
  double t9224;
  double t9225;
  double t9226;
  double t9229;
  double t9230;
  double t9232;
  double t9233;
  double t9173;
  double t5114;
  double t5129;
  double t9246;
  double t9247;
  double t9249;
  double t9250;
  double t9251;
  double t9209;
  double t9261;
  double t9262;
  double t9263;
  double t9216;
  double t9235;
  double t9273;
  double t9275;
  double t9276;
  double t9240;
  t933 = Sin(var1[3]);
  t1120 = Cos(var1[13]);
  t1128 = -1.*t1120;
  t1132 = 1. + t1128;
  t1161 = Sin(var1[13]);
  t1251 = Cos(var1[3]);
  t1181 = Cos(var1[5]);
  t1214 = Sin(var1[4]);
  t1313 = Sin(var1[5]);
  t520 = Cos(var1[14]);
  t582 = -1.*t520;
  t603 = 1. + t582;
  t828 = Sin(var1[14]);
  t1245 = -1.*t1181*t933*t1214;
  t1323 = t1251*t1313;
  t1339 = t1245 + t1323;
  t1425 = -1.*t1251*t1181;
  t1452 = -1.*t933*t1214*t1313;
  t1521 = t1425 + t1452;
  t416 = Cos(var1[4]);
  t1613 = t1161*t1339;
  t1616 = t1120*t1521;
  t1639 = t1613 + t1616;
  t1775 = Cos(var1[15]);
  t1826 = -1.*t1775;
  t1846 = 1. + t1826;
  t1864 = Sin(var1[15]);
  t1883 = t1120*t1339;
  t1891 = -1.*t1161*t1521;
  t2018 = t1883 + t1891;
  t2184 = -1.*t520*t416*t933;
  t2226 = t828*t1639;
  t2241 = t2184 + t2226;
  t2303 = Cos(var1[16]);
  t2351 = -1.*t2303;
  t2542 = 1. + t2351;
  t2591 = Sin(var1[16]);
  t2606 = t1864*t2018;
  t2637 = t1775*t2241;
  t2654 = t2606 + t2637;
  t2916 = t1775*t2018;
  t2930 = -1.*t1864*t2241;
  t2934 = t2916 + t2930;
  t3068 = Cos(var1[17]);
  t3084 = -1.*t3068;
  t3109 = 1. + t3084;
  t3125 = Sin(var1[17]);
  t3202 = -1.*t2591*t2654;
  t3232 = t2303*t2934;
  t3252 = t3202 + t3232;
  t3419 = t2303*t2654;
  t3470 = t2591*t2934;
  t3494 = t3419 + t3470;
  t3510 = Cos(var1[18]);
  t3539 = -1.*t3510;
  t3541 = 1. + t3539;
  t3607 = Sin(var1[18]);
  t3635 = t3125*t3252;
  t3636 = t3068*t3494;
  t3661 = t3635 + t3636;
  t3723 = t3068*t3252;
  t3734 = -1.*t3125*t3494;
  t3787 = t3723 + t3734;
  t3826 = Cos(var1[19]);
  t3827 = -1.*t3826;
  t3869 = 1. + t3827;
  t3904 = Sin(var1[19]);
  t3955 = -1.*t3607*t3661;
  t4041 = t3510*t3787;
  t4065 = t3955 + t4041;
  t4096 = t3510*t3661;
  t4152 = t3607*t3787;
  t4165 = t4096 + t4152;
  t767 = -0.08055*t603;
  t873 = -0.135*t828;
  t890 = 0. + t767 + t873;
  t1150 = 0.07996*t1132;
  t1169 = 0.135*t1161;
  t1173 = 0. + t1150 + t1169;
  t1371 = -0.135*t1132;
  t1383 = 0.07996*t1161;
  t1401 = 0. + t1371 + t1383;
  t1531 = -0.135*t603;
  t1560 = 0.08055*t828;
  t1591 = 0. + t1531 + t1560;
  t4379 = t1251*t1181*t1214;
  t4380 = t933*t1313;
  t4391 = t4379 + t4380;
  t4410 = -1.*t1181*t933;
  t4440 = t1251*t1214*t1313;
  t4445 = t4410 + t4440;
  t1848 = -0.01004*t1846;
  t1880 = 0.08055*t1864;
  t1882 = 0. + t1848 + t1880;
  t4524 = t1161*t4391;
  t4539 = t1120*t4445;
  t4540 = t4524 + t4539;
  t2129 = -0.08055*t1846;
  t2145 = -0.01004*t1864;
  t2159 = 0. + t2129 + t2145;
  t2546 = -0.08055*t2542;
  t2598 = -0.13004*t2591;
  t2600 = 0. + t2546 + t2598;
  t4564 = t1120*t4391;
  t4569 = -1.*t1161*t4445;
  t4582 = t4564 + t4569;
  t4663 = t520*t1251*t416;
  t4677 = t828*t4540;
  t4681 = t4663 + t4677;
  t2709 = -0.13004*t2542;
  t2729 = 0.08055*t2591;
  t2804 = 0. + t2709 + t2729;
  t3119 = -0.19074*t3109;
  t3186 = 0.03315*t3125;
  t3198 = 0. + t3119 + t3186;
  t4711 = t1864*t4582;
  t4719 = t1775*t4681;
  t4726 = t4711 + t4719;
  t4736 = t1775*t4582;
  t4739 = -1.*t1864*t4681;
  t4763 = t4736 + t4739;
  t3334 = -0.03315*t3109;
  t3373 = -0.19074*t3125;
  t3417 = 0. + t3334 + t3373;
  t3542 = -0.01315*t3541;
  t3618 = -0.62554*t3607;
  t3633 = 0. + t3542 + t3618;
  t4808 = -1.*t2591*t4726;
  t4812 = t2303*t4763;
  t4823 = t4808 + t4812;
  t4856 = t2303*t4726;
  t4859 = t2591*t4763;
  t4861 = t4856 + t4859;
  t3688 = -0.62554*t3541;
  t3706 = 0.01315*t3607;
  t3715 = 0. + t3688 + t3706;
  t3891 = -1.03354*t3869;
  t3931 = 0.05315*t3904;
  t3951 = 0. + t3891 + t3931;
  t4888 = t3125*t4823;
  t4901 = t3068*t4861;
  t4909 = t4888 + t4901;
  t4936 = t3068*t4823;
  t4962 = -1.*t3125*t4861;
  t4976 = t4936 + t4962;
  t4076 = -0.05315*t3869;
  t4081 = -1.03354*t3904;
  t4089 = 0. + t4076 + t4081;
  t4984 = -1.*t3607*t4909;
  t4988 = t3510*t4976;
  t4997 = t4984 + t4988;
  t5008 = t3510*t4909;
  t5032 = t3607*t4976;
  t5034 = t5008 + t5032;
  t5185 = t1251*t416*t1181*t1161;
  t5206 = t1120*t1251*t416*t1313;
  t5223 = t5185 + t5206;
  t5235 = t1120*t1251*t416*t1181;
  t5250 = -1.*t1251*t416*t1161*t1313;
  t5254 = t5235 + t5250;
  t5323 = -1.*t520*t1251*t1214;
  t5331 = t828*t5223;
  t5424 = t5323 + t5331;
  t5450 = t1864*t5254;
  t5455 = t1775*t5424;
  t5468 = t5450 + t5455;
  t5492 = t1775*t5254;
  t5493 = -1.*t1864*t5424;
  t5494 = t5492 + t5493;
  t5501 = -1.*t2591*t5468;
  t5502 = t2303*t5494;
  t5533 = t5501 + t5502;
  t5543 = t2303*t5468;
  t5547 = t2591*t5494;
  t5554 = t5543 + t5547;
  t5558 = t3125*t5533;
  t5559 = t3068*t5554;
  t5560 = t5558 + t5559;
  t5588 = t3068*t5533;
  t5600 = -1.*t3125*t5554;
  t5624 = t5588 + t5600;
  t5660 = -1.*t3607*t5560;
  t5674 = t3510*t5624;
  t5686 = t5660 + t5674;
  t5705 = t3510*t5560;
  t5737 = t3607*t5624;
  t5738 = t5705 + t5737;
  t5947 = t416*t1181*t1161*t933;
  t5972 = t1120*t416*t933*t1313;
  t5975 = t5947 + t5972;
  t5988 = t1120*t416*t1181*t933;
  t5992 = -1.*t416*t1161*t933*t1313;
  t5996 = t5988 + t5992;
  t6052 = -1.*t520*t933*t1214;
  t6055 = t828*t5975;
  t6066 = t6052 + t6055;
  t6089 = t1864*t5996;
  t6094 = t1775*t6066;
  t6099 = t6089 + t6094;
  t6115 = t1775*t5996;
  t6117 = -1.*t1864*t6066;
  t6139 = t6115 + t6117;
  t6161 = -1.*t2591*t6099;
  t6178 = t2303*t6139;
  t6187 = t6161 + t6178;
  t6195 = t2303*t6099;
  t6208 = t2591*t6139;
  t6235 = t6195 + t6208;
  t6251 = t3125*t6187;
  t6259 = t3068*t6235;
  t6269 = t6251 + t6259;
  t6280 = t3068*t6187;
  t6284 = -1.*t3125*t6235;
  t6293 = t6280 + t6284;
  t6311 = -1.*t3607*t6269;
  t6313 = t3510*t6293;
  t6321 = t6311 + t6313;
  t6331 = t3510*t6269;
  t6337 = t3607*t6293;
  t6362 = t6331 + t6337;
  t6490 = -1.*t1181*t1161*t1214;
  t6498 = -1.*t1120*t1214*t1313;
  t6512 = t6490 + t6498;
  t6530 = -1.*t1120*t1181*t1214;
  t6570 = t1161*t1214*t1313;
  t6572 = t6530 + t6570;
  t6631 = -1.*t520*t416;
  t6649 = t828*t6512;
  t6662 = t6631 + t6649;
  t6687 = t1864*t6572;
  t6691 = t1775*t6662;
  t6751 = t6687 + t6691;
  t6769 = t1775*t6572;
  t6777 = -1.*t1864*t6662;
  t6778 = t6769 + t6777;
  t6788 = -1.*t2591*t6751;
  t6799 = t2303*t6778;
  t6808 = t6788 + t6799;
  t6815 = t2303*t6751;
  t6859 = t2591*t6778;
  t6863 = t6815 + t6859;
  t6895 = t3125*t6808;
  t6908 = t3068*t6863;
  t6910 = t6895 + t6908;
  t6922 = t3068*t6808;
  t6929 = -1.*t3125*t6863;
  t6965 = t6922 + t6929;
  t6996 = -1.*t3607*t6910;
  t7001 = t3510*t6965;
  t7003 = t6996 + t7001;
  t7015 = t3510*t6910;
  t7020 = t3607*t6965;
  t7042 = t7015 + t7020;
  t7121 = t1181*t933;
  t7124 = -1.*t1251*t1214*t1313;
  t7125 = t7121 + t7124;
  t7166 = t1161*t7125;
  t7168 = t4564 + t7166;
  t7128 = -1.*t1161*t4391;
  t7129 = t1120*t7125;
  t7130 = t7128 + t7129;
  t7192 = t1864*t7130;
  t7197 = t1775*t828*t7168;
  t7217 = t7192 + t7197;
  t7247 = t1775*t7130;
  t7253 = -1.*t828*t1864*t7168;
  t7264 = t7247 + t7253;
  t7268 = -1.*t2591*t7217;
  t7273 = t2303*t7264;
  t7275 = t7268 + t7273;
  t7284 = t2303*t7217;
  t7289 = t2591*t7264;
  t7290 = t7284 + t7289;
  t7293 = t3125*t7275;
  t7307 = t3068*t7290;
  t7311 = t7293 + t7307;
  t7318 = t3068*t7275;
  t7349 = -1.*t3125*t7290;
  t7354 = t7318 + t7349;
  t7383 = -1.*t3607*t7311;
  t7394 = t3510*t7354;
  t7405 = t7383 + t7394;
  t7433 = t3510*t7311;
  t7435 = t3607*t7354;
  t7438 = t7433 + t7435;
  t7556 = t1181*t933*t1214;
  t7557 = -1.*t1251*t1313;
  t7563 = t7556 + t7557;
  t7592 = t1120*t7563;
  t7600 = t1161*t1521;
  t7602 = t7592 + t7600;
  t7574 = -1.*t1161*t7563;
  t7580 = t7574 + t1616;
  t7631 = t1864*t7580;
  t7633 = t1775*t828*t7602;
  t7640 = t7631 + t7633;
  t7646 = t1775*t7580;
  t7667 = -1.*t828*t1864*t7602;
  t7686 = t7646 + t7667;
  t7688 = -1.*t2591*t7640;
  t7695 = t2303*t7686;
  t7702 = t7688 + t7695;
  t7716 = t2303*t7640;
  t7720 = t2591*t7686;
  t7728 = t7716 + t7720;
  t7759 = t3125*t7702;
  t7765 = t3068*t7728;
  t7766 = t7759 + t7765;
  t7781 = t3068*t7702;
  t7785 = -1.*t3125*t7728;
  t7791 = t7781 + t7785;
  t7798 = -1.*t3607*t7766;
  t7804 = t3510*t7791;
  t7805 = t7798 + t7804;
  t7816 = t3510*t7766;
  t7817 = t3607*t7791;
  t7821 = t7816 + t7817;
  t7915 = t1120*t416*t1181;
  t7920 = -1.*t416*t1161*t1313;
  t7927 = t7915 + t7920;
  t7906 = -1.*t416*t1181*t1161;
  t7907 = -1.*t1120*t416*t1313;
  t7912 = t7906 + t7907;
  t7935 = t1864*t7912;
  t7942 = t1775*t828*t7927;
  t7949 = t7935 + t7942;
  t7957 = t1775*t7912;
  t7960 = -1.*t828*t1864*t7927;
  t7969 = t7957 + t7960;
  t7977 = -1.*t2591*t7949;
  t7983 = t2303*t7969;
  t7987 = t7977 + t7983;
  t8003 = t2303*t7949;
  t8005 = t2591*t7969;
  t8006 = t8003 + t8005;
  t8034 = t3125*t7987;
  t8038 = t3068*t8006;
  t8045 = t8034 + t8038;
  t8048 = t3068*t7987;
  t8051 = -1.*t3125*t8006;
  t8053 = t8048 + t8051;
  t8063 = -1.*t3607*t8045;
  t8071 = t3510*t8053;
  t8074 = t8063 + t8071;
  t8078 = t3510*t8045;
  t8084 = t3607*t8053;
  t8086 = t8078 + t8084;
  t8140 = -1.*t1120*t4445;
  t8143 = t7128 + t8140;
  t8159 = t1864*t8143;
  t8160 = t1775*t828*t4582;
  t8163 = t8159 + t8160;
  t8170 = t1775*t8143;
  t8173 = -1.*t828*t1864*t4582;
  t8174 = t8170 + t8173;
  t8177 = -1.*t2591*t8163;
  t8180 = t2303*t8174;
  t8181 = t8177 + t8180;
  t8187 = t2303*t8163;
  t8188 = t2591*t8174;
  t8189 = t8187 + t8188;
  t8192 = t3125*t8181;
  t8194 = t3068*t8189;
  t8196 = t8192 + t8194;
  t8202 = t3068*t8181;
  t8210 = -1.*t3125*t8189;
  t8213 = t8202 + t8210;
  t8220 = -1.*t3607*t8196;
  t8221 = t3510*t8213;
  t8222 = t8220 + t8221;
  t8225 = t3510*t8196;
  t8226 = t3607*t8213;
  t8227 = t8225 + t8226;
  t8104 = 0.135*t1120;
  t8105 = t8104 + t1383;
  t8108 = 0.07996*t1120;
  t8113 = -0.135*t1161;
  t8120 = t8108 + t8113;
  t8270 = t1251*t1181;
  t8271 = t933*t1214*t1313;
  t8272 = t8270 + t8271;
  t8279 = -1.*t1161*t8272;
  t8289 = t7592 + t8279;
  t8276 = -1.*t1120*t8272;
  t8277 = t7574 + t8276;
  t8299 = t1864*t8277;
  t8300 = t1775*t828*t8289;
  t8305 = t8299 + t8300;
  t8313 = t1775*t8277;
  t8323 = -1.*t828*t1864*t8289;
  t8325 = t8313 + t8323;
  t8331 = -1.*t2591*t8305;
  t8335 = t2303*t8325;
  t8336 = t8331 + t8335;
  t8340 = t2303*t8305;
  t8345 = t2591*t8325;
  t8349 = t8340 + t8345;
  t8358 = t3125*t8336;
  t8359 = t3068*t8349;
  t8360 = t8358 + t8359;
  t8364 = t3068*t8336;
  t8367 = -1.*t3125*t8349;
  t8369 = t8364 + t8367;
  t8371 = -1.*t3607*t8360;
  t8372 = t3510*t8369;
  t8374 = t8371 + t8372;
  t8380 = t3510*t8360;
  t8384 = t3607*t8369;
  t8385 = t8380 + t8384;
  t7913 = t1882*t7912;
  t7928 = -0.1305*t520*t7927;
  t7929 = t1591*t7927;
  t7930 = t828*t2159*t7927;
  t7955 = t2600*t7949;
  t7970 = t2804*t7969;
  t8000 = t3198*t7987;
  t8028 = t3417*t8006;
  t8046 = t3633*t8045;
  t8055 = t3715*t8053;
  t8076 = t3951*t8074;
  t8087 = t4089*t8086;
  t8088 = t3904*t8074;
  t8090 = t3826*t8086;
  t8091 = t8088 + t8090;
  t8094 = 0.046027*t8091;
  t8096 = t3826*t8074;
  t8097 = -1.*t3904*t8086;
  t8101 = t8096 + t8097;
  t8102 = -0.979698*t8101;
  t4605 = -1.*t1251*t416*t828;
  t4624 = t520*t4540;
  t4659 = t4605 + t4624;
  t8437 = -1.*t2303*t1864*t4659;
  t8438 = -1.*t1775*t2591*t4659;
  t8440 = t8437 + t8438;
  t8442 = t1775*t2303*t4659;
  t8443 = -1.*t1864*t2591*t4659;
  t8444 = t8442 + t8443;
  t8446 = t3125*t8440;
  t8447 = t3068*t8444;
  t8448 = t8446 + t8447;
  t8453 = t3068*t8440;
  t8454 = -1.*t3125*t8444;
  t8455 = t8453 + t8454;
  t8457 = -1.*t3607*t8448;
  t8458 = t3510*t8455;
  t8461 = t8457 + t8458;
  t8465 = t3510*t8448;
  t8466 = t3607*t8455;
  t8467 = t8465 + t8466;
  t8408 = -0.135*t520;
  t8409 = -0.08055*t828;
  t8411 = t8408 + t8409;
  t8418 = 0.08055*t520;
  t8419 = t8418 + t873;
  t8509 = t1161*t7563;
  t8512 = t1120*t8272;
  t8515 = t8509 + t8512;
  t8525 = -1.*t416*t828*t933;
  t8526 = t520*t8515;
  t8527 = t8525 + t8526;
  t8543 = -1.*t2303*t1864*t8527;
  t8544 = -1.*t1775*t2591*t8527;
  t8545 = t8543 + t8544;
  t8548 = t1775*t2303*t8527;
  t8551 = -1.*t1864*t2591*t8527;
  t8552 = t8548 + t8551;
  t8559 = t3125*t8545;
  t8560 = t3068*t8552;
  t8561 = t8559 + t8560;
  t8567 = t3068*t8545;
  t8568 = -1.*t3125*t8552;
  t8569 = t8567 + t8568;
  t8574 = -1.*t3607*t8561;
  t8575 = t3510*t8569;
  t8581 = t8574 + t8575;
  t8584 = t3510*t8561;
  t8585 = t3607*t8569;
  t8586 = t8584 + t8585;
  t8608 = t416*t1181*t1161;
  t8609 = t1120*t416*t1313;
  t8610 = t8608 + t8609;
  t8612 = t828*t1214;
  t8616 = t520*t8610;
  t8618 = t8612 + t8616;
  t8632 = -1.*t2303*t1864*t8618;
  t8633 = -1.*t1775*t2591*t8618;
  t8634 = t8632 + t8633;
  t8638 = t1775*t2303*t8618;
  t8639 = -1.*t1864*t2591*t8618;
  t8641 = t8638 + t8639;
  t8644 = t3125*t8634;
  t8645 = t3068*t8641;
  t8647 = t8644 + t8645;
  t8656 = t3068*t8634;
  t8657 = -1.*t3125*t8641;
  t8658 = t8656 + t8657;
  t8672 = -1.*t3607*t8647;
  t8680 = t3510*t8658;
  t8682 = t8672 + t8680;
  t8684 = t3510*t8647;
  t8685 = t3607*t8658;
  t8686 = t8684 + t8685;
  t8708 = -1.*t1864*t4582;
  t8709 = -1.*t1775*t4681;
  t8710 = t8708 + t8709;
  t8716 = t2591*t8710;
  t8717 = t8716 + t4812;
  t8721 = t2303*t8710;
  t8723 = -1.*t2591*t4763;
  t8724 = t8721 + t8723;
  t8726 = -1.*t3125*t8717;
  t8727 = t3068*t8724;
  t8729 = t8726 + t8727;
  t8732 = t3068*t8717;
  t8734 = t3125*t8724;
  t8735 = t8732 + t8734;
  t8738 = t3607*t8729;
  t8739 = t3510*t8735;
  t8740 = t8738 + t8739;
  t8742 = t3510*t8729;
  t8743 = -1.*t3607*t8735;
  t8744 = t8742 + t8743;
  t8700 = 0.08055*t1775;
  t8701 = t8700 + t2145;
  t8704 = -0.01004*t1775;
  t8705 = -0.08055*t1864;
  t8706 = t8704 + t8705;
  t8762 = t520*t416*t933;
  t8763 = t828*t8515;
  t8764 = t8762 + t8763;
  t8768 = -1.*t1864*t8289;
  t8769 = -1.*t1775*t8764;
  t8772 = t8768 + t8769;
  t8775 = t1775*t8289;
  t8776 = -1.*t1864*t8764;
  t8777 = t8775 + t8776;
  t8779 = t2591*t8772;
  t8780 = t2303*t8777;
  t8781 = t8779 + t8780;
  t8784 = t2303*t8772;
  t8785 = -1.*t2591*t8777;
  t8786 = t8784 + t8785;
  t8791 = -1.*t3125*t8781;
  t8792 = t3068*t8786;
  t8794 = t8791 + t8792;
  t8796 = t3068*t8781;
  t8797 = t3125*t8786;
  t8798 = t8796 + t8797;
  t8801 = t3607*t8794;
  t8802 = t3510*t8798;
  t8803 = t8801 + t8802;
  t8805 = t3510*t8794;
  t8806 = -1.*t3607*t8798;
  t8807 = t8805 + t8806;
  t8822 = -1.*t520*t1214;
  t8823 = t828*t8610;
  t8825 = t8822 + t8823;
  t8827 = -1.*t1864*t7927;
  t8828 = -1.*t1775*t8825;
  t8829 = t8827 + t8828;
  t8831 = t1775*t7927;
  t8832 = -1.*t1864*t8825;
  t8833 = t8831 + t8832;
  t8835 = t2591*t8829;
  t8836 = t2303*t8833;
  t8837 = t8835 + t8836;
  t8840 = t2303*t8829;
  t8841 = -1.*t2591*t8833;
  t8842 = t8840 + t8841;
  t8844 = -1.*t3125*t8837;
  t8845 = t3068*t8842;
  t8846 = t8844 + t8845;
  t8848 = t3068*t8837;
  t8849 = t3125*t8842;
  t8850 = t8848 + t8849;
  t8853 = t3607*t8846;
  t8855 = t3510*t8850;
  t8856 = t8853 + t8855;
  t8859 = t3510*t8846;
  t8860 = -1.*t3607*t8850;
  t8862 = t8859 + t8860;
  t8884 = -1.*t2303*t4726;
  t8885 = t8884 + t8723;
  t8887 = -1.*t3125*t4823;
  t8888 = t3068*t8885;
  t8889 = t8887 + t8888;
  t8891 = t3125*t8885;
  t8892 = t4936 + t8891;
  t8894 = t3607*t8889;
  t8895 = t3510*t8892;
  t8896 = t8894 + t8895;
  t8898 = t3510*t8889;
  t8900 = -1.*t3607*t8892;
  t8901 = t8898 + t8900;
  t8874 = -0.13004*t2303;
  t8876 = -0.08055*t2591;
  t8877 = t8874 + t8876;
  t8879 = 0.08055*t2303;
  t8880 = t8879 + t2598;
  t8913 = t1864*t8289;
  t8914 = t1775*t8764;
  t8915 = t8913 + t8914;
  t8918 = -1.*t2591*t8915;
  t8919 = t8918 + t8780;
  t8921 = -1.*t2303*t8915;
  t8922 = t8921 + t8785;
  t8924 = -1.*t3125*t8919;
  t8925 = t3068*t8922;
  t8926 = t8924 + t8925;
  t8929 = t3068*t8919;
  t8931 = t3125*t8922;
  t8932 = t8929 + t8931;
  t8939 = t3607*t8926;
  t8940 = t3510*t8932;
  t8941 = t8939 + t8940;
  t8944 = t3510*t8926;
  t8946 = -1.*t3607*t8932;
  t8948 = t8944 + t8946;
  t8968 = t1864*t7927;
  t8971 = t1775*t8825;
  t8973 = t8968 + t8971;
  t8977 = -1.*t2591*t8973;
  t8978 = t8977 + t8836;
  t8981 = -1.*t2303*t8973;
  t8982 = t8981 + t8841;
  t8987 = -1.*t3125*t8978;
  t8990 = t3068*t8982;
  t8991 = t8987 + t8990;
  t8993 = t3068*t8978;
  t8994 = t3125*t8982;
  t8995 = t8993 + t8994;
  t8998 = t3607*t8991;
  t9000 = t3510*t8995;
  t9001 = t8998 + t9000;
  t9006 = t3510*t8991;
  t9007 = -1.*t3607*t8995;
  t9008 = t9006 + t9007;
  t9034 = -1.*t3068*t4861;
  t9035 = t8887 + t9034;
  t9040 = t3607*t9035;
  t9041 = t9040 + t4988;
  t9043 = t3510*t9035;
  t9044 = -1.*t3607*t4976;
  t9045 = t9043 + t9044;
  t9025 = 0.03315*t3068;
  t9026 = t9025 + t3373;
  t9029 = -0.19074*t3068;
  t9030 = -0.03315*t3125;
  t9031 = t9029 + t9030;
  t9071 = t2303*t8915;
  t9072 = t2591*t8777;
  t9073 = t9071 + t9072;
  t9080 = -1.*t3068*t9073;
  t9081 = t8924 + t9080;
  t9086 = -1.*t3125*t9073;
  t9087 = t8929 + t9086;
  t9092 = t3607*t9081;
  t9093 = t3510*t9087;
  t9095 = t9092 + t9093;
  t9098 = t3510*t9081;
  t9100 = -1.*t3607*t9087;
  t9104 = t9098 + t9100;
  t9119 = t2303*t8973;
  t9120 = t2591*t8833;
  t9121 = t9119 + t9120;
  t9124 = -1.*t3068*t9121;
  t9126 = t8987 + t9124;
  t9128 = -1.*t3125*t9121;
  t9129 = t8993 + t9128;
  t9132 = t3607*t9126;
  t9135 = t3510*t9129;
  t9136 = t9132 + t9135;
  t9139 = t3510*t9126;
  t9142 = -1.*t3607*t9129;
  t9143 = t9139 + t9142;
  t9168 = -1.*t3510*t4909;
  t9170 = t9168 + t9044;
  t5104 = t3826*t4997;
  t9157 = -0.62554*t3510;
  t9158 = -0.01315*t3607;
  t9159 = t9157 + t9158;
  t9162 = 0.01315*t3510;
  t9164 = t9162 + t3618;
  t9190 = t3125*t8919;
  t9191 = t3068*t9073;
  t9192 = t9190 + t9191;
  t9200 = -1.*t3607*t9192;
  t9203 = t9200 + t9093;
  t9205 = -1.*t3510*t9192;
  t9206 = t9205 + t9100;
  t9224 = t3125*t8978;
  t9225 = t3068*t9121;
  t9226 = t9224 + t9225;
  t9229 = -1.*t3607*t9226;
  t9230 = t9229 + t9135;
  t9232 = -1.*t3510*t9226;
  t9233 = t9232 + t9142;
  t9173 = -1.*t3904*t4997;
  t5114 = -1.*t3904*t5034;
  t5129 = t5104 + t5114;
  t9246 = 0.05315*t3826;
  t9247 = t9246 + t4081;
  t9249 = -1.03354*t3826;
  t9250 = -0.05315*t3904;
  t9251 = t9249 + t9250;
  t9209 = -1.*t3904*t9203;
  t9261 = t3510*t9192;
  t9262 = t3607*t9087;
  t9263 = t9261 + t9262;
  t9216 = t3826*t9203;
  t9235 = -1.*t3904*t9230;
  t9273 = t3510*t9226;
  t9275 = t3607*t9129;
  t9276 = t9273 + t9275;
  t9240 = t3826*t9230;
  p_output1[0]=1.;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=0;
  p_output1[4]=1.;
  p_output1[5]=0;
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=1.;
  p_output1[9]=t1173*t1339 + t1401*t1521 + t1591*t1639 + t1882*t2018 + t2159*t2241 + t2600*t2654 + t2804*t2934 + t3198*t3252 + t3417*t3494 + t3633*t3661 + t3715*t3787 + t3951*t4065 + t4089*t4165 + 0.046027*(t3904*t4065 + t3826*t4165) - 0.979698*(t3826*t4065 - 1.*t3904*t4165) - 1.*t416*t890*t933 - 0.1305*(t1639*t520 + t416*t828*t933);
  p_output1[10]=t1173*t4391 + t1401*t4445 + t1591*t4540 + t1882*t4582 - 0.1305*t4659 + t2159*t4681 + t2600*t4726 + t2804*t4763 + t3198*t4823 + t3417*t4861 + t3633*t4909 + t3715*t4976 + t3951*t4997 + t4089*t5034 + 0.046027*(t3904*t4997 + t3826*t5034) - 0.979698*t5129 + t1251*t416*t890;
  p_output1[11]=0;
  p_output1[12]=t1173*t1181*t1251*t416 + t1251*t1313*t1401*t416 + t1591*t5223 + t1882*t5254 + t2159*t5424 + t2600*t5468 + t2804*t5494 + t3198*t5533 + t3417*t5554 + t3633*t5560 + t3715*t5624 + t3951*t5686 + t4089*t5738 + 0.046027*(t3904*t5686 + t3826*t5738) - 0.979698*(t3826*t5686 - 1.*t3904*t5738) - 0.1305*(t520*t5223 + t1214*t1251*t828) - 1.*t1214*t1251*t890;
  p_output1[13]=t1591*t5975 + t1882*t5996 + t2159*t6066 + t2600*t6099 + t2804*t6139 + t3198*t6187 + t3417*t6235 + t3633*t6269 + t3715*t6293 + t3951*t6321 + t4089*t6362 + 0.046027*(t3904*t6321 + t3826*t6362) - 0.979698*(t3826*t6321 - 1.*t3904*t6362) + t1173*t1181*t416*t933 + t1313*t1401*t416*t933 - 1.*t1214*t890*t933 - 0.1305*(t520*t5975 + t1214*t828*t933);
  p_output1[14]=-1.*t1173*t1181*t1214 - 1.*t1214*t1313*t1401 + t1591*t6512 + t1882*t6572 + t2159*t6662 + t2600*t6751 + t2804*t6778 + t3198*t6808 + t3417*t6863 + t3633*t6910 + t3715*t6965 + t3951*t7003 + t4089*t7042 + 0.046027*(t3904*t7003 + t3826*t7042) - 0.979698*(t3826*t7003 - 1.*t3904*t7042) - 0.1305*(t520*t6512 + t416*t828) - 1.*t416*t890;
  p_output1[15]=t1401*t4391 + t1173*t7125 + t1882*t7130 + t1591*t7168 - 0.1305*t520*t7168 + t2600*t7217 + t2804*t7264 + t3198*t7275 + t3417*t7290 + t3633*t7311 + t3715*t7354 + t3951*t7405 + t4089*t7438 + 0.046027*(t3904*t7405 + t3826*t7438) - 0.979698*(t3826*t7405 - 1.*t3904*t7438) + t2159*t7168*t828;
  p_output1[16]=t1173*t1521 + t1401*t7563 + t1882*t7580 + t1591*t7602 - 0.1305*t520*t7602 + t2600*t7640 + t2804*t7686 + t3198*t7702 + t3417*t7728 + t3633*t7766 + t3715*t7791 + t3951*t7805 + t4089*t7821 + 0.046027*(t3904*t7805 + t3826*t7821) - 0.979698*(t3826*t7805 - 1.*t3904*t7821) + t2159*t7602*t828;
  p_output1[17]=-1.*t1173*t1313*t416 + t1181*t1401*t416 + t7913 + t7928 + t7929 + t7930 + t7955 + t7970 + t8000 + t8028 + t8046 + t8055 + t8076 + t8087 + t8094 + t8102;
  p_output1[18]=0;
  p_output1[19]=0;
  p_output1[20]=0;
  p_output1[21]=0;
  p_output1[22]=0;
  p_output1[23]=0;
  p_output1[24]=0;
  p_output1[25]=0;
  p_output1[26]=0;
  p_output1[27]=0;
  p_output1[28]=0;
  p_output1[29]=0;
  p_output1[30]=0;
  p_output1[31]=0;
  p_output1[32]=0;
  p_output1[33]=0;
  p_output1[34]=0;
  p_output1[35]=0;
  p_output1[36]=0;
  p_output1[37]=0;
  p_output1[38]=0;
  p_output1[39]=t1591*t4582 - 0.1305*t4582*t520 + t4391*t8105 + t4445*t8120 + t1882*t8143 + t2600*t8163 + t2804*t8174 + t3198*t8181 + t3417*t8189 + t3633*t8196 + t3715*t8213 + t3951*t8222 + t4089*t8227 + 0.046027*(t3904*t8222 + t3826*t8227) - 0.979698*(t3826*t8222 - 1.*t3904*t8227) + t2159*t4582*t828;
  p_output1[40]=t7563*t8105 + t8120*t8272 + t1882*t8277 + t1591*t8289 - 0.1305*t520*t8289 + t2159*t828*t8289 + t2600*t8305 + t2804*t8325 + t3198*t8336 + t3417*t8349 + t3633*t8360 + t3715*t8369 + t3951*t8374 + t4089*t8385 + 0.046027*(t3904*t8374 + t3826*t8385) - 0.979698*(t3826*t8374 - 1.*t3904*t8385);
  p_output1[41]=t7913 + t7928 + t7929 + t7930 + t7955 + t7970 + t8000 + t8028 + t8046 + t8055 + t8076 + t8087 + t8094 + t8102 + t1181*t416*t8105 + t1313*t416*t8120;
  p_output1[42]=t2159*t4659 + t1775*t2600*t4659 - 1.*t1864*t2804*t4659 - 0.1305*(-1.*t1251*t416*t520 - 1.*t4540*t828) + t1251*t416*t8411 + t4540*t8419 + t3198*t8440 + t3417*t8444 + t3633*t8448 + t3715*t8455 + t3951*t8461 + t4089*t8467 + 0.046027*(t3904*t8461 + t3826*t8467) - 0.979698*(t3826*t8461 - 1.*t3904*t8467);
  p_output1[43]=t8419*t8515 - 0.1305*(t2184 - 1.*t828*t8515) + t2159*t8527 + t1775*t2600*t8527 - 1.*t1864*t2804*t8527 + t3198*t8545 + t3417*t8552 + t3633*t8561 + t3715*t8569 + t3951*t8581 + t4089*t8586 + 0.046027*(t3904*t8581 + t3826*t8586) - 0.979698*(t3826*t8581 - 1.*t3904*t8586) + t416*t8411*t933;
  p_output1[44]=-1.*t1214*t8411 + t8419*t8610 - 0.1305*(t1214*t520 - 1.*t828*t8610) + t2159*t8618 + t1775*t2600*t8618 - 1.*t1864*t2804*t8618 + t3198*t8634 + t3417*t8641 + t3633*t8647 + t3715*t8658 + t3951*t8682 + t4089*t8686 + 0.046027*(t3904*t8682 + t3826*t8686) - 0.979698*(t3826*t8682 - 1.*t3904*t8686);
  p_output1[45]=t2600*t4763 + t4582*t8701 + t4681*t8706 + t2804*t8710 + t3417*t8717 + t3198*t8724 + t3715*t8729 + t3633*t8735 + t4089*t8740 + t3951*t8744 - 0.979698*(-1.*t3904*t8740 + t3826*t8744) + 0.046027*(t3826*t8740 + t3904*t8744);
  p_output1[46]=t8289*t8701 + t8706*t8764 + t2804*t8772 + t2600*t8777 + t3417*t8781 + t3198*t8786 + t3715*t8794 + t3633*t8798 + t4089*t8803 + t3951*t8807 - 0.979698*(-1.*t3904*t8803 + t3826*t8807) + 0.046027*(t3826*t8803 + t3904*t8807);
  p_output1[47]=t7927*t8701 + t8706*t8825 + t2804*t8829 + t2600*t8833 + t3417*t8837 + t3198*t8842 + t3715*t8846 + t3633*t8850 + t4089*t8856 + t3951*t8862 - 0.979698*(-1.*t3904*t8856 + t3826*t8862) + 0.046027*(t3826*t8856 + t3904*t8862);
  p_output1[48]=t3417*t4823 + t4726*t8877 + t4763*t8880 + t3198*t8885 + t3715*t8889 + t3633*t8892 + t4089*t8896 + t3951*t8901 - 0.979698*(-1.*t3904*t8896 + t3826*t8901) + 0.046027*(t3826*t8896 + t3904*t8901);
  p_output1[49]=t8777*t8880 + t8877*t8915 + t3417*t8919 + t3198*t8922 + t3715*t8926 + t3633*t8932 + t4089*t8941 + t3951*t8948 - 0.979698*(-1.*t3904*t8941 + t3826*t8948) + 0.046027*(t3826*t8941 + t3904*t8948);
  p_output1[50]=t8833*t8880 + t8877*t8973 + t3417*t8978 + t3198*t8982 + t3715*t8991 + t3633*t8995 + t4089*t9001 + t3951*t9008 - 0.979698*(-1.*t3904*t9001 + t3826*t9008) + 0.046027*(t3826*t9001 + t3904*t9008);
  p_output1[51]=t3633*t4976 + t4823*t9026 + t4861*t9031 + t3715*t9035 + t4089*t9041 + t3951*t9045 - 0.979698*(-1.*t3904*t9041 + t3826*t9045) + 0.046027*(t3826*t9041 + t3904*t9045);
  p_output1[52]=t8919*t9026 + t9031*t9073 + t3715*t9081 + t3633*t9087 + t4089*t9095 + t3951*t9104 - 0.979698*(-1.*t3904*t9095 + t3826*t9104) + 0.046027*(t3826*t9095 + t3904*t9104);
  p_output1[53]=t8978*t9026 + t9031*t9121 + t3715*t9126 + t3633*t9129 + t4089*t9136 + t3951*t9143 - 0.979698*(-1.*t3904*t9136 + t3826*t9143) + 0.046027*(t3826*t9136 + t3904*t9143);
  p_output1[54]=t4089*t4997 + t4909*t9159 + t4976*t9164 + t3951*t9170 + 0.046027*(t5104 + t3904*t9170) - 0.979698*(t3826*t9170 + t9173);
  p_output1[55]=t9087*t9164 + t9159*t9192 + t4089*t9203 + t3951*t9206 - 0.979698*(t3826*t9206 + t9209) + 0.046027*(t3904*t9206 + t9216);
  p_output1[56]=t9129*t9164 + t9159*t9226 + t4089*t9230 + t3951*t9233 - 0.979698*(t3826*t9233 + t9235) + 0.046027*(t3904*t9233 + t9240);
  p_output1[57]=0.046027*t5129 - 0.979698*(-1.*t3826*t5034 + t9173) + t4997*t9247 + t5034*t9251;
  p_output1[58]=t9203*t9247 + t9251*t9263 - 0.979698*(t9209 - 1.*t3826*t9263) + 0.046027*(t9216 - 1.*t3904*t9263);
  p_output1[59]=t9230*t9247 + t9251*t9276 - 0.979698*(t9235 - 1.*t3826*t9276) + 0.046027*(t9240 - 1.*t3904*t9276);
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "One input(s) required (var1).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 20 && ncols == 1) && 
      !(mrows == 1 && ncols == 20))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 3, (mwSize) 20, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1);


}

#else // MATLAB_MEX_FILE

#include "Jp_RightToeBottomFront_mex.hh"

namespace SymExpression
{

void Jp_RightToeBottomFront_mex_raw(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}

}

#endif // MATLAB_MEX_FILE
