/*
 * Automatically Generated from Mathematica.
 * Mon 11 May 2020 22:25:07 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t544;
  double t687;
  double t819;
  double t901;
  double t938;
  double t1111;
  double t1167;
  double t1173;
  double t495;
  double t1202;
  double t151;
  double t1210;
  double t135;
  double t1486;
  double t1857;
  double t1874;
  double t1879;
  double t1982;
  double t1986;
  double t1403;
  double t1546;
  double t1924;
  double t2035;
  double t2037;
  double t2166;
  double t2248;
  double t2291;
  double t1460;
  double t2614;
  double t2673;
  double t2676;
  double t2690;
  double t3182;
  double t3250;
  double t3251;
  double t3259;
  double t3242;
  double t3263;
  double t3276;
  double t3298;
  double t3312;
  double t3358;
  double t3283;
  double t3401;
  double t3436;
  double t3439;
  double t3486;
  double t3489;
  double t3525;
  double t3538;
  double t3557;
  double t3568;
  double t3570;
  double t3593;
  double t2905;
  double t2978;
  double t2560;
  double t2580;
  double t2620;
  double t2733;
  double t2762;
  double t3835;
  double t3974;
  double t4000;
  double t4025;
  double t4035;
  double t4057;
  double t4064;
  double t4116;
  double t4119;
  double t4132;
  double t4065;
  double t4140;
  double t4176;
  double t4193;
  double t4203;
  double t4215;
  double t4220;
  double t4246;
  double t4262;
  double t4275;
  double t4294;
  double t4298;
  double t4393;
  double t4399;
  double t4358;
  double t4421;
  double t4429;
  double t4460;
  double t4463;
  double t4469;
  double t4628;
  double t4644;
  double t4649;
  double t4686;
  double t4851;
  double t4854;
  double t4594;
  double t4609;
  double t4633;
  double t4710;
  double t4727;
  double t5020;
  double t5024;
  double t5246;
  double t5258;
  double t5266;
  double t5267;
  double t5305;
  double t5307;
  double t5350;
  double t5351;
  double t5372;
  double t5420;
  double t1184;
  double t1255;
  double t1264;
  double t1523;
  double t1657;
  double t1674;
  double t1683;
  double t1745;
  double t1766;
  double t2153;
  double t2296;
  double t2304;
  double t2344;
  double t2377;
  double t2396;
  double t2594;
  double t2778;
  double t2783;
  double t2845;
  double t2854;
  double t2881;
  double t2997;
  double t5779;
  double t5794;
  double t5803;
  double t3674;
  double t3717;
  double t3743;
  double t3778;
  double t3840;
  double t3850;
  double t3852;
  double t3877;
  double t3894;
  double t3904;
  double t3906;
  double t3917;
  double t3952;
  double t5898;
  double t5905;
  double t5907;
  double t4430;
  double t4471;
  double t4473;
  double t4493;
  double t4518;
  double t4528;
  double t4627;
  double t4741;
  double t4785;
  double t4816;
  double t4825;
  double t4829;
  double t4856;
  double t4921;
  double t4928;
  double t4935;
  double t4983;
  double t5034;
  double t5069;
  double t5089;
  double t5113;
  double t5146;
  double t5151;
  double t5265;
  double t5274;
  double t5277;
  double t5316;
  double t5395;
  double t5423;
  double t5435;
  double t5454;
  double t5487;
  double t5493;
  double t5501;
  double t5516;
  double t5519;
  double t5525;
  double t5539;
  double t5549;
  double t5552;
  double t5556;
  double t5579;
  double t5615;
  double t6206;
  double t6233;
  double t6245;
  double t6330;
  double t6348;
  double t6349;
  double t6523;
  double t6544;
  double t6561;
  double t6494;
  double t6495;
  double t6517;
  double t6520;
  double t6567;
  double t6608;
  double t6645;
  double t6655;
  double t6658;
  double t6621;
  double t6664;
  double t6665;
  double t6682;
  double t6683;
  double t6689;
  double t6734;
  double t6741;
  double t6749;
  double t6865;
  double t6870;
  double t6852;
  double t6853;
  double t6911;
  double t6912;
  double t6918;
  double t6878;
  double t6883;
  double t6890;
  double t6895;
  double t6830;
  double t6834;
  double t6854;
  double t6903;
  double t6910;
  double t6921;
  double t6924;
  double t6941;
  double t6945;
  double t6975;
  double t6976;
  double t6984;
  double t6987;
  double t6990;
  double t7003;
  double t7014;
  double t7020;
  double t7039;
  double t7044;
  double t6730;
  double t6836;
  double t6837;
  double t6932;
  double t7058;
  double t7076;
  double t7085;
  double t7089;
  double t7090;
  double t7092;
  double t7105;
  double t7147;
  double t7151;
  double t7152;
  double t7155;
  double t7161;
  double t7188;
  double t7196;
  double t7079;
  double t7114;
  double t7143;
  double t6675;
  double t6691;
  double t6703;
  double t7157;
  double t7197;
  double t7198;
  double t7214;
  double t7236;
  double t7254;
  double t6733;
  double t6750;
  double t6762;
  double t6812;
  double t6783;
  double t6792;
  double t6793;
  double t7322;
  double t7325;
  double t7338;
  double t7344;
  double t7353;
  double t7377;
  double t7380;
  double t7367;
  double t7397;
  double t7401;
  double t7415;
  double t7417;
  double t7429;
  double t7483;
  double t7484;
  double t7489;
  double t7146;
  double t7208;
  double t7263;
  double t7269;
  double t7270;
  double t7273;
  double t7412;
  double t7430;
  double t7434;
  double t7279;
  double t7281;
  double t7482;
  double t7501;
  double t7508;
  double t7511;
  double t7515;
  double t7517;
  double t7672;
  double t7713;
  double t7760;
  double t7774;
  double t7782;
  double t7792;
  double t7804;
  double t7836;
  double t7837;
  double t7849;
  double t7751;
  double t7816;
  double t7830;
  double t8193;
  double t8188;
  double t8189;
  double t8191;
  double t8177;
  double t8178;
  double t8179;
  double t8180;
  double t6367;
  double t6369;
  double t6375;
  double t6442;
  double t6444;
  double t6459;
  double t8561;
  double t8562;
  double t8563;
  double t8528;
  double t6294;
  double t6302;
  double t6304;
  double t8713;
  double t8725;
  double t8743;
  double t8746;
  double t8747;
  double t8790;
  double t8801;
  double t8813;
  double t8814;
  double t6469;
  double t6472;
  double t6479;
  double t8726;
  double t8727;
  double t8735;
  double t8796;
  double t8818;
  double t8819;
  double t8825;
  double t8828;
  double t8832;
  double t8993;
  double t9012;
  double t9021;
  double t9031;
  double t9032;
  double t9033;
  double t9044;
  double t9057;
  double t9064;
  double t9191;
  double t9196;
  double t9197;
  double t9199;
  double t6272;
  double t6274;
  double t6276;
  double t6141;
  double t6143;
  double t6148;
  double t9504;
  double t9506;
  double t9508;
  double t9513;
  double t9543;
  double t9544;
  double t9545;
  double t9547;
  double t9685;
  double t9691;
  double t9700;
  double t9712;
  double t9714;
  double t9716;
  double t9720;
  double t9731;
  double t6149;
  double t6153;
  double t6159;
  double t6264;
  double t6267;
  double t6284;
  double t6287;
  double t6314;
  double t6355;
  double t6358;
  double t6364;
  double t6365;
  double t6378;
  double t6389;
  double t6404;
  double t6436;
  double t6463;
  double t6484;
  double t6486;
  double t6711;
  double t7278;
  double t7439;
  double t9831;
  double t9833;
  double t9835;
  double t9840;
  double t9844;
  double t9856;
  double t7555;
  double t7831;
  double t7912;
  double t8012;
  double t8015;
  double t8192;
  double t8202;
  double t8290;
  double t8309;
  double t9932;
  double t9934;
  double t9936;
  double t8742;
  double t8844;
  double t8910;
  double t8913;
  double t8995;
  double t9039;
  double t9079;
  double t10032;
  double t10034;
  double t10036;
  double t10039;
  double t10046;
  double t9086;
  double t10060;
  double t9107;
  double t9135;
  double t9160;
  double t9170;
  double t9211;
  double t9243;
  double t9268;
  double t9279;
  double t10116;
  double t10118;
  double t10119;
  double t9403;
  double t9418;
  double t9430;
  double t9431;
  double t9477;
  double t9478;
  double t9518;
  double t9520;
  double t9683;
  double t10235;
  double t10240;
  double t10241;
  double t9715;
  double t10259;
  double t10263;
  double t10264;
  double t10277;
  double t9736;
  double t10283;
  double t10289;
  double t10292;
  double t10299;
  double t9744;
  double t10306;
  double t9561;
  double t9562;
  double t9583;
  double t9586;
  double t9625;
  double t9628;
  double t9650;
  double t9651;
  double t9822;
  double t9854;
  double t9871;
  double t10414;
  double t10416;
  double t10417;
  double t10422;
  double t9885;
  double t10429;
  double t10430;
  double t9989;
  double t9991;
  double t9999;
  double t10002;
  double t10027;
  double t10041;
  double t10072;
  double t10533;
  double t10534;
  double t10535;
  double t10536;
  double t10081;
  double t10539;
  double t10540;
  double t10186;
  double t10187;
  double t10206;
  double t10208;
  double t10220;
  double t10221;
  double t10246;
  double t10249;
  double t10274;
  double t10674;
  double t10675;
  double t10676;
  double t10298;
  double t10692;
  double t10697;
  double t10702;
  double t10314;
  double t10716;
  double t10719;
  double t10729;
  double t10323;
  double t10730;
  double t10733;
  double t10744;
  double t10779;
  double t10780;
  double t10786;
  double t10787;
  double t10788;
  double t10791;
  double t10792;
  double t10836;
  double t10837;
  double t10842;
  double t10843;
  double t10844;
  double t10845;
  double t10848;
  double t10895;
  double t10896;
  double t10897;
  double t10903;
  double t10904;
  double t10905;
  double t10909;
  double t10913;
  double t10916;
  double t10918;
  double t10919;
  double t10923;
  double t10761;
  double t10764;
  double t10765;
  double t10768;
  double t10771;
  double t10772;
  double t10776;
  double t10777;
  double t10778;
  double t10941;
  double t10942;
  double t10943;
  double t10931;
  double t10926;
  double t10947;
  double t10917;
  double t10951;
  double t10952;
  double t10953;
  double t10958;
  double t10959;
  double t10960;
  double t10955;
  double t10910;
  t544 = Cos(var1[7]);
  t687 = Cos(var1[8]);
  t819 = Sin(var1[9]);
  t901 = t687*t819;
  t938 = Cos(var1[9]);
  t1111 = Sin(var1[8]);
  t1167 = t938*t1111;
  t1173 = 0. + t901 + t1167;
  t495 = Cos(var1[6]);
  t1202 = Sin(var1[5]);
  t151 = Cos(var1[5]);
  t1210 = Sin(var1[6]);
  t135 = Sin(var1[3]);
  t1486 = Sin(var1[7]);
  t1857 = -1.*t938*t687;
  t1874 = t819*t1111;
  t1879 = 0. + t1857 + t1874;
  t1982 = t1486*t1173;
  t1986 = 0. + t1982;
  t1403 = Cos(var1[3]);
  t1546 = Sin(var1[4]);
  t1924 = -1.*t1210*t1879;
  t2035 = t495*t1986;
  t2037 = t1924 + t2035;
  t2166 = -1.*t495*t1879;
  t2248 = -1.*t1210*t1986;
  t2291 = t2166 + t2248;
  t1460 = Cos(var1[4]);
  t2614 = 0. + t1924 + t2035;
  t2673 = t495*t1879;
  t2676 = t1210*t1986;
  t2690 = 0. + t2673 + t2676;
  t3182 = t901 + t1167;
  t3250 = t938*t687;
  t3251 = -1.*t819*t1111;
  t3259 = t3250 + t3251;
  t3242 = -1.*t1210*t3182;
  t3263 = t495*t1486*t3259;
  t3276 = t3242 + t3263;
  t3298 = t495*t3182;
  t3312 = t1210*t1486*t3259;
  t3358 = t3298 + t3312;
  t3283 = t151*t3276;
  t3401 = -1.*t1202*t3358;
  t3436 = t3283 + t3401;
  t3439 = -1.*t135*t3436;
  t3486 = t1460*t544*t3259;
  t3489 = t1202*t3276;
  t3525 = t151*t3358;
  t3538 = t3489 + t3525;
  t3557 = t1546*t3538;
  t3568 = t3486 + t3557;
  t3570 = t1403*t3568;
  t3593 = t3439 + t3570;
  t2905 = t151*t2614;
  t2978 = -1.*t1202*t2690;
  t2560 = t544*t1173;
  t2580 = 0. + t2560;
  t2620 = t1202*t2614;
  t2733 = t151*t2690;
  t2762 = 0. + t2620 + t2733;
  t3835 = 0. + t3250 + t3251;
  t3974 = -1.*t687*t819;
  t4000 = -1.*t938*t1111;
  t4025 = t3974 + t4000;
  t4035 = t1210*t1486*t4025;
  t4057 = t495*t3259;
  t4064 = t4035 + t4057;
  t4116 = t495*t1486*t4025;
  t4119 = -1.*t1210*t3259;
  t4132 = t4116 + t4119;
  t4065 = -1.*t1202*t4064;
  t4140 = t151*t4132;
  t4176 = t4065 + t4140;
  t4193 = -1.*t135*t4176;
  t4203 = t1460*t544*t4025;
  t4215 = t151*t4064;
  t4220 = t1202*t4132;
  t4246 = t4215 + t4220;
  t4262 = t1546*t4246;
  t4275 = t4203 + t4262;
  t4294 = t1403*t4275;
  t4298 = t4193 + t4294;
  t4393 = t1486*t3835;
  t4399 = 0. + t4393;
  t4358 = -1.*t1210*t1173;
  t4421 = t495*t4399;
  t4429 = t4358 + t4421;
  t4460 = -1.*t495*t1173;
  t4463 = -1.*t1210*t4399;
  t4469 = t4460 + t4463;
  t4628 = 0. + t4358 + t4421;
  t4644 = t495*t1173;
  t4649 = t1210*t4399;
  t4686 = 0. + t4644 + t4649;
  t4851 = t151*t4628;
  t4854 = -1.*t1202*t4686;
  t4594 = t544*t3835;
  t4609 = 0. + t4594;
  t4633 = t1202*t4628;
  t4710 = t151*t4686;
  t4727 = 0. + t4633 + t4710;
  t5020 = -1.*t544;
  t5024 = 0. + t5020;
  t5246 = t495*t5024;
  t5258 = 0. + t5246;
  t5266 = t5024*t1210;
  t5267 = 0. + t5266;
  t5305 = t151*t5258;
  t5307 = -1.*t1202*t5267;
  t5350 = t5258*t1202;
  t5351 = t151*t5267;
  t5372 = 0. + t5350 + t5351;
  t5420 = 0. + t1486;
  t1184 = t151*t495*t544*t1173;
  t1255 = -1.*t544*t1202*t1210*t1173;
  t1264 = t1184 + t1255;
  t1523 = -1.*t1460*t1486*t1173;
  t1657 = t495*t544*t1202*t1173;
  t1674 = t151*t544*t1210*t1173;
  t1683 = t1657 + t1674;
  t1745 = t1546*t1683;
  t1766 = t1523 + t1745;
  t2153 = -1.*t1202*t2037;
  t2296 = t151*t2291;
  t2304 = t2153 + t2296;
  t2344 = t151*t2037;
  t2377 = t1202*t2291;
  t2396 = t2344 + t2377;
  t2594 = -1.*t1546*t2580;
  t2778 = t1460*t2762;
  t2783 = t2594 + t2778;
  t2845 = -1.*t1202*t2614;
  t2854 = -1.*t151*t2690;
  t2881 = t2845 + t2854;
  t2997 = t2905 + t2978;
  t5779 = t1403*t3436;
  t5794 = t135*t3568;
  t5803 = t5779 + t5794;
  t3674 = 0. + t2905 + t2978;
  t3717 = t1460*t2580;
  t3743 = t1546*t2762;
  t3778 = 0. + t3717 + t3743;
  t3840 = t151*t495*t544*t3835;
  t3850 = -1.*t544*t1202*t1210*t3835;
  t3852 = t3840 + t3850;
  t3877 = -1.*t1460*t1486*t3835;
  t3894 = t495*t544*t1202*t3835;
  t3904 = t151*t544*t1210*t3835;
  t3906 = t3894 + t3904;
  t3917 = t1546*t3906;
  t3952 = t3877 + t3917;
  t5898 = t1403*t4176;
  t5905 = t135*t4275;
  t5907 = t5898 + t5905;
  t4430 = -1.*t1202*t4429;
  t4471 = t151*t4469;
  t4473 = t4430 + t4471;
  t4493 = t151*t4429;
  t4518 = t1202*t4469;
  t4528 = t4493 + t4518;
  t4627 = -1.*t1546*t4609;
  t4741 = t1460*t4727;
  t4785 = t4627 + t4741;
  t4816 = -1.*t1202*t4628;
  t4825 = -1.*t151*t4686;
  t4829 = t4816 + t4825;
  t4856 = t4851 + t4854;
  t4921 = 0. + t4851 + t4854;
  t4928 = t1460*t4609;
  t4935 = t1546*t4727;
  t4983 = 0. + t4928 + t4935;
  t5034 = -1.*t495*t5024*t1202;
  t5069 = -1.*t151*t5024*t1210;
  t5089 = t5034 + t5069;
  t5113 = t151*t495*t5024;
  t5146 = -1.*t5024*t1202*t1210;
  t5151 = t5113 + t5146;
  t5265 = -1.*t5258*t1202;
  t5274 = -1.*t151*t5267;
  t5277 = t5265 + t5274;
  t5316 = t5305 + t5307;
  t5395 = t1460*t5372;
  t5423 = -1.*t1546*t5420;
  t5435 = t5395 + t5423;
  t5454 = 0. + t5305 + t5307;
  t5487 = t1546*t5372;
  t5493 = t1460*t5420;
  t5501 = 0. + t5487 + t5493;
  t5516 = t151*t495*t1486;
  t5519 = -1.*t1202*t1210*t1486;
  t5525 = t5516 + t5519;
  t5539 = t1460*t544;
  t5549 = t495*t1202*t1486;
  t5552 = t151*t1210*t1486;
  t5556 = t5549 + t5552;
  t5579 = t1546*t5556;
  t5615 = t5539 + t5579;
  t6206 = -1.*t544*t1546*t3259;
  t6233 = t1460*t3538;
  t6245 = t6206 + t6233;
  t6330 = -1.*t544*t1546*t4025;
  t6348 = t1460*t4246;
  t6349 = t6330 + t6348;
  t6523 = 0.02300000000000002*t938;
  t6544 = -0.0321*t819;
  t6561 = t6523 + t6544;
  t6494 = 0.0321*t938;
  t6495 = 0.02300000000000002*t819;
  t6517 = t6494 + t6495;
  t6520 = t687*t6517;
  t6567 = t6561*t1111;
  t6608 = t6520 + t6567;
  t6645 = t687*t6561;
  t6655 = -1.*t6517*t1111;
  t6658 = t6645 + t6655;
  t6621 = -1.*t1210*t6608;
  t6664 = t495*t1486*t6658;
  t6665 = t6621 + t6664;
  t6682 = t495*t6608;
  t6683 = t1210*t1486*t6658;
  t6689 = t6682 + t6683;
  t6734 = t1202*t6665;
  t6741 = t151*t6689;
  t6749 = t6734 + t6741;
  t6865 = -1.*t938;
  t6870 = 1. + t6865;
  t6852 = -1.*t687;
  t6853 = 1. + t6852;
  t6911 = -0.08055*t6870;
  t6912 = -0.04845*t938;
  t6918 = 0. + t6911 + t6912 + t6495;
  t6878 = -0.13004*t6870;
  t6883 = -0.15304*t938;
  t6890 = 0.0321*t819;
  t6895 = 0. + t6878 + t6883 + t6890;
  t6830 = -1.*t495;
  t6834 = 1. + t6830;
  t6854 = -0.01004*t6853;
  t6903 = t687*t6895;
  t6910 = 0.08055*t1111;
  t6921 = t6918*t1111;
  t6924 = 0. + t6854 + t6903 + t6910 + t6921;
  t6941 = -1.*t544;
  t6945 = 1. + t6941;
  t6975 = 0.135*t6945;
  t6976 = 0.1327*t544;
  t6984 = 0.08055*t1486;
  t6987 = -0.08055*t6853;
  t6990 = t687*t6918;
  t7003 = -0.01004*t1111;
  t7014 = -1.*t6895*t1111;
  t7020 = 0. + t6987 + t6990 + t7003 + t7014;
  t7039 = t1486*t7020;
  t7044 = 0. + t6975 + t6976 + t6984 + t7039;
  t6730 = 0. + t5395 + t5423;
  t6836 = 0.135*t6834;
  t6837 = 0.07996*t1210;
  t6932 = -1.*t1210*t6924;
  t7058 = t495*t7044;
  t7076 = 0. + t6836 + t6837 + t6932 + t7058;
  t7085 = 0.07996*t6834;
  t7089 = -0.135*t1210;
  t7090 = t495*t6924;
  t7092 = t1210*t7044;
  t7105 = 0. + t7085 + t7089 + t7090 + t7092;
  t7147 = -0.08055*t6945;
  t7151 = 0.0022999999999999965*t1486;
  t7152 = t544*t7020;
  t7155 = 0. + t7147 + t7151 + t7152;
  t7161 = t1202*t7076;
  t7188 = t151*t7105;
  t7196 = 0. + t7161 + t7188;
  t7079 = t151*t7076;
  t7114 = -1.*t1202*t7105;
  t7143 = 0. + t7079 + t7114;
  t6675 = t151*t6665;
  t6691 = -1.*t1202*t6689;
  t6703 = t6675 + t6691;
  t7157 = -1.*t1546*t7155;
  t7197 = t1460*t7196;
  t7198 = 0. + t7157 + t7197;
  t7214 = t1460*t7155;
  t7236 = t1546*t7196;
  t7254 = 0. + t7214 + t7236;
  t6733 = -1.*t544*t1546*t6658;
  t6750 = t1460*t6749;
  t6762 = t6733 + t6750;
  t6812 = 0. + t4627 + t4741;
  t6783 = t1460*t544*t6658;
  t6792 = t1546*t6749;
  t6793 = t6783 + t6792;
  t7322 = -0.01004*t687;
  t7325 = -1.*t687*t6895;
  t7338 = -0.08055*t1111;
  t7344 = -1.*t6918*t1111;
  t7353 = t7322 + t7325 + t7338 + t7344;
  t7377 = 0.08055*t687;
  t7380 = t7377 + t6990 + t7003 + t7014;
  t7367 = t1210*t1486*t7353;
  t7397 = t495*t7380;
  t7401 = t7367 + t7397;
  t7415 = t495*t1486*t7353;
  t7417 = -1.*t1210*t7380;
  t7429 = t7415 + t7417;
  t7483 = t151*t7401;
  t7484 = t1202*t7429;
  t7489 = t7483 + t7484;
  t7146 = t5454*t7143;
  t7208 = t6730*t7198;
  t7263 = t5501*t7254;
  t7269 = t7146 + t7208 + t7263;
  t7270 = t6349*t7269;
  t7273 = -1.*t4176*t7143;
  t7412 = -1.*t1202*t7401;
  t7430 = t151*t7429;
  t7434 = t7412 + t7430;
  t7279 = -1.*t6349*t7198;
  t7281 = -1.*t4275*t7254;
  t7482 = -1.*t544*t1546*t7353;
  t7501 = t1460*t7489;
  t7508 = t7482 + t7501;
  t7511 = t1460*t544*t7353;
  t7515 = t1546*t7489;
  t7517 = t7511 + t7515;
  t7672 = -0.135*t495;
  t7713 = t7672 + t6837 + t6932 + t7058;
  t7760 = 0.07996*t495;
  t7774 = 0.135*t1210;
  t7782 = -1.*t495*t6924;
  t7792 = -1.*t1210*t7044;
  t7804 = t7760 + t7774 + t7782 + t7792;
  t7836 = t151*t7713;
  t7837 = t1202*t7804;
  t7849 = t7836 + t7837;
  t7751 = -1.*t1202*t7713;
  t7816 = t151*t7804;
  t7830 = t7751 + t7816;
  t8193 = t7079 + t7114;
  t8188 = -1.*t1202*t7076;
  t8189 = -1.*t151*t7105;
  t8191 = t8188 + t8189;
  t8177 = -1.*t7143*t4921;
  t8178 = -1.*t7198*t6812;
  t8179 = -1.*t7254*t4983;
  t8180 = t8177 + t8178 + t8179;
  t6367 = -1.*t1460*t4609;
  t6369 = -1.*t1546*t4727;
  t6375 = t6367 + t6369;
  t6442 = -1.*t1546*t5372;
  t6444 = -1.*t1460*t5420;
  t6459 = t6442 + t6444;
  t8561 = -1.*t1460*t7155;
  t8562 = -1.*t1546*t7196;
  t8563 = t8561 + t8562;
  t8528 = t7157 + t7197;
  t6294 = t1546*t1486*t3835;
  t6302 = t1460*t3906;
  t6304 = t6294 + t6302;
  t8713 = 0.08055*t544;
  t8725 = t8713 + t7151 + t7152;
  t8743 = 0.0022999999999999965*t544;
  t8746 = -0.08055*t1486;
  t8747 = -1.*t1486*t7020;
  t8790 = t8743 + t8746 + t8747;
  t8801 = t495*t1202*t8725;
  t8813 = t151*t1210*t8725;
  t8814 = t8801 + t8813;
  t6469 = -1.*t544*t1546;
  t6472 = t1460*t5556;
  t6479 = t6469 + t6472;
  t8726 = t151*t495*t8725;
  t8727 = -1.*t1202*t1210*t8725;
  t8735 = t8726 + t8727;
  t8796 = -1.*t1546*t8790;
  t8818 = t1460*t8814;
  t8819 = t8796 + t8818;
  t8825 = t1460*t8790;
  t8828 = t1546*t8814;
  t8832 = t8825 + t8828;
  t8993 = 0. + t2594 + t2778;
  t9012 = -1.*t5454*t7143;
  t9021 = -1.*t6730*t7198;
  t9031 = -1.*t5501*t7254;
  t9032 = t9012 + t9021 + t9031;
  t9033 = t6245*t9032;
  t9044 = t3436*t7143;
  t9057 = t6245*t7198;
  t9064 = t3568*t7254;
  t9191 = t3674*t7143;
  t9196 = t8993*t7198;
  t9197 = t3778*t7254;
  t9199 = t9191 + t9196 + t9197;
  t6272 = -1.*t1460*t2580;
  t6274 = -1.*t1546*t2762;
  t6276 = t6272 + t6274;
  t6141 = t1546*t1486*t1173;
  t6143 = t1460*t1683;
  t6148 = t6141 + t6143;
  t9504 = -1.*t3674*t7143;
  t9506 = -1.*t8993*t7198;
  t9508 = -1.*t3778*t7254;
  t9513 = t9504 + t9506 + t9508;
  t9543 = t7143*t4921;
  t9544 = t7198*t6812;
  t9545 = t7254*t4983;
  t9547 = t9543 + t9544 + t9545;
  t9685 = -1.*t3436*t7143;
  t9691 = -1.*t6245*t7198;
  t9700 = -1.*t3568*t7254;
  t9712 = t6349*t9513;
  t9714 = t4176*t7143;
  t9716 = t6349*t7198;
  t9720 = t4275*t7254;
  t9731 = t6245*t9547;
  t6149 = var2[7]*t6148;
  t6153 = var2[6]*t1460*t2396;
  t6159 = var2[5]*t1460*t2997;
  t6264 = var2[9]*t6245;
  t6267 = var2[8]*t6245;
  t6284 = var2[4]*t6276;
  t6287 = t6149 + t6153 + t6159 + t6264 + t6267 + t6284;
  t6314 = var2[7]*t6304;
  t6355 = var2[9]*t6349;
  t6358 = var2[8]*t6349;
  t6364 = var2[6]*t1460*t4528;
  t6365 = var2[5]*t1460*t4856;
  t6378 = var2[4]*t6375;
  t6389 = t6314 + t6355 + t6358 + t6364 + t6365 + t6378;
  t6404 = var2[6]*t1460*t5151;
  t6436 = var2[5]*t1460*t5316;
  t6463 = var2[4]*t6459;
  t6484 = var2[7]*t6479;
  t6486 = t6404 + t6436 + t6463 + t6484;
  t6711 = t5454*t6703;
  t7278 = -1.*t6703*t4921;
  t7439 = t5454*t7434;
  t9831 = t5420*t7155;
  t9833 = t5372*t7196;
  t9835 = t9831 + t9833 + t7146;
  t9840 = t4176*t9835;
  t9844 = -1.*t544*t4025*t7155;
  t9856 = -1.*t4246*t7196;
  t7555 = -1.*t7434*t4921;
  t7831 = t5454*t7830;
  t7912 = t5089*t7143;
  t8012 = -1.*t7143*t4473;
  t8015 = -1.*t7830*t4921;
  t8192 = t5454*t8191;
  t8202 = t5277*t7143;
  t8290 = -1.*t7143*t4829;
  t8309 = -1.*t8191*t4921;
  t9932 = -1.*t7155*t4609;
  t9934 = -1.*t7196*t4727;
  t9936 = t9932 + t9934 + t8177;
  t8742 = t5454*t8735;
  t8844 = t5525*t7143;
  t8910 = -1.*t3852*t7143;
  t8913 = -1.*t8735*t4921;
  t8995 = -1.*t5454*t6703;
  t9039 = t6703*t3674;
  t9079 = -1.*t5454*t7434;
  t10032 = -1.*t5420*t7155;
  t10034 = -1.*t5372*t7196;
  t10036 = t10032 + t10034 + t9012;
  t10039 = t3436*t10036;
  t10046 = t544*t3259*t7155;
  t9086 = t7434*t3674;
  t10060 = t3538*t7196;
  t9107 = -1.*t5454*t7830;
  t9135 = -1.*t5089*t7143;
  t9160 = t3674*t7830;
  t9170 = t2304*t7143;
  t9211 = -1.*t5454*t8191;
  t9243 = -1.*t5277*t7143;
  t9268 = t3674*t8191;
  t9279 = t2881*t7143;
  t10116 = t2580*t7155;
  t10118 = t2762*t7196;
  t10119 = t10116 + t10118 + t9191;
  t9403 = -1.*t5454*t8735;
  t9418 = -1.*t5525*t7143;
  t9430 = t8735*t3674;
  t9431 = t1264*t7143;
  t9477 = -1.*t8735*t3674;
  t9478 = -1.*t1264*t7143;
  t9518 = t3852*t7143;
  t9520 = t8735*t4921;
  t9683 = -1.*t6703*t3674;
  t10235 = -1.*t2580*t7155;
  t10240 = -1.*t2762*t7196;
  t10241 = t10235 + t10240 + t9504;
  t9715 = t6703*t4921;
  t10259 = t7155*t4609;
  t10263 = t7196*t4727;
  t10264 = t10259 + t10263 + t9543;
  t10277 = -1.*t544*t3259*t7155;
  t9736 = -1.*t7434*t3674;
  t10283 = -1.*t3538*t7196;
  t10289 = t4176*t10241;
  t10292 = t544*t4025*t7155;
  t10299 = t4246*t7196;
  t9744 = t7434*t4921;
  t10306 = t3436*t10264;
  t9561 = -1.*t3674*t7830;
  t9562 = -1.*t2304*t7143;
  t9583 = t7143*t4473;
  t9586 = t7830*t4921;
  t9625 = -1.*t3674*t8191;
  t9628 = -1.*t2881*t7143;
  t9650 = t7143*t4829;
  t9651 = t8191*t4921;
  t9822 = t544*t5420*t6658;
  t9854 = -1.*t544*t6658*t4609;
  t9871 = t544*t5420*t7353;
  t10414 = t5258*t7076;
  t10416 = t5267*t7105;
  t10417 = t9831 + t10414 + t10416;
  t10422 = t544*t4025*t10417;
  t9885 = -1.*t544*t7353*t4609;
  t10429 = -1.*t4132*t7076;
  t10430 = -1.*t4064*t7105;
  t9989 = t544*t7155;
  t9991 = t5420*t8790;
  t9999 = t1486*t3835*t7155;
  t10002 = -1.*t8790*t4609;
  t10027 = -1.*t544*t5420*t6658;
  t10041 = t544*t6658*t2580;
  t10072 = -1.*t544*t5420*t7353;
  t10533 = -1.*t5258*t7076;
  t10534 = -1.*t5267*t7105;
  t10535 = t10032 + t10533 + t10534;
  t10536 = t544*t3259*t10535;
  t10081 = t544*t7353*t2580;
  t10539 = t3276*t7076;
  t10540 = t3358*t7105;
  t10186 = -1.*t544*t7155;
  t10187 = -1.*t5420*t8790;
  t10206 = -1.*t1486*t1173*t7155;
  t10208 = t2580*t8790;
  t10220 = t1486*t1173*t7155;
  t10221 = -1.*t2580*t8790;
  t10246 = -1.*t1486*t3835*t7155;
  t10249 = t8790*t4609;
  t10274 = -1.*t544*t6658*t2580;
  t10674 = -1.*t2614*t7076;
  t10675 = -1.*t2690*t7105;
  t10676 = t10235 + t10674 + t10675;
  t10298 = t544*t6658*t4609;
  t10692 = t7076*t4628;
  t10697 = t7105*t4686;
  t10702 = t10259 + t10692 + t10697;
  t10314 = -1.*t544*t7353*t2580;
  t10716 = -1.*t3276*t7076;
  t10719 = -1.*t3358*t7105;
  t10729 = t544*t4025*t10676;
  t10323 = t544*t7353*t4609;
  t10730 = t4132*t7076;
  t10733 = t4064*t7105;
  t10744 = t544*t3259*t10702;
  t10779 = -0.135*t3182;
  t10780 = 0.07996*t1486*t3259;
  t10786 = t5024*t7044;
  t10787 = 0. + t9831 + t10786;
  t10788 = t544*t4025*t10787;
  t10791 = -1.*t6924*t3259;
  t10792 = -1.*t1486*t4025*t7044;
  t10836 = 0.07996*t1486*t4025;
  t10837 = -0.135*t3259;
  t10842 = -1.*t5024*t7044;
  t10843 = 0. + t10032 + t10842;
  t10844 = t544*t3259*t10843;
  t10845 = t3182*t6924;
  t10848 = t1486*t3259*t7044;
  t10895 = -1.*t6924*t1879;
  t10896 = -1.*t1986*t7044;
  t10897 = t10895 + t10235 + t10896;
  t10903 = t1173*t6924;
  t10904 = t7044*t4399;
  t10905 = t10903 + t10259 + t10904;
  t10909 = -1.*t3182*t6924;
  t10913 = -1.*t1486*t3259*t7044;
  t10916 = t544*t4025*t10897;
  t10918 = t6924*t3259;
  t10919 = t1486*t4025*t7044;
  t10923 = t544*t3259*t10905;
  t10761 = -1.*var2[7]*t1486*t1173;
  t10764 = var2[9]*t544*t3259;
  t10765 = var2[8]*t544*t3259;
  t10768 = t10761 + t10764 + t10765;
  t10771 = var2[9]*t544*t4025;
  t10772 = var2[8]*t544*t4025;
  t10776 = -1.*var2[7]*t1486*t3835;
  t10777 = t10771 + t10772 + t10776;
  t10778 = var2[7]*t544;
  t10941 = 0.135*t4025;
  t10942 = 0.1327*t3182;
  t10943 = t10941 + t10942;
  t10931 = t1173*t6608;
  t10926 = -1.*t6608*t1879;
  t10947 = t4025*t7020;
  t10917 = t1173*t7380;
  t10951 = t7020*t3835;
  t10952 = 0. + t10903 + t10951;
  t10953 = t3182*t10952;
  t10958 = -1.*t1173*t7020;
  t10959 = 0. + t10958 + t10895;
  t10960 = t3259*t10959;
  t10955 = -1.*t7020*t3259;
  t10910 = -1.*t7380*t1879;
  p_output1[0]=(-1.*t1403*t3674 - 1.*t135*t3778)*var2[3] + t1403*t2783*var2[4] + (-1.*t135*t2881 + t1403*t1546*t2997)*var2[5] + (-1.*t135*t2304 + t1403*t1546*t2396)*var2[6] + (-1.*t1264*t135 + t1403*t1766)*var2[7] + t3593*var2[8] + t3593*var2[9];
  p_output1[1]=(-1.*t1403*t4921 - 1.*t135*t4983)*var2[3] + t1403*t4785*var2[4] + (-1.*t135*t4829 + t1403*t1546*t4856)*var2[5] + (-1.*t135*t4473 + t1403*t1546*t4528)*var2[6] + (-1.*t135*t3852 + t1403*t3952)*var2[7] + t4298*var2[8] + t4298*var2[9];
  p_output1[2]=(-1.*t1403*t5454 - 1.*t135*t5501)*var2[3] + t1403*t5435*var2[4] + (-1.*t135*t5277 + t1403*t1546*t5316)*var2[5] + (-1.*t135*t5089 + t1403*t1546*t5151)*var2[6] + (-1.*t135*t5525 + t1403*t5615)*var2[7];
  p_output1[3]=0;
  p_output1[4]=0;
  p_output1[5]=0;
  p_output1[6]=(-1.*t135*t3674 + t1403*t3778)*var2[3] + t135*t2783*var2[4] + (t1403*t2881 + t135*t1546*t2997)*var2[5] + (t1403*t2304 + t135*t1546*t2396)*var2[6] + (t1264*t1403 + t135*t1766)*var2[7] + t5803*var2[8] + t5803*var2[9];
  p_output1[7]=(-1.*t135*t4921 + t1403*t4983)*var2[3] + t135*t4785*var2[4] + (t1403*t4829 + t135*t1546*t4856)*var2[5] + (t1403*t4473 + t135*t1546*t4528)*var2[6] + (t1403*t3852 + t135*t3952)*var2[7] + t5907*var2[8] + t5907*var2[9];
  p_output1[8]=(-1.*t135*t5454 + t1403*t5501)*var2[3] + t135*t5435*var2[4] + (t1403*t5277 + t135*t1546*t5316)*var2[5] + (t1403*t5089 + t135*t1546*t5151)*var2[6] + (t1403*t5525 + t135*t5615)*var2[7];
  p_output1[9]=0;
  p_output1[10]=0;
  p_output1[11]=0;
  p_output1[12]=t6287;
  p_output1[13]=t6389;
  p_output1[14]=t6486;
  p_output1[15]=0;
  p_output1[16]=0;
  p_output1[17]=0;
  p_output1[18]=(t6375*t7269 + t6459*t8180 + t6812*(t6459*t7198 + t5435*t7254 + t5501*t8528 + t6730*t8563) + t6730*(-1.*t6375*t7198 - 1.*t4785*t7254 - 1.*t4983*t8528 - 1.*t6812*t8563))*var2[4] + (t1460*t4856*t7269 + t1460*t5316*t8180 + t6812*(t1460*t5316*t7198 + t1546*t5316*t7254 + t8192 + t1546*t5501*t8193 + t1460*t6730*t8193 + t8202) + t6730*(-1.*t1460*t4856*t7198 - 1.*t1546*t4856*t7254 - 1.*t1546*t4983*t8193 - 1.*t1460*t6812*t8193 + t8290 + t8309))*var2[5] + (t1460*t4528*t7269 + t6812*(t1460*t5151*t7198 + t1546*t5151*t7254 + t7831 + t1546*t5501*t7849 + t1460*t6730*t7849 + t7912) + t6730*(-1.*t1460*t4528*t7198 - 1.*t1546*t4528*t7254 - 1.*t1546*t4983*t7849 - 1.*t1460*t6812*t7849 + t8012 + t8015) + t1460*t5151*t8180)*var2[6] + (t6304*t7269 + t6479*t8180 + t6812*(t6479*t7198 + t5615*t7254 + t8742 + t6730*t8819 + t5501*t8832 + t8844) + t6730*(-1.*t6304*t7198 - 1.*t3952*t7254 - 1.*t6812*t8819 - 1.*t4983*t8832 + t8910 + t8913))*var2[7] + (t7270 + t6812*(t7439 + t6730*t7508 + t5501*t7517) + t6730*(t7273 + t7279 + t7281 - 1.*t6812*t7508 - 1.*t4983*t7517 + t7555))*var2[8] + ((t6711 + t6730*t6762 + t5501*t6793)*t6812 + t7270 + t6730*(-1.*t4983*t6793 - 1.*t6762*t6812 + t7273 + t7278 + t7279 + t7281))*var2[9];
  p_output1[19]=((-1.*t6459*t7198 - 1.*t5435*t7254 - 1.*t5501*t8528 - 1.*t6730*t8563)*t8993 + t6730*(t6276*t7198 + t2783*t7254 + t3778*t8528 + t8563*t8993) + t6276*t9032 + t6459*t9199)*var2[4] + (t1460*t2997*t9032 + t1460*t5316*t9199 + t8993*(-1.*t1460*t5316*t7198 - 1.*t1546*t5316*t7254 - 1.*t1546*t5501*t8193 - 1.*t1460*t6730*t8193 + t9211 + t9243) + t6730*(t1460*t2997*t7198 + t1546*t2997*t7254 + t1546*t3778*t8193 + t1460*t8193*t8993 + t9268 + t9279))*var2[5] + (t1460*t2396*t9032 + t8993*(-1.*t1460*t5151*t7198 - 1.*t1546*t5151*t7254 - 1.*t1546*t5501*t7849 - 1.*t1460*t6730*t7849 + t9107 + t9135) + t6730*(t1460*t2396*t7198 + t1546*t2396*t7254 + t1546*t3778*t7849 + t1460*t7849*t8993 + t9160 + t9170) + t1460*t5151*t9199)*var2[6] + (t6148*t9032 + t6479*t9199 + t8993*(-1.*t6479*t7198 - 1.*t5615*t7254 - 1.*t6730*t8819 - 1.*t5501*t8832 + t9403 + t9418) + t6730*(t6148*t7198 + t1766*t7254 + t3778*t8832 + t8819*t8993 + t9430 + t9431))*var2[7] + (t9033 + t8993*(-1.*t6730*t7508 - 1.*t5501*t7517 + t9079) + t6730*(t3778*t7517 + t7508*t8993 + t9044 + t9057 + t9064 + t9086))*var2[8] + (t8993*(-1.*t6730*t6762 - 1.*t5501*t6793 + t8995) + t9033 + t6730*(t3778*t6793 + t6762*t8993 + t9039 + t9044 + t9057 + t9064))*var2[9];
  p_output1[20]=((t6375*t7198 + t4785*t7254 + t4983*t8528 + t6812*t8563)*t8993 + t6812*(-1.*t6276*t7198 - 1.*t2783*t7254 - 1.*t3778*t8528 - 1.*t8563*t8993) + t6375*t9513 + t6276*t9547)*var2[4] + (t1460*t4856*t9513 + t1460*t2997*t9547 + t6812*(-1.*t1460*t2997*t7198 - 1.*t1546*t2997*t7254 - 1.*t1546*t3778*t8193 - 1.*t1460*t8193*t8993 + t9625 + t9628) + t8993*(t1460*t4856*t7198 + t1546*t4856*t7254 + t1546*t4983*t8193 + t1460*t6812*t8193 + t9650 + t9651))*var2[5] + (t1460*t4528*t9513 + t1460*t2396*t9547 + t6812*(-1.*t1460*t2396*t7198 - 1.*t1546*t2396*t7254 - 1.*t1546*t3778*t7849 - 1.*t1460*t7849*t8993 + t9561 + t9562) + t8993*(t1460*t4528*t7198 + t1546*t4528*t7254 + t1546*t4983*t7849 + t1460*t6812*t7849 + t9583 + t9586))*var2[6] + (t6812*(-1.*t6148*t7198 - 1.*t1766*t7254 - 1.*t3778*t8832 - 1.*t8819*t8993 + t9477 + t9478) + t6304*t9513 + t8993*(t6304*t7198 + t3952*t7254 + t6812*t8819 + t4983*t8832 + t9518 + t9520) + t6148*t9547)*var2[7] + (t9712 + t9731 + t6812*(-1.*t3778*t7517 - 1.*t7508*t8993 + t9685 + t9691 + t9700 + t9736) + t8993*(t6812*t7508 + t4983*t7517 + t9714 + t9716 + t9720 + t9744))*var2[8] + (t6812*(-1.*t3778*t6793 - 1.*t6762*t8993 + t9683 + t9685 + t9691 + t9700) + t9712 + t8993*(t4983*t6793 + t6762*t6812 + t9714 + t9715 + t9716 + t9720) + t9731)*var2[9];
  p_output1[21]=t6287;
  p_output1[22]=t6389;
  p_output1[23]=t6486;
  p_output1[24]=(t4921*(t5316*t7196 + t8192 + t5372*t8193 + t8202) + t5454*(-1.*t4856*t7196 - 1.*t4727*t8193 + t8290 + t8309) + t4829*t9835 + t5277*t9936)*var2[5] + (t4921*(t5151*t7196 + t7831 + t5372*t7849 + t7912) + t5454*(-1.*t4528*t7196 - 1.*t4727*t7849 + t8012 + t8015) + t4473*t9835 + t5089*t9936)*var2[6] + (t3852*t9835 + t5525*t9936 + t4921*(t5556*t7196 + t8742 + t5372*t8814 + t8844 + t9989 + t9991) + t5454*(t10002 - 1.*t3906*t7196 - 1.*t4727*t8814 + t8910 + t8913 + t9999))*var2[7] + (t9840 + t4921*(t7439 + t5372*t7489 + t9871) + t5454*(t7273 - 1.*t4727*t7489 + t7555 + t9844 + t9856 + t9885))*var2[8] + (t4921*(t6711 + t5372*t6749 + t9822) + t9840 + t5454*(-1.*t4727*t6749 + t7273 + t7278 + t9844 + t9854 + t9856))*var2[9];
  p_output1[25]=(t10036*t2881 + t10119*t5277 + t3674*(-1.*t5316*t7196 - 1.*t5372*t8193 + t9211 + t9243) + t5454*(t2997*t7196 + t2762*t8193 + t9268 + t9279))*var2[5] + (t10036*t2304 + t10119*t5089 + t3674*(-1.*t5151*t7196 - 1.*t5372*t7849 + t9107 + t9135) + t5454*(t2396*t7196 + t2762*t7849 + t9160 + t9170))*var2[6] + (t10036*t1264 + t10119*t5525 + t3674*(t10186 + t10187 - 1.*t5556*t7196 - 1.*t5372*t8814 + t9403 + t9418) + t5454*(t10206 + t10208 + t1683*t7196 + t2762*t8814 + t9430 + t9431))*var2[7] + (t10039 + t3674*(t10072 - 1.*t5372*t7489 + t9079) + t5454*(t10046 + t10060 + t10081 + t2762*t7489 + t9044 + t9086))*var2[8] + (t10039 + t3674*(t10027 - 1.*t5372*t6749 + t8995) + t5454*(t10041 + t10046 + t10060 + t2762*t6749 + t9039 + t9044))*var2[9];
  p_output1[26]=(t10264*t2881 + t10241*t4829 + t4921*(-1.*t2997*t7196 - 1.*t2762*t8193 + t9625 + t9628) + t3674*(t4856*t7196 + t4727*t8193 + t9650 + t9651))*var2[5] + (t10264*t2304 + t10241*t4473 + t4921*(-1.*t2396*t7196 - 1.*t2762*t7849 + t9561 + t9562) + t3674*(t4528*t7196 + t4727*t7849 + t9583 + t9586))*var2[6] + (t10264*t1264 + t10241*t3852 + t4921*(t10220 + t10221 - 1.*t1683*t7196 - 1.*t2762*t8814 + t9477 + t9478) + t3674*(t10246 + t10249 + t3906*t7196 + t4727*t8814 + t9518 + t9520))*var2[7] + (t10289 + t10306 + t4921*(t10277 + t10283 + t10314 - 1.*t2762*t7489 + t9685 + t9736) + t3674*(t10292 + t10299 + t10323 + t4727*t7489 + t9714 + t9744))*var2[8] + (t10289 + t10306 + t4921*(t10274 + t10277 + t10283 - 1.*t2762*t6749 + t9683 + t9685) + t3674*(t10292 + t10298 + t10299 + t4727*t6749 + t9714 + t9715))*var2[9];
  p_output1[27]=t2881*var2[5] + t2304*var2[6] + t1264*var2[7] + t3436*var2[8] + t3436*var2[9];
  p_output1[28]=t4829*var2[5] + t4473*var2[6] + t3852*var2[7] + t4176*var2[8] + t4176*var2[9];
  p_output1[29]=t5277*var2[5] + t5089*var2[6] + t5525*var2[7];
  p_output1[30]=(t5420*(-1.*t4469*t7076 - 1.*t4429*t7105 - 1.*t4686*t7713 - 1.*t4628*t7804) + t4609*(-1.*t1210*t5024*t7076 + t495*t5024*t7105 + t5267*t7713 + t5258*t7804))*var2[6] + (-1.*t10417*t1486*t3835 + t544*(-1.*t4628*t7076 - 1.*t4686*t7105 + t9932) + t4609*(t1486*t495*t7076 + t1210*t1486*t7105 + t495*t5258*t8725 + t1210*t5267*t8725 + t9989 + t9991) + t5420*(t10002 - 1.*t3835*t495*t544*t7076 - 1.*t1210*t3835*t544*t7105 - 1.*t1210*t4686*t8725 - 1.*t4628*t495*t8725 + t9999))*var2[7] + (t10422 + t4609*(t5267*t7401 + t5258*t7429 + t9871) + t5420*(t10429 + t10430 - 1.*t4686*t7401 - 1.*t4628*t7429 + t9844 + t9885))*var2[8] + (t10422 + t4609*(t5258*t6665 + t5267*t6689 + t9822) + t5420*(t10429 + t10430 - 1.*t4628*t6665 - 1.*t4686*t6689 + t9844 + t9854))*var2[9];
  p_output1[31]=(t5420*(t2291*t7076 + t2037*t7105 + t2690*t7713 + t2614*t7804) + t2580*(t1210*t5024*t7076 - 1.*t495*t5024*t7105 - 1.*t5267*t7713 - 1.*t5258*t7804))*var2[6] + (-1.*t10535*t1173*t1486 + t544*(t10116 + t2614*t7076 + t2690*t7105) + t5420*(t10206 + t10208 + t1173*t495*t544*t7076 + t1173*t1210*t544*t7105 + t1210*t2690*t8725 + t2614*t495*t8725) + t2580*(t10186 + t10187 - 1.*t1486*t495*t7076 - 1.*t1210*t1486*t7105 - 1.*t495*t5258*t8725 - 1.*t1210*t5267*t8725))*var2[7] + (t10536 + t5420*(t10046 + t10081 + t10539 + t10540 + t2690*t7401 + t2614*t7429) + t2580*(t10072 - 1.*t5267*t7401 - 1.*t5258*t7429))*var2[8] + (t10536 + t5420*(t10041 + t10046 + t10539 + t10540 + t2614*t6665 + t2690*t6689) + t2580*(t10027 - 1.*t5258*t6665 - 1.*t5267*t6689))*var2[9];
  p_output1[32]=(t4609*(-1.*t2291*t7076 - 1.*t2037*t7105 - 1.*t2690*t7713 - 1.*t2614*t7804) + t2580*(t4469*t7076 + t4429*t7105 + t4686*t7713 + t4628*t7804))*var2[6] + (-1.*t10702*t1173*t1486 - 1.*t10676*t1486*t3835 + t4609*(t10220 + t10221 - 1.*t1173*t495*t544*t7076 - 1.*t1173*t1210*t544*t7105 - 1.*t1210*t2690*t8725 - 1.*t2614*t495*t8725) + t2580*(t10246 + t10249 + t3835*t495*t544*t7076 + t1210*t3835*t544*t7105 + t1210*t4686*t8725 + t4628*t495*t8725))*var2[7] + (t10729 + t10744 + t4609*(t10277 + t10314 + t10716 + t10719 - 1.*t2690*t7401 - 1.*t2614*t7429) + t2580*(t10292 + t10323 + t10730 + t10733 + t4686*t7401 + t4628*t7429))*var2[8] + (t10729 + t10744 + t4609*(t10274 + t10277 + t10716 + t10719 - 1.*t2614*t6665 - 1.*t2690*t6689) + t2580*(t10292 + t10298 + t10730 + t10733 + t4628*t6665 + t4686*t6689))*var2[9];
  p_output1[33]=t10768;
  p_output1[34]=t10777;
  p_output1[35]=t10778;
  p_output1[36]=(-1.*t10787*t1486*t3835 + 0.07996*t1173*t544 + t544*(-1.*t1173*t6924 - 1.*t4399*t7044 + t9932) + t4609*(t1486*t7044 + t5024*t8725 + t9989 + t9991) + t5420*(t10002 - 1.*t3835*t544*t7044 - 1.*t4399*t8725 + t9999))*var2[7] + (t10779 + t10780 + t10788 + t4609*(t1486*t5024*t7353 + t9871) + t5420*(t10791 + t10792 - 1.*t1486*t4399*t7353 - 1.*t1173*t7380 + t9844 + t9885))*var2[8] + (t10779 + t10780 + t10788 + t4609*(t1486*t5024*t6658 + t9822) + t5420*(t10791 + t10792 - 1.*t1173*t6608 - 1.*t1486*t4399*t6658 + t9844 + t9854))*var2[9];
  p_output1[37]=(-1.*t10843*t1173*t1486 + 0.07996*t3835*t544 + t544*(t10116 + t1879*t6924 + t1986*t7044) + t5420*(t10206 + t10208 + t1173*t544*t7044 + t1986*t8725) + t2580*(t10186 + t10187 - 1.*t1486*t7044 - 1.*t5024*t8725))*var2[7] + (t10836 + t10837 + t10844 + t2580*(t10072 - 1.*t1486*t5024*t7353) + t5420*(t10046 + t10081 + t10845 + t10848 + t1486*t1986*t7353 + t1879*t7380))*var2[8] + (t10836 + t10837 + t10844 + t5420*(t10041 + t10046 + t10845 + t10848 + t1879*t6608 + t1486*t1986*t6658) + t2580*(t10027 - 1.*t1486*t5024*t6658))*var2[9];
  p_output1[38]=(0.07996*t1486 - 1.*t10905*t1173*t1486 - 1.*t10897*t1486*t3835 + t4609*(t10220 + t10221 - 1.*t1173*t544*t7044 - 1.*t1986*t8725) + t2580*(t10246 + t10249 + t3835*t544*t7044 + t4399*t8725))*var2[7] + (t10916 + t10923 + t4609*(t10277 + t10314 + t10909 + t10910 + t10913 - 1.*t1486*t1986*t7353) + t2580*(t10292 + t10323 + t10917 + t10918 + t10919 + t1486*t4399*t7353))*var2[8] + (t10916 + t10923 + t4609*(t10274 + t10277 + t10909 + t10913 + t10926 - 1.*t1486*t1986*t6658) + t2580*(t10292 + t10298 + t10918 + t10919 + t10931 + t1486*t4399*t6658))*var2[9];
  p_output1[39]=t10768;
  p_output1[40]=t10777;
  p_output1[41]=t10778;
  p_output1[42]=0.0022999999999999965*t3259*var2[8] + 0.0022999999999999965*t3259*var2[9];
  p_output1[43]=t10943*var2[8] + t10943*var2[9];
  p_output1[44]=(t10953 + t10960 + t1173*(t10909 + t10910 + t10955 - 1.*t1173*t7353) + t1879*(t10917 + t10918 + t10947 + t3835*t7353))*var2[8] + (t10953 + t10960 + t1173*(t10909 + t10926 + t10955 - 1.*t1173*t6658) + t1879*(t10918 + t10931 + t10947 + t3835*t6658))*var2[9];
  p_output1[45]=t3182*var2[8] + t3182*var2[9];
  p_output1[46]=t3259*var2[8] + t3259*var2[9];
  p_output1[47]=0;
  p_output1[48]=(0.08055*t819 - 1.*t6517*t819 + t6918*t819 - 0.01004*t938 - 1.*t6561*t938 - 1.*t6895*t938)*var2[9];
  p_output1[49]=(0.01004*t819 + t6561*t819 + t6895*t819 + 0.08055*t938 - 1.*t6517*t938 + t6918*t938)*var2[9];
  p_output1[50]=0;
  p_output1[51]=0;
  p_output1[52]=0;
  p_output1[53]=0;
  p_output1[54]=0;
  p_output1[55]=0;
  p_output1[56]=0;
  p_output1[57]=0;
  p_output1[58]=0;
  p_output1[59]=0;
  p_output1[60]=0;
  p_output1[61]=0;
  p_output1[62]=0;
  p_output1[63]=0;
  p_output1[64]=0;
  p_output1[65]=0;
  p_output1[66]=0;
  p_output1[67]=0;
  p_output1[68]=0;
  p_output1[69]=0;
  p_output1[70]=0;
  p_output1[71]=0;
  p_output1[72]=0;
  p_output1[73]=0;
  p_output1[74]=0;
  p_output1[75]=0;
  p_output1[76]=0;
  p_output1[77]=0;
  p_output1[78]=0;
  p_output1[79]=0;
  p_output1[80]=0;
  p_output1[81]=0;
  p_output1[82]=0;
  p_output1[83]=0;
  p_output1[84]=0;
  p_output1[85]=0;
  p_output1[86]=0;
  p_output1[87]=0;
  p_output1[88]=0;
  p_output1[89]=0;
  p_output1[90]=0;
  p_output1[91]=0;
  p_output1[92]=0;
  p_output1[93]=0;
  p_output1[94]=0;
  p_output1[95]=0;
  p_output1[96]=0;
  p_output1[97]=0;
  p_output1[98]=0;
  p_output1[99]=0;
  p_output1[100]=0;
  p_output1[101]=0;
  p_output1[102]=0;
  p_output1[103]=0;
  p_output1[104]=0;
  p_output1[105]=0;
  p_output1[106]=0;
  p_output1[107]=0;
  p_output1[108]=0;
  p_output1[109]=0;
  p_output1[110]=0;
  p_output1[111]=0;
  p_output1[112]=0;
  p_output1[113]=0;
  p_output1[114]=0;
  p_output1[115]=0;
  p_output1[116]=0;
  p_output1[117]=0;
  p_output1[118]=0;
  p_output1[119]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 20 && ncols == 1) && 
      !(mrows == 1 && ncols == 20))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 20 && ncols == 1) && 
      !(mrows == 1 && ncols == 20))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 6, (mwSize) 20, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "dJb_LeftKnee_mex.hh"

namespace SymExpression
{

void dJb_LeftKnee_mex_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
