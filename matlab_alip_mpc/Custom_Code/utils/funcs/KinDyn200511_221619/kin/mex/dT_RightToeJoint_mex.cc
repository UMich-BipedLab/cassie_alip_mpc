/*
 * Automatically Generated from Mathematica.
 * Mon 11 May 2020 22:22:59 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t413;
  double t426;
  double t450;
  double t480;
  double t410;
  double t486;
  double t614;
  double t463;
  double t522;
  double t536;
  double t387;
  double t631;
  double t646;
  double t652;
  double t666;
  double t673;
  double t728;
  double t737;
  double t759;
  double t763;
  double t849;
  double t544;
  double t807;
  double t819;
  double t376;
  double t866;
  double t885;
  double t896;
  double t939;
  double t846;
  double t898;
  double t915;
  double t340;
  double t946;
  double t985;
  double t1005;
  double t1069;
  double t930;
  double t1011;
  double t1040;
  double t170;
  double t1093;
  double t1105;
  double t1107;
  double t27;
  double t1237;
  double t1235;
  double t1243;
  double t1260;
  double t1283;
  double t1311;
  double t1329;
  double t1268;
  double t1339;
  double t1410;
  double t1426;
  double t1440;
  double t1452;
  double t1416;
  double t1457;
  double t1479;
  double t1487;
  double t1494;
  double t1520;
  double t1480;
  double t1533;
  double t1540;
  double t1545;
  double t1546;
  double t1547;
  double t1166;
  double t1542;
  double t1564;
  double t1588;
  double t1597;
  double t1602;
  double t1609;
  double t1660;
  double t1676;
  double t1679;
  double t1681;
  double t1682;
  double t1701;
  double t1706;
  double t1712;
  double t1724;
  double t1726;
  double t1739;
  double t1764;
  double t1769;
  double t1771;
  double t1791;
  double t1768;
  double t1797;
  double t1799;
  double t1825;
  double t1834;
  double t1838;
  double t1893;
  double t1894;
  double t1917;
  double t1921;
  double t1914;
  double t1925;
  double t1939;
  double t1943;
  double t1948;
  double t1950;
  double t1940;
  double t1954;
  double t1955;
  double t1973;
  double t1979;
  double t1980;
  double t1959;
  double t1983;
  double t1995;
  double t2014;
  double t2015;
  double t2030;
  double t2136;
  double t2138;
  double t2144;
  double t2105;
  double t2148;
  double t2155;
  double t2172;
  double t2178;
  double t2183;
  double t2169;
  double t2186;
  double t2187;
  double t2212;
  double t2216;
  double t2221;
  double t2208;
  double t2223;
  double t2224;
  double t2229;
  double t2233;
  double t2252;
  double t2303;
  double t2304;
  double t2305;
  double t2307;
  double t2313;
  double t2327;
  double t2330;
  double t2320;
  double t2337;
  double t2339;
  double t2344;
  double t2347;
  double t2362;
  double t2415;
  double t2417;
  double t2455;
  double t2459;
  double t2465;
  double t2480;
  double t2490;
  double t2504;
  double t2565;
  double t2566;
  double t2568;
  double t2534;
  double t2591;
  double t2596;
  double t2599;
  double t2655;
  double t2663;
  double t2664;
  double t2682;
  double t2687;
  double t2688;
  double t2669;
  double t2692;
  double t2702;
  double t2718;
  double t2720;
  double t2725;
  double t2729;
  double t2737;
  double t2739;
  double t2708;
  double t2740;
  double t2743;
  double t2747;
  double t2752;
  double t2757;
  double t2746;
  double t2761;
  double t2779;
  double t2782;
  double t2784;
  double t2785;
  double t2781;
  double t2788;
  double t2789;
  double t2797;
  double t2808;
  double t2809;
  double t2888;
  double t2892;
  double t2894;
  double t2900;
  double t2903;
  double t2907;
  double t2911;
  double t2922;
  double t2924;
  double t2895;
  double t2927;
  double t2934;
  double t2940;
  double t2946;
  double t2947;
  double t2937;
  double t2948;
  double t2956;
  double t2960;
  double t2964;
  double t2965;
  double t2959;
  double t2966;
  double t2968;
  double t2986;
  double t2993;
  double t2995;
  double t3034;
  double t3036;
  double t3038;
  double t3046;
  double t3047;
  double t3054;
  double t3061;
  double t3072;
  double t3053;
  double t3075;
  double t3077;
  double t3087;
  double t3088;
  double t3090;
  double t3081;
  double t3097;
  double t3104;
  double t3114;
  double t3118;
  double t3119;
  double t3105;
  double t3138;
  double t3146;
  double t3160;
  double t3163;
  double t3169;
  double t3202;
  double t3206;
  double t3219;
  double t3225;
  double t3226;
  double t3231;
  double t3233;
  double t3237;
  double t3238;
  double t3254;
  double t3264;
  double t3268;
  double t3272;
  double t3275;
  double t3276;
  double t3269;
  double t3290;
  double t3291;
  double t3293;
  double t3296;
  double t3299;
  double t3343;
  double t3344;
  double t3347;
  double t3348;
  double t3346;
  double t3350;
  double t3352;
  double t3363;
  double t3364;
  double t3373;
  double t3362;
  double t3385;
  double t3403;
  double t3407;
  double t3433;
  double t3434;
  double t3404;
  double t3451;
  double t3452;
  double t3459;
  double t3464;
  double t3467;
  double t2637;
  double t2639;
  double t2642;
  double t3531;
  double t3536;
  double t3537;
  double t3527;
  double t3541;
  double t3550;
  double t3560;
  double t3561;
  double t3563;
  double t3551;
  double t3564;
  double t3573;
  double t3600;
  double t3606;
  double t3607;
  double t3595;
  double t3608;
  double t3609;
  double t3618;
  double t3623;
  double t3627;
  double t3662;
  double t3664;
  double t3676;
  double t3680;
  double t3687;
  double t3715;
  double t3718;
  double t3698;
  double t3734;
  double t3740;
  double t3742;
  double t3748;
  double t3755;
  double t3798;
  double t3800;
  double t3807;
  double t3817;
  double t3819;
  double t3832;
  double t3836;
  double t3846;
  double t3887;
  double t3892;
  double t3896;
  double t3862;
  double t3897;
  double t3898;
  double t3908;
  double t3972;
  double t3982;
  double t3991;
  double t3996;
  double t3998;
  double t4001;
  double t4022;
  double t4031;
  double t4036;
  double t4043;
  double t4048;
  double t4050;
  double t4041;
  double t4052;
  double t4059;
  double t4061;
  double t4071;
  double t4073;
  double t4148;
  double t4160;
  double t4161;
  double t4171;
  double t4173;
  double t4174;
  double t4164;
  double t4180;
  double t4182;
  double t4191;
  double t4192;
  double t4193;
  double t4190;
  double t4195;
  double t4200;
  double t4204;
  double t4209;
  double t4214;
  double t4202;
  double t4215;
  double t4225;
  double t4239;
  double t4243;
  double t4244;
  double t4227;
  double t4251;
  double t4256;
  double t4262;
  double t4265;
  double t4270;
  double t4271;
  double t4274;
  double t4278;
  double t4288;
  double t4292;
  double t4297;
  double t4285;
  double t4306;
  double t4312;
  double t4334;
  double t4346;
  double t4350;
  double t4317;
  double t4351;
  double t4354;
  double t4380;
  double t4381;
  double t4385;
  double t4378;
  double t4392;
  double t4395;
  double t4401;
  double t4403;
  double t4405;
  double t4461;
  double t4476;
  double t4477;
  double t4480;
  double t4485;
  double t4493;
  double t4495;
  double t4489;
  double t4499;
  double t4506;
  double t4535;
  double t4537;
  double t4544;
  double t4590;
  double t4595;
  double t4597;
  double t4603;
  double t4622;
  double t4631;
  double t4638;
  double t4641;
  double t4685;
  double t4687;
  double t4688;
  double t4653;
  double t4691;
  double t4693;
  double t4698;
  double t4744;
  double t4748;
  double t4752;
  double t4764;
  double t4768;
  double t4771;
  double t4774;
  double t4779;
  double t4780;
  double t4762;
  double t4781;
  double t4782;
  double t4800;
  double t4801;
  double t4815;
  double t4786;
  double t4818;
  double t4830;
  double t4839;
  double t4853;
  double t4855;
  double t4836;
  double t4857;
  double t4858;
  double t4867;
  double t4876;
  double t4877;
  double t1050;
  double t1117;
  double t1127;
  double t1170;
  double t1211;
  double t1222;
  double t1592;
  double t1614;
  double t1618;
  double t1633;
  double t1646;
  double t1647;
  double t1800;
  double t1839;
  double t1847;
  double t1860;
  double t1862;
  double t1864;
  double t2011;
  double t2039;
  double t2047;
  double t2054;
  double t2063;
  double t2065;
  double t2227;
  double t2254;
  double t2257;
  double t2274;
  double t2275;
  double t2280;
  double t2342;
  double t2371;
  double t2374;
  double t2388;
  double t2391;
  double t2394;
  double t2468;
  double t2516;
  double t2518;
  double t2535;
  double t2605;
  double t2607;
  double t5121;
  double t2794;
  double t2810;
  double t2816;
  double t2851;
  double t2852;
  double t2864;
  double t2982;
  double t2996;
  double t3003;
  double t3007;
  double t3011;
  double t3012;
  double t3154;
  double t3170;
  double t3172;
  double t3176;
  double t3178;
  double t3180;
  double t3292;
  double t3301;
  double t3310;
  double t3317;
  double t3318;
  double t3319;
  double t3453;
  double t3472;
  double t3482;
  double t3489;
  double t3493;
  double t3494;
  double t2645;
  double t2649;
  double t3613;
  double t3633;
  double t3636;
  double t3644;
  double t3645;
  double t3652;
  double t3741;
  double t3759;
  double t3771;
  double t3777;
  double t3778;
  double t3780;
  double t3821;
  double t3855;
  double t3860;
  double t3863;
  double t3913;
  double t3916;
  double t5286;
  double t3935;
  double t3939;
  double t3941;
  double t4060;
  double t4074;
  double t4090;
  double t4114;
  double t4116;
  double t4118;
  double t5338;
  double t5341;
  double t5344;
  double t4396;
  double t4411;
  double t4415;
  double t4425;
  double t4431;
  double t4447;
  double t4512;
  double t4548;
  double t4549;
  double t4563;
  double t4567;
  double t4574;
  double t4629;
  double t4645;
  double t4648;
  double t4654;
  double t4704;
  double t4706;
  double t5431;
  double t4729;
  double t4733;
  double t4735;
  double t4859;
  double t4879;
  double t4881;
  double t4906;
  double t4911;
  double t4926;
  double t5626;
  double t5627;
  double t5653;
  double t5659;
  double t5728;
  double t5731;
  double t5778;
  double t5781;
  double t5834;
  double t5838;
  double t5867;
  double t5869;
  double t5923;
  double t5930;
  double t4964;
  double t4965;
  double t4975;
  double t5690;
  double t5694;
  double t5699;
  double t5628;
  double t5633;
  double t5639;
  double t5738;
  double t5743;
  double t5744;
  double t5710;
  double t5711;
  double t5715;
  double t5757;
  double t5759;
  double t5772;
  double t5782;
  double t5783;
  double t5786;
  double t5807;
  double t5808;
  double t5815;
  double t5841;
  double t5843;
  double t5844;
  double t5855;
  double t5861;
  double t5863;
  double t5875;
  double t5880;
  double t5883;
  double t5891;
  double t5904;
  double t5913;
  double t5941;
  double t5943;
  double t5944;
  double t5957;
  double t5960;
  double t5961;
  double t4989;
  double t4996;
  double t5001;
  double t5682;
  double t5009;
  double t5021;
  double t5022;
  double t5037;
  double t5039;
  double t5041;
  double t5052;
  double t5053;
  double t5057;
  double t5081;
  double t5082;
  double t5083;
  double t5090;
  double t5098;
  double t5102;
  double t5128;
  double t5133;
  double t6755;
  double t5148;
  double t5154;
  double t5670;
  double t5685;
  double t5158;
  double t5163;
  double t5165;
  double t5182;
  double t5190;
  double t5199;
  double t5201;
  double t5212;
  double t5213;
  double t6138;
  double t6139;
  double t6143;
  double t6168;
  double t6172;
  double t5219;
  double t5223;
  double t5230;
  double t6290;
  double t6291;
  double t6299;
  double t6302;
  double t6304;
  double t5238;
  double t5239;
  double t5245;
  double t6417;
  double t6423;
  double t6437;
  double t6439;
  double t6442;
  double t5257;
  double t5261;
  double t5262;
  double t6528;
  double t6534;
  double t6537;
  double t6543;
  double t6551;
  double t5268;
  double t5275;
  double t5276;
  double t6639;
  double t6642;
  double t6644;
  double t6651;
  double t6654;
  double t5279;
  double t5280;
  double t5284;
  double t6722;
  double t6726;
  double t6727;
  double t6734;
  double t6735;
  double t5291;
  double t5294;
  double t6791;
  double t6795;
  double t6808;
  double t6812;
  double t6819;
  double t7533;
  double t5305;
  double t5306;
  double t5311;
  double t5322;
  double t5325;
  double t7647;
  double t7654;
  double t7658;
  double t7662;
  double t7664;
  double t7668;
  double t7669;
  double t7670;
  double t7672;
  double t7675;
  double t7676;
  double t7678;
  double t7680;
  double t7682;
  double t7683;
  double t7684;
  double t7687;
  double t5357;
  double t5359;
  double t5373;
  double t5380;
  double t5399;
  double t5400;
  double t5414;
  double t5418;
  double t5420;
  double t5441;
  double t5442;
  double t7808;
  double t5449;
  double t5451;
  double t5458;
  double t5471;
  double t5475;
  t413 = Cos(var1[3]);
  t426 = Cos(var1[4]);
  t450 = Cos(var1[5]);
  t480 = Sin(var1[13]);
  t410 = Cos(var1[13]);
  t486 = Sin(var1[5]);
  t614 = Cos(var1[15]);
  t463 = t410*t413*t426*t450;
  t522 = -1.*t413*t426*t480*t486;
  t536 = t463 + t522;
  t387 = Sin(var1[15]);
  t631 = Cos(var1[14]);
  t646 = Sin(var1[4]);
  t652 = -1.*t631*t413*t646;
  t666 = Sin(var1[14]);
  t673 = t413*t426*t450*t480;
  t728 = t410*t413*t426*t486;
  t737 = t673 + t728;
  t759 = t666*t737;
  t763 = t652 + t759;
  t849 = Cos(var1[16]);
  t544 = t387*t536;
  t807 = t614*t763;
  t819 = t544 + t807;
  t376 = Sin(var1[16]);
  t866 = t614*t536;
  t885 = -1.*t387*t763;
  t896 = t866 + t885;
  t939 = Cos(var1[17]);
  t846 = -1.*t376*t819;
  t898 = t849*t896;
  t915 = t846 + t898;
  t340 = Sin(var1[17]);
  t946 = t849*t819;
  t985 = t376*t896;
  t1005 = t946 + t985;
  t1069 = Cos(var1[18]);
  t930 = t340*t915;
  t1011 = t939*t1005;
  t1040 = t930 + t1011;
  t170 = Sin(var1[18]);
  t1093 = t939*t915;
  t1105 = -1.*t340*t1005;
  t1107 = t1093 + t1105;
  t27 = Cos(var1[19]);
  t1237 = Sin(var1[3]);
  t1235 = t413*t450*t646;
  t1243 = t1237*t486;
  t1260 = t1235 + t1243;
  t1283 = t450*t1237;
  t1311 = -1.*t413*t646*t486;
  t1329 = t1283 + t1311;
  t1268 = -1.*t480*t1260;
  t1339 = t410*t1329;
  t1410 = t1268 + t1339;
  t1426 = t410*t1260;
  t1440 = t480*t1329;
  t1452 = t1426 + t1440;
  t1416 = t387*t1410;
  t1457 = t614*t666*t1452;
  t1479 = t1416 + t1457;
  t1487 = t614*t1410;
  t1494 = -1.*t666*t387*t1452;
  t1520 = t1487 + t1494;
  t1480 = -1.*t376*t1479;
  t1533 = t849*t1520;
  t1540 = t1480 + t1533;
  t1545 = t849*t1479;
  t1546 = t376*t1520;
  t1547 = t1545 + t1546;
  t1166 = Sin(var1[19]);
  t1542 = t340*t1540;
  t1564 = t939*t1547;
  t1588 = t1542 + t1564;
  t1597 = t939*t1540;
  t1602 = -1.*t340*t1547;
  t1609 = t1597 + t1602;
  t1660 = -1.*t413*t426*t666;
  t1676 = t480*t1260;
  t1679 = -1.*t450*t1237;
  t1681 = t413*t646*t486;
  t1682 = t1679 + t1681;
  t1701 = t410*t1682;
  t1706 = t1676 + t1701;
  t1712 = t631*t1706;
  t1724 = t1660 + t1712;
  t1726 = -1.*t849*t387*t1724;
  t1739 = -1.*t614*t376*t1724;
  t1764 = t1726 + t1739;
  t1769 = t614*t849*t1724;
  t1771 = -1.*t387*t376*t1724;
  t1791 = t1769 + t1771;
  t1768 = t340*t1764;
  t1797 = t939*t1791;
  t1799 = t1768 + t1797;
  t1825 = t939*t1764;
  t1834 = -1.*t340*t1791;
  t1838 = t1825 + t1834;
  t1893 = -1.*t410*t1682;
  t1894 = t1268 + t1893;
  t1917 = -1.*t480*t1682;
  t1921 = t1426 + t1917;
  t1914 = t387*t1894;
  t1925 = t614*t666*t1921;
  t1939 = t1914 + t1925;
  t1943 = t614*t1894;
  t1948 = -1.*t666*t387*t1921;
  t1950 = t1943 + t1948;
  t1940 = -1.*t376*t1939;
  t1954 = t849*t1950;
  t1955 = t1940 + t1954;
  t1973 = t849*t1939;
  t1979 = t376*t1950;
  t1980 = t1973 + t1979;
  t1959 = t340*t1955;
  t1983 = t939*t1980;
  t1995 = t1959 + t1983;
  t2014 = t939*t1955;
  t2015 = -1.*t340*t1980;
  t2030 = t2014 + t2015;
  t2136 = t631*t413*t426;
  t2138 = t666*t1706;
  t2144 = t2136 + t2138;
  t2105 = -1.*t387*t1921;
  t2148 = -1.*t614*t2144;
  t2155 = t2105 + t2148;
  t2172 = t614*t1921;
  t2178 = -1.*t387*t2144;
  t2183 = t2172 + t2178;
  t2169 = t376*t2155;
  t2186 = t849*t2183;
  t2187 = t2169 + t2186;
  t2212 = t849*t2155;
  t2216 = -1.*t376*t2183;
  t2221 = t2212 + t2216;
  t2208 = -1.*t340*t2187;
  t2223 = t939*t2221;
  t2224 = t2208 + t2223;
  t2229 = t939*t2187;
  t2233 = t340*t2221;
  t2252 = t2229 + t2233;
  t2303 = t387*t1921;
  t2304 = t614*t2144;
  t2305 = t2303 + t2304;
  t2307 = -1.*t376*t2305;
  t2313 = t2307 + t2186;
  t2327 = -1.*t849*t2305;
  t2330 = t2327 + t2216;
  t2320 = -1.*t340*t2313;
  t2337 = t939*t2330;
  t2339 = t2320 + t2337;
  t2344 = t939*t2313;
  t2347 = t340*t2330;
  t2362 = t2344 + t2347;
  t2415 = t849*t2305;
  t2417 = t376*t2183;
  t2455 = t2415 + t2417;
  t2459 = -1.*t939*t2455;
  t2465 = t2320 + t2459;
  t2480 = -1.*t340*t2455;
  t2490 = t2344 + t2480;
  t2504 = t1069*t2490;
  t2565 = t340*t2313;
  t2566 = t939*t2455;
  t2568 = t2565 + t2566;
  t2534 = -1.*t170*t2490;
  t2591 = -1.*t170*t2568;
  t2596 = t2591 + t2504;
  t2599 = t1166*t2596;
  t2655 = -1.*t450*t1237*t646;
  t2663 = t413*t486;
  t2664 = t2655 + t2663;
  t2682 = -1.*t413*t450;
  t2687 = -1.*t1237*t646*t486;
  t2688 = t2682 + t2687;
  t2669 = t410*t2664;
  t2692 = -1.*t480*t2688;
  t2702 = t2669 + t2692;
  t2718 = -1.*t631*t426*t1237;
  t2720 = t480*t2664;
  t2725 = t410*t2688;
  t2729 = t2720 + t2725;
  t2737 = t666*t2729;
  t2739 = t2718 + t2737;
  t2708 = t387*t2702;
  t2740 = t614*t2739;
  t2743 = t2708 + t2740;
  t2747 = t614*t2702;
  t2752 = -1.*t387*t2739;
  t2757 = t2747 + t2752;
  t2746 = -1.*t376*t2743;
  t2761 = t849*t2757;
  t2779 = t2746 + t2761;
  t2782 = t849*t2743;
  t2784 = t376*t2757;
  t2785 = t2782 + t2784;
  t2781 = t340*t2779;
  t2788 = t939*t2785;
  t2789 = t2781 + t2788;
  t2797 = t939*t2779;
  t2808 = -1.*t340*t2785;
  t2809 = t2797 + t2808;
  t2888 = t410*t426*t450*t1237;
  t2892 = -1.*t426*t480*t1237*t486;
  t2894 = t2888 + t2892;
  t2900 = -1.*t631*t1237*t646;
  t2903 = t426*t450*t480*t1237;
  t2907 = t410*t426*t1237*t486;
  t2911 = t2903 + t2907;
  t2922 = t666*t2911;
  t2924 = t2900 + t2922;
  t2895 = t387*t2894;
  t2927 = t614*t2924;
  t2934 = t2895 + t2927;
  t2940 = t614*t2894;
  t2946 = -1.*t387*t2924;
  t2947 = t2940 + t2946;
  t2937 = -1.*t376*t2934;
  t2948 = t849*t2947;
  t2956 = t2937 + t2948;
  t2960 = t849*t2934;
  t2964 = t376*t2947;
  t2965 = t2960 + t2964;
  t2959 = t340*t2956;
  t2966 = t939*t2965;
  t2968 = t2959 + t2966;
  t2986 = t939*t2956;
  t2993 = -1.*t340*t2965;
  t2995 = t2986 + t2993;
  t3034 = t450*t1237*t646;
  t3036 = -1.*t413*t486;
  t3038 = t3034 + t3036;
  t3046 = -1.*t480*t3038;
  t3047 = t3046 + t2725;
  t3054 = t410*t3038;
  t3061 = t480*t2688;
  t3072 = t3054 + t3061;
  t3053 = t387*t3047;
  t3075 = t614*t666*t3072;
  t3077 = t3053 + t3075;
  t3087 = t614*t3047;
  t3088 = -1.*t666*t387*t3072;
  t3090 = t3087 + t3088;
  t3081 = -1.*t376*t3077;
  t3097 = t849*t3090;
  t3104 = t3081 + t3097;
  t3114 = t849*t3077;
  t3118 = t376*t3090;
  t3119 = t3114 + t3118;
  t3105 = t340*t3104;
  t3138 = t939*t3119;
  t3146 = t3105 + t3138;
  t3160 = t939*t3104;
  t3163 = -1.*t340*t3119;
  t3169 = t3160 + t3163;
  t3202 = -1.*t426*t666*t1237;
  t3206 = t480*t3038;
  t3219 = t413*t450;
  t3225 = t1237*t646*t486;
  t3226 = t3219 + t3225;
  t3231 = t410*t3226;
  t3233 = t3206 + t3231;
  t3237 = t631*t3233;
  t3238 = t3202 + t3237;
  t3254 = -1.*t849*t387*t3238;
  t3264 = -1.*t614*t376*t3238;
  t3268 = t3254 + t3264;
  t3272 = t614*t849*t3238;
  t3275 = -1.*t387*t376*t3238;
  t3276 = t3272 + t3275;
  t3269 = t340*t3268;
  t3290 = t939*t3276;
  t3291 = t3269 + t3290;
  t3293 = t939*t3268;
  t3296 = -1.*t340*t3276;
  t3299 = t3293 + t3296;
  t3343 = -1.*t410*t3226;
  t3344 = t3046 + t3343;
  t3347 = -1.*t480*t3226;
  t3348 = t3054 + t3347;
  t3346 = t387*t3344;
  t3350 = t614*t666*t3348;
  t3352 = t3346 + t3350;
  t3363 = t614*t3344;
  t3364 = -1.*t666*t387*t3348;
  t3373 = t3363 + t3364;
  t3362 = -1.*t376*t3352;
  t3385 = t849*t3373;
  t3403 = t3362 + t3385;
  t3407 = t849*t3352;
  t3433 = t376*t3373;
  t3434 = t3407 + t3433;
  t3404 = t340*t3403;
  t3451 = t939*t3434;
  t3452 = t3404 + t3451;
  t3459 = t939*t3403;
  t3464 = -1.*t340*t3434;
  t3467 = t3459 + t3464;
  t2637 = t1069*t2568;
  t2639 = t170*t2490;
  t2642 = t2637 + t2639;
  t3531 = t631*t426*t1237;
  t3536 = t666*t3233;
  t3537 = t3531 + t3536;
  t3527 = -1.*t387*t3348;
  t3541 = -1.*t614*t3537;
  t3550 = t3527 + t3541;
  t3560 = t614*t3348;
  t3561 = -1.*t387*t3537;
  t3563 = t3560 + t3561;
  t3551 = t376*t3550;
  t3564 = t849*t3563;
  t3573 = t3551 + t3564;
  t3600 = t849*t3550;
  t3606 = -1.*t376*t3563;
  t3607 = t3600 + t3606;
  t3595 = -1.*t340*t3573;
  t3608 = t939*t3607;
  t3609 = t3595 + t3608;
  t3618 = t939*t3573;
  t3623 = t340*t3607;
  t3627 = t3618 + t3623;
  t3662 = t387*t3348;
  t3664 = t614*t3537;
  t3676 = t3662 + t3664;
  t3680 = -1.*t376*t3676;
  t3687 = t3680 + t3564;
  t3715 = -1.*t849*t3676;
  t3718 = t3715 + t3606;
  t3698 = -1.*t340*t3687;
  t3734 = t939*t3718;
  t3740 = t3698 + t3734;
  t3742 = t939*t3687;
  t3748 = t340*t3718;
  t3755 = t3742 + t3748;
  t3798 = t849*t3676;
  t3800 = t376*t3563;
  t3807 = t3798 + t3800;
  t3817 = -1.*t939*t3807;
  t3819 = t3698 + t3817;
  t3832 = -1.*t340*t3807;
  t3836 = t3742 + t3832;
  t3846 = t1069*t3836;
  t3887 = t340*t3687;
  t3892 = t939*t3807;
  t3896 = t3887 + t3892;
  t3862 = -1.*t170*t3836;
  t3897 = -1.*t170*t3896;
  t3898 = t3897 + t3846;
  t3908 = t1166*t3898;
  t3972 = t666*t646;
  t3982 = t426*t450*t480;
  t3991 = t410*t426*t486;
  t3996 = t3982 + t3991;
  t3998 = t631*t3996;
  t4001 = t3972 + t3998;
  t4022 = -1.*t849*t387*t4001;
  t4031 = -1.*t614*t376*t4001;
  t4036 = t4022 + t4031;
  t4043 = t614*t849*t4001;
  t4048 = -1.*t387*t376*t4001;
  t4050 = t4043 + t4048;
  t4041 = t340*t4036;
  t4052 = t939*t4050;
  t4059 = t4041 + t4052;
  t4061 = t939*t4036;
  t4071 = -1.*t340*t4050;
  t4073 = t4061 + t4071;
  t4148 = -1.*t426*t450*t480;
  t4160 = -1.*t410*t426*t486;
  t4161 = t4148 + t4160;
  t4171 = t410*t426*t450;
  t4173 = -1.*t426*t480*t486;
  t4174 = t4171 + t4173;
  t4164 = t387*t4161;
  t4180 = t614*t666*t4174;
  t4182 = t4164 + t4180;
  t4191 = t614*t4161;
  t4192 = -1.*t666*t387*t4174;
  t4193 = t4191 + t4192;
  t4190 = -1.*t376*t4182;
  t4195 = t849*t4193;
  t4200 = t4190 + t4195;
  t4204 = t849*t4182;
  t4209 = t376*t4193;
  t4214 = t4204 + t4209;
  t4202 = t340*t4200;
  t4215 = t939*t4214;
  t4225 = t4202 + t4215;
  t4239 = t939*t4200;
  t4243 = -1.*t340*t4214;
  t4244 = t4239 + t4243;
  t4227 = -1.*t170*t4225;
  t4251 = t1069*t4244;
  t4256 = t4227 + t4251;
  t4262 = -1.*t27*t4256;
  t4265 = t1069*t4225;
  t4270 = t170*t4244;
  t4271 = t4265 + t4270;
  t4274 = t1166*t4271;
  t4278 = t4262 + t4274;
  t4288 = -1.*t631*t646;
  t4292 = t666*t3996;
  t4297 = t4288 + t4292;
  t4285 = -1.*t387*t4174;
  t4306 = -1.*t614*t4297;
  t4312 = t4285 + t4306;
  t4334 = t614*t4174;
  t4346 = -1.*t387*t4297;
  t4350 = t4334 + t4346;
  t4317 = t376*t4312;
  t4351 = t849*t4350;
  t4354 = t4317 + t4351;
  t4380 = t849*t4312;
  t4381 = -1.*t376*t4350;
  t4385 = t4380 + t4381;
  t4378 = -1.*t340*t4354;
  t4392 = t939*t4385;
  t4395 = t4378 + t4392;
  t4401 = t939*t4354;
  t4403 = t340*t4385;
  t4405 = t4401 + t4403;
  t4461 = t387*t4174;
  t4476 = t614*t4297;
  t4477 = t4461 + t4476;
  t4480 = -1.*t376*t4477;
  t4485 = t4480 + t4351;
  t4493 = -1.*t849*t4477;
  t4495 = t4493 + t4381;
  t4489 = -1.*t340*t4485;
  t4499 = t939*t4495;
  t4506 = t4489 + t4499;
  t4535 = t939*t4485;
  t4537 = t340*t4495;
  t4544 = t4535 + t4537;
  t4590 = t849*t4477;
  t4595 = t376*t4350;
  t4597 = t4590 + t4595;
  t4603 = -1.*t939*t4597;
  t4622 = t4489 + t4603;
  t4631 = -1.*t340*t4597;
  t4638 = t4535 + t4631;
  t4641 = t1069*t4638;
  t4685 = t340*t4485;
  t4687 = t939*t4597;
  t4688 = t4685 + t4687;
  t4653 = -1.*t170*t4638;
  t4691 = -1.*t170*t4688;
  t4693 = t4691 + t4641;
  t4698 = t1166*t4693;
  t4744 = -1.*t410*t450*t646;
  t4748 = t480*t646*t486;
  t4752 = t4744 + t4748;
  t4764 = -1.*t631*t426;
  t4768 = -1.*t450*t480*t646;
  t4771 = -1.*t410*t646*t486;
  t4774 = t4768 + t4771;
  t4779 = t666*t4774;
  t4780 = t4764 + t4779;
  t4762 = t387*t4752;
  t4781 = t614*t4780;
  t4782 = t4762 + t4781;
  t4800 = t614*t4752;
  t4801 = -1.*t387*t4780;
  t4815 = t4800 + t4801;
  t4786 = -1.*t376*t4782;
  t4818 = t849*t4815;
  t4830 = t4786 + t4818;
  t4839 = t849*t4782;
  t4853 = t376*t4815;
  t4855 = t4839 + t4853;
  t4836 = t340*t4830;
  t4857 = t939*t4855;
  t4858 = t4836 + t4857;
  t4867 = t939*t4830;
  t4876 = -1.*t340*t4855;
  t4877 = t4867 + t4876;
  t1050 = -1.*t170*t1040;
  t1117 = t1069*t1107;
  t1127 = t1050 + t1117;
  t1170 = t1069*t1040;
  t1211 = t170*t1107;
  t1222 = t1170 + t1211;
  t1592 = -1.*t170*t1588;
  t1614 = t1069*t1609;
  t1618 = t1592 + t1614;
  t1633 = t1069*t1588;
  t1646 = t170*t1609;
  t1647 = t1633 + t1646;
  t1800 = -1.*t170*t1799;
  t1839 = t1069*t1838;
  t1847 = t1800 + t1839;
  t1860 = t1069*t1799;
  t1862 = t170*t1838;
  t1864 = t1860 + t1862;
  t2011 = -1.*t170*t1995;
  t2039 = t1069*t2030;
  t2047 = t2011 + t2039;
  t2054 = t1069*t1995;
  t2063 = t170*t2030;
  t2065 = t2054 + t2063;
  t2227 = t170*t2224;
  t2254 = t1069*t2252;
  t2257 = t2227 + t2254;
  t2274 = t1069*t2224;
  t2275 = -1.*t170*t2252;
  t2280 = t2274 + t2275;
  t2342 = t170*t2339;
  t2371 = t1069*t2362;
  t2374 = t2342 + t2371;
  t2388 = t1069*t2339;
  t2391 = -1.*t170*t2362;
  t2394 = t2388 + t2391;
  t2468 = t170*t2465;
  t2516 = t2468 + t2504;
  t2518 = t1069*t2465;
  t2535 = t2518 + t2534;
  t2605 = -1.*t1069*t2568;
  t2607 = t2605 + t2534;
  t5121 = t27*t2596;
  t2794 = -1.*t170*t2789;
  t2810 = t1069*t2809;
  t2816 = t2794 + t2810;
  t2851 = t1069*t2789;
  t2852 = t170*t2809;
  t2864 = t2851 + t2852;
  t2982 = -1.*t170*t2968;
  t2996 = t1069*t2995;
  t3003 = t2982 + t2996;
  t3007 = t1069*t2968;
  t3011 = t170*t2995;
  t3012 = t3007 + t3011;
  t3154 = -1.*t170*t3146;
  t3170 = t1069*t3169;
  t3172 = t3154 + t3170;
  t3176 = t1069*t3146;
  t3178 = t170*t3169;
  t3180 = t3176 + t3178;
  t3292 = -1.*t170*t3291;
  t3301 = t1069*t3299;
  t3310 = t3292 + t3301;
  t3317 = t1069*t3291;
  t3318 = t170*t3299;
  t3319 = t3317 + t3318;
  t3453 = -1.*t170*t3452;
  t3472 = t1069*t3467;
  t3482 = t3453 + t3472;
  t3489 = t1069*t3452;
  t3493 = t170*t3467;
  t3494 = t3489 + t3493;
  t2645 = t27*t2642;
  t2649 = t2599 + t2645;
  t3613 = t170*t3609;
  t3633 = t1069*t3627;
  t3636 = t3613 + t3633;
  t3644 = t1069*t3609;
  t3645 = -1.*t170*t3627;
  t3652 = t3644 + t3645;
  t3741 = t170*t3740;
  t3759 = t1069*t3755;
  t3771 = t3741 + t3759;
  t3777 = t1069*t3740;
  t3778 = -1.*t170*t3755;
  t3780 = t3777 + t3778;
  t3821 = t170*t3819;
  t3855 = t3821 + t3846;
  t3860 = t1069*t3819;
  t3863 = t3860 + t3862;
  t3913 = -1.*t1069*t3896;
  t3916 = t3913 + t3862;
  t5286 = t27*t3898;
  t3935 = t1069*t3896;
  t3939 = t170*t3836;
  t3941 = t3935 + t3939;
  t4060 = -1.*t170*t4059;
  t4074 = t1069*t4073;
  t4090 = t4060 + t4074;
  t4114 = t1069*t4059;
  t4116 = t170*t4073;
  t4118 = t4114 + t4116;
  t5338 = t1166*t4256;
  t5341 = t27*t4271;
  t5344 = t5338 + t5341;
  t4396 = t170*t4395;
  t4411 = t1069*t4405;
  t4415 = t4396 + t4411;
  t4425 = t1069*t4395;
  t4431 = -1.*t170*t4405;
  t4447 = t4425 + t4431;
  t4512 = t170*t4506;
  t4548 = t1069*t4544;
  t4549 = t4512 + t4548;
  t4563 = t1069*t4506;
  t4567 = -1.*t170*t4544;
  t4574 = t4563 + t4567;
  t4629 = t170*t4622;
  t4645 = t4629 + t4641;
  t4648 = t1069*t4622;
  t4654 = t4648 + t4653;
  t4704 = -1.*t1069*t4688;
  t4706 = t4704 + t4653;
  t5431 = t27*t4693;
  t4729 = t1069*t4688;
  t4733 = t170*t4638;
  t4735 = t4729 + t4733;
  t4859 = -1.*t170*t4858;
  t4879 = t1069*t4877;
  t4881 = t4859 + t4879;
  t4906 = t1069*t4858;
  t4911 = t170*t4877;
  t4926 = t4906 + t4911;
  t5626 = -1.*t410;
  t5627 = 1. + t5626;
  t5653 = -1.*t631;
  t5659 = 1. + t5653;
  t5728 = -1.*t614;
  t5731 = 1. + t5728;
  t5778 = -1.*t849;
  t5781 = 1. + t5778;
  t5834 = -1.*t939;
  t5838 = 1. + t5834;
  t5867 = -1.*t1069;
  t5869 = 1. + t5867;
  t5923 = -1.*t27;
  t5930 = 1. + t5923;
  t4964 = t1166*t1127;
  t4965 = t27*t1222;
  t4975 = t4964 + t4965;
  t5690 = -0.135*t5627;
  t5694 = 0.07996*t480;
  t5699 = 0. + t5690 + t5694;
  t5628 = 0.07996*t5627;
  t5633 = 0.135*t480;
  t5639 = 0. + t5628 + t5633;
  t5738 = -0.01004*t5731;
  t5743 = 0.08055*t387;
  t5744 = 0. + t5738 + t5743;
  t5710 = -0.135*t5659;
  t5711 = 0.08055*t666;
  t5715 = 0. + t5710 + t5711;
  t5757 = -0.08055*t5731;
  t5759 = -0.01004*t387;
  t5772 = 0. + t5757 + t5759;
  t5782 = -0.08055*t5781;
  t5783 = -0.13004*t376;
  t5786 = 0. + t5782 + t5783;
  t5807 = -0.13004*t5781;
  t5808 = 0.08055*t376;
  t5815 = 0. + t5807 + t5808;
  t5841 = -0.19074*t5838;
  t5843 = 0.03315*t340;
  t5844 = 0. + t5841 + t5843;
  t5855 = -0.03315*t5838;
  t5861 = -0.19074*t340;
  t5863 = 0. + t5855 + t5861;
  t5875 = -0.01315*t5869;
  t5880 = -0.62554*t170;
  t5883 = 0. + t5875 + t5880;
  t5891 = -0.62554*t5869;
  t5904 = 0.01315*t170;
  t5913 = 0. + t5891 + t5904;
  t5941 = -1.03354*t5930;
  t5943 = 0.05315*t1166;
  t5944 = 0. + t5941 + t5943;
  t5957 = -0.05315*t5930;
  t5960 = -1.03354*t1166;
  t5961 = 0. + t5957 + t5960;
  t4989 = t1166*t1618;
  t4996 = t27*t1647;
  t5001 = t4989 + t4996;
  t5682 = -0.135*t666;
  t5009 = t1166*t1847;
  t5021 = t27*t1864;
  t5022 = t5009 + t5021;
  t5037 = t1166*t2047;
  t5039 = t27*t2065;
  t5041 = t5037 + t5039;
  t5052 = t27*t2257;
  t5053 = t1166*t2280;
  t5057 = t5052 + t5053;
  t5081 = t27*t2374;
  t5082 = t1166*t2394;
  t5083 = t5081 + t5082;
  t5090 = t27*t2516;
  t5098 = t1166*t2535;
  t5102 = t5090 + t5098;
  t5128 = t1166*t2607;
  t5133 = t5121 + t5128;
  t6755 = -1.*t1166*t2596;
  t5148 = -1.*t1166*t2642;
  t5154 = t5121 + t5148;
  t5670 = -0.08055*t5659;
  t5685 = 0. + t5670 + t5682;
  t5158 = t1166*t2816;
  t5163 = t27*t2864;
  t5165 = t5158 + t5163;
  t5182 = t1166*t3003;
  t5190 = t27*t3012;
  t5199 = t5182 + t5190;
  t5201 = t1166*t3172;
  t5212 = t27*t3180;
  t5213 = t5201 + t5212;
  t6138 = -0.135*t631;
  t6139 = -0.08055*t666;
  t6143 = t6138 + t6139;
  t6168 = 0.08055*t631;
  t6172 = t6168 + t5682;
  t5219 = t1166*t3310;
  t5223 = t27*t3319;
  t5230 = t5219 + t5223;
  t6290 = 0.135*t410;
  t6291 = t6290 + t5694;
  t6299 = 0.07996*t410;
  t6302 = -0.135*t480;
  t6304 = t6299 + t6302;
  t5238 = t1166*t3482;
  t5239 = t27*t3494;
  t5245 = t5238 + t5239;
  t6417 = 0.08055*t614;
  t6423 = t6417 + t5759;
  t6437 = -0.01004*t614;
  t6439 = -0.08055*t387;
  t6442 = t6437 + t6439;
  t5257 = t27*t3636;
  t5261 = t1166*t3652;
  t5262 = t5257 + t5261;
  t6528 = -0.13004*t849;
  t6534 = -0.08055*t376;
  t6537 = t6528 + t6534;
  t6543 = 0.08055*t849;
  t6551 = t6543 + t5783;
  t5268 = t27*t3771;
  t5275 = t1166*t3780;
  t5276 = t5268 + t5275;
  t6639 = 0.03315*t939;
  t6642 = t6639 + t5861;
  t6644 = -0.19074*t939;
  t6651 = -0.03315*t340;
  t6654 = t6644 + t6651;
  t5279 = t27*t3855;
  t5280 = t1166*t3863;
  t5284 = t5279 + t5280;
  t6722 = -0.62554*t1069;
  t6726 = -0.01315*t170;
  t6727 = t6722 + t6726;
  t6734 = 0.01315*t1069;
  t6735 = t6734 + t5880;
  t5291 = t1166*t3916;
  t5294 = t5286 + t5291;
  t6791 = 0.05315*t27;
  t6795 = t6791 + t5960;
  t6808 = -1.03354*t27;
  t6812 = -0.05315*t1166;
  t6819 = t6808 + t6812;
  t7533 = -1.*t1166*t3898;
  t5305 = -1.*t1166*t3941;
  t5306 = t5286 + t5305;
  t5311 = t1166*t4090;
  t5322 = t27*t4118;
  t5325 = t5311 + t5322;
  t7647 = t5744*t4161;
  t7654 = -0.1305*t631*t4174;
  t7658 = t5715*t4174;
  t7662 = t666*t5772*t4174;
  t7664 = t5786*t4182;
  t7668 = t5815*t4193;
  t7669 = t5844*t4200;
  t7670 = t5863*t4214;
  t7672 = t5883*t4225;
  t7675 = t5913*t4244;
  t7676 = t5944*t4256;
  t7678 = t5961*t4271;
  t7680 = -0.05315*t5344;
  t7682 = t27*t4256;
  t7683 = -1.*t1166*t4271;
  t7684 = t7682 + t7683;
  t7687 = -1.03354*t7684;
  t5357 = t27*t4415;
  t5359 = t1166*t4447;
  t5373 = t5357 + t5359;
  t5380 = t27*t4549;
  t5399 = t1166*t4574;
  t5400 = t5380 + t5399;
  t5414 = t27*t4645;
  t5418 = t1166*t4654;
  t5420 = t5414 + t5418;
  t5441 = t1166*t4706;
  t5442 = t5431 + t5441;
  t7808 = -1.*t1166*t4693;
  t5449 = -1.*t1166*t4735;
  t5451 = t5431 + t5449;
  t5458 = t1166*t4881;
  t5471 = t27*t4926;
  t5475 = t5458 + t5471;
  p_output1[0]=(-1.*t27*t2816 + t1166*t2864)*var2[3] + (t1166*t1222 - 1.*t1127*t27)*var2[4] + (t1166*t1647 - 1.*t1618*t27)*var2[5] + (t1166*t2065 - 1.*t2047*t27)*var2[13] + (t1166*t1864 - 1.*t1847*t27)*var2[14] + (t1166*t2257 - 1.*t2280*t27)*var2[15] + (t1166*t2374 - 1.*t2394*t27)*var2[16] + (t1166*t2516 - 1.*t2535*t27)*var2[17] + (t2599 - 1.*t2607*t27)*var2[18] + t2649*var2[19];
  p_output1[1]=(t1166*t2642 - 1.*t2596*t27)*var2[3] + (-1.*t27*t3003 + t1166*t3012)*var2[4] + (-1.*t27*t3172 + t1166*t3180)*var2[5] + (-1.*t27*t3482 + t1166*t3494)*var2[13] + (-1.*t27*t3310 + t1166*t3319)*var2[14] + (t1166*t3636 - 1.*t27*t3652)*var2[15] + (t1166*t3771 - 1.*t27*t3780)*var2[16] + (t1166*t3855 - 1.*t27*t3863)*var2[17] + (t3908 - 1.*t27*t3916)*var2[18] + (t3908 + t27*t3941)*var2[19];
  p_output1[2]=(-1.*t27*t4881 + t1166*t4926)*var2[4] + t4278*var2[5] + t4278*var2[13] + (-1.*t27*t4090 + t1166*t4118)*var2[14] + (t1166*t4415 - 1.*t27*t4447)*var2[15] + (t1166*t4549 - 1.*t27*t4574)*var2[16] + (t1166*t4645 - 1.*t27*t4654)*var2[17] + (t4698 - 1.*t27*t4706)*var2[18] + (t4698 + t27*t4735)*var2[19];
  p_output1[3]=0;
  p_output1[4]=t5165*var2[3] + t4975*var2[4] + t5001*var2[5] + t5041*var2[13] + t5022*var2[14] + t5057*var2[15] + t5083*var2[16] + t5102*var2[17] + t5133*var2[18] + t5154*var2[19];
  p_output1[5]=t2649*var2[3] + t5199*var2[4] + t5213*var2[5] + t5245*var2[13] + t5230*var2[14] + t5262*var2[15] + t5276*var2[16] + t5284*var2[17] + t5294*var2[18] + t5306*var2[19];
  p_output1[6]=t5475*var2[4] + t5344*var2[5] + t5344*var2[13] + t5325*var2[14] + t5373*var2[15] + t5400*var2[16] + t5420*var2[17] + t5442*var2[18] + t5451*var2[19];
  p_output1[7]=0;
  p_output1[8]=(t3202 - 1.*t2729*t631)*var2[3] + (-1.*t413*t646*t666 - 1.*t631*t737)*var2[4] - 1.*t1452*t631*var2[5] - 1.*t1921*t631*var2[13] + t2144*var2[14];
  p_output1[9]=(-1.*t1706*t631 + t413*t426*t666)*var2[3] + (-1.*t2911*t631 - 1.*t1237*t646*t666)*var2[4] - 1.*t3072*t631*var2[5] - 1.*t3348*t631*var2[13] + t3537*var2[14];
  p_output1[10]=(-1.*t4774*t631 - 1.*t426*t666)*var2[4] - 1.*t4174*t631*var2[5] - 1.*t4174*t631*var2[13] + t4297*var2[14];
  p_output1[11]=0;
  p_output1[12]=var2[0] + (-1.03354*(t27*t2816 - 1.*t1166*t2864) - 0.05315*t5165 + t2664*t5639 - 1.*t1237*t426*t5685 + t2688*t5699 + t2729*t5715 + t2702*t5744 + t2739*t5772 + t2743*t5786 + t2757*t5815 + t2779*t5844 + t2785*t5863 + t2789*t5883 + t2809*t5913 + t2816*t5944 + t2864*t5961 - 0.1305*(t2729*t631 + t1237*t426*t666))*var2[3] + (-1.03354*(-1.*t1166*t1222 + t1127*t27) - 0.05315*t4975 + t413*t426*t450*t5639 + t413*t426*t486*t5699 + t536*t5744 + t1005*t5863 + t1040*t5883 + t1107*t5913 + t1127*t5944 + t1222*t5961 - 1.*t413*t5685*t646 + t5715*t737 - 0.1305*(t413*t646*t666 + t631*t737) + t5772*t763 + t5786*t819 + t5815*t896 + t5844*t915)*var2[4] + (-1.03354*(-1.*t1166*t1647 + t1618*t27) - 0.05315*t5001 + t1329*t5639 + t1260*t5699 + t1452*t5715 + t1410*t5744 + t1479*t5786 + t1520*t5815 + t1540*t5844 + t1547*t5863 + t1588*t5883 + t1609*t5913 + t1618*t5944 + t1647*t5961 - 0.1305*t1452*t631 + t1452*t5772*t666)*var2[5] + (-1.03354*(-1.*t1166*t2065 + t2047*t27) - 0.05315*t5041 + t1921*t5715 + t1894*t5744 + t1939*t5786 + t1950*t5815 + t1955*t5844 + t1980*t5863 + t1995*t5883 + t2030*t5913 + t2047*t5944 + t2065*t5961 + t1260*t6291 + t1682*t6304 - 0.1305*t1921*t631 + t1921*t5772*t666)*var2[13] + (-1.03354*(-1.*t1166*t1864 + t1847*t27) - 0.05315*t5022 + t1724*t5772 - 1.*t1724*t387*t5815 + t1764*t5844 + t1791*t5863 + t1799*t5883 + t1838*t5913 + t1847*t5944 + t1864*t5961 + t1724*t5786*t614 + t413*t426*t6143 + t1706*t6172 - 0.1305*(-1.*t413*t426*t631 - 1.*t1706*t666))*var2[14] + (-1.03354*(-1.*t1166*t2257 + t2280*t27) - 0.05315*t5057 + t2183*t5786 + t2155*t5815 + t2221*t5844 + t2187*t5863 + t2252*t5883 + t2224*t5913 + t2280*t5944 + t2257*t5961 + t1921*t6423 + t2144*t6442)*var2[15] + (-1.03354*(-1.*t1166*t2374 + t2394*t27) - 0.05315*t5083 + t2330*t5844 + t2313*t5863 + t2362*t5883 + t2339*t5913 + t2394*t5944 + t2374*t5961 + t2305*t6537 + t2183*t6551)*var2[16] + (-1.03354*(-1.*t1166*t2516 + t2535*t27) - 0.05315*t5102 + t2490*t5883 + t2465*t5913 + t2535*t5944 + t2516*t5961 + t2313*t6642 + t2455*t6654)*var2[17] + (-0.05315*t5133 + t2607*t5944 + t2596*t5961 + t2568*t6727 + t2490*t6735 - 1.03354*(t2607*t27 + t6755))*var2[18] + (-0.05315*t5154 - 1.03354*(-1.*t2642*t27 + t6755) + t2596*t6795 + t2642*t6819)*var2[19];
  p_output1[13]=var2[1] + (-0.1305*t1724 - 0.05315*t2649 - 1.03354*t5154 + t1260*t5639 + t413*t426*t5685 + t1682*t5699 + t1706*t5715 + t1921*t5744 + t2144*t5772 + t2305*t5786 + t2183*t5815 + t2313*t5844 + t2455*t5863 + t2568*t5883 + t2490*t5913 + t2596*t5944 + t2642*t5961)*var2[3] + (-1.03354*(t27*t3003 - 1.*t1166*t3012) - 0.05315*t5199 + t1237*t426*t450*t5639 + t1237*t426*t486*t5699 + t2911*t5715 + t2894*t5744 + t2924*t5772 + t2934*t5786 + t2947*t5815 + t2956*t5844 + t2965*t5863 + t2968*t5883 + t2995*t5913 + t3003*t5944 + t3012*t5961 - 1.*t1237*t5685*t646 - 0.1305*(t2911*t631 + t1237*t646*t666))*var2[4] + (-1.03354*(t27*t3172 - 1.*t1166*t3180) - 0.05315*t5213 + t2688*t5639 + t3038*t5699 + t3072*t5715 + t3047*t5744 + t3077*t5786 + t3090*t5815 + t3104*t5844 + t3119*t5863 + t3146*t5883 + t3169*t5913 + t3172*t5944 + t3180*t5961 - 0.1305*t3072*t631 + t3072*t5772*t666)*var2[5] + (-1.03354*(t27*t3482 - 1.*t1166*t3494) - 0.05315*t5245 + t3348*t5715 + t3344*t5744 + t3352*t5786 + t3373*t5815 + t3403*t5844 + t3434*t5863 + t3452*t5883 + t3467*t5913 + t3482*t5944 + t3494*t5961 + t3038*t6291 + t3226*t6304 - 0.1305*t3348*t631 + t3348*t5772*t666)*var2[13] + (-1.03354*(t27*t3310 - 1.*t1166*t3319) - 0.05315*t5230 + t3238*t5772 - 1.*t3238*t387*t5815 + t3268*t5844 + t3276*t5863 + t3291*t5883 + t3299*t5913 + t3310*t5944 + t3319*t5961 + t3238*t5786*t614 + t1237*t426*t6143 + t3233*t6172 - 0.1305*(t2718 - 1.*t3233*t666))*var2[14] + (-1.03354*(-1.*t1166*t3636 + t27*t3652) - 0.05315*t5262 + t3563*t5786 + t3550*t5815 + t3607*t5844 + t3573*t5863 + t3627*t5883 + t3609*t5913 + t3652*t5944 + t3636*t5961 + t3348*t6423 + t3537*t6442)*var2[15] + (-1.03354*(-1.*t1166*t3771 + t27*t3780) - 0.05315*t5276 + t3718*t5844 + t3687*t5863 + t3755*t5883 + t3740*t5913 + t3780*t5944 + t3771*t5961 + t3676*t6537 + t3563*t6551)*var2[16] + (-1.03354*(-1.*t1166*t3855 + t27*t3863) - 0.05315*t5284 + t3836*t5883 + t3819*t5913 + t3863*t5944 + t3855*t5961 + t3687*t6642 + t3807*t6654)*var2[17] + (-0.05315*t5294 + t3916*t5944 + t3898*t5961 + t3896*t6727 + t3836*t6735 - 1.03354*(t27*t3916 + t7533))*var2[18] + (-0.05315*t5306 + t3898*t6795 + t3941*t6819 - 1.03354*(-1.*t27*t3941 + t7533))*var2[19];
  p_output1[14]=var2[2] + (-1.03354*(t27*t4881 - 1.*t1166*t4926) - 0.05315*t5475 - 1.*t426*t5685 + t4774*t5715 + t4752*t5744 + t4780*t5772 + t4782*t5786 + t4815*t5815 + t4830*t5844 + t4855*t5863 + t4858*t5883 + t4877*t5913 + t4881*t5944 + t4926*t5961 - 1.*t450*t5639*t646 - 1.*t486*t5699*t646 - 0.1305*(t4774*t631 + t426*t666))*var2[4] + (-1.*t426*t486*t5639 + t426*t450*t5699 + t7647 + t7654 + t7658 + t7662 + t7664 + t7668 + t7669 + t7670 + t7672 + t7675 + t7676 + t7678 + t7680 + t7687)*var2[5] + (t426*t450*t6291 + t426*t486*t6304 + t7647 + t7654 + t7658 + t7662 + t7664 + t7668 + t7669 + t7670 + t7672 + t7675 + t7676 + t7678 + t7680 + t7687)*var2[13] + (-1.03354*(t27*t4090 - 1.*t1166*t4118) - 0.05315*t5325 + t4001*t5772 - 1.*t387*t4001*t5815 + t4036*t5844 + t4050*t5863 + t4059*t5883 + t4073*t5913 + t4090*t5944 + t4118*t5961 + t4001*t5786*t614 + t3996*t6172 - 1.*t6143*t646 - 0.1305*(t631*t646 - 1.*t3996*t666))*var2[14] + (-1.03354*(-1.*t1166*t4415 + t27*t4447) - 0.05315*t5373 + t4350*t5786 + t4312*t5815 + t4385*t5844 + t4354*t5863 + t4405*t5883 + t4395*t5913 + t4447*t5944 + t4415*t5961 + t4174*t6423 + t4297*t6442)*var2[15] + (-1.03354*(-1.*t1166*t4549 + t27*t4574) - 0.05315*t5400 + t4495*t5844 + t4485*t5863 + t4544*t5883 + t4506*t5913 + t4574*t5944 + t4549*t5961 + t4477*t6537 + t4350*t6551)*var2[16] + (-1.03354*(-1.*t1166*t4645 + t27*t4654) - 0.05315*t5420 + t4638*t5883 + t4622*t5913 + t4654*t5944 + t4645*t5961 + t4485*t6642 + t4597*t6654)*var2[17] + (-0.05315*t5442 + t4706*t5944 + t4693*t5961 + t4688*t6727 + t4638*t6735 - 1.03354*(t27*t4706 + t7808))*var2[18] + (-0.05315*t5451 + t4693*t6795 + t4735*t6819 - 1.03354*(-1.*t27*t4735 + t7808))*var2[19];
  p_output1[15]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 20 && ncols == 1) && 
      !(mrows == 1 && ncols == 20))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 20 && ncols == 1) && 
      !(mrows == 1 && ncols == 20))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 4, (mwSize) 4, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "dT_RightToeJoint_mex.hh"

namespace SymExpression
{

void dT_RightToeJoint_mex_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
