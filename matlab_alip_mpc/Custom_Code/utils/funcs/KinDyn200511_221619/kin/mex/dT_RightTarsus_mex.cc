/*
 * Automatically Generated from Mathematica.
 * Mon 11 May 2020 22:30:14 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t505;
  double t528;
  double t557;
  double t625;
  double t465;
  double t659;
  double t741;
  double t609;
  double t682;
  double t701;
  double t446;
  double t762;
  double t780;
  double t805;
  double t809;
  double t831;
  double t852;
  double t859;
  double t864;
  double t873;
  double t915;
  double t738;
  double t880;
  double t886;
  double t429;
  double t930;
  double t980;
  double t996;
  double t1067;
  double t902;
  double t1015;
  double t1030;
  double t414;
  double t1081;
  double t1090;
  double t1091;
  double t100;
  double t1264;
  double t1259;
  double t1293;
  double t1297;
  double t1327;
  double t1331;
  double t1346;
  double t1319;
  double t1349;
  double t1376;
  double t1382;
  double t1425;
  double t1438;
  double t1380;
  double t1450;
  double t1454;
  double t1465;
  double t1473;
  double t1486;
  double t1183;
  double t1457;
  double t1514;
  double t1515;
  double t1520;
  double t1523;
  double t1527;
  double t1628;
  double t1645;
  double t1653;
  double t1657;
  double t1658;
  double t1677;
  double t1683;
  double t1694;
  double t1705;
  double t1708;
  double t1710;
  double t1753;
  double t1757;
  double t1760;
  double t1781;
  double t1893;
  double t1894;
  double t1899;
  double t1900;
  double t1898;
  double t1919;
  double t1923;
  double t1935;
  double t1940;
  double t1942;
  double t1930;
  double t1944;
  double t1951;
  double t1956;
  double t1968;
  double t1989;
  double t2054;
  double t2056;
  double t2057;
  double t2049;
  double t2059;
  double t2065;
  double t2090;
  double t2099;
  double t2111;
  double t2084;
  double t2124;
  double t2141;
  double t2170;
  double t2177;
  double t2180;
  double t2239;
  double t2253;
  double t2263;
  double t2264;
  double t2276;
  double t2285;
  double t2286;
  double t2284;
  double t2332;
  double t2367;
  double t2370;
  double t2385;
  double t2416;
  double t2426;
  double t2439;
  double t2485;
  double t2498;
  double t2509;
  double t2514;
  double t2522;
  double t2529;
  double t2513;
  double t2535;
  double t2561;
  double t2564;
  double t2569;
  double t2570;
  double t2587;
  double t2590;
  double t2595;
  double t2562;
  double t2601;
  double t2603;
  double t2617;
  double t2621;
  double t2623;
  double t2615;
  double t2625;
  double t2627;
  double t2637;
  double t2640;
  double t2643;
  double t2703;
  double t2725;
  double t2731;
  double t2738;
  double t2744;
  double t2753;
  double t2754;
  double t2755;
  double t2756;
  double t2732;
  double t2775;
  double t2787;
  double t2810;
  double t2817;
  double t2821;
  double t2795;
  double t2827;
  double t2828;
  double t2840;
  double t2846;
  double t2847;
  double t2918;
  double t2919;
  double t2922;
  double t2923;
  double t2925;
  double t2932;
  double t2937;
  double t2939;
  double t2930;
  double t2946;
  double t2951;
  double t2961;
  double t2971;
  double t2972;
  double t2957;
  double t2974;
  double t2975;
  double t2991;
  double t2993;
  double t2995;
  double t3058;
  double t3061;
  double t3063;
  double t3065;
  double t3067;
  double t3069;
  double t3071;
  double t3076;
  double t3081;
  double t3096;
  double t3101;
  double t3114;
  double t3128;
  double t3142;
  double t3149;
  double t3203;
  double t3206;
  double t3208;
  double t3210;
  double t3207;
  double t3211;
  double t3221;
  double t3240;
  double t3242;
  double t3243;
  double t3233;
  double t3246;
  double t3248;
  double t3266;
  double t3270;
  double t3280;
  double t2450;
  double t2451;
  double t2458;
  double t3338;
  double t3347;
  double t3348;
  double t3333;
  double t3351;
  double t3365;
  double t3376;
  double t3379;
  double t3389;
  double t3373;
  double t3390;
  double t3393;
  double t3400;
  double t3404;
  double t3405;
  double t3437;
  double t3438;
  double t3440;
  double t3445;
  double t3447;
  double t3455;
  double t3458;
  double t3454;
  double t3468;
  double t3490;
  double t3491;
  double t3492;
  double t3503;
  double t3504;
  double t3506;
  double t3539;
  double t3540;
  double t3543;
  double t3549;
  double t3557;
  double t3558;
  double t3562;
  double t3563;
  double t3564;
  double t3569;
  double t3572;
  double t3575;
  double t3606;
  double t3610;
  double t3617;
  double t3636;
  double t3638;
  double t3643;
  double t3619;
  double t3644;
  double t3646;
  double t3656;
  double t3657;
  double t3658;
  double t3648;
  double t3659;
  double t3662;
  double t3674;
  double t3676;
  double t3677;
  double t3671;
  double t3678;
  double t3683;
  double t3689;
  double t3693;
  double t3695;
  double t3703;
  double t3704;
  double t3710;
  double t3723;
  double t3724;
  double t3731;
  double t3721;
  double t3734;
  double t3735;
  double t3747;
  double t3751;
  double t3756;
  double t3743;
  double t3759;
  double t3763;
  double t3769;
  double t3773;
  double t3778;
  double t3825;
  double t3828;
  double t3830;
  double t3833;
  double t3835;
  double t3841;
  double t3846;
  double t3838;
  double t3858;
  double t3883;
  double t3884;
  double t3892;
  double t3906;
  double t3910;
  double t3912;
  double t3951;
  double t3952;
  double t3955;
  double t3958;
  double t3960;
  double t3962;
  double t3963;
  double t3966;
  double t3970;
  double t3957;
  double t3974;
  double t3979;
  double t3985;
  double t3988;
  double t3991;
  double t3981;
  double t3992;
  double t3997;
  double t4003;
  double t4004;
  double t4015;
  double t1041;
  double t1156;
  double t1159;
  double t1184;
  double t1189;
  double t1200;
  double t1517;
  double t1536;
  double t1563;
  double t1584;
  double t1588;
  double t1592;
  double t1756;
  double t1785;
  double t1787;
  double t1837;
  double t1838;
  double t1839;
  double t1954;
  double t1994;
  double t1996;
  double t2027;
  double t2028;
  double t2036;
  double t2165;
  double t2187;
  double t2188;
  double t2190;
  double t2193;
  double t2204;
  double t2304;
  double t2321;
  double t2343;
  double t2346;
  double t2401;
  double t2406;
  double t4134;
  double t2631;
  double t2656;
  double t2660;
  double t2668;
  double t2675;
  double t2676;
  double t2833;
  double t2862;
  double t2863;
  double t2872;
  double t2889;
  double t2896;
  double t2986;
  double t3010;
  double t3016;
  double t3023;
  double t3032;
  double t3042;
  double t3118;
  double t3152;
  double t3153;
  double t3180;
  double t3183;
  double t3187;
  double t3264;
  double t3281;
  double t3282;
  double t3286;
  double t3287;
  double t3295;
  double t2467;
  double t2468;
  double t3394;
  double t3414;
  double t3418;
  double t3424;
  double t3426;
  double t3427;
  double t3459;
  double t3462;
  double t3474;
  double t3475;
  double t3494;
  double t3501;
  double t3519;
  double t3526;
  double t3528;
  double t4268;
  double t3566;
  double t3578;
  double t3582;
  double t3588;
  double t3596;
  double t3598;
  double t4307;
  double t4308;
  double t4309;
  double t3764;
  double t3782;
  double t3784;
  double t3792;
  double t3797;
  double t3801;
  double t3847;
  double t3852;
  double t3861;
  double t3862;
  double t3894;
  double t3897;
  double t3928;
  double t3933;
  double t3935;
  double t4359;
  double t3999;
  double t4017;
  double t4020;
  double t4026;
  double t4028;
  double t4031;
  double t4574;
  double t4578;
  double t4616;
  double t4623;
  double t4661;
  double t4666;
  double t4735;
  double t4743;
  double t4788;
  double t4791;
  double t4863;
  double t4868;
  double t4050;
  double t4052;
  double t4056;
  double t4635;
  double t4637;
  double t4638;
  double t4582;
  double t4601;
  double t4602;
  double t4675;
  double t4687;
  double t4689;
  double t4652;
  double t4655;
  double t4659;
  double t4707;
  double t4710;
  double t4711;
  double t4745;
  double t4754;
  double t4757;
  double t4772;
  double t4776;
  double t4779;
  double t4796;
  double t4802;
  double t4803;
  double t4819;
  double t4825;
  double t4848;
  double t4869;
  double t4871;
  double t4875;
  double t4879;
  double t4883;
  double t4892;
  double t4058;
  double t4065;
  double t4069;
  double t4626;
  double t4079;
  double t4088;
  double t4092;
  double t4100;
  double t4102;
  double t4103;
  double t4107;
  double t4109;
  double t4111;
  double t4121;
  double t4125;
  double t4130;
  double t4133;
  double t4135;
  double t4137;
  double t4142;
  double t5516;
  double t4624;
  double t4628;
  double t4144;
  double t4149;
  double t4158;
  double t4170;
  double t4178;
  double t4179;
  double t4184;
  double t4186;
  double t4190;
  double t5043;
  double t5045;
  double t5048;
  double t5068;
  double t5078;
  double t4199;
  double t4206;
  double t4209;
  double t5171;
  double t5180;
  double t5189;
  double t5190;
  double t5194;
  double t4211;
  double t4214;
  double t4225;
  double t5256;
  double t5257;
  double t5266;
  double t5267;
  double t5268;
  double t4245;
  double t4247;
  double t4249;
  double t5348;
  double t5357;
  double t5361;
  double t5367;
  double t5381;
  double t4254;
  double t4255;
  double t4257;
  double t5468;
  double t5469;
  double t5483;
  double t5488;
  double t5489;
  double t4266;
  double t4269;
  double t5542;
  double t5551;
  double t5580;
  double t5587;
  double t5588;
  double t4275;
  double t4280;
  double t6222;
  double t4300;
  double t4301;
  double t4302;
  double t6378;
  double t6392;
  double t6394;
  double t6395;
  double t6396;
  double t6397;
  double t6398;
  double t6403;
  double t6410;
  double t6420;
  double t6423;
  double t6427;
  double t6429;
  double t6451;
  double t6455;
  double t4314;
  double t4315;
  double t4317;
  double t4327;
  double t4339;
  double t4346;
  double t4356;
  double t4374;
  double t4385;
  double t4388;
  double t6631;
  double t4390;
  double t4393;
  double t4401;
  t505 = Cos(var1[3]);
  t528 = Cos(var1[4]);
  t557 = Cos(var1[5]);
  t625 = Sin(var1[13]);
  t465 = Cos(var1[13]);
  t659 = Sin(var1[5]);
  t741 = Cos(var1[15]);
  t609 = t465*t505*t528*t557;
  t682 = -1.*t505*t528*t625*t659;
  t701 = t609 + t682;
  t446 = Sin(var1[15]);
  t762 = Cos(var1[14]);
  t780 = Sin(var1[4]);
  t805 = -1.*t762*t505*t780;
  t809 = Sin(var1[14]);
  t831 = t505*t528*t557*t625;
  t852 = t465*t505*t528*t659;
  t859 = t831 + t852;
  t864 = t809*t859;
  t873 = t805 + t864;
  t915 = Cos(var1[16]);
  t738 = t446*t701;
  t880 = t741*t873;
  t886 = t738 + t880;
  t429 = Sin(var1[16]);
  t930 = t741*t701;
  t980 = -1.*t446*t873;
  t996 = t930 + t980;
  t1067 = Cos(var1[17]);
  t902 = -1.*t429*t886;
  t1015 = t915*t996;
  t1030 = t902 + t1015;
  t414 = Sin(var1[17]);
  t1081 = t915*t886;
  t1090 = t429*t996;
  t1091 = t1081 + t1090;
  t100 = Sin(var1[18]);
  t1264 = Sin(var1[3]);
  t1259 = t505*t557*t780;
  t1293 = t1264*t659;
  t1297 = t1259 + t1293;
  t1327 = t557*t1264;
  t1331 = -1.*t505*t780*t659;
  t1346 = t1327 + t1331;
  t1319 = -1.*t625*t1297;
  t1349 = t465*t1346;
  t1376 = t1319 + t1349;
  t1382 = t465*t1297;
  t1425 = t625*t1346;
  t1438 = t1382 + t1425;
  t1380 = t446*t1376;
  t1450 = t741*t809*t1438;
  t1454 = t1380 + t1450;
  t1465 = t741*t1376;
  t1473 = -1.*t809*t446*t1438;
  t1486 = t1465 + t1473;
  t1183 = Cos(var1[18]);
  t1457 = -1.*t429*t1454;
  t1514 = t915*t1486;
  t1515 = t1457 + t1514;
  t1520 = t915*t1454;
  t1523 = t429*t1486;
  t1527 = t1520 + t1523;
  t1628 = -1.*t505*t528*t809;
  t1645 = t625*t1297;
  t1653 = -1.*t557*t1264;
  t1657 = t505*t780*t659;
  t1658 = t1653 + t1657;
  t1677 = t465*t1658;
  t1683 = t1645 + t1677;
  t1694 = t762*t1683;
  t1705 = t1628 + t1694;
  t1708 = -1.*t915*t446*t1705;
  t1710 = -1.*t741*t429*t1705;
  t1753 = t1708 + t1710;
  t1757 = t741*t915*t1705;
  t1760 = -1.*t446*t429*t1705;
  t1781 = t1757 + t1760;
  t1893 = -1.*t465*t1658;
  t1894 = t1319 + t1893;
  t1899 = -1.*t625*t1658;
  t1900 = t1382 + t1899;
  t1898 = t446*t1894;
  t1919 = t741*t809*t1900;
  t1923 = t1898 + t1919;
  t1935 = t741*t1894;
  t1940 = -1.*t809*t446*t1900;
  t1942 = t1935 + t1940;
  t1930 = -1.*t429*t1923;
  t1944 = t915*t1942;
  t1951 = t1930 + t1944;
  t1956 = t915*t1923;
  t1968 = t429*t1942;
  t1989 = t1956 + t1968;
  t2054 = t762*t505*t528;
  t2056 = t809*t1683;
  t2057 = t2054 + t2056;
  t2049 = -1.*t446*t1900;
  t2059 = -1.*t741*t2057;
  t2065 = t2049 + t2059;
  t2090 = t741*t1900;
  t2099 = -1.*t446*t2057;
  t2111 = t2090 + t2099;
  t2084 = t429*t2065;
  t2124 = t915*t2111;
  t2141 = t2084 + t2124;
  t2170 = t915*t2065;
  t2177 = -1.*t429*t2111;
  t2180 = t2170 + t2177;
  t2239 = t446*t1900;
  t2253 = t741*t2057;
  t2263 = t2239 + t2253;
  t2264 = -1.*t429*t2263;
  t2276 = t2264 + t2124;
  t2285 = -1.*t915*t2263;
  t2286 = t2285 + t2177;
  t2284 = -1.*t414*t2276;
  t2332 = t1067*t2276;
  t2367 = t915*t2263;
  t2370 = t429*t2111;
  t2385 = t2367 + t2370;
  t2416 = -1.*t414*t2385;
  t2426 = t2332 + t2416;
  t2439 = t100*t2426;
  t2485 = -1.*t557*t1264*t780;
  t2498 = t505*t659;
  t2509 = t2485 + t2498;
  t2514 = -1.*t505*t557;
  t2522 = -1.*t1264*t780*t659;
  t2529 = t2514 + t2522;
  t2513 = t465*t2509;
  t2535 = -1.*t625*t2529;
  t2561 = t2513 + t2535;
  t2564 = -1.*t762*t528*t1264;
  t2569 = t625*t2509;
  t2570 = t465*t2529;
  t2587 = t2569 + t2570;
  t2590 = t809*t2587;
  t2595 = t2564 + t2590;
  t2562 = t446*t2561;
  t2601 = t741*t2595;
  t2603 = t2562 + t2601;
  t2617 = t741*t2561;
  t2621 = -1.*t446*t2595;
  t2623 = t2617 + t2621;
  t2615 = -1.*t429*t2603;
  t2625 = t915*t2623;
  t2627 = t2615 + t2625;
  t2637 = t915*t2603;
  t2640 = t429*t2623;
  t2643 = t2637 + t2640;
  t2703 = t465*t528*t557*t1264;
  t2725 = -1.*t528*t625*t1264*t659;
  t2731 = t2703 + t2725;
  t2738 = -1.*t762*t1264*t780;
  t2744 = t528*t557*t625*t1264;
  t2753 = t465*t528*t1264*t659;
  t2754 = t2744 + t2753;
  t2755 = t809*t2754;
  t2756 = t2738 + t2755;
  t2732 = t446*t2731;
  t2775 = t741*t2756;
  t2787 = t2732 + t2775;
  t2810 = t741*t2731;
  t2817 = -1.*t446*t2756;
  t2821 = t2810 + t2817;
  t2795 = -1.*t429*t2787;
  t2827 = t915*t2821;
  t2828 = t2795 + t2827;
  t2840 = t915*t2787;
  t2846 = t429*t2821;
  t2847 = t2840 + t2846;
  t2918 = t557*t1264*t780;
  t2919 = -1.*t505*t659;
  t2922 = t2918 + t2919;
  t2923 = -1.*t625*t2922;
  t2925 = t2923 + t2570;
  t2932 = t465*t2922;
  t2937 = t625*t2529;
  t2939 = t2932 + t2937;
  t2930 = t446*t2925;
  t2946 = t741*t809*t2939;
  t2951 = t2930 + t2946;
  t2961 = t741*t2925;
  t2971 = -1.*t809*t446*t2939;
  t2972 = t2961 + t2971;
  t2957 = -1.*t429*t2951;
  t2974 = t915*t2972;
  t2975 = t2957 + t2974;
  t2991 = t915*t2951;
  t2993 = t429*t2972;
  t2995 = t2991 + t2993;
  t3058 = -1.*t528*t809*t1264;
  t3061 = t625*t2922;
  t3063 = t505*t557;
  t3065 = t1264*t780*t659;
  t3067 = t3063 + t3065;
  t3069 = t465*t3067;
  t3071 = t3061 + t3069;
  t3076 = t762*t3071;
  t3081 = t3058 + t3076;
  t3096 = -1.*t915*t446*t3081;
  t3101 = -1.*t741*t429*t3081;
  t3114 = t3096 + t3101;
  t3128 = t741*t915*t3081;
  t3142 = -1.*t446*t429*t3081;
  t3149 = t3128 + t3142;
  t3203 = -1.*t465*t3067;
  t3206 = t2923 + t3203;
  t3208 = -1.*t625*t3067;
  t3210 = t2932 + t3208;
  t3207 = t446*t3206;
  t3211 = t741*t809*t3210;
  t3221 = t3207 + t3211;
  t3240 = t741*t3206;
  t3242 = -1.*t809*t446*t3210;
  t3243 = t3240 + t3242;
  t3233 = -1.*t429*t3221;
  t3246 = t915*t3243;
  t3248 = t3233 + t3246;
  t3266 = t915*t3221;
  t3270 = t429*t3243;
  t3280 = t3266 + t3270;
  t2450 = t414*t2276;
  t2451 = t1067*t2385;
  t2458 = t2450 + t2451;
  t3338 = t762*t528*t1264;
  t3347 = t809*t3071;
  t3348 = t3338 + t3347;
  t3333 = -1.*t446*t3210;
  t3351 = -1.*t741*t3348;
  t3365 = t3333 + t3351;
  t3376 = t741*t3210;
  t3379 = -1.*t446*t3348;
  t3389 = t3376 + t3379;
  t3373 = t429*t3365;
  t3390 = t915*t3389;
  t3393 = t3373 + t3390;
  t3400 = t915*t3365;
  t3404 = -1.*t429*t3389;
  t3405 = t3400 + t3404;
  t3437 = t446*t3210;
  t3438 = t741*t3348;
  t3440 = t3437 + t3438;
  t3445 = -1.*t429*t3440;
  t3447 = t3445 + t3390;
  t3455 = -1.*t915*t3440;
  t3458 = t3455 + t3404;
  t3454 = -1.*t414*t3447;
  t3468 = t1067*t3447;
  t3490 = t915*t3440;
  t3491 = t429*t3389;
  t3492 = t3490 + t3491;
  t3503 = -1.*t414*t3492;
  t3504 = t3468 + t3503;
  t3506 = t100*t3504;
  t3539 = t809*t780;
  t3540 = t528*t557*t625;
  t3543 = t465*t528*t659;
  t3549 = t3540 + t3543;
  t3557 = t762*t3549;
  t3558 = t3539 + t3557;
  t3562 = -1.*t915*t446*t3558;
  t3563 = -1.*t741*t429*t3558;
  t3564 = t3562 + t3563;
  t3569 = t741*t915*t3558;
  t3572 = -1.*t446*t429*t3558;
  t3575 = t3569 + t3572;
  t3606 = -1.*t528*t557*t625;
  t3610 = -1.*t465*t528*t659;
  t3617 = t3606 + t3610;
  t3636 = t465*t528*t557;
  t3638 = -1.*t528*t625*t659;
  t3643 = t3636 + t3638;
  t3619 = t446*t3617;
  t3644 = t741*t809*t3643;
  t3646 = t3619 + t3644;
  t3656 = t741*t3617;
  t3657 = -1.*t809*t446*t3643;
  t3658 = t3656 + t3657;
  t3648 = -1.*t429*t3646;
  t3659 = t915*t3658;
  t3662 = t3648 + t3659;
  t3674 = t915*t3646;
  t3676 = t429*t3658;
  t3677 = t3674 + t3676;
  t3671 = t414*t3662;
  t3678 = t1067*t3677;
  t3683 = t3671 + t3678;
  t3689 = t100*t3683;
  t3693 = t1067*t3662;
  t3695 = -1.*t414*t3677;
  t3703 = t3693 + t3695;
  t3704 = -1.*t1183*t3703;
  t3710 = t3689 + t3704;
  t3723 = -1.*t762*t780;
  t3724 = t809*t3549;
  t3731 = t3723 + t3724;
  t3721 = -1.*t446*t3643;
  t3734 = -1.*t741*t3731;
  t3735 = t3721 + t3734;
  t3747 = t741*t3643;
  t3751 = -1.*t446*t3731;
  t3756 = t3747 + t3751;
  t3743 = t429*t3735;
  t3759 = t915*t3756;
  t3763 = t3743 + t3759;
  t3769 = t915*t3735;
  t3773 = -1.*t429*t3756;
  t3778 = t3769 + t3773;
  t3825 = t446*t3643;
  t3828 = t741*t3731;
  t3830 = t3825 + t3828;
  t3833 = -1.*t429*t3830;
  t3835 = t3833 + t3759;
  t3841 = -1.*t915*t3830;
  t3846 = t3841 + t3773;
  t3838 = -1.*t414*t3835;
  t3858 = t1067*t3835;
  t3883 = t915*t3830;
  t3884 = t429*t3756;
  t3892 = t3883 + t3884;
  t3906 = -1.*t414*t3892;
  t3910 = t3858 + t3906;
  t3912 = t100*t3910;
  t3951 = -1.*t465*t557*t780;
  t3952 = t625*t780*t659;
  t3955 = t3951 + t3952;
  t3958 = -1.*t762*t528;
  t3960 = -1.*t557*t625*t780;
  t3962 = -1.*t465*t780*t659;
  t3963 = t3960 + t3962;
  t3966 = t809*t3963;
  t3970 = t3958 + t3966;
  t3957 = t446*t3955;
  t3974 = t741*t3970;
  t3979 = t3957 + t3974;
  t3985 = t741*t3955;
  t3988 = -1.*t446*t3970;
  t3991 = t3985 + t3988;
  t3981 = -1.*t429*t3979;
  t3992 = t915*t3991;
  t3997 = t3981 + t3992;
  t4003 = t915*t3979;
  t4004 = t429*t3991;
  t4015 = t4003 + t4004;
  t1041 = t414*t1030;
  t1156 = t1067*t1091;
  t1159 = t1041 + t1156;
  t1184 = t1067*t1030;
  t1189 = -1.*t414*t1091;
  t1200 = t1184 + t1189;
  t1517 = t414*t1515;
  t1536 = t1067*t1527;
  t1563 = t1517 + t1536;
  t1584 = t1067*t1515;
  t1588 = -1.*t414*t1527;
  t1592 = t1584 + t1588;
  t1756 = t414*t1753;
  t1785 = t1067*t1781;
  t1787 = t1756 + t1785;
  t1837 = t1067*t1753;
  t1838 = -1.*t414*t1781;
  t1839 = t1837 + t1838;
  t1954 = t414*t1951;
  t1994 = t1067*t1989;
  t1996 = t1954 + t1994;
  t2027 = t1067*t1951;
  t2028 = -1.*t414*t1989;
  t2036 = t2027 + t2028;
  t2165 = -1.*t414*t2141;
  t2187 = t1067*t2180;
  t2188 = t2165 + t2187;
  t2190 = t1067*t2141;
  t2193 = t414*t2180;
  t2204 = t2190 + t2193;
  t2304 = t1067*t2286;
  t2321 = t2284 + t2304;
  t2343 = t414*t2286;
  t2346 = t2332 + t2343;
  t2401 = -1.*t1067*t2385;
  t2406 = t2284 + t2401;
  t4134 = t1183*t2426;
  t2631 = t414*t2627;
  t2656 = t1067*t2643;
  t2660 = t2631 + t2656;
  t2668 = t1067*t2627;
  t2675 = -1.*t414*t2643;
  t2676 = t2668 + t2675;
  t2833 = t414*t2828;
  t2862 = t1067*t2847;
  t2863 = t2833 + t2862;
  t2872 = t1067*t2828;
  t2889 = -1.*t414*t2847;
  t2896 = t2872 + t2889;
  t2986 = t414*t2975;
  t3010 = t1067*t2995;
  t3016 = t2986 + t3010;
  t3023 = t1067*t2975;
  t3032 = -1.*t414*t2995;
  t3042 = t3023 + t3032;
  t3118 = t414*t3114;
  t3152 = t1067*t3149;
  t3153 = t3118 + t3152;
  t3180 = t1067*t3114;
  t3183 = -1.*t414*t3149;
  t3187 = t3180 + t3183;
  t3264 = t414*t3248;
  t3281 = t1067*t3280;
  t3282 = t3264 + t3281;
  t3286 = t1067*t3248;
  t3287 = -1.*t414*t3280;
  t3295 = t3286 + t3287;
  t2467 = t1183*t2458;
  t2468 = t2467 + t2439;
  t3394 = -1.*t414*t3393;
  t3414 = t1067*t3405;
  t3418 = t3394 + t3414;
  t3424 = t1067*t3393;
  t3426 = t414*t3405;
  t3427 = t3424 + t3426;
  t3459 = t1067*t3458;
  t3462 = t3454 + t3459;
  t3474 = t414*t3458;
  t3475 = t3468 + t3474;
  t3494 = -1.*t1067*t3492;
  t3501 = t3454 + t3494;
  t3519 = t414*t3447;
  t3526 = t1067*t3492;
  t3528 = t3519 + t3526;
  t4268 = t1183*t3504;
  t3566 = t414*t3564;
  t3578 = t1067*t3575;
  t3582 = t3566 + t3578;
  t3588 = t1067*t3564;
  t3596 = -1.*t414*t3575;
  t3598 = t3588 + t3596;
  t4307 = t1183*t3683;
  t4308 = t100*t3703;
  t4309 = t4307 + t4308;
  t3764 = -1.*t414*t3763;
  t3782 = t1067*t3778;
  t3784 = t3764 + t3782;
  t3792 = t1067*t3763;
  t3797 = t414*t3778;
  t3801 = t3792 + t3797;
  t3847 = t1067*t3846;
  t3852 = t3838 + t3847;
  t3861 = t414*t3846;
  t3862 = t3858 + t3861;
  t3894 = -1.*t1067*t3892;
  t3897 = t3838 + t3894;
  t3928 = t414*t3835;
  t3933 = t1067*t3892;
  t3935 = t3928 + t3933;
  t4359 = t1183*t3910;
  t3999 = t414*t3997;
  t4017 = t1067*t4015;
  t4020 = t3999 + t4017;
  t4026 = t1067*t3997;
  t4028 = -1.*t414*t4015;
  t4031 = t4026 + t4028;
  t4574 = -1.*t465;
  t4578 = 1. + t4574;
  t4616 = -1.*t762;
  t4623 = 1. + t4616;
  t4661 = -1.*t741;
  t4666 = 1. + t4661;
  t4735 = -1.*t915;
  t4743 = 1. + t4735;
  t4788 = -1.*t1067;
  t4791 = 1. + t4788;
  t4863 = -1.*t1183;
  t4868 = 1. + t4863;
  t4050 = t1183*t1159;
  t4052 = t100*t1200;
  t4056 = t4050 + t4052;
  t4635 = -0.135*t4578;
  t4637 = 0.07996*t625;
  t4638 = 0. + t4635 + t4637;
  t4582 = 0.07996*t4578;
  t4601 = 0.135*t625;
  t4602 = 0. + t4582 + t4601;
  t4675 = -0.01004*t4666;
  t4687 = 0.08055*t446;
  t4689 = 0. + t4675 + t4687;
  t4652 = -0.135*t4623;
  t4655 = 0.08055*t809;
  t4659 = 0. + t4652 + t4655;
  t4707 = -0.08055*t4666;
  t4710 = -0.01004*t446;
  t4711 = 0. + t4707 + t4710;
  t4745 = -0.08055*t4743;
  t4754 = -0.13004*t429;
  t4757 = 0. + t4745 + t4754;
  t4772 = -0.13004*t4743;
  t4776 = 0.08055*t429;
  t4779 = 0. + t4772 + t4776;
  t4796 = -0.19074*t4791;
  t4802 = 0.03315*t414;
  t4803 = 0. + t4796 + t4802;
  t4819 = -0.03315*t4791;
  t4825 = -0.19074*t414;
  t4848 = 0. + t4819 + t4825;
  t4869 = -0.01315*t4868;
  t4871 = -0.62554*t100;
  t4875 = 0. + t4869 + t4871;
  t4879 = -0.62554*t4868;
  t4883 = 0.01315*t100;
  t4892 = 0. + t4879 + t4883;
  t4058 = t1183*t1563;
  t4065 = t100*t1592;
  t4069 = t4058 + t4065;
  t4626 = -0.135*t809;
  t4079 = t1183*t1787;
  t4088 = t100*t1839;
  t4092 = t4079 + t4088;
  t4100 = t1183*t1996;
  t4102 = t100*t2036;
  t4103 = t4100 + t4102;
  t4107 = t100*t2188;
  t4109 = t1183*t2204;
  t4111 = t4107 + t4109;
  t4121 = t100*t2321;
  t4125 = t1183*t2346;
  t4130 = t4121 + t4125;
  t4133 = t100*t2406;
  t4135 = t4133 + t4134;
  t4137 = -1.*t100*t2458;
  t4142 = t4137 + t4134;
  t5516 = -1.*t100*t2426;
  t4624 = -0.08055*t4623;
  t4628 = 0. + t4624 + t4626;
  t4144 = t1183*t2660;
  t4149 = t100*t2676;
  t4158 = t4144 + t4149;
  t4170 = t1183*t2863;
  t4178 = t100*t2896;
  t4179 = t4170 + t4178;
  t4184 = t1183*t3016;
  t4186 = t100*t3042;
  t4190 = t4184 + t4186;
  t5043 = -0.135*t762;
  t5045 = -0.08055*t809;
  t5048 = t5043 + t5045;
  t5068 = 0.08055*t762;
  t5078 = t5068 + t4626;
  t4199 = t1183*t3153;
  t4206 = t100*t3187;
  t4209 = t4199 + t4206;
  t5171 = 0.135*t465;
  t5180 = t5171 + t4637;
  t5189 = 0.07996*t465;
  t5190 = -0.135*t625;
  t5194 = t5189 + t5190;
  t4211 = t1183*t3282;
  t4214 = t100*t3295;
  t4225 = t4211 + t4214;
  t5256 = 0.08055*t741;
  t5257 = t5256 + t4710;
  t5266 = -0.01004*t741;
  t5267 = -0.08055*t446;
  t5268 = t5266 + t5267;
  t4245 = t100*t3418;
  t4247 = t1183*t3427;
  t4249 = t4245 + t4247;
  t5348 = -0.13004*t915;
  t5357 = -0.08055*t429;
  t5361 = t5348 + t5357;
  t5367 = 0.08055*t915;
  t5381 = t5367 + t4754;
  t4254 = t100*t3462;
  t4255 = t1183*t3475;
  t4257 = t4254 + t4255;
  t5468 = 0.03315*t1067;
  t5469 = t5468 + t4825;
  t5483 = -0.19074*t1067;
  t5488 = -0.03315*t414;
  t5489 = t5483 + t5488;
  t4266 = t100*t3501;
  t4269 = t4266 + t4268;
  t5542 = -0.62554*t1183;
  t5551 = -0.01315*t100;
  t5580 = t5542 + t5551;
  t5587 = 0.01315*t1183;
  t5588 = t5587 + t4871;
  t4275 = -1.*t100*t3528;
  t4280 = t4275 + t4268;
  t6222 = -1.*t100*t3504;
  t4300 = t1183*t3582;
  t4301 = t100*t3598;
  t4302 = t4300 + t4301;
  t6378 = t4689*t3617;
  t6392 = -0.1318*t762*t3643;
  t6394 = t4659*t3643;
  t6395 = t809*t4711*t3643;
  t6396 = t4757*t3646;
  t6397 = t4779*t3658;
  t6398 = t4803*t3662;
  t6403 = t4848*t3677;
  t6410 = t4875*t3683;
  t6420 = t4892*t3703;
  t6423 = -1.*t100*t3683;
  t6427 = t1183*t3703;
  t6429 = t6423 + t6427;
  t6451 = -0.73604*t6429;
  t6455 = -0.04375*t4309;
  t4314 = t100*t3784;
  t4315 = t1183*t3801;
  t4317 = t4314 + t4315;
  t4327 = t100*t3852;
  t4339 = t1183*t3862;
  t4346 = t4327 + t4339;
  t4356 = t100*t3897;
  t4374 = t4356 + t4359;
  t4385 = -1.*t100*t3935;
  t4388 = t4385 + t4359;
  t6631 = -1.*t100*t3910;
  t4390 = t1183*t4020;
  t4393 = t100*t4031;
  t4401 = t4390 + t4393;
  p_output1[0]=(t100*t2660 - 1.*t1183*t2676)*var2[3] + (t100*t1159 - 1.*t1183*t1200)*var2[4] + (t100*t1563 - 1.*t1183*t1592)*var2[5] + (t100*t1996 - 1.*t1183*t2036)*var2[13] + (t100*t1787 - 1.*t1183*t1839)*var2[14] + (-1.*t1183*t2188 + t100*t2204)*var2[15] + (-1.*t1183*t2321 + t100*t2346)*var2[16] + (-1.*t1183*t2406 + t2439)*var2[17] + t2468*var2[18];
  p_output1[1]=(-1.*t1183*t2426 + t100*t2458)*var2[3] + (t100*t2863 - 1.*t1183*t2896)*var2[4] + (t100*t3016 - 1.*t1183*t3042)*var2[5] + (t100*t3282 - 1.*t1183*t3295)*var2[13] + (t100*t3153 - 1.*t1183*t3187)*var2[14] + (-1.*t1183*t3418 + t100*t3427)*var2[15] + (-1.*t1183*t3462 + t100*t3475)*var2[16] + (-1.*t1183*t3501 + t3506)*var2[17] + (t3506 + t1183*t3528)*var2[18];
  p_output1[2]=(t100*t4020 - 1.*t1183*t4031)*var2[4] + t3710*var2[5] + t3710*var2[13] + (t100*t3582 - 1.*t1183*t3598)*var2[14] + (-1.*t1183*t3784 + t100*t3801)*var2[15] + (-1.*t1183*t3852 + t100*t3862)*var2[16] + (-1.*t1183*t3897 + t3912)*var2[17] + (t3912 + t1183*t3935)*var2[18];
  p_output1[3]=0;
  p_output1[4]=t4158*var2[3] + t4056*var2[4] + t4069*var2[5] + t4103*var2[13] + t4092*var2[14] + t4111*var2[15] + t4130*var2[16] + t4135*var2[17] + t4142*var2[18];
  p_output1[5]=t2468*var2[3] + t4179*var2[4] + t4190*var2[5] + t4225*var2[13] + t4209*var2[14] + t4249*var2[15] + t4257*var2[16] + t4269*var2[17] + t4280*var2[18];
  p_output1[6]=t4401*var2[4] + t4309*var2[5] + t4309*var2[13] + t4302*var2[14] + t4317*var2[15] + t4346*var2[16] + t4374*var2[17] + t4388*var2[18];
  p_output1[7]=0;
  p_output1[8]=(t3058 - 1.*t2587*t762)*var2[3] + (-1.*t505*t780*t809 - 1.*t762*t859)*var2[4] - 1.*t1438*t762*var2[5] - 1.*t1900*t762*var2[13] + t2057*var2[14];
  p_output1[9]=(-1.*t1683*t762 + t505*t528*t809)*var2[3] + (-1.*t2754*t762 - 1.*t1264*t780*t809)*var2[4] - 1.*t2939*t762*var2[5] - 1.*t3210*t762*var2[13] + t3348*var2[14];
  p_output1[10]=(-1.*t3963*t762 - 1.*t528*t809)*var2[4] - 1.*t3643*t762*var2[5] - 1.*t3643*t762*var2[13] + t3731*var2[14];
  p_output1[11]=0;
  p_output1[12]=var2[0] + (-0.73604*(-1.*t100*t2660 + t1183*t2676) - 0.04375*t4158 + t2509*t4602 + t2529*t4638 + t2587*t4659 + t2561*t4689 + t2595*t4711 + t2603*t4757 + t2623*t4779 + t2627*t4803 + t2643*t4848 + t2660*t4875 + t2676*t4892 - 1.*t1264*t4628*t528 - 0.1318*(t2587*t762 + t1264*t528*t809))*var2[3] + (-0.73604*(-1.*t100*t1159 + t1183*t1200) - 0.04375*t4056 + t1030*t4803 + t1091*t4848 + t1159*t4875 + t1200*t4892 + t4602*t505*t528*t557 + t4638*t505*t528*t659 + t4689*t701 - 1.*t4628*t505*t780 + t4659*t859 - 0.1318*(t505*t780*t809 + t762*t859) + t4711*t873 + t4757*t886 + t4779*t996)*var2[4] + (-0.73604*(-1.*t100*t1563 + t1183*t1592) - 0.04375*t4069 + t1346*t4602 + t1297*t4638 + t1438*t4659 + t1376*t4689 + t1454*t4757 + t1486*t4779 + t1515*t4803 + t1527*t4848 + t1563*t4875 + t1592*t4892 - 0.1318*t1438*t762 + t1438*t4711*t809)*var2[5] + (-0.73604*(-1.*t100*t1996 + t1183*t2036) - 0.04375*t4103 + t1900*t4659 + t1894*t4689 + t1923*t4757 + t1942*t4779 + t1951*t4803 + t1989*t4848 + t1996*t4875 + t2036*t4892 + t1297*t5180 + t1658*t5194 - 0.1318*t1900*t762 + t1900*t4711*t809)*var2[13] + (-0.73604*(-1.*t100*t1787 + t1183*t1839) - 0.04375*t4092 + t1705*t4711 - 1.*t1705*t446*t4779 + t1753*t4803 + t1781*t4848 + t1787*t4875 + t1839*t4892 + t1683*t5078 + t5048*t505*t528 + t1705*t4757*t741 - 0.1318*(-1.*t505*t528*t762 - 1.*t1683*t809))*var2[14] + (-0.73604*(t1183*t2188 - 1.*t100*t2204) - 0.04375*t4111 + t2111*t4757 + t2065*t4779 + t2180*t4803 + t2141*t4848 + t2204*t4875 + t2188*t4892 + t1900*t5257 + t2057*t5268)*var2[15] + (-0.73604*(t1183*t2321 - 1.*t100*t2346) - 0.04375*t4130 + t2286*t4803 + t2276*t4848 + t2346*t4875 + t2321*t4892 + t2263*t5361 + t2111*t5381)*var2[16] + (-0.04375*t4135 + t2426*t4875 + t2406*t4892 + t2276*t5469 + t2385*t5489 - 0.73604*(t1183*t2406 + t5516))*var2[17] + (-0.04375*t4142 - 0.73604*(-1.*t1183*t2458 + t5516) + t2458*t5580 + t2426*t5588)*var2[18];
  p_output1[13]=var2[1] + (-0.1318*t1705 - 0.04375*t2468 - 0.73604*t4142 + t1297*t4602 + t1658*t4638 + t1683*t4659 + t1900*t4689 + t2057*t4711 + t2263*t4757 + t2111*t4779 + t2276*t4803 + t2385*t4848 + t2458*t4875 + t2426*t4892 + t4628*t505*t528)*var2[3] + (-0.73604*(-1.*t100*t2863 + t1183*t2896) - 0.04375*t4179 + t2754*t4659 + t2731*t4689 + t2756*t4711 + t2787*t4757 + t2821*t4779 + t2828*t4803 + t2847*t4848 + t2863*t4875 + t2896*t4892 + t1264*t4602*t528*t557 + t1264*t4638*t528*t659 - 1.*t1264*t4628*t780 - 0.1318*(t2754*t762 + t1264*t780*t809))*var2[4] + (-0.73604*(-1.*t100*t3016 + t1183*t3042) - 0.04375*t4190 + t2529*t4602 + t2922*t4638 + t2939*t4659 + t2925*t4689 + t2951*t4757 + t2972*t4779 + t2975*t4803 + t2995*t4848 + t3016*t4875 + t3042*t4892 - 0.1318*t2939*t762 + t2939*t4711*t809)*var2[5] + (-0.73604*(-1.*t100*t3282 + t1183*t3295) - 0.04375*t4225 + t3210*t4659 + t3206*t4689 + t3221*t4757 + t3243*t4779 + t3248*t4803 + t3280*t4848 + t3282*t4875 + t3295*t4892 + t2922*t5180 + t3067*t5194 - 0.1318*t3210*t762 + t3210*t4711*t809)*var2[13] + (-0.73604*(-1.*t100*t3153 + t1183*t3187) - 0.04375*t4209 + t3081*t4711 - 1.*t3081*t446*t4779 + t3114*t4803 + t3149*t4848 + t3153*t4875 + t3187*t4892 + t3071*t5078 + t1264*t5048*t528 + t3081*t4757*t741 - 0.1318*(t2564 - 1.*t3071*t809))*var2[14] + (-0.73604*(t1183*t3418 - 1.*t100*t3427) - 0.04375*t4249 + t3389*t4757 + t3365*t4779 + t3405*t4803 + t3393*t4848 + t3427*t4875 + t3418*t4892 + t3210*t5257 + t3348*t5268)*var2[15] + (-0.73604*(t1183*t3462 - 1.*t100*t3475) - 0.04375*t4257 + t3458*t4803 + t3447*t4848 + t3475*t4875 + t3462*t4892 + t3440*t5361 + t3389*t5381)*var2[16] + (-0.04375*t4269 + t3504*t4875 + t3501*t4892 + t3447*t5469 + t3492*t5489 - 0.73604*(t1183*t3501 + t6222))*var2[17] + (-0.04375*t4280 + t3528*t5580 + t3504*t5588 - 0.73604*(-1.*t1183*t3528 + t6222))*var2[18];
  p_output1[14]=var2[2] + (-0.73604*(-1.*t100*t4020 + t1183*t4031) - 0.04375*t4401 + t3963*t4659 + t3955*t4689 + t3970*t4711 + t3979*t4757 + t3991*t4779 + t3997*t4803 + t4015*t4848 + t4020*t4875 + t4031*t4892 - 1.*t4628*t528 - 1.*t4602*t557*t780 - 1.*t4638*t659*t780 - 0.1318*(t3963*t762 + t528*t809))*var2[4] + (t4638*t528*t557 + t6378 + t6392 + t6394 + t6395 + t6396 + t6397 + t6398 + t6403 + t6410 + t6420 + t6451 + t6455 - 1.*t4602*t528*t659)*var2[5] + (t5180*t528*t557 + t6378 + t6392 + t6394 + t6395 + t6396 + t6397 + t6398 + t6403 + t6410 + t6420 + t6451 + t6455 + t5194*t528*t659)*var2[13] + (-0.73604*(-1.*t100*t3582 + t1183*t3598) - 0.04375*t4302 + t3558*t4711 - 1.*t3558*t446*t4779 + t3564*t4803 + t3575*t4848 + t3582*t4875 + t3598*t4892 + t3549*t5078 + t3558*t4757*t741 - 1.*t5048*t780 - 0.1318*(t762*t780 - 1.*t3549*t809))*var2[14] + (-0.73604*(t1183*t3784 - 1.*t100*t3801) - 0.04375*t4317 + t3756*t4757 + t3735*t4779 + t3778*t4803 + t3763*t4848 + t3801*t4875 + t3784*t4892 + t3643*t5257 + t3731*t5268)*var2[15] + (-0.73604*(t1183*t3852 - 1.*t100*t3862) - 0.04375*t4346 + t3846*t4803 + t3835*t4848 + t3862*t4875 + t3852*t4892 + t3830*t5361 + t3756*t5381)*var2[16] + (-0.04375*t4374 + t3910*t4875 + t3897*t4892 + t3835*t5469 + t3892*t5489 - 0.73604*(t1183*t3897 + t6631))*var2[17] + (-0.04375*t4388 + t3935*t5580 + t3910*t5588 - 0.73604*(-1.*t1183*t3935 + t6631))*var2[18];
  p_output1[15]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 20 && ncols == 1) && 
      !(mrows == 1 && ncols == 20))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 20 && ncols == 1) && 
      !(mrows == 1 && ncols == 20))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 4, (mwSize) 4, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "dT_RightTarsus_mex.hh"

namespace SymExpression
{

void dT_RightTarsus_mex_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
