/*
 * Automatically Generated from Mathematica.
 * Mon 11 May 2020 22:33:15 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t528;
  double t549;
  double t624;
  double t652;
  double t499;
  double t661;
  double t733;
  double t641;
  double t662;
  double t681;
  double t476;
  double t743;
  double t760;
  double t767;
  double t784;
  double t785;
  double t791;
  double t804;
  double t841;
  double t878;
  double t901;
  double t707;
  double t879;
  double t884;
  double t443;
  double t927;
  double t930;
  double t932;
  double t972;
  double t890;
  double t933;
  double t956;
  double t426;
  double t975;
  double t981;
  double t993;
  double t1033;
  double t966;
  double t1002;
  double t1009;
  double t388;
  double t1066;
  double t1098;
  double t1108;
  double t1169;
  double t1030;
  double t1132;
  double t1161;
  double t351;
  double t1171;
  double t1178;
  double t1246;
  double t1411;
  double t1404;
  double t1413;
  double t1415;
  double t1422;
  double t1423;
  double t1435;
  double t1418;
  double t1437;
  double t1442;
  double t1448;
  double t1453;
  double t1454;
  double t1446;
  double t1459;
  double t1480;
  double t1516;
  double t1522;
  double t1524;
  double t1483;
  double t1528;
  double t1539;
  double t1562;
  double t1564;
  double t1583;
  double t1549;
  double t1587;
  double t1588;
  double t1626;
  double t1650;
  double t1674;
  double t1590;
  double t1679;
  double t1685;
  double t1694;
  double t1696;
  double t1708;
  double t1771;
  double t1775;
  double t1779;
  double t1807;
  double t1825;
  double t1827;
  double t1830;
  double t1835;
  double t1838;
  double t1843;
  double t1847;
  double t1849;
  double t1871;
  double t1875;
  double t1892;
  double t1860;
  double t1908;
  double t1915;
  double t1931;
  double t1935;
  double t1939;
  double t1930;
  double t1944;
  double t1957;
  double t1968;
  double t1981;
  double t1983;
  double t2047;
  double t2057;
  double t2075;
  double t2079;
  double t2060;
  double t2082;
  double t2095;
  double t2133;
  double t2134;
  double t2140;
  double t2097;
  double t2141;
  double t2144;
  double t2156;
  double t2157;
  double t2161;
  double t2146;
  double t2165;
  double t2193;
  double t2202;
  double t2205;
  double t2207;
  double t2195;
  double t2217;
  double t2218;
  double t2234;
  double t2239;
  double t2244;
  double t2317;
  double t2327;
  double t2328;
  double t2314;
  double t2344;
  double t2346;
  double t2351;
  double t2359;
  double t2360;
  double t2349;
  double t2364;
  double t2368;
  double t2394;
  double t2396;
  double t2401;
  double t2392;
  double t2407;
  double t2418;
  double t2427;
  double t2437;
  double t2438;
  double t2426;
  double t2451;
  double t2460;
  double t2462;
  double t2465;
  double t2470;
  double t2523;
  double t2528;
  double t2532;
  double t2533;
  double t2546;
  double t2564;
  double t2566;
  double t2556;
  double t2573;
  double t2581;
  double t2594;
  double t2601;
  double t2607;
  double t2590;
  double t2620;
  double t2628;
  double t2638;
  double t2640;
  double t2641;
  double t2665;
  double t2669;
  double t2674;
  double t2675;
  double t2677;
  double t2684;
  double t2687;
  double t2681;
  double t2697;
  double t2699;
  double t2709;
  double t2710;
  double t2716;
  double t2784;
  double t2802;
  double t2807;
  double t2809;
  double t2814;
  double t2820;
  double t2821;
  double t2816;
  double t2857;
  double t2875;
  double t2879;
  double t2880;
  double t2914;
  double t2918;
  double t2924;
  double t2937;
  double t2941;
  double t2942;
  double t2930;
  double t2944;
  double t2946;
  double t2966;
  double t2968;
  double t2970;
  double t2974;
  double t2984;
  double t2990;
  double t2959;
  double t3015;
  double t3016;
  double t3028;
  double t3032;
  double t3038;
  double t3018;
  double t3040;
  double t3041;
  double t3046;
  double t3047;
  double t3050;
  double t3042;
  double t3051;
  double t3053;
  double t3093;
  double t3095;
  double t3096;
  double t3074;
  double t3102;
  double t3108;
  double t3131;
  double t3137;
  double t3139;
  double t3184;
  double t3190;
  double t3191;
  double t3200;
  double t3201;
  double t3204;
  double t3208;
  double t3213;
  double t3214;
  double t3196;
  double t3219;
  double t3236;
  double t3246;
  double t3248;
  double t3251;
  double t3242;
  double t3253;
  double t3258;
  double t3260;
  double t3268;
  double t3272;
  double t3259;
  double t3276;
  double t3282;
  double t3290;
  double t3294;
  double t3295;
  double t3286;
  double t3297;
  double t3298;
  double t3302;
  double t3303;
  double t3317;
  double t3353;
  double t3358;
  double t3364;
  double t3369;
  double t3378;
  double t3380;
  double t3381;
  double t3382;
  double t3379;
  double t3388;
  double t3389;
  double t3391;
  double t3392;
  double t3394;
  double t3390;
  double t3396;
  double t3403;
  double t3407;
  double t3409;
  double t3411;
  double t3404;
  double t3415;
  double t3416;
  double t3423;
  double t3432;
  double t3437;
  double t3418;
  double t3438;
  double t3439;
  double t3442;
  double t3449;
  double t3456;
  double t3504;
  double t3513;
  double t3516;
  double t3519;
  double t3527;
  double t3529;
  double t3532;
  double t3535;
  double t3541;
  double t3544;
  double t3558;
  double t3560;
  double t3565;
  double t3570;
  double t3577;
  double t3564;
  double t3583;
  double t3588;
  double t3599;
  double t3607;
  double t3609;
  double t3598;
  double t3616;
  double t3624;
  double t3646;
  double t3654;
  double t3658;
  double t3683;
  double t3687;
  double t3692;
  double t3696;
  double t3691;
  double t3697;
  double t3701;
  double t3705;
  double t3709;
  double t3717;
  double t3702;
  double t3718;
  double t3724;
  double t3729;
  double t3732;
  double t3735;
  double t3726;
  double t3741;
  double t3745;
  double t3747;
  double t3754;
  double t3757;
  double t3746;
  double t3762;
  double t3777;
  double t3784;
  double t3788;
  double t3792;
  double t2890;
  double t2895;
  double t3857;
  double t3868;
  double t3872;
  double t3855;
  double t3874;
  double t3877;
  double t3885;
  double t3902;
  double t3905;
  double t3881;
  double t3908;
  double t3911;
  double t3918;
  double t3919;
  double t3923;
  double t3916;
  double t3945;
  double t3954;
  double t3963;
  double t3965;
  double t3970;
  double t3958;
  double t3972;
  double t3975;
  double t3985;
  double t3998;
  double t4001;
  double t4028;
  double t4044;
  double t4045;
  double t4047;
  double t4050;
  double t4055;
  double t4064;
  double t4054;
  double t4069;
  double t4073;
  double t4094;
  double t4098;
  double t4100;
  double t4088;
  double t4101;
  double t4108;
  double t4118;
  double t4119;
  double t4123;
  double t4168;
  double t4170;
  double t4177;
  double t4179;
  double t4183;
  double t4189;
  double t4195;
  double t4187;
  double t4213;
  double t4228;
  double t4245;
  double t4256;
  double t4257;
  double t4304;
  double t4307;
  double t4308;
  double t4316;
  double t4319;
  double t4325;
  double t4329;
  double t4320;
  double t4354;
  double t4377;
  double t4378;
  double t4379;
  double t4419;
  double t4421;
  double t4423;
  double t4430;
  double t4433;
  double t4438;
  double t4444;
  double t4451;
  double t4456;
  double t4469;
  double t4472;
  double t4473;
  double t4459;
  double t4474;
  double t4479;
  double t4488;
  double t4489;
  double t4499;
  double t4482;
  double t4503;
  double t4507;
  double t4513;
  double t4515;
  double t4523;
  double t4580;
  double t4581;
  double t4584;
  double t4587;
  double t4600;
  double t4605;
  double t4586;
  double t4608;
  double t4609;
  double t4621;
  double t4626;
  double t4631;
  double t4620;
  double t4637;
  double t4639;
  double t4650;
  double t4652;
  double t4653;
  double t4640;
  double t4654;
  double t4657;
  double t4666;
  double t4667;
  double t4672;
  double t4659;
  double t4685;
  double t4686;
  double t4697;
  double t4699;
  double t4701;
  double t4693;
  double t4705;
  double t4710;
  double t4711;
  double t4718;
  double t4719;
  double t4720;
  double t4722;
  double t4730;
  double t4740;
  double t4749;
  double t4752;
  double t4739;
  double t4760;
  double t4763;
  double t4770;
  double t4775;
  double t4779;
  double t4764;
  double t4780;
  double t4781;
  double t4784;
  double t4788;
  double t4802;
  double t4782;
  double t4806;
  double t4810;
  double t4815;
  double t4821;
  double t4825;
  double t4814;
  double t4832;
  double t4834;
  double t4849;
  double t4852;
  double t4858;
  double t4891;
  double t4893;
  double t4896;
  double t4899;
  double t4904;
  double t4912;
  double t4921;
  double t4905;
  double t4929;
  double t4933;
  double t4941;
  double t4945;
  double t4953;
  double t4937;
  double t4961;
  double t4971;
  double t4985;
  double t4989;
  double t4992;
  double t5044;
  double t5045;
  double t5047;
  double t5056;
  double t5061;
  double t5068;
  double t5080;
  double t5062;
  double t5081;
  double t5086;
  double t5095;
  double t5097;
  double t5099;
  double t5155;
  double t5174;
  double t5178;
  double t5191;
  double t5192;
  double t5198;
  double t5199;
  double t5194;
  double t5221;
  double t5234;
  double t5236;
  double t5242;
  double t5282;
  double t5287;
  double t5299;
  double t5304;
  double t5305;
  double t5310;
  double t5312;
  double t5315;
  double t5318;
  double t5303;
  double t5327;
  double t5338;
  double t5349;
  double t5355;
  double t5365;
  double t5340;
  double t5366;
  double t5375;
  double t5385;
  double t5386;
  double t5389;
  double t5384;
  double t5394;
  double t5395;
  double t5401;
  double t5410;
  double t5413;
  double t5399;
  double t5416;
  double t5426;
  double t5440;
  double t5441;
  double t5442;
  double t1163;
  double t1277;
  double t1278;
  double t1294;
  double t1297;
  double t1328;
  double t1688;
  double t1715;
  double t1720;
  double t1726;
  double t1728;
  double t1733;
  double t1964;
  double t1992;
  double t1995;
  double t1999;
  double t2006;
  double t2010;
  double t2223;
  double t2256;
  double t2259;
  double t2289;
  double t2291;
  double t2297;
  double t2461;
  double t2476;
  double t2478;
  double t2488;
  double t2489;
  double t2496;
  double t2634;
  double t2644;
  double t2647;
  double t2651;
  double t2652;
  double t2654;
  double t2708;
  double t2728;
  double t2729;
  double t2745;
  double t2748;
  double t2754;
  double t2827;
  double t2849;
  double t2858;
  double t2864;
  double t2881;
  double t2883;
  double t3119;
  double t3143;
  double t3146;
  double t3158;
  double t3166;
  double t3172;
  double t3300;
  double t3320;
  double t3321;
  double t3324;
  double t3328;
  double t3337;
  double t3441;
  double t3474;
  double t3477;
  double t3486;
  double t3490;
  double t3494;
  double t3642;
  double t3661;
  double t3664;
  double t3668;
  double t3669;
  double t3671;
  double t3779;
  double t3796;
  double t3798;
  double t3805;
  double t3807;
  double t3808;
  double t3822;
  double t3828;
  double t3836;
  double t2898;
  double t3981;
  double t4008;
  double t4012;
  double t4016;
  double t4018;
  double t4020;
  double t4109;
  double t4124;
  double t4125;
  double t4136;
  double t4156;
  double t4157;
  double t4240;
  double t4258;
  double t4261;
  double t4266;
  double t4271;
  double t4295;
  double t4333;
  double t4349;
  double t4357;
  double t4361;
  double t4380;
  double t4388;
  double t4396;
  double t4400;
  double t4509;
  double t4532;
  double t4542;
  double t4547;
  double t4553;
  double t4563;
  double t6098;
  double t6104;
  double t6106;
  double t4845;
  double t4863;
  double t4870;
  double t4875;
  double t4876;
  double t4878;
  double t4980;
  double t4999;
  double t5008;
  double t5017;
  double t5019;
  double t5021;
  double t5093;
  double t5104;
  double t5108;
  double t5122;
  double t5133;
  double t5135;
  double t5201;
  double t5207;
  double t5222;
  double t5223;
  double t5251;
  double t5257;
  double t5269;
  double t5276;
  double t5430;
  double t5448;
  double t5451;
  double t5456;
  double t5464;
  double t5470;
  double t6226;
  double t6231;
  double t6244;
  double t6251;
  double t5494;
  double t5496;
  double t5515;
  double t6300;
  double t6303;
  double t6348;
  double t6352;
  double t6399;
  double t6407;
  double t6445;
  double t6451;
  double t6492;
  double t6499;
  double t6270;
  double t6272;
  double t6284;
  double t6232;
  double t6235;
  double t6236;
  double t6304;
  double t6312;
  double t6314;
  double t6290;
  double t6295;
  double t6296;
  double t6325;
  double t6331;
  double t6332;
  double t6353;
  double t6359;
  double t6367;
  double t6380;
  double t6381;
  double t6385;
  double t6409;
  double t6410;
  double t6411;
  double t6415;
  double t6424;
  double t6425;
  double t6459;
  double t6460;
  double t6466;
  double t6475;
  double t6477;
  double t6478;
  double t6501;
  double t6502;
  double t6507;
  double t6515;
  double t6517;
  double t6519;
  double t6261;
  double t5540;
  double t5548;
  double t5550;
  double t6254;
  double t6265;
  double t5564;
  double t5578;
  double t5581;
  double t5588;
  double t5591;
  double t5593;
  double t6619;
  double t6626;
  double t6638;
  double t6652;
  double t6659;
  double t5603;
  double t5604;
  double t6716;
  double t6722;
  double t6731;
  double t6739;
  double t6743;
  double t6823;
  double t6827;
  double t6830;
  double t6831;
  double t6846;
  double t6909;
  double t6910;
  double t6916;
  double t6931;
  double t6933;
  double t6988;
  double t6993;
  double t7002;
  double t7007;
  double t7016;
  double t7055;
  double t7059;
  double t7060;
  double t7081;
  double t7083;
  double t7109;
  double t7111;
  double t7117;
  double t7118;
  double t7120;
  double t5629;
  double t5648;
  double t5656;
  double t7861;
  double t7868;
  double t7870;
  double t7874;
  double t7880;
  double t7883;
  double t7888;
  double t7889;
  double t7891;
  double t7896;
  double t7898;
  double t7902;
  double t7903;
  double t7904;
  double t5659;
  double t5662;
  double t5674;
  t528 = Cos(var1[3]);
  t549 = Cos(var1[4]);
  t624 = Cos(var1[5]);
  t652 = Sin(var1[13]);
  t499 = Cos(var1[13]);
  t661 = Sin(var1[5]);
  t733 = Cos(var1[15]);
  t641 = t499*t528*t549*t624;
  t662 = -1.*t528*t549*t652*t661;
  t681 = t641 + t662;
  t476 = Sin(var1[15]);
  t743 = Cos(var1[14]);
  t760 = Sin(var1[4]);
  t767 = -1.*t743*t528*t760;
  t784 = Sin(var1[14]);
  t785 = t528*t549*t624*t652;
  t791 = t499*t528*t549*t661;
  t804 = t785 + t791;
  t841 = t784*t804;
  t878 = t767 + t841;
  t901 = Cos(var1[16]);
  t707 = t476*t681;
  t879 = t733*t878;
  t884 = t707 + t879;
  t443 = Sin(var1[16]);
  t927 = t733*t681;
  t930 = -1.*t476*t878;
  t932 = t927 + t930;
  t972 = Cos(var1[17]);
  t890 = -1.*t443*t884;
  t933 = t901*t932;
  t956 = t890 + t933;
  t426 = Sin(var1[17]);
  t975 = t901*t884;
  t981 = t443*t932;
  t993 = t975 + t981;
  t1033 = Cos(var1[18]);
  t966 = t426*t956;
  t1002 = t972*t993;
  t1009 = t966 + t1002;
  t388 = Sin(var1[18]);
  t1066 = t972*t956;
  t1098 = -1.*t426*t993;
  t1108 = t1066 + t1098;
  t1169 = Cos(var1[19]);
  t1030 = -1.*t388*t1009;
  t1132 = t1033*t1108;
  t1161 = t1030 + t1132;
  t351 = Sin(var1[19]);
  t1171 = t1033*t1009;
  t1178 = t388*t1108;
  t1246 = t1171 + t1178;
  t1411 = Sin(var1[3]);
  t1404 = t528*t624*t760;
  t1413 = t1411*t661;
  t1415 = t1404 + t1413;
  t1422 = t624*t1411;
  t1423 = -1.*t528*t760*t661;
  t1435 = t1422 + t1423;
  t1418 = -1.*t652*t1415;
  t1437 = t499*t1435;
  t1442 = t1418 + t1437;
  t1448 = t499*t1415;
  t1453 = t652*t1435;
  t1454 = t1448 + t1453;
  t1446 = t476*t1442;
  t1459 = t733*t784*t1454;
  t1480 = t1446 + t1459;
  t1516 = t733*t1442;
  t1522 = -1.*t784*t476*t1454;
  t1524 = t1516 + t1522;
  t1483 = -1.*t443*t1480;
  t1528 = t901*t1524;
  t1539 = t1483 + t1528;
  t1562 = t901*t1480;
  t1564 = t443*t1524;
  t1583 = t1562 + t1564;
  t1549 = t426*t1539;
  t1587 = t972*t1583;
  t1588 = t1549 + t1587;
  t1626 = t972*t1539;
  t1650 = -1.*t426*t1583;
  t1674 = t1626 + t1650;
  t1590 = -1.*t388*t1588;
  t1679 = t1033*t1674;
  t1685 = t1590 + t1679;
  t1694 = t1033*t1588;
  t1696 = t388*t1674;
  t1708 = t1694 + t1696;
  t1771 = -1.*t528*t549*t784;
  t1775 = t652*t1415;
  t1779 = -1.*t624*t1411;
  t1807 = t528*t760*t661;
  t1825 = t1779 + t1807;
  t1827 = t499*t1825;
  t1830 = t1775 + t1827;
  t1835 = t743*t1830;
  t1838 = t1771 + t1835;
  t1843 = -1.*t901*t476*t1838;
  t1847 = -1.*t733*t443*t1838;
  t1849 = t1843 + t1847;
  t1871 = t733*t901*t1838;
  t1875 = -1.*t476*t443*t1838;
  t1892 = t1871 + t1875;
  t1860 = t426*t1849;
  t1908 = t972*t1892;
  t1915 = t1860 + t1908;
  t1931 = t972*t1849;
  t1935 = -1.*t426*t1892;
  t1939 = t1931 + t1935;
  t1930 = -1.*t388*t1915;
  t1944 = t1033*t1939;
  t1957 = t1930 + t1944;
  t1968 = t1033*t1915;
  t1981 = t388*t1939;
  t1983 = t1968 + t1981;
  t2047 = -1.*t499*t1825;
  t2057 = t1418 + t2047;
  t2075 = -1.*t652*t1825;
  t2079 = t1448 + t2075;
  t2060 = t476*t2057;
  t2082 = t733*t784*t2079;
  t2095 = t2060 + t2082;
  t2133 = t733*t2057;
  t2134 = -1.*t784*t476*t2079;
  t2140 = t2133 + t2134;
  t2097 = -1.*t443*t2095;
  t2141 = t901*t2140;
  t2144 = t2097 + t2141;
  t2156 = t901*t2095;
  t2157 = t443*t2140;
  t2161 = t2156 + t2157;
  t2146 = t426*t2144;
  t2165 = t972*t2161;
  t2193 = t2146 + t2165;
  t2202 = t972*t2144;
  t2205 = -1.*t426*t2161;
  t2207 = t2202 + t2205;
  t2195 = -1.*t388*t2193;
  t2217 = t1033*t2207;
  t2218 = t2195 + t2217;
  t2234 = t1033*t2193;
  t2239 = t388*t2207;
  t2244 = t2234 + t2239;
  t2317 = t743*t528*t549;
  t2327 = t784*t1830;
  t2328 = t2317 + t2327;
  t2314 = -1.*t476*t2079;
  t2344 = -1.*t733*t2328;
  t2346 = t2314 + t2344;
  t2351 = t733*t2079;
  t2359 = -1.*t476*t2328;
  t2360 = t2351 + t2359;
  t2349 = t443*t2346;
  t2364 = t901*t2360;
  t2368 = t2349 + t2364;
  t2394 = t901*t2346;
  t2396 = -1.*t443*t2360;
  t2401 = t2394 + t2396;
  t2392 = -1.*t426*t2368;
  t2407 = t972*t2401;
  t2418 = t2392 + t2407;
  t2427 = t972*t2368;
  t2437 = t426*t2401;
  t2438 = t2427 + t2437;
  t2426 = t388*t2418;
  t2451 = t1033*t2438;
  t2460 = t2426 + t2451;
  t2462 = t1033*t2418;
  t2465 = -1.*t388*t2438;
  t2470 = t2462 + t2465;
  t2523 = t476*t2079;
  t2528 = t733*t2328;
  t2532 = t2523 + t2528;
  t2533 = -1.*t443*t2532;
  t2546 = t2533 + t2364;
  t2564 = -1.*t901*t2532;
  t2566 = t2564 + t2396;
  t2556 = -1.*t426*t2546;
  t2573 = t972*t2566;
  t2581 = t2556 + t2573;
  t2594 = t972*t2546;
  t2601 = t426*t2566;
  t2607 = t2594 + t2601;
  t2590 = t388*t2581;
  t2620 = t1033*t2607;
  t2628 = t2590 + t2620;
  t2638 = t1033*t2581;
  t2640 = -1.*t388*t2607;
  t2641 = t2638 + t2640;
  t2665 = t901*t2532;
  t2669 = t443*t2360;
  t2674 = t2665 + t2669;
  t2675 = -1.*t972*t2674;
  t2677 = t2556 + t2675;
  t2684 = -1.*t426*t2674;
  t2687 = t2594 + t2684;
  t2681 = t388*t2677;
  t2697 = t1033*t2687;
  t2699 = t2681 + t2697;
  t2709 = t1033*t2677;
  t2710 = -1.*t388*t2687;
  t2716 = t2709 + t2710;
  t2784 = t426*t2546;
  t2802 = t972*t2674;
  t2807 = t2784 + t2802;
  t2809 = -1.*t388*t2807;
  t2814 = t2809 + t2697;
  t2820 = -1.*t1033*t2807;
  t2821 = t2820 + t2710;
  t2816 = -1.*t351*t2814;
  t2857 = t1169*t2814;
  t2875 = t1033*t2807;
  t2879 = t388*t2687;
  t2880 = t2875 + t2879;
  t2914 = -1.*t624*t1411*t760;
  t2918 = t528*t661;
  t2924 = t2914 + t2918;
  t2937 = -1.*t528*t624;
  t2941 = -1.*t1411*t760*t661;
  t2942 = t2937 + t2941;
  t2930 = t499*t2924;
  t2944 = -1.*t652*t2942;
  t2946 = t2930 + t2944;
  t2966 = -1.*t743*t549*t1411;
  t2968 = t652*t2924;
  t2970 = t499*t2942;
  t2974 = t2968 + t2970;
  t2984 = t784*t2974;
  t2990 = t2966 + t2984;
  t2959 = t476*t2946;
  t3015 = t733*t2990;
  t3016 = t2959 + t3015;
  t3028 = t733*t2946;
  t3032 = -1.*t476*t2990;
  t3038 = t3028 + t3032;
  t3018 = -1.*t443*t3016;
  t3040 = t901*t3038;
  t3041 = t3018 + t3040;
  t3046 = t901*t3016;
  t3047 = t443*t3038;
  t3050 = t3046 + t3047;
  t3042 = t426*t3041;
  t3051 = t972*t3050;
  t3053 = t3042 + t3051;
  t3093 = t972*t3041;
  t3095 = -1.*t426*t3050;
  t3096 = t3093 + t3095;
  t3074 = -1.*t388*t3053;
  t3102 = t1033*t3096;
  t3108 = t3074 + t3102;
  t3131 = t1033*t3053;
  t3137 = t388*t3096;
  t3139 = t3131 + t3137;
  t3184 = t499*t549*t624*t1411;
  t3190 = -1.*t549*t652*t1411*t661;
  t3191 = t3184 + t3190;
  t3200 = -1.*t743*t1411*t760;
  t3201 = t549*t624*t652*t1411;
  t3204 = t499*t549*t1411*t661;
  t3208 = t3201 + t3204;
  t3213 = t784*t3208;
  t3214 = t3200 + t3213;
  t3196 = t476*t3191;
  t3219 = t733*t3214;
  t3236 = t3196 + t3219;
  t3246 = t733*t3191;
  t3248 = -1.*t476*t3214;
  t3251 = t3246 + t3248;
  t3242 = -1.*t443*t3236;
  t3253 = t901*t3251;
  t3258 = t3242 + t3253;
  t3260 = t901*t3236;
  t3268 = t443*t3251;
  t3272 = t3260 + t3268;
  t3259 = t426*t3258;
  t3276 = t972*t3272;
  t3282 = t3259 + t3276;
  t3290 = t972*t3258;
  t3294 = -1.*t426*t3272;
  t3295 = t3290 + t3294;
  t3286 = -1.*t388*t3282;
  t3297 = t1033*t3295;
  t3298 = t3286 + t3297;
  t3302 = t1033*t3282;
  t3303 = t388*t3295;
  t3317 = t3302 + t3303;
  t3353 = t624*t1411*t760;
  t3358 = -1.*t528*t661;
  t3364 = t3353 + t3358;
  t3369 = -1.*t652*t3364;
  t3378 = t3369 + t2970;
  t3380 = t499*t3364;
  t3381 = t652*t2942;
  t3382 = t3380 + t3381;
  t3379 = t476*t3378;
  t3388 = t733*t784*t3382;
  t3389 = t3379 + t3388;
  t3391 = t733*t3378;
  t3392 = -1.*t784*t476*t3382;
  t3394 = t3391 + t3392;
  t3390 = -1.*t443*t3389;
  t3396 = t901*t3394;
  t3403 = t3390 + t3396;
  t3407 = t901*t3389;
  t3409 = t443*t3394;
  t3411 = t3407 + t3409;
  t3404 = t426*t3403;
  t3415 = t972*t3411;
  t3416 = t3404 + t3415;
  t3423 = t972*t3403;
  t3432 = -1.*t426*t3411;
  t3437 = t3423 + t3432;
  t3418 = -1.*t388*t3416;
  t3438 = t1033*t3437;
  t3439 = t3418 + t3438;
  t3442 = t1033*t3416;
  t3449 = t388*t3437;
  t3456 = t3442 + t3449;
  t3504 = -1.*t549*t784*t1411;
  t3513 = t652*t3364;
  t3516 = t528*t624;
  t3519 = t1411*t760*t661;
  t3527 = t3516 + t3519;
  t3529 = t499*t3527;
  t3532 = t3513 + t3529;
  t3535 = t743*t3532;
  t3541 = t3504 + t3535;
  t3544 = -1.*t901*t476*t3541;
  t3558 = -1.*t733*t443*t3541;
  t3560 = t3544 + t3558;
  t3565 = t733*t901*t3541;
  t3570 = -1.*t476*t443*t3541;
  t3577 = t3565 + t3570;
  t3564 = t426*t3560;
  t3583 = t972*t3577;
  t3588 = t3564 + t3583;
  t3599 = t972*t3560;
  t3607 = -1.*t426*t3577;
  t3609 = t3599 + t3607;
  t3598 = -1.*t388*t3588;
  t3616 = t1033*t3609;
  t3624 = t3598 + t3616;
  t3646 = t1033*t3588;
  t3654 = t388*t3609;
  t3658 = t3646 + t3654;
  t3683 = -1.*t499*t3527;
  t3687 = t3369 + t3683;
  t3692 = -1.*t652*t3527;
  t3696 = t3380 + t3692;
  t3691 = t476*t3687;
  t3697 = t733*t784*t3696;
  t3701 = t3691 + t3697;
  t3705 = t733*t3687;
  t3709 = -1.*t784*t476*t3696;
  t3717 = t3705 + t3709;
  t3702 = -1.*t443*t3701;
  t3718 = t901*t3717;
  t3724 = t3702 + t3718;
  t3729 = t901*t3701;
  t3732 = t443*t3717;
  t3735 = t3729 + t3732;
  t3726 = t426*t3724;
  t3741 = t972*t3735;
  t3745 = t3726 + t3741;
  t3747 = t972*t3724;
  t3754 = -1.*t426*t3735;
  t3757 = t3747 + t3754;
  t3746 = -1.*t388*t3745;
  t3762 = t1033*t3757;
  t3777 = t3746 + t3762;
  t3784 = t1033*t3745;
  t3788 = t388*t3757;
  t3792 = t3784 + t3788;
  t2890 = -1.*t351*t2880;
  t2895 = t2857 + t2890;
  t3857 = t743*t549*t1411;
  t3868 = t784*t3532;
  t3872 = t3857 + t3868;
  t3855 = -1.*t476*t3696;
  t3874 = -1.*t733*t3872;
  t3877 = t3855 + t3874;
  t3885 = t733*t3696;
  t3902 = -1.*t476*t3872;
  t3905 = t3885 + t3902;
  t3881 = t443*t3877;
  t3908 = t901*t3905;
  t3911 = t3881 + t3908;
  t3918 = t901*t3877;
  t3919 = -1.*t443*t3905;
  t3923 = t3918 + t3919;
  t3916 = -1.*t426*t3911;
  t3945 = t972*t3923;
  t3954 = t3916 + t3945;
  t3963 = t972*t3911;
  t3965 = t426*t3923;
  t3970 = t3963 + t3965;
  t3958 = t388*t3954;
  t3972 = t1033*t3970;
  t3975 = t3958 + t3972;
  t3985 = t1033*t3954;
  t3998 = -1.*t388*t3970;
  t4001 = t3985 + t3998;
  t4028 = t476*t3696;
  t4044 = t733*t3872;
  t4045 = t4028 + t4044;
  t4047 = -1.*t443*t4045;
  t4050 = t4047 + t3908;
  t4055 = -1.*t901*t4045;
  t4064 = t4055 + t3919;
  t4054 = -1.*t426*t4050;
  t4069 = t972*t4064;
  t4073 = t4054 + t4069;
  t4094 = t972*t4050;
  t4098 = t426*t4064;
  t4100 = t4094 + t4098;
  t4088 = t388*t4073;
  t4101 = t1033*t4100;
  t4108 = t4088 + t4101;
  t4118 = t1033*t4073;
  t4119 = -1.*t388*t4100;
  t4123 = t4118 + t4119;
  t4168 = t901*t4045;
  t4170 = t443*t3905;
  t4177 = t4168 + t4170;
  t4179 = -1.*t972*t4177;
  t4183 = t4054 + t4179;
  t4189 = -1.*t426*t4177;
  t4195 = t4094 + t4189;
  t4187 = t388*t4183;
  t4213 = t1033*t4195;
  t4228 = t4187 + t4213;
  t4245 = t1033*t4183;
  t4256 = -1.*t388*t4195;
  t4257 = t4245 + t4256;
  t4304 = t426*t4050;
  t4307 = t972*t4177;
  t4308 = t4304 + t4307;
  t4316 = -1.*t388*t4308;
  t4319 = t4316 + t4213;
  t4325 = -1.*t1033*t4308;
  t4329 = t4325 + t4256;
  t4320 = -1.*t351*t4319;
  t4354 = t1169*t4319;
  t4377 = t1033*t4308;
  t4378 = t388*t4195;
  t4379 = t4377 + t4378;
  t4419 = t784*t760;
  t4421 = t549*t624*t652;
  t4423 = t499*t549*t661;
  t4430 = t4421 + t4423;
  t4433 = t743*t4430;
  t4438 = t4419 + t4433;
  t4444 = -1.*t901*t476*t4438;
  t4451 = -1.*t733*t443*t4438;
  t4456 = t4444 + t4451;
  t4469 = t733*t901*t4438;
  t4472 = -1.*t476*t443*t4438;
  t4473 = t4469 + t4472;
  t4459 = t426*t4456;
  t4474 = t972*t4473;
  t4479 = t4459 + t4474;
  t4488 = t972*t4456;
  t4489 = -1.*t426*t4473;
  t4499 = t4488 + t4489;
  t4482 = -1.*t388*t4479;
  t4503 = t1033*t4499;
  t4507 = t4482 + t4503;
  t4513 = t1033*t4479;
  t4515 = t388*t4499;
  t4523 = t4513 + t4515;
  t4580 = -1.*t549*t624*t652;
  t4581 = -1.*t499*t549*t661;
  t4584 = t4580 + t4581;
  t4587 = t499*t549*t624;
  t4600 = -1.*t549*t652*t661;
  t4605 = t4587 + t4600;
  t4586 = t476*t4584;
  t4608 = t733*t784*t4605;
  t4609 = t4586 + t4608;
  t4621 = t733*t4584;
  t4626 = -1.*t784*t476*t4605;
  t4631 = t4621 + t4626;
  t4620 = -1.*t443*t4609;
  t4637 = t901*t4631;
  t4639 = t4620 + t4637;
  t4650 = t901*t4609;
  t4652 = t443*t4631;
  t4653 = t4650 + t4652;
  t4640 = t426*t4639;
  t4654 = t972*t4653;
  t4657 = t4640 + t4654;
  t4666 = t972*t4639;
  t4667 = -1.*t426*t4653;
  t4672 = t4666 + t4667;
  t4659 = -1.*t388*t4657;
  t4685 = t1033*t4672;
  t4686 = t4659 + t4685;
  t4697 = t1033*t4657;
  t4699 = t388*t4672;
  t4701 = t4697 + t4699;
  t4693 = t351*t4686;
  t4705 = t1169*t4701;
  t4710 = t4693 + t4705;
  t4711 = 0.642788*t4710;
  t4718 = t1169*t4686;
  t4719 = -1.*t351*t4701;
  t4720 = t4718 + t4719;
  t4722 = 0.766044*t4720;
  t4730 = t4711 + t4722;
  t4740 = -1.*t743*t760;
  t4749 = t784*t4430;
  t4752 = t4740 + t4749;
  t4739 = -1.*t476*t4605;
  t4760 = -1.*t733*t4752;
  t4763 = t4739 + t4760;
  t4770 = t733*t4605;
  t4775 = -1.*t476*t4752;
  t4779 = t4770 + t4775;
  t4764 = t443*t4763;
  t4780 = t901*t4779;
  t4781 = t4764 + t4780;
  t4784 = t901*t4763;
  t4788 = -1.*t443*t4779;
  t4802 = t4784 + t4788;
  t4782 = -1.*t426*t4781;
  t4806 = t972*t4802;
  t4810 = t4782 + t4806;
  t4815 = t972*t4781;
  t4821 = t426*t4802;
  t4825 = t4815 + t4821;
  t4814 = t388*t4810;
  t4832 = t1033*t4825;
  t4834 = t4814 + t4832;
  t4849 = t1033*t4810;
  t4852 = -1.*t388*t4825;
  t4858 = t4849 + t4852;
  t4891 = t476*t4605;
  t4893 = t733*t4752;
  t4896 = t4891 + t4893;
  t4899 = -1.*t443*t4896;
  t4904 = t4899 + t4780;
  t4912 = -1.*t901*t4896;
  t4921 = t4912 + t4788;
  t4905 = -1.*t426*t4904;
  t4929 = t972*t4921;
  t4933 = t4905 + t4929;
  t4941 = t972*t4904;
  t4945 = t426*t4921;
  t4953 = t4941 + t4945;
  t4937 = t388*t4933;
  t4961 = t1033*t4953;
  t4971 = t4937 + t4961;
  t4985 = t1033*t4933;
  t4989 = -1.*t388*t4953;
  t4992 = t4985 + t4989;
  t5044 = t901*t4896;
  t5045 = t443*t4779;
  t5047 = t5044 + t5045;
  t5056 = -1.*t972*t5047;
  t5061 = t4905 + t5056;
  t5068 = -1.*t426*t5047;
  t5080 = t4941 + t5068;
  t5062 = t388*t5061;
  t5081 = t1033*t5080;
  t5086 = t5062 + t5081;
  t5095 = t1033*t5061;
  t5097 = -1.*t388*t5080;
  t5099 = t5095 + t5097;
  t5155 = t426*t4904;
  t5174 = t972*t5047;
  t5178 = t5155 + t5174;
  t5191 = -1.*t388*t5178;
  t5192 = t5191 + t5081;
  t5198 = -1.*t1033*t5178;
  t5199 = t5198 + t5097;
  t5194 = -1.*t351*t5192;
  t5221 = t1169*t5192;
  t5234 = t1033*t5178;
  t5236 = t388*t5080;
  t5242 = t5234 + t5236;
  t5282 = -1.*t499*t624*t760;
  t5287 = t652*t760*t661;
  t5299 = t5282 + t5287;
  t5304 = -1.*t743*t549;
  t5305 = -1.*t624*t652*t760;
  t5310 = -1.*t499*t760*t661;
  t5312 = t5305 + t5310;
  t5315 = t784*t5312;
  t5318 = t5304 + t5315;
  t5303 = t476*t5299;
  t5327 = t733*t5318;
  t5338 = t5303 + t5327;
  t5349 = t733*t5299;
  t5355 = -1.*t476*t5318;
  t5365 = t5349 + t5355;
  t5340 = -1.*t443*t5338;
  t5366 = t901*t5365;
  t5375 = t5340 + t5366;
  t5385 = t901*t5338;
  t5386 = t443*t5365;
  t5389 = t5385 + t5386;
  t5384 = t426*t5375;
  t5394 = t972*t5389;
  t5395 = t5384 + t5394;
  t5401 = t972*t5375;
  t5410 = -1.*t426*t5389;
  t5413 = t5401 + t5410;
  t5399 = -1.*t388*t5395;
  t5416 = t1033*t5413;
  t5426 = t5399 + t5416;
  t5440 = t1033*t5395;
  t5441 = t388*t5413;
  t5442 = t5440 + t5441;
  t1163 = t351*t1161;
  t1277 = t1169*t1246;
  t1278 = t1163 + t1277;
  t1294 = t1169*t1161;
  t1297 = -1.*t351*t1246;
  t1328 = t1294 + t1297;
  t1688 = t351*t1685;
  t1715 = t1169*t1708;
  t1720 = t1688 + t1715;
  t1726 = t1169*t1685;
  t1728 = -1.*t351*t1708;
  t1733 = t1726 + t1728;
  t1964 = t351*t1957;
  t1992 = t1169*t1983;
  t1995 = t1964 + t1992;
  t1999 = t1169*t1957;
  t2006 = -1.*t351*t1983;
  t2010 = t1999 + t2006;
  t2223 = t351*t2218;
  t2256 = t1169*t2244;
  t2259 = t2223 + t2256;
  t2289 = t1169*t2218;
  t2291 = -1.*t351*t2244;
  t2297 = t2289 + t2291;
  t2461 = -1.*t351*t2460;
  t2476 = t1169*t2470;
  t2478 = t2461 + t2476;
  t2488 = t1169*t2460;
  t2489 = t351*t2470;
  t2496 = t2488 + t2489;
  t2634 = -1.*t351*t2628;
  t2644 = t1169*t2641;
  t2647 = t2634 + t2644;
  t2651 = t1169*t2628;
  t2652 = t351*t2641;
  t2654 = t2651 + t2652;
  t2708 = -1.*t351*t2699;
  t2728 = t1169*t2716;
  t2729 = t2708 + t2728;
  t2745 = t1169*t2699;
  t2748 = t351*t2716;
  t2754 = t2745 + t2748;
  t2827 = t1169*t2821;
  t2849 = t2816 + t2827;
  t2858 = t351*t2821;
  t2864 = t2857 + t2858;
  t2881 = -1.*t1169*t2880;
  t2883 = t2816 + t2881;
  t3119 = t351*t3108;
  t3143 = t1169*t3139;
  t3146 = t3119 + t3143;
  t3158 = t1169*t3108;
  t3166 = -1.*t351*t3139;
  t3172 = t3158 + t3166;
  t3300 = t351*t3298;
  t3320 = t1169*t3317;
  t3321 = t3300 + t3320;
  t3324 = t1169*t3298;
  t3328 = -1.*t351*t3317;
  t3337 = t3324 + t3328;
  t3441 = t351*t3439;
  t3474 = t1169*t3456;
  t3477 = t3441 + t3474;
  t3486 = t1169*t3439;
  t3490 = -1.*t351*t3456;
  t3494 = t3486 + t3490;
  t3642 = t351*t3624;
  t3661 = t1169*t3658;
  t3664 = t3642 + t3661;
  t3668 = t1169*t3624;
  t3669 = -1.*t351*t3658;
  t3671 = t3668 + t3669;
  t3779 = t351*t3777;
  t3796 = t1169*t3792;
  t3798 = t3779 + t3796;
  t3805 = t1169*t3777;
  t3807 = -1.*t351*t3792;
  t3808 = t3805 + t3807;
  t3822 = t351*t2814;
  t3828 = t1169*t2880;
  t3836 = t3822 + t3828;
  t2898 = 0.642788*t2895;
  t3981 = -1.*t351*t3975;
  t4008 = t1169*t4001;
  t4012 = t3981 + t4008;
  t4016 = t1169*t3975;
  t4018 = t351*t4001;
  t4020 = t4016 + t4018;
  t4109 = -1.*t351*t4108;
  t4124 = t1169*t4123;
  t4125 = t4109 + t4124;
  t4136 = t1169*t4108;
  t4156 = t351*t4123;
  t4157 = t4136 + t4156;
  t4240 = -1.*t351*t4228;
  t4258 = t1169*t4257;
  t4261 = t4240 + t4258;
  t4266 = t1169*t4228;
  t4271 = t351*t4257;
  t4295 = t4266 + t4271;
  t4333 = t1169*t4329;
  t4349 = t4320 + t4333;
  t4357 = t351*t4329;
  t4361 = t4354 + t4357;
  t4380 = -1.*t1169*t4379;
  t4388 = t4320 + t4380;
  t4396 = -1.*t351*t4379;
  t4400 = t4354 + t4396;
  t4509 = t351*t4507;
  t4532 = t1169*t4523;
  t4542 = t4509 + t4532;
  t4547 = t1169*t4507;
  t4553 = -1.*t351*t4523;
  t4563 = t4547 + t4553;
  t6098 = -0.766044*t4710;
  t6104 = 0.642788*t4720;
  t6106 = t6098 + t6104;
  t4845 = -1.*t351*t4834;
  t4863 = t1169*t4858;
  t4870 = t4845 + t4863;
  t4875 = t1169*t4834;
  t4876 = t351*t4858;
  t4878 = t4875 + t4876;
  t4980 = -1.*t351*t4971;
  t4999 = t1169*t4992;
  t5008 = t4980 + t4999;
  t5017 = t1169*t4971;
  t5019 = t351*t4992;
  t5021 = t5017 + t5019;
  t5093 = -1.*t351*t5086;
  t5104 = t1169*t5099;
  t5108 = t5093 + t5104;
  t5122 = t1169*t5086;
  t5133 = t351*t5099;
  t5135 = t5122 + t5133;
  t5201 = t1169*t5199;
  t5207 = t5194 + t5201;
  t5222 = t351*t5199;
  t5223 = t5221 + t5222;
  t5251 = -1.*t1169*t5242;
  t5257 = t5194 + t5251;
  t5269 = -1.*t351*t5242;
  t5276 = t5221 + t5269;
  t5430 = t351*t5426;
  t5448 = t1169*t5442;
  t5451 = t5430 + t5448;
  t5456 = t1169*t5426;
  t5464 = -1.*t351*t5442;
  t5470 = t5456 + t5464;
  t6226 = -1.*t499;
  t6231 = 1. + t6226;
  t6244 = -1.*t743;
  t6251 = 1. + t6244;
  t5494 = t528*t784*t760;
  t5496 = t743*t804;
  t5515 = t5494 + t5496;
  t6300 = -1.*t733;
  t6303 = 1. + t6300;
  t6348 = -1.*t901;
  t6352 = 1. + t6348;
  t6399 = -1.*t972;
  t6407 = 1. + t6399;
  t6445 = -1.*t1033;
  t6451 = 1. + t6445;
  t6492 = -1.*t1169;
  t6499 = 1. + t6492;
  t6270 = -0.135*t6231;
  t6272 = 0.07996*t652;
  t6284 = 0. + t6270 + t6272;
  t6232 = 0.07996*t6231;
  t6235 = 0.135*t652;
  t6236 = 0. + t6232 + t6235;
  t6304 = -0.01004*t6303;
  t6312 = 0.08055*t476;
  t6314 = 0. + t6304 + t6312;
  t6290 = -0.135*t6251;
  t6295 = 0.08055*t784;
  t6296 = 0. + t6290 + t6295;
  t6325 = -0.08055*t6303;
  t6331 = -0.01004*t476;
  t6332 = 0. + t6325 + t6331;
  t6353 = -0.08055*t6352;
  t6359 = -0.13004*t443;
  t6367 = 0. + t6353 + t6359;
  t6380 = -0.13004*t6352;
  t6381 = 0.08055*t443;
  t6385 = 0. + t6380 + t6381;
  t6409 = -0.19074*t6407;
  t6410 = 0.03315*t426;
  t6411 = 0. + t6409 + t6410;
  t6415 = -0.03315*t6407;
  t6424 = -0.19074*t426;
  t6425 = 0. + t6415 + t6424;
  t6459 = -0.01315*t6451;
  t6460 = -0.62554*t388;
  t6466 = 0. + t6459 + t6460;
  t6475 = -0.62554*t6451;
  t6477 = 0.01315*t388;
  t6478 = 0. + t6475 + t6477;
  t6501 = -1.03354*t6499;
  t6502 = 0.05315*t351;
  t6507 = 0. + t6501 + t6502;
  t6515 = -0.05315*t6499;
  t6517 = -1.03354*t351;
  t6519 = 0. + t6515 + t6517;
  t6261 = -0.135*t784;
  t5540 = -1.*t743*t528*t549;
  t5548 = -1.*t784*t1830;
  t5550 = t5540 + t5548;
  t6254 = -0.08055*t6251;
  t6265 = 0. + t6254 + t6261;
  t5564 = t549*t784*t1411;
  t5578 = t743*t2974;
  t5581 = t5564 + t5578;
  t5588 = t784*t1411*t760;
  t5591 = t743*t3208;
  t5593 = t5588 + t5591;
  t6619 = -0.135*t743;
  t6626 = -0.08055*t784;
  t6638 = t6619 + t6626;
  t6652 = 0.08055*t743;
  t6659 = t6652 + t6261;
  t5603 = -1.*t784*t3532;
  t5604 = t2966 + t5603;
  t6716 = 0.135*t499;
  t6722 = t6716 + t6272;
  t6731 = 0.07996*t499;
  t6739 = -0.135*t652;
  t6743 = t6731 + t6739;
  t6823 = 0.08055*t733;
  t6827 = t6823 + t6331;
  t6830 = -0.01004*t733;
  t6831 = -0.08055*t476;
  t6846 = t6830 + t6831;
  t6909 = -0.13004*t901;
  t6910 = -0.08055*t443;
  t6916 = t6909 + t6910;
  t6931 = 0.08055*t901;
  t6933 = t6931 + t6359;
  t6988 = 0.03315*t972;
  t6993 = t6988 + t6424;
  t7002 = -0.19074*t972;
  t7007 = -0.03315*t426;
  t7016 = t7002 + t7007;
  t7055 = -0.62554*t1033;
  t7059 = -0.01315*t388;
  t7060 = t7055 + t7059;
  t7081 = 0.01315*t1033;
  t7083 = t7081 + t6460;
  t7109 = 0.05315*t1169;
  t7111 = t7109 + t6517;
  t7117 = -1.03354*t1169;
  t7118 = -0.05315*t351;
  t7120 = t7117 + t7118;
  t5629 = t743*t760;
  t5648 = -1.*t784*t4430;
  t5656 = t5629 + t5648;
  t7861 = t6314*t4584;
  t7868 = -0.1305*t743*t4605;
  t7870 = t6296*t4605;
  t7874 = t784*t6332*t4605;
  t7880 = t6367*t4609;
  t7883 = t6385*t4631;
  t7888 = t6411*t4639;
  t7889 = t6425*t4653;
  t7891 = t6466*t4657;
  t7896 = t6478*t4672;
  t7898 = t6507*t4686;
  t7902 = t6519*t4701;
  t7903 = -0.00095*t4710;
  t7904 = -1.05124*t4720;
  t5659 = t549*t784;
  t5662 = t743*t5312;
  t5674 = t5659 + t5662;
  p_output1[0]=(0.642788*t3146 + 0.766044*t3172)*var2[3] + (0.642788*t1278 + 0.766044*t1328)*var2[4] + (0.642788*t1720 + 0.766044*t1733)*var2[5] + (0.642788*t2259 + 0.766044*t2297)*var2[13] + (0.642788*t1995 + 0.766044*t2010)*var2[14] + (0.766044*t2478 + 0.642788*t2496)*var2[15] + (0.766044*t2647 + 0.642788*t2654)*var2[16] + (0.766044*t2729 + 0.642788*t2754)*var2[17] + (0.766044*t2849 + 0.642788*t2864)*var2[18] + (0.766044*t2883 + t2898)*var2[19];
  p_output1[1]=(0.766044*t2895 + 0.642788*t3836)*var2[3] + (0.642788*t3321 + 0.766044*t3337)*var2[4] + (0.642788*t3477 + 0.766044*t3494)*var2[5] + (0.642788*t3798 + 0.766044*t3808)*var2[13] + (0.642788*t3664 + 0.766044*t3671)*var2[14] + (0.766044*t4012 + 0.642788*t4020)*var2[15] + (0.766044*t4125 + 0.642788*t4157)*var2[16] + (0.766044*t4261 + 0.642788*t4295)*var2[17] + (0.766044*t4349 + 0.642788*t4361)*var2[18] + (0.766044*t4388 + 0.642788*t4400)*var2[19];
  p_output1[2]=(0.642788*t5451 + 0.766044*t5470)*var2[4] + t4730*var2[5] + t4730*var2[13] + (0.642788*t4542 + 0.766044*t4563)*var2[14] + (0.766044*t4870 + 0.642788*t4878)*var2[15] + (0.766044*t5008 + 0.642788*t5021)*var2[16] + (0.766044*t5108 + 0.642788*t5135)*var2[17] + (0.766044*t5207 + 0.642788*t5223)*var2[18] + (0.766044*t5257 + 0.642788*t5276)*var2[19];
  p_output1[3]=0;
  p_output1[4]=t5581*var2[3] + t5515*var2[4] + t1454*t743*var2[5] + t2079*t743*var2[13] + t5550*var2[14];
  p_output1[5]=t1838*var2[3] + t5593*var2[4] + t3382*t743*var2[5] + t3696*t743*var2[13] + t5604*var2[14];
  p_output1[6]=t5674*var2[4] + t4605*t743*var2[5] + t4605*t743*var2[13] + t5656*var2[14];
  p_output1[7]=0;
  p_output1[8]=(-0.766044*t3146 + 0.642788*t3172)*var2[3] + (-0.766044*t1278 + 0.642788*t1328)*var2[4] + (-0.766044*t1720 + 0.642788*t1733)*var2[5] + (-0.766044*t2259 + 0.642788*t2297)*var2[13] + (-0.766044*t1995 + 0.642788*t2010)*var2[14] + (0.642788*t2478 - 0.766044*t2496)*var2[15] + (0.642788*t2647 - 0.766044*t2654)*var2[16] + (0.642788*t2729 - 0.766044*t2754)*var2[17] + (0.642788*t2849 - 0.766044*t2864)*var2[18] + (0.642788*t2883 - 0.766044*t2895)*var2[19];
  p_output1[9]=(t2898 - 0.766044*t3836)*var2[3] + (-0.766044*t3321 + 0.642788*t3337)*var2[4] + (-0.766044*t3477 + 0.642788*t3494)*var2[5] + (-0.766044*t3798 + 0.642788*t3808)*var2[13] + (-0.766044*t3664 + 0.642788*t3671)*var2[14] + (0.642788*t4012 - 0.766044*t4020)*var2[15] + (0.642788*t4125 - 0.766044*t4157)*var2[16] + (0.642788*t4261 - 0.766044*t4295)*var2[17] + (0.642788*t4349 - 0.766044*t4361)*var2[18] + (0.642788*t4388 - 0.766044*t4400)*var2[19];
  p_output1[10]=(-0.766044*t5451 + 0.642788*t5470)*var2[4] + t6106*var2[5] + t6106*var2[13] + (-0.766044*t4542 + 0.642788*t4563)*var2[14] + (0.642788*t4870 - 0.766044*t4878)*var2[15] + (0.642788*t5008 - 0.766044*t5021)*var2[16] + (0.642788*t5108 - 0.766044*t5135)*var2[17] + (0.642788*t5207 - 0.766044*t5223)*var2[18] + (0.642788*t5257 - 0.766044*t5276)*var2[19];
  p_output1[11]=0;
  p_output1[12]=var2[0] + (-0.00095*t3146 - 1.05124*t3172 - 0.1305*t5581 + t2924*t6236 - 1.*t1411*t549*t6265 + t2942*t6284 + t2974*t6296 + t2946*t6314 + t2990*t6332 + t3016*t6367 + t3038*t6385 + t3041*t6411 + t3050*t6425 + t3053*t6466 + t3096*t6478 + t3108*t6507 + t3139*t6519)*var2[3] + (-0.00095*t1278 - 1.05124*t1328 - 0.1305*t5515 + t528*t549*t6236*t624 + t1009*t6466 + t1108*t6478 + t1161*t6507 + t1246*t6519 + t528*t549*t6284*t661 + t6314*t681 - 1.*t528*t6265*t760 + t6296*t804 + t6332*t878 + t6367*t884 + t6385*t932 + t6411*t956 + t6425*t993)*var2[4] + (-0.00095*t1720 - 1.05124*t1733 + t1435*t6236 + t1415*t6284 + t1454*t6296 + t1442*t6314 + t1480*t6367 + t1524*t6385 + t1539*t6411 + t1583*t6425 + t1588*t6466 + t1674*t6478 + t1685*t6507 + t1708*t6519 - 0.1305*t1454*t743 + t1454*t6332*t784)*var2[5] + (-0.00095*t2259 - 1.05124*t2297 + t2079*t6296 + t2057*t6314 + t2095*t6367 + t2140*t6385 + t2144*t6411 + t2161*t6425 + t2193*t6466 + t2207*t6478 + t2218*t6507 + t2244*t6519 + t1415*t6722 + t1825*t6743 - 0.1305*t2079*t743 + t2079*t6332*t784)*var2[13] + (-0.00095*t1995 - 1.05124*t2010 - 0.1305*t5550 + t1838*t6332 - 1.*t1838*t476*t6385 + t1849*t6411 + t1892*t6425 + t1915*t6466 + t1939*t6478 + t1957*t6507 + t1983*t6519 + t528*t549*t6638 + t1830*t6659 + t1838*t6367*t733)*var2[14] + (-1.05124*t2478 - 0.00095*t2496 + t2360*t6367 + t2346*t6385 + t2401*t6411 + t2368*t6425 + t2438*t6466 + t2418*t6478 + t2470*t6507 + t2460*t6519 + t2079*t6827 + t2328*t6846)*var2[15] + (-1.05124*t2647 - 0.00095*t2654 + t2566*t6411 + t2546*t6425 + t2607*t6466 + t2581*t6478 + t2641*t6507 + t2628*t6519 + t2532*t6916 + t2360*t6933)*var2[16] + (-1.05124*t2729 - 0.00095*t2754 + t2687*t6466 + t2677*t6478 + t2716*t6507 + t2699*t6519 + t2546*t6993 + t2674*t7016)*var2[17] + (-1.05124*t2849 - 0.00095*t2864 + t2821*t6507 + t2814*t6519 + t2807*t7060 + t2687*t7083)*var2[18] + (-1.05124*t2883 - 0.00095*t2895 + t2814*t7111 + t2880*t7120)*var2[19];
  p_output1[13]=var2[1] + (-0.1305*t1838 - 1.05124*t2895 - 0.00095*t3836 + t1415*t6236 + t528*t549*t6265 + t1825*t6284 + t1830*t6296 + t2079*t6314 + t2328*t6332 + t2532*t6367 + t2360*t6385 + t2546*t6411 + t2674*t6425 + t2807*t6466 + t2687*t6478 + t2814*t6507 + t2880*t6519)*var2[3] + (-0.00095*t3321 - 1.05124*t3337 - 0.1305*t5593 + t1411*t549*t6236*t624 + t3208*t6296 + t3191*t6314 + t3214*t6332 + t3236*t6367 + t3251*t6385 + t3258*t6411 + t3272*t6425 + t3282*t6466 + t3295*t6478 + t3298*t6507 + t3317*t6519 + t1411*t549*t6284*t661 - 1.*t1411*t6265*t760)*var2[4] + (-0.00095*t3477 - 1.05124*t3494 + t2942*t6236 + t3364*t6284 + t3382*t6296 + t3378*t6314 + t3389*t6367 + t3394*t6385 + t3403*t6411 + t3411*t6425 + t3416*t6466 + t3437*t6478 + t3439*t6507 + t3456*t6519 - 0.1305*t3382*t743 + t3382*t6332*t784)*var2[5] + (-0.00095*t3798 - 1.05124*t3808 + t3696*t6296 + t3687*t6314 + t3701*t6367 + t3717*t6385 + t3724*t6411 + t3735*t6425 + t3745*t6466 + t3757*t6478 + t3777*t6507 + t3792*t6519 + t3364*t6722 + t3527*t6743 - 0.1305*t3696*t743 + t3696*t6332*t784)*var2[13] + (-0.00095*t3664 - 1.05124*t3671 - 0.1305*t5604 + t3541*t6332 - 1.*t3541*t476*t6385 + t3560*t6411 + t3577*t6425 + t3588*t6466 + t3609*t6478 + t3624*t6507 + t3658*t6519 + t1411*t549*t6638 + t3532*t6659 + t3541*t6367*t733)*var2[14] + (-1.05124*t4012 - 0.00095*t4020 + t3905*t6367 + t3877*t6385 + t3923*t6411 + t3911*t6425 + t3970*t6466 + t3954*t6478 + t4001*t6507 + t3975*t6519 + t3696*t6827 + t3872*t6846)*var2[15] + (-1.05124*t4125 - 0.00095*t4157 + t4064*t6411 + t4050*t6425 + t4100*t6466 + t4073*t6478 + t4123*t6507 + t4108*t6519 + t4045*t6916 + t3905*t6933)*var2[16] + (-1.05124*t4261 - 0.00095*t4295 + t4195*t6466 + t4183*t6478 + t4257*t6507 + t4228*t6519 + t4050*t6993 + t4177*t7016)*var2[17] + (-1.05124*t4349 - 0.00095*t4361 + t4329*t6507 + t4319*t6519 + t4308*t7060 + t4195*t7083)*var2[18] + (-1.05124*t4388 - 0.00095*t4400 + t4319*t7111 + t4379*t7120)*var2[19];
  p_output1[14]=var2[2] + (-0.00095*t5451 - 1.05124*t5470 - 0.1305*t5674 - 1.*t549*t6265 + t5312*t6296 + t5299*t6314 + t5318*t6332 + t5338*t6367 + t5365*t6385 + t5375*t6411 + t5389*t6425 + t5395*t6466 + t5413*t6478 + t5426*t6507 + t5442*t6519 - 1.*t6236*t624*t760 - 1.*t6284*t661*t760)*var2[4] + (t549*t624*t6284 - 1.*t549*t6236*t661 + t7861 + t7868 + t7870 + t7874 + t7880 + t7883 + t7888 + t7889 + t7891 + t7896 + t7898 + t7902 + t7903 + t7904)*var2[5] + (t549*t624*t6722 + t549*t661*t6743 + t7861 + t7868 + t7870 + t7874 + t7880 + t7883 + t7888 + t7889 + t7891 + t7896 + t7898 + t7902 + t7903 + t7904)*var2[13] + (-0.00095*t4542 - 1.05124*t4563 - 0.1305*t5656 + t4438*t6332 - 1.*t4438*t476*t6385 + t4456*t6411 + t4473*t6425 + t4479*t6466 + t4499*t6478 + t4507*t6507 + t4523*t6519 + t4430*t6659 + t4438*t6367*t733 - 1.*t6638*t760)*var2[14] + (-1.05124*t4870 - 0.00095*t4878 + t4779*t6367 + t4763*t6385 + t4802*t6411 + t4781*t6425 + t4825*t6466 + t4810*t6478 + t4858*t6507 + t4834*t6519 + t4605*t6827 + t4752*t6846)*var2[15] + (-1.05124*t5008 - 0.00095*t5021 + t4921*t6411 + t4904*t6425 + t4953*t6466 + t4933*t6478 + t4992*t6507 + t4971*t6519 + t4896*t6916 + t4779*t6933)*var2[16] + (-1.05124*t5108 - 0.00095*t5135 + t5080*t6466 + t5061*t6478 + t5099*t6507 + t5086*t6519 + t4904*t6993 + t5047*t7016)*var2[17] + (-1.05124*t5207 - 0.00095*t5223 + t5199*t6507 + t5192*t6519 + t5178*t7060 + t5080*t7083)*var2[18] + (-1.05124*t5257 - 0.00095*t5276 + t5192*t7111 + t5242*t7120)*var2[19];
  p_output1[15]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 20 && ncols == 1) && 
      !(mrows == 1 && ncols == 20))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 20 && ncols == 1) && 
      !(mrows == 1 && ncols == 20))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 4, (mwSize) 4, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "dT_RightToeBottom_mex.hh"

namespace SymExpression
{

void dT_RightToeBottom_mex_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
