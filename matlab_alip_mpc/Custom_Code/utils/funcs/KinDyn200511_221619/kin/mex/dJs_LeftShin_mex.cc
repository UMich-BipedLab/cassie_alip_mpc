/*
 * Automatically Generated from Mathematica.
 * Mon 11 May 2020 22:25:42 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t147;
  double t203;
  double t597;
  double t675;
  double t629;
  double t681;
  double t708;
  double t722;
  double t1320;
  double t1333;
  double t759;
  double t800;
  double t847;
  double t887;
  double t1450;
  double t1458;
  double t1478;
  double t1681;
  double t1688;
  double t1707;
  double t982;
  double t984;
  double t1001;
  double t1015;
  double t1020;
  double t1021;
  double t1027;
  double t1032;
  double t1186;
  double t1217;
  double t1233;
  double t1239;
  double t1241;
  double t1311;
  double t1313;
  double t2359;
  double t1982;
  double t2025;
  double t2060;
  double t2367;
  double t1827;
  double t1834;
  double t1865;
  double t2490;
  double t2500;
  double t2362;
  double t2368;
  double t2371;
  double t1619;
  double t1623;
  double t1662;
  double t2503;
  double t2509;
  double t2525;
  double t2570;
  double t2583;
  double t2585;
  double t2387;
  double t2412;
  double t2426;
  double t2644;
  double t2667;
  double t2694;
  double t2706;
  double t2610;
  double t2723;
  double t1494;
  double t1512;
  double t1532;
  double t2773;
  double t2779;
  double t2782;
  double t2858;
  double t2859;
  double t2869;
  double t2789;
  double t2796;
  double t2805;
  double t2809;
  double t2820;
  double t2725;
  double t2730;
  double t3048;
  double t3049;
  double t3058;
  double t3059;
  double t3060;
  double t2964;
  double t2982;
  double t2987;
  double t3197;
  double t3203;
  double t3210;
  double t3221;
  double t3222;
  double t3228;
  double t3230;
  double t3295;
  double t3321;
  double t3212;
  double t3214;
  double t3217;
  double t2528;
  double t2597;
  double t2928;
  double t2940;
  double t2942;
  double t3443;
  double t2821;
  double t3433;
  double t3436;
  double t3439;
  double t3440;
  double t3319;
  double t3324;
  double t3282;
  double t3285;
  double t3287;
  double t3475;
  double t3076;
  double t3078;
  double t3372;
  double t3374;
  double t3626;
  double t3652;
  double t3642;
  double t3644;
  double t3648;
  double t3706;
  double t3711;
  double t3342;
  double t3343;
  double t3671;
  double t3672;
  double t3683;
  double t3719;
  double t3721;
  double t3725;
  double t3744;
  double t3745;
  double t3750;
  double t2830;
  double t2836;
  double t2842;
  double t2845;
  double t3650;
  double t3653;
  double t3658;
  double t2810;
  double t2811;
  double t3731;
  double t3755;
  double t3758;
  double t3759;
  double t3760;
  double t3762;
  double t3769;
  double t3090;
  double t3092;
  double t3776;
  double t3057;
  double t3061;
  double t3793;
  double t3798;
  double t3803;
  double t3424;
  double t3425;
  double t3427;
  double t3012;
  double t3018;
  double t2913;
  double t2916;
  double t3142;
  double t3159;
  double t3163;
  double t2887;
  double t2904;
  double t2906;
  double t3275;
  double t3276;
  double t3279;
  double t3971;
  double t3973;
  double t3979;
  double t3982;
  double t3992;
  double t3956;
  double t3962;
  double t3966;
  double t4035;
  double t2619;
  double t2637;
  double t3331;
  double t3335;
  double t3297;
  double t3299;
  double t4148;
  double t4154;
  double t4160;
  double t4168;
  double t4170;
  double t4171;
  double t4185;
  double t3379;
  double t3387;
  double t4193;
  double t3364;
  double t3367;
  double t3868;
  double t3869;
  double t3870;
  double t3237;
  double t3238;
  double t3183;
  double t3185;
  double t4027;
  double t4028;
  double t4032;
  double t3088;
  double t3263;
  double t3265;
  double t4434;
  double t4063;
  double t4080;
  double t3481;
  double t3482;
  double t3489;
  double t3490;
  double t4499;
  double t4501;
  double t4507;
  double t4510;
  double t4518;
  double t4529;
  double t3545;
  double t3546;
  double t3562;
  double t3569;
  double t3516;
  double t3519;
  double t4433;
  double t4435;
  double t3449;
  double t3456;
  double t3459;
  double t3460;
  double t4323;
  double t4325;
  double t4330;
  double t3902;
  double t3903;
  double t3905;
  double t4037;
  double t4041;
  double t4408;
  double t4411;
  double t4419;
  double t4458;
  double t4465;
  double t4467;
  double t4110;
  double t4111;
  double t4114;
  double t3660;
  double t3684;
  double t3688;
  double t3690;
  double t3693;
  double t4010;
  double t4011;
  double t4994;
  double t3980;
  double t3993;
  double t4997;
  double t4998;
  double t5002;
  double t5003;
  double t5006;
  double t5018;
  double t4980;
  double t4981;
  double t4982;
  double t4927;
  double t4931;
  double t4933;
  double t5046;
  double t5047;
  double t5049;
  double t5040;
  double t5053;
  double t5054;
  double t3784;
  double t5063;
  double t5064;
  double t5065;
  double t5081;
  double t5082;
  double t3842;
  double t5116;
  double t3886;
  double t3895;
  double t4335;
  double t4336;
  double t4341;
  double t3874;
  double t3876;
  double t4720;
  double t4727;
  double t4730;
  double t3922;
  double t3936;
  double t3941;
  double t4089;
  double t4090;
  double t5366;
  double t5369;
  double t5372;
  double t5380;
  double t5381;
  double t4126;
  double t4134;
  double t4377;
  double t4379;
  double t4356;
  double t4359;
  double t5539;
  double t5545;
  double t5546;
  double t4204;
  double t5548;
  double t5553;
  double t5556;
  double t5582;
  double t5584;
  double t4245;
  double t5609;
  double t4307;
  double t4314;
  double t4287;
  double t4290;
  double t4451;
  double t5462;
  double t5466;
  double t5475;
  double t4476;
  double t4478;
  double t4480;
  double t4498;
  double t5307;
  double t5314;
  double t4651;
  double t4764;
  double t4780;
  double t4747;
  double t4758;
  double t5849;
  double t5870;
  double t5871;
  double t5872;
  double t4531;
  double t4535;
  double t4582;
  double t4603;
  double t5954;
  double t5959;
  double t5964;
  double t5967;
  double t5969;
  double t5971;
  double t5975;
  double t5981;
  double t4692;
  double t4695;
  double t4675;
  double t4679;
  double t4820;
  double t4827;
  double t4828;
  double t4833;
  double t4838;
  double t4846;
  double t4847;
  double t4853;
  double t4854;
  double t4855;
  double t4857;
  double t4863;
  double t4873;
  double t4894;
  double t4900;
  double t4902;
  double t4903;
  double t4925;
  double t4948;
  double t4949;
  double t4953;
  double t4954;
  double t4957;
  double t4961;
  double t4965;
  double t4978;
  double t4984;
  double t4991;
  double t6147;
  double t6151;
  double t6152;
  double t6160;
  double t5117;
  double t5118;
  double t5123;
  double t5130;
  double t5134;
  double t5135;
  double t5095;
  double t5096;
  double t6156;
  double t6161;
  double t6165;
  double t5613;
  double t5615;
  double t5616;
  double t6177;
  double t6179;
  double t6181;
  double t5619;
  double t5622;
  double t5623;
  double t6067;
  double t6075;
  double t6077;
  double t5785;
  double t5786;
  double t5792;
  double t6169;
  double t6183;
  double t5200;
  double t5205;
  double t5208;
  double t5220;
  double t5221;
  double t5224;
  double t5179;
  double t5182;
  double t5655;
  double t5656;
  double t5657;
  double t5660;
  double t5667;
  double t5668;
  double t6222;
  double t6223;
  double t6224;
  double t6226;
  double t6231;
  double t6232;
  double t6239;
  double t6246;
  double t6251;
  double t6252;
  double t6254;
  double t6255;
  double t6259;
  double t5274;
  double t5275;
  double t5277;
  double t5289;
  double t5294;
  double t5295;
  double t5244;
  double t5246;
  double t5693;
  double t5696;
  double t5699;
  double t5707;
  double t5709;
  double t5712;
  double t5261;
  double t5269;
  double t6121;
  double t6123;
  double t6124;
  double t6127;
  double t6131;
  double t6132;
  double t5020;
  double t5030;
  double t5320;
  double t5322;
  double t5324;
  double t5346;
  double t5352;
  double t5356;
  double t5822;
  double t5826;
  double t5831;
  double t5379;
  double t5389;
  double t6055;
  double t6059;
  double t6065;
  double t5427;
  double t5428;
  double t5778;
  double t5781;
  double t5783;
  double t5452;
  double t5455;
  double t5457;
  double t6514;
  double t6515;
  double t6521;
  double t6523;
  double t6529;
  double t6496;
  double t6502;
  double t5732;
  double t5741;
  double t5754;
  double t5755;
  double t6601;
  double t6610;
  double t5599;
  double t5601;
  double t6654;
  double t6655;
  double t5645;
  double t5651;
  double t6690;
  double t6692;
  double t6694;
  double t6710;
  double t6712;
  double t6714;
  double t6715;
  double t5677;
  double t5678;
  double t5684;
  double t5685;
  double t5501;
  double t5513;
  double t5810;
  double t5811;
  double t6558;
  double t6560;
  double t6048;
  double t6049;
  double t6026;
  double t6028;
  double t6911;
  double t6918;
  double t5936;
  double t5937;
  double t5916;
  double t5917;
  double t6465;
  double t6466;
  double t6992;
  double t6995;
  double t6996;
  double t6998;
  double t7000;
  double t7001;
  double t7008;
  double t7009;
  double t6007;
  double t6008;
  double t5985;
  double t5986;
  double t7036;
  double t7037;
  double t7045;
  double t7049;
  double t5854;
  double t5858;
  double t6086;
  double t6087;
  double t6092;
  double t6097;
  double t5889;
  double t5892;
  t147 = Cos(var1[3]);
  t203 = Sin(var1[3]);
  t597 = Cos(var1[4]);
  t675 = Sin(var1[4]);
  t629 = -1.*var2[2]*t597*t203;
  t681 = -1.*var2[1]*t675;
  t708 = -1.*var1[1]*t597;
  t722 = var1[2]*t203*t675;
  t1320 = Cos(var1[5]);
  t1333 = Sin(var1[5]);
  t759 = var2[2]*t147*t597;
  t800 = var2[0]*t675;
  t847 = var1[0]*t597;
  t887 = -1.*var1[2]*t147*t675;
  t1450 = t147*t1320*t675;
  t1458 = t203*t1333;
  t1478 = t1450 + t1458;
  t1681 = -1.*t147*t1320;
  t1688 = -1.*t203*t675*t1333;
  t1707 = t1681 + t1688;
  t982 = -1.*var2[1]*t147*t597;
  t984 = var2[0]*t597*t203;
  t1001 = var1[0]*t147*t597;
  t1015 = var1[1]*t597*t203;
  t1020 = t1001 + t1015;
  t1021 = var2[3]*t1020;
  t1027 = var1[1]*t147*t675;
  t1032 = -1.*var1[0]*t203*t675;
  t1186 = -1.*var2[3]*t597*t203;
  t1217 = -1.*var2[4]*t147*t675;
  t1233 = t1186 + t1217;
  t1239 = var2[3]*t147*t597;
  t1241 = -1.*var2[4]*t203*t675;
  t1311 = t1239 + t1241;
  t1313 = -1.*var2[4]*t597;
  t2359 = Cos(var1[6]);
  t1982 = t1320*t203*t675;
  t2025 = -1.*t147*t1333;
  t2060 = t1982 + t2025;
  t2367 = Sin(var1[6]);
  t1827 = -1.*t1320*t203;
  t1834 = t147*t675*t1333;
  t1865 = t1827 + t1834;
  t2490 = -1.*t2359;
  t2500 = 1. + t2490;
  t2362 = t597*t1320*t2359;
  t2368 = -1.*t597*t1333*t2367;
  t2371 = t2362 + t2368;
  t1619 = -1.*t1320*t203*t675;
  t1623 = t147*t1333;
  t1662 = t1619 + t1623;
  t2503 = 0.07996*t2500;
  t2509 = -0.135*t2367;
  t2525 = 0. + t2503 + t2509;
  t2570 = 0.135*t2500;
  t2583 = 0.07996*t2367;
  t2585 = 0. + t2570 + t2583;
  t2387 = t147*t1320;
  t2412 = t203*t675*t1333;
  t2426 = t2387 + t2412;
  t2644 = -1.*var1[2];
  t2667 = -1.*t597*t1320*t2525;
  t2694 = -1.*t597*t1333*t2585;
  t2706 = 0. + t2644 + t2667 + t2694;
  t2610 = t2359*t1707;
  t2723 = t2359*t1478;
  t1494 = t1320*t203;
  t1512 = -1.*t147*t675*t1333;
  t1532 = t1494 + t1512;
  t2773 = t2060*t2525;
  t2779 = t2426*t2585;
  t2782 = 0. + var1[1] + t2773 + t2779;
  t2858 = t2359*t2060;
  t2859 = -1.*t2426*t2367;
  t2869 = t2858 + t2859;
  t2789 = -1.*t597*t2359*t1333;
  t2796 = -1.*t597*t1320*t2367;
  t2805 = t2789 + t2796;
  t2809 = t2782*t2805;
  t2820 = -1.*t2060*t2367;
  t2725 = -1.*t1865*t2367;
  t2730 = t2723 + t2725;
  t3048 = -0.135*t2359;
  t3049 = t3048 + t2583;
  t3058 = 0.07996*t2359;
  t3059 = 0.135*t2367;
  t3060 = t3058 + t3059;
  t2964 = -1.*t1320*t2359*t675;
  t2982 = t675*t1333*t2367;
  t2987 = t2964 + t2982;
  t3197 = t597*t1320*t2525;
  t3203 = t597*t1333*t2585;
  t3210 = 0. + var1[2] + t3197 + t3203;
  t3221 = -1.*var1[0];
  t3222 = -1.*t1478*t2525;
  t3228 = -1.*t1865*t2585;
  t3230 = 0. + t3221 + t3222 + t3228;
  t3295 = t3230*t2805;
  t3321 = -1.*t1478*t2367;
  t3212 = t147*t597*t1320*t2359;
  t3214 = -1.*t147*t597*t1333*t2367;
  t3217 = t3212 + t3214;
  t2528 = t1478*t2525;
  t2597 = t1865*t2585;
  t2928 = t597*t1320*t2359*t203;
  t2940 = -1.*t597*t203*t1333*t2367;
  t2942 = t2928 + t2940;
  t3443 = 0. + var1[0] + t2528 + t2597;
  t2821 = t2610 + t2820;
  t3433 = -1.*var1[1];
  t3436 = -1.*t2060*t2525;
  t3439 = -1.*t2426*t2585;
  t3440 = 0. + t3433 + t3436 + t3439;
  t3319 = t2359*t1532;
  t3324 = t3319 + t3321;
  t3282 = t2359*t1662;
  t3285 = -1.*t1707*t2367;
  t3287 = t3282 + t3285;
  t3475 = 0.08055*t2371;
  t3076 = -1.*t2359*t2426;
  t3078 = t3076 + t2820;
  t3372 = -1.*t2359*t1865;
  t3374 = t3372 + t3321;
  t3626 = Cos(var1[7]);
  t3652 = Sin(var1[7]);
  t3642 = t2359*t2426;
  t3644 = t2060*t2367;
  t3648 = t3642 + t3644;
  t3706 = -1.*t3626;
  t3711 = 1. + t3706;
  t3342 = t1707*t2367;
  t3343 = t2858 + t3342;
  t3671 = t597*t2359*t1333;
  t3672 = t597*t1320*t2367;
  t3683 = t3671 + t3672;
  t3719 = 0.135*t3711;
  t3721 = 0.08055*t3652;
  t3725 = 0. + t3719 + t3721;
  t3744 = -0.08055*t3711;
  t3745 = 0.135*t3652;
  t3750 = 0. + t3744 + t3745;
  t2830 = t1532*t2367;
  t2836 = t2723 + t2830;
  t2842 = t597*t1333*t2525;
  t2845 = -1.*t597*t1320*t2585;
  t3650 = t3626*t3648;
  t3653 = -1.*t597*t203*t3652;
  t3658 = t3650 + t3653;
  t2810 = t1707*t2525;
  t2811 = t2060*t2585;
  t3731 = t3648*t3725;
  t3755 = t597*t203*t3750;
  t3758 = 0. + var1[1] + t2773 + t2779 + t3731 + t3755;
  t3759 = -1.*t3626*t2371*t3758;
  t3760 = -1.*t3683*t3725;
  t3762 = t675*t3750;
  t3769 = 0. + t2644 + t2667 + t2694 + t3760 + t3762;
  t3090 = -1.*t597*t1320*t3049;
  t3092 = -1.*t597*t1333*t3060;
  t3776 = -1.*t2371*t3725;
  t3057 = t2060*t3049;
  t3061 = t2426*t3060;
  t3793 = t3626*t3683;
  t3798 = t675*t3652;
  t3803 = t3793 + t3798;
  t3424 = -1.*t2359*t675*t1333;
  t3425 = -1.*t1320*t675*t2367;
  t3427 = t3424 + t3425;
  t3012 = t1320*t675*t2525;
  t3018 = t675*t1333*t2585;
  t2913 = t597*t1320*t203*t2525;
  t2916 = t597*t203*t1333*t2585;
  t3142 = t597*t2359*t203*t1333;
  t3159 = t597*t1320*t203*t2367;
  t3163 = t3142 + t3159;
  t2887 = t147*t597*t2359*t1333;
  t2904 = t147*t597*t1320*t2367;
  t2906 = t2887 + t2904;
  t3275 = t2359*t1865;
  t3276 = t1478*t2367;
  t3279 = t3275 + t3276;
  t3971 = 0.135*t3626;
  t3973 = -0.08055*t3652;
  t3979 = t3971 + t3973;
  t3982 = 0.08055*t3626;
  t3992 = t3982 + t3745;
  t3956 = t3626*t3279;
  t3962 = -1.*t147*t597*t3652;
  t3966 = t3956 + t3962;
  t4035 = -1.*t597*t3626*t203;
  t2619 = t1662*t2367;
  t2637 = t2610 + t2619;
  t3331 = -1.*t597*t1333*t2525;
  t3335 = t597*t1320*t2585;
  t3297 = -1.*t1532*t2525;
  t3299 = -1.*t1478*t2585;
  t4148 = -1.*t3279*t3725;
  t4154 = -1.*t147*t597*t3750;
  t4160 = 0. + t3221 + t3222 + t3228 + t4148 + t4154;
  t4168 = -1.*t3626*t2371*t4160;
  t4170 = t3683*t3725;
  t4171 = -1.*t675*t3750;
  t4185 = 0. + var1[2] + t3197 + t3203 + t4170 + t4171;
  t3379 = t597*t1320*t3049;
  t3387 = t597*t1333*t3060;
  t4193 = t2371*t3725;
  t3364 = -1.*t1478*t3049;
  t3367 = -1.*t1865*t3060;
  t3868 = t3626*t3427;
  t3869 = t597*t3652;
  t3870 = t3868 + t3869;
  t3237 = -1.*t1320*t675*t2525;
  t3238 = -1.*t675*t1333*t2585;
  t3183 = -1.*t147*t597*t1320*t2525;
  t3185 = -1.*t147*t597*t1333*t2585;
  t4027 = t3626*t675;
  t4028 = -1.*t3683*t3652;
  t4032 = t4027 + t4028;
  t3088 = 0.08055*t2730;
  t3263 = -1.*t1662*t2525;
  t3265 = -1.*t1707*t2585;
  t4434 = t597*t203*t3652;
  t4063 = t3279*t3725;
  t4080 = t147*t597*t3750;
  t3481 = -1.*t1707*t2525;
  t3482 = -1.*t2060*t2585;
  t3489 = t1532*t2525;
  t3490 = t1478*t2585;
  t4499 = 0.08055*t2805;
  t4501 = 0. + var1[0] + t2528 + t2597 + t4063 + t4080;
  t4507 = -1.*t3648*t3725;
  t4510 = -1.*t597*t203*t3750;
  t4518 = 0. + t3433 + t3436 + t3439 + t4507 + t4510;
  t4529 = -0.01004*t2371*t3652;
  t3545 = -1.*t2060*t3049;
  t3546 = -1.*t2426*t3060;
  t3562 = t1478*t3049;
  t3569 = t1865*t3060;
  t3516 = t1662*t2525;
  t3519 = t1707*t2585;
  t4433 = t3626*t2637;
  t4435 = t4433 + t4434;
  t3449 = -1.*t597*t1320*t203*t2525;
  t3456 = -1.*t597*t203*t1333*t2585;
  t3459 = t147*t597*t1320*t2525;
  t3460 = t147*t597*t1333*t2585;
  t4323 = t3626*t2906;
  t4325 = t147*t675*t3652;
  t4330 = t4323 + t4325;
  t3902 = t3626*t3163;
  t3903 = t203*t675*t3652;
  t3905 = t3902 + t3903;
  t4037 = -1.*t3648*t3652;
  t4041 = t4035 + t4037;
  t4408 = -1.*t147*t597*t3626;
  t4411 = -1.*t3279*t3652;
  t4419 = t4408 + t4411;
  t4458 = t147*t597*t3626;
  t4465 = t3279*t3652;
  t4467 = t4458 + t4465;
  t4110 = -1.*t3626*t3279;
  t4111 = t147*t597*t3652;
  t4114 = t4110 + t4111;
  t3660 = var2[2]*t3658;
  t3684 = -1.*t3626*t3683;
  t3688 = -1.*t675*t3652;
  t3690 = t3684 + t3688;
  t3693 = var2[1]*t3690;
  t4010 = t597*t203*t3979;
  t4011 = t3648*t3992;
  t4994 = Cos(var1[8]);
  t3980 = t675*t3979;
  t3993 = -1.*t3683*t3992;
  t4997 = -1.*t4994;
  t4998 = 1. + t4997;
  t5002 = -0.08055*t4998;
  t5003 = Sin(var1[8]);
  t5006 = -0.01004*t5003;
  t5018 = 0. + t5002 + t5006;
  t4980 = -1.*t3626*t675;
  t4981 = t3683*t3652;
  t4982 = t4980 + t4981;
  t4927 = t597*t3626*t203;
  t4931 = t3648*t3652;
  t4933 = t4927 + t4931;
  t5046 = -0.01004*t4998;
  t5047 = 0.08055*t5003;
  t5049 = 0. + t5046 + t5047;
  t5040 = -1.*t4982*t5018;
  t5053 = -1.*t2371*t5049;
  t5054 = 0. + t2644 + t2667 + t2694 + t3760 + t3762 + t5040 + t5053;
  t3784 = t3343*t3725;
  t5063 = t4933*t5018;
  t5064 = t2869*t5049;
  t5065 = 0. + var1[1] + t2773 + t2779 + t3731 + t3755 + t5063 + t5064;
  t5081 = -1.*t2371*t3652*t5018;
  t5082 = -1.*t2805*t5049;
  t3842 = t2869*t3725;
  t5116 = -1.*t3626*t2371*t5065;
  t3886 = t3163*t3725;
  t3895 = -1.*t203*t675*t3750;
  t4335 = -1.*t3626*t203*t675;
  t4336 = t3163*t3652;
  t4341 = t4335 + t4336;
  t3874 = -1.*t3427*t3725;
  t3876 = t597*t3750;
  t4720 = -1.*t597*t3626;
  t4727 = t3427*t3652;
  t4730 = t4720 + t4727;
  t3922 = -1.*t147*t3626*t675;
  t3936 = t2906*t3652;
  t3941 = t3922 + t3936;
  t4089 = t2637*t3652;
  t4090 = t4035 + t4089;
  t5366 = -0.01004*t4994;
  t5369 = -0.08055*t5003;
  t5372 = t5366 + t5369;
  t5380 = 0.08055*t4994;
  t5381 = t5380 + t5006;
  t4126 = var2[2]*t4114;
  t4134 = var2[0]*t3803;
  t4377 = -1.*t147*t597*t3979;
  t4379 = -1.*t3279*t3992;
  t4356 = -1.*t675*t3979;
  t4359 = t3683*t3992;
  t5539 = t4982*t5018;
  t5545 = t2371*t5049;
  t5546 = 0. + var1[2] + t3197 + t3203 + t4170 + t4171 + t5539 + t5545;
  t4204 = -1.*t2836*t3725;
  t5548 = -1.*t4467*t5018;
  t5553 = -1.*t2730*t5049;
  t5556 = 0. + t3221 + t3222 + t3228 + t4148 + t4154 + t5548 + t5553;
  t5582 = t2371*t3652*t5018;
  t5584 = t2805*t5049;
  t4245 = -1.*t2730*t3725;
  t5609 = -1.*t3626*t2371*t5556;
  t4307 = -1.*t2906*t3725;
  t4314 = t147*t675*t3750;
  t4287 = t3427*t3725;
  t4290 = -1.*t597*t3750;
  t4451 = -1.*t2637*t3725;
  t5462 = t4994*t2730;
  t5466 = -1.*t4467*t5003;
  t5475 = t5462 + t5466;
  t4476 = var2[1]*t3966;
  t4478 = -1.*t3626*t3648;
  t4480 = t4478 + t4434;
  t4498 = var2[0]*t4480;
  t5307 = t4467*t5018;
  t5314 = t2730*t5049;
  t4651 = t2637*t3725;
  t4764 = t147*t597*t3979;
  t4780 = t3279*t3992;
  t4747 = -1.*t597*t203*t3979;
  t4758 = -1.*t3648*t3992;
  t5849 = 0. + var1[0] + t2528 + t2597 + t4063 + t4080 + t5307 + t5314;
  t5870 = -1.*t4933*t5018;
  t5871 = -1.*t2869*t5049;
  t5872 = 0. + t3433 + t3436 + t3439 + t4507 + t4510 + t5870 + t5871;
  t4531 = -1.*t3343*t3725;
  t4535 = t2836*t3725;
  t4582 = -1.*t2869*t3725;
  t4603 = t2730*t3725;
  t5954 = t4994*t2371*t3652;
  t5959 = t2805*t5003;
  t5964 = t5954 + t5959;
  t5967 = -0.13004*t5964;
  t5969 = t4994*t2805;
  t5971 = -1.*t2371*t3652*t5003;
  t5975 = t5969 + t5971;
  t5981 = 0.08055*t5975;
  t4692 = t2906*t3725;
  t4695 = -1.*t147*t675*t3750;
  t4675 = -1.*t3163*t3725;
  t4679 = t203*t675*t3750;
  t4820 = -1.*var2[5]*t3626*t2836;
  t4827 = -1.*var2[6]*t3626*t2730;
  t4828 = -1.*t3626*t2637;
  t4833 = t4828 + t3653;
  t4838 = var2[3]*t4833;
  t4846 = -1.*t3626*t2906;
  t4847 = -1.*t147*t675*t3652;
  t4853 = t4846 + t4847;
  t4854 = var2[4]*t4853;
  t4855 = var2[7]*t4467;
  t4857 = t4820 + t4827 + t4838 + t4854 + t4855;
  t4863 = -1.*var2[5]*t3626*t3343;
  t4873 = -1.*var2[6]*t3626*t2869;
  t4894 = var2[3]*t4114;
  t4900 = -1.*t3626*t3163;
  t4902 = -1.*t203*t675*t3652;
  t4903 = t4900 + t4902;
  t4925 = var2[4]*t4903;
  t4948 = var2[7]*t4933;
  t4949 = t4863 + t4873 + t4894 + t4925 + t4948;
  t4953 = -1.*var2[5]*t3626*t2371;
  t4954 = -1.*var2[6]*t3626*t2371;
  t4957 = -1.*t3626*t3427;
  t4961 = -1.*t597*t3652;
  t4965 = t4957 + t4961;
  t4978 = var2[4]*t4965;
  t4984 = var2[7]*t4982;
  t4991 = t4953 + t4954 + t4978 + t4984;
  t6147 = Cos(var1[9]);
  t6151 = -1.*t6147;
  t6152 = 1. + t6151;
  t6160 = Sin(var1[9]);
  t5117 = t4994*t2836*t3652;
  t5118 = t3324*t5003;
  t5123 = t5117 + t5118;
  t5130 = t4994*t3324;
  t5134 = -1.*t2836*t3652*t5003;
  t5135 = t5130 + t5134;
  t5095 = t3343*t3652*t5018;
  t5096 = t2821*t5049;
  t6156 = -0.08055*t6152;
  t6161 = -0.13004*t6160;
  t6165 = 0. + t6156 + t6161;
  t5613 = t4994*t3343*t3652;
  t5615 = t2821*t5003;
  t5616 = t5613 + t5615;
  t6177 = -0.13004*t6152;
  t6179 = 0.08055*t6160;
  t6181 = 0. + t6177 + t6179;
  t5619 = t4994*t2821;
  t5622 = -1.*t3343*t3652*t5003;
  t5623 = t5619 + t5622;
  t6067 = t4994*t2371;
  t6075 = -1.*t4982*t5003;
  t6077 = t6067 + t6075;
  t5785 = t4994*t2869;
  t5786 = -1.*t4933*t5003;
  t5792 = t5785 + t5786;
  t6169 = -1.*t6165*t5964;
  t6183 = -1.*t6181*t5975;
  t5200 = t4994*t2730*t3652;
  t5205 = t3374*t5003;
  t5208 = t5200 + t5205;
  t5220 = t4994*t3374;
  t5221 = -1.*t2730*t3652*t5003;
  t5224 = t5220 + t5221;
  t5179 = t2869*t3652*t5018;
  t5182 = t3078*t5049;
  t5655 = t4994*t2869*t3652;
  t5656 = t3078*t5003;
  t5657 = t5655 + t5656;
  t5660 = t4994*t3078;
  t5667 = -1.*t2869*t3652*t5003;
  t5668 = t5660 + t5667;
  t6222 = t4994*t4982;
  t6223 = t2371*t5003;
  t6224 = t6222 + t6223;
  t6226 = -1.*t6165*t6224;
  t6231 = -1.*t6181*t6077;
  t6232 = 0. + t2644 + t2667 + t2694 + t3760 + t3762 + t5040 + t5053 + t6226 + t6231;
  t6239 = t4994*t4933;
  t6246 = t2869*t5003;
  t6251 = t6239 + t6246;
  t6252 = t6165*t6251;
  t6254 = t6181*t5792;
  t6255 = 0. + var1[1] + t2773 + t2779 + t3731 + t3755 + t5063 + t5064 + t6252 + t6254;
  t6259 = -1.*t3626*t2371*t6255;
  t5274 = t4994*t3941;
  t5275 = t3217*t5003;
  t5277 = t5274 + t5275;
  t5289 = t4994*t3217;
  t5294 = -1.*t3941*t5003;
  t5295 = t5289 + t5294;
  t5244 = t4341*t5018;
  t5246 = t2942*t5049;
  t5693 = t4994*t4341;
  t5696 = t2942*t5003;
  t5699 = t5693 + t5696;
  t5707 = t4994*t2942;
  t5709 = -1.*t4341*t5003;
  t5712 = t5707 + t5709;
  t5261 = -1.*t4730*t5018;
  t5269 = -1.*t2987*t5049;
  t6121 = t4994*t4730;
  t6123 = t2987*t5003;
  t6124 = t6121 + t6123;
  t6127 = t4994*t2987;
  t6131 = -1.*t4730*t5003;
  t6132 = t6127 + t6131;
  t5020 = t3658*t5018;
  t5030 = -1.*t3803*t5018;
  t5320 = t4994*t4090;
  t5322 = t3287*t5003;
  t5324 = t5320 + t5322;
  t5346 = t4994*t3287;
  t5352 = -1.*t4090*t5003;
  t5356 = t5346 + t5352;
  t5822 = t4994*t4467;
  t5826 = t2730*t5003;
  t5831 = t5822 + t5826;
  t5379 = -1.*t4982*t5372;
  t5389 = -1.*t2371*t5381;
  t6055 = -1.*t4994*t4982;
  t6059 = -1.*t2371*t5003;
  t6065 = t6055 + t6059;
  t5427 = t4933*t5372;
  t5428 = t2869*t5381;
  t5778 = -1.*t4994*t4933;
  t5781 = -1.*t2869*t5003;
  t5783 = t5778 + t5781;
  t5452 = -1.*t4994*t4467;
  t5455 = -1.*t2730*t5003;
  t5457 = t5452 + t5455;
  t6514 = -0.13004*t6147;
  t6515 = -0.08055*t6160;
  t6521 = t6514 + t6515;
  t6523 = 0.08055*t6147;
  t6529 = t6523 + t6161;
  t6496 = t6147*t5475;
  t6502 = -1.*t6160*t5475;
  t5732 = t4982*t5372;
  t5741 = t2371*t5381;
  t5754 = -1.*t4467*t5372;
  t5755 = -1.*t2730*t5381;
  t6601 = t6147*t5792;
  t6610 = -1.*t6160*t5792;
  t5599 = -1.*t2836*t3652*t5018;
  t5601 = -1.*t3324*t5049;
  t6654 = t6165*t5964;
  t6655 = t6181*t5975;
  t5645 = -1.*t2730*t3652*t5018;
  t5651 = -1.*t3374*t5049;
  t6690 = t6165*t6224;
  t6692 = t6181*t6077;
  t6694 = 0. + var1[2] + t3197 + t3203 + t4170 + t4171 + t5539 + t5545 + t6690 + t6692;
  t6710 = -1.*t6165*t5831;
  t6712 = -1.*t6181*t5475;
  t6714 = 0. + t3221 + t3222 + t3228 + t4148 + t4154 + t5548 + t5553 + t6710 + t6712;
  t6715 = -1.*t3626*t2371*t6714;
  t5677 = -1.*t3941*t5018;
  t5678 = -1.*t3217*t5049;
  t5684 = t4730*t5018;
  t5685 = t2987*t5049;
  t5501 = -1.*t3966*t5018;
  t5513 = t3803*t5018;
  t5810 = -1.*t4090*t5018;
  t5811 = -1.*t3287*t5049;
  t6558 = -1.*t6160*t5831;
  t6560 = t6558 + t6496;
  t6048 = -1.*t4933*t5372;
  t6049 = -1.*t2869*t5381;
  t6026 = t4467*t5372;
  t6028 = t2730*t5381;
  t6911 = t6147*t6077;
  t6918 = -1.*t6160*t6077;
  t5936 = t2836*t3652*t5018;
  t5937 = t3324*t5049;
  t5916 = -1.*t3343*t3652*t5018;
  t5917 = -1.*t2821*t5049;
  t6465 = t6165*t5831;
  t6466 = t6181*t5475;
  t6992 = -1.*t6160*t5964;
  t6995 = t6147*t5975;
  t6996 = t6992 + t6995;
  t6998 = 0.03315*t6996;
  t7000 = t6147*t5964;
  t7001 = t6160*t5975;
  t7008 = t7000 + t7001;
  t7009 = -0.19074*t7008;
  t6007 = t2730*t3652*t5018;
  t6008 = t3374*t5049;
  t5985 = -1.*t2869*t3652*t5018;
  t5986 = -1.*t3078*t5049;
  t7036 = -1.*t6165*t6251;
  t7037 = -1.*t6181*t5792;
  t7045 = 0. + t3433 + t3436 + t3439 + t4507 + t4510 + t5870 + t5871 + t7036 + t7037;
  t7049 = 0. + var1[0] + t2528 + t2597 + t4063 + t4080 + t5307 + t5314 + t6465 + t6466;
  t5854 = t4090*t5018;
  t5858 = t3287*t5049;
  t6086 = t3941*t5018;
  t6087 = t3217*t5049;
  t6092 = -1.*t4341*t5018;
  t6097 = -1.*t2942*t5049;
  t5889 = t3966*t5018;
  t5892 = -1.*t3658*t5018;
  p_output1[0]=0;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=0;
  p_output1[4]=0;
  p_output1[5]=0;
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=0;
  p_output1[10]=0;
  p_output1[11]=0;
  p_output1[12]=0;
  p_output1[13]=0;
  p_output1[14]=0;
  p_output1[15]=0;
  p_output1[16]=0;
  p_output1[17]=0;
  p_output1[18]=var2[1];
  p_output1[19]=-1.*var2[0];
  p_output1[20]=0;
  p_output1[21]=0;
  p_output1[22]=0;
  p_output1[23]=0;
  p_output1[24]=-1.*t147*var2[2] + t203*var1[2]*var2[3];
  p_output1[25]=-1.*t203*var2[2] - 1.*t147*var1[2]*var2[3];
  p_output1[26]=t147*var2[0] + t203*var2[1] + (-1.*t203*var1[0] + t147*var1[1])*var2[3];
  p_output1[27]=-1.*t147*var2[3];
  p_output1[28]=-1.*t203*var2[3];
  p_output1[29]=0;
  p_output1[30]=t629 + t681 - 1.*t147*t597*var1[2]*var2[3] + (t708 + t722)*var2[4];
  p_output1[31]=t759 + t800 - 1.*t203*t597*var1[2]*var2[3] + (t847 + t887)*var2[4];
  p_output1[32]=t1021 + t982 + t984 + (t1027 + t1032)*var2[4];
  p_output1[33]=t1233;
  p_output1[34]=t1311;
  p_output1[35]=t1313;
  p_output1[36]=t629 + t681 + (-0.135*t1662 + 0.07996*t1707 - 1.*t147*t597*var1[2])*var2[3] + (-0.135*t1320*t147*t597 + 0.07996*t1333*t147*t597 + t708 + t722)*var2[4] + (0.07996*t1478 - 0.135*t1532)*var2[5];
  p_output1[37]=t759 + t800 + (-0.135*t1478 + 0.07996*t1865 - 1.*t203*t597*var1[2])*var2[3] + (-0.135*t1320*t203*t597 + 0.07996*t1333*t203*t597 + t847 + t887)*var2[4] + (-0.135*t1707 + 0.07996*t2060)*var2[5];
  p_output1[38]=t1021 + t982 + t984 + (t1027 + t1032 + 0.135*t1320*t675 - 0.07996*t1333*t675)*var2[4] + (0.07996*t1320*t597 + 0.135*t1333*t597)*var2[5];
  p_output1[39]=t1233;
  p_output1[40]=t1311;
  p_output1[41]=t1313;
  p_output1[42]=t2371*var2[1] + (-1.*t2060*t2359 + t2367*t2426)*var2[2] + (t2371*(t2528 + t2597) + 0.08055*t2637 + t2706*t2730 - 0.135*t203*t597)*var2[3] + (0.08055*t2906 + t2371*(t2913 + t2916) + t2706*t2942 + t2782*t2987 + t2869*(t3012 + t3018) - 0.135*t147*t675)*var2[4] + (t2809 + t2371*(t2810 + t2811) + t2706*t2821 + 0.08055*t2836 + (t2842 + t2845)*t2869)*var2[5] + (t2809 + t2371*(t3057 + t3061) + t2706*t3078 + t3088 + t2869*(t3090 + t3092))*var2[6];
  p_output1[43]=(-1.*t1320*t2359*t597 + t1333*t2367*t597)*var2[0] + t2730*var2[2] + (t2371*(t3263 + t3265) + 0.08055*t3279 + t3210*t3287 + 0.135*t147*t597)*var2[3] + (0.08055*t3163 + t2371*(t3183 + t3185) + t3210*t3217 + t2987*t3230 + t2730*(t3237 + t3238) - 0.135*t203*t675)*var2[4] + (t3295 + t2371*(t3297 + t3299) + t3210*t3324 + t2730*(t3331 + t3335) + 0.08055*t3343)*var2[5] + (0.08055*t2869 + t3295 + t2371*(t3364 + t3367) + t3210*t3374 + t2730*(t3379 + t3387))*var2[6];
  p_output1[44]=t2869*var2[0] + (-1.*t1478*t2359 + t1865*t2367)*var2[1] + (t2730*(t3222 + t3228) + t3287*t3440 + t2730*t3443 + t2869*(t3516 + t3519))*var2[3] + (0.08055*t3427 + t3217*t3440 + t2942*t3443 + t2730*(t3449 + t3456) + t2869*(t3459 + t3460) - 0.135*t597)*var2[4] + (t3324*t3440 + t2821*t3443 + t3475 + t2730*(t3481 + t3482) + t2869*(t3489 + t3490))*var2[5] + (t3374*t3440 + t3078*t3443 + t3475 + t2730*(t3545 + t3546) + t2869*(t3562 + t3569))*var2[6];
  p_output1[45]=t3287*var2[3] + t3217*var2[4] + t3324*var2[5] + t3374*var2[6];
  p_output1[46]=t2730*var2[3] + t2942*var2[4] + t2821*var2[5] + t3078*var2[6];
  p_output1[47]=t2987*var2[4] + t2805*var2[5] + t2805*var2[6];
  p_output1[48]=t3660 + t3693 + (0.08055*t3287 - 1.*t3769*t3966 - 1.*t3803*(t2528 + t2597 + t4063 + t4080) - 0.01004*t4090)*var2[3] + (0.08055*t3217 - 1.*t3758*t3870 - 1.*t3658*(t3012 + t3018 + t3874 + t3876) - 1.*t3803*(t2913 + t2916 + t3886 + t3895) - 1.*t3769*t3905 - 0.01004*t3941)*var2[4] + (0.08055*t3324 - 0.01004*t2836*t3652 + t3759 - 1.*t3343*t3626*t3769 - 1.*t3658*(t2842 + t2845 + t3776) - 1.*(t2810 + t2811 + t3784)*t3803)*var2[5] + (0.08055*t3374 - 0.01004*t2730*t3652 + t3759 - 1.*t2869*t3626*t3769 - 1.*t3658*(t3090 + t3092 + t3776) - 1.*t3803*(t3057 + t3061 + t3842))*var2[6] + (-0.01004*t3966 - 1.*t3658*(t3980 + t3993) - 1.*t3803*(t4010 + t4011) - 1.*t3758*t4032 - 1.*t3769*t4041)*var2[7];
  p_output1[49]=t4126 + t4134 + (t3088 - 1.*t4185*t4435 - 1.*t3803*(t3263 + t3265 + t3755 + t4451) - 0.01004*t4467)*var2[3] + (0.08055*t2942 - 1.*t3870*t4160 - 1.*t3966*(t3237 + t3238 + t4287 + t4290) - 1.*t3803*(t3183 + t3185 + t4307 + t4314) - 1.*t4185*t4330 - 0.01004*t4341)*var2[4] + (0.08055*t2821 - 0.01004*t3343*t3652 + t4168 - 1.*t2836*t3626*t4185 - 1.*t3966*(t3331 + t3335 + t4193) - 1.*t3803*(t3297 + t3299 + t4204))*var2[5] + (0.08055*t3078 - 0.01004*t2869*t3652 + t4168 - 1.*t2730*t3626*t4185 - 1.*t3966*(t3379 + t3387 + t4193) - 1.*t3803*(t3364 + t3367 + t4245))*var2[6] + (-0.01004*t3658 - 1.*t4032*t4160 - 1.*t3966*(t4356 + t4359) - 1.*t3803*(t4377 + t4379) - 1.*t4185*t4419)*var2[7];
  p_output1[50]=t4476 + t4498 + (-1.*t3966*(t3222 + t3228 + t4148 + t4154) - 1.*t3966*t4501 - 1.*t4435*t4518 - 1.*t3658*(t3516 + t3519 + t4510 + t4651))*var2[3] + (0.08055*t2987 - 1.*t3905*t4501 - 1.*t4330*t4518 - 1.*t3966*(t3449 + t3456 + t4675 + t4679) - 1.*t3658*(t3459 + t3460 + t4692 + t4695) - 0.01004*t4730)*var2[4] + (t4499 - 1.*t3343*t3626*t4501 - 1.*t2836*t3626*t4518 + t4529 - 1.*t3966*(t3481 + t3482 + t4531) - 1.*t3658*(t3489 + t3490 + t4535))*var2[5] + (t4499 - 1.*t2869*t3626*t4501 - 1.*t2730*t3626*t4518 + t4529 - 1.*t3966*(t3545 + t3546 + t4582) - 1.*t3658*(t3562 + t3569 + t4603))*var2[6] + (-0.01004*t3803 - 1.*t4041*t4501 - 1.*t4419*t4518 - 1.*t3966*(t4747 + t4758) - 1.*t3658*(t4764 + t4780))*var2[7];
  p_output1[51]=t4857;
  p_output1[52]=t4949;
  p_output1[53]=t4991;
  p_output1[54]=t3660 + t3693 + (-1.*t3966*t5054 - 1.*t3803*(t2528 + t2597 + t4063 + t4080 + t5307 + t5314) - 0.13004*t5324 + 0.08055*t5356)*var2[3] + (-1.*t3905*t5054 - 1.*t3870*t5065 - 1.*t3803*(t2913 + t2916 + t3886 + t3895 + t5244 + t5246) - 1.*t3658*(t3012 + t3018 + t3874 + t3876 + t5261 + t5269) - 0.13004*t5277 + 0.08055*t5295)*var2[4] + (-1.*t3343*t3626*t5054 - 1.*t3658*(t2842 + t2845 + t3776 + t5081 + t5082) - 1.*t3803*(t2810 + t2811 + t3784 + t5095 + t5096) + t5116 - 0.13004*t5123 + 0.08055*t5135)*var2[5] + (-1.*t2869*t3626*t5054 - 1.*t3658*(t3090 + t3092 + t3776 + t5081 + t5082) + t5116 - 1.*t3803*(t3057 + t3061 + t3842 + t5179 + t5182) - 0.13004*t5208 + 0.08055*t5224)*var2[6] + (-0.13004*t3966*t4994 - 0.08055*t3966*t5003 - 1.*t3803*(t4010 + t4011 + t5020) - 1.*t3658*(t3980 + t3993 + t5030) - 1.*t4041*t5054 - 1.*t4032*t5065)*var2[7] + (-1.*t3658*(t5379 + t5389) - 1.*t3803*(t5427 + t5428) + 0.08055*t5457 - 0.13004*t5475)*var2[8];
  p_output1[55]=t4126 + t4134 + (0.08055*t5475 - 1.*t4435*t5546 - 1.*t3803*(t3263 + t3265 + t3755 + t4451 + t5810 + t5811) - 0.13004*t5831)*var2[3] + (-1.*t4330*t5546 - 1.*t3870*t5556 - 1.*t3803*(t3183 + t3185 + t4307 + t4314 + t5677 + t5678) - 1.*t3966*(t3237 + t3238 + t4287 + t4290 + t5684 + t5685) - 0.13004*t5699 + 0.08055*t5712)*var2[4] + (-1.*t2836*t3626*t5546 - 1.*t3966*(t3331 + t3335 + t4193 + t5582 + t5584) - 1.*t3803*(t3297 + t3299 + t4204 + t5599 + t5601) + t5609 - 0.13004*t5616 + 0.08055*t5623)*var2[5] + (-1.*t2730*t3626*t5546 - 1.*t3966*(t3379 + t3387 + t4193 + t5582 + t5584) + t5609 - 1.*t3803*(t3364 + t3367 + t4245 + t5645 + t5651) - 0.13004*t5657 + 0.08055*t5668)*var2[6] + (-0.13004*t3658*t4994 - 0.08055*t3658*t5003 - 1.*t3803*(t4377 + t4379 + t5501) - 1.*t3966*(t4356 + t4359 + t5513) - 1.*t4419*t5546 - 1.*t4032*t5556)*var2[7] + (-1.*t3966*(t5732 + t5741) - 1.*t3803*(t5754 + t5755) + 0.08055*t5783 - 0.13004*t5792)*var2[8];
  p_output1[56]=t4476 + t4498 + (-1.*t3966*(t3222 + t3228 + t4148 + t4154 + t5548 + t5553) - 1.*t3966*t5849 - 1.*t3658*(t3516 + t3519 + t4510 + t4651 + t5854 + t5858) - 1.*t4435*t5872)*var2[3] + (-1.*t3905*t5849 - 1.*t4330*t5872 - 1.*t3658*(t3459 + t3460 + t4692 + t4695 + t6086 + t6087) - 1.*t3966*(t3449 + t3456 + t4675 + t4679 + t6092 + t6097) - 0.13004*t6124 + 0.08055*t6132)*var2[4] + (-1.*t3343*t3626*t5849 - 1.*t2836*t3626*t5872 - 1.*t3966*(t3481 + t3482 + t4531 + t5916 + t5917) - 1.*t3658*(t3489 + t3490 + t4535 + t5936 + t5937) + t5967 + t5981)*var2[5] + (-1.*t2869*t3626*t5849 - 1.*t2730*t3626*t5872 + t5967 + t5981 - 1.*t3966*(t3545 + t3546 + t4582 + t5985 + t5986) - 1.*t3658*(t3562 + t3569 + t4603 + t6007 + t6008))*var2[6] + (-0.13004*t3803*t4994 - 0.08055*t3803*t5003 - 1.*t4041*t5849 - 1.*t4419*t5872 - 1.*t3658*(t4764 + t4780 + t5889) - 1.*t3966*(t4747 + t4758 + t5892))*var2[7] + (-1.*t3658*(t6026 + t6028) - 1.*t3966*(t6048 + t6049) + 0.08055*t6065 - 0.13004*t6077)*var2[8];
  p_output1[57]=t4857;
  p_output1[58]=t4949;
  p_output1[59]=t4991;
  p_output1[60]=t3660 + t3693 + (0.03315*(t5356*t6147 - 1.*t5324*t6160) - 0.19074*(t5324*t6147 + t5356*t6160) - 1.*t3966*t6232 - 1.*t3803*(t2528 + t2597 + t4063 + t4080 + t5307 + t5314 + t6465 + t6466))*var2[3] + (0.03315*(t5295*t6147 - 1.*t5277*t6160) - 0.19074*(t5277*t6147 + t5295*t6160) - 1.*t3803*(t2913 + t2916 + t3886 + t3895 + t5244 + t5246 + t5699*t6165 + t5712*t6181) - 1.*t3658*(t3012 + t3018 + t3874 + t3876 + t5261 + t5269 - 1.*t6124*t6165 - 1.*t6132*t6181) - 1.*t3905*t6232 - 1.*t3870*t6255)*var2[4] + (0.03315*(t5135*t6147 - 1.*t5123*t6160) - 0.19074*(t5123*t6147 + t5135*t6160) - 1.*t3803*(t2810 + t2811 + t3784 + t5095 + t5096 + t5616*t6165 + t5623*t6181) - 1.*t3658*(t2842 + t2845 + t3776 + t5081 + t5082 + t6169 + t6183) - 1.*t3343*t3626*t6232 + t6259)*var2[5] + (0.03315*(t5224*t6147 - 1.*t5208*t6160) - 0.19074*(t5208*t6147 + t5224*t6160) - 1.*t3803*(t3057 + t3061 + t3842 + t5179 + t5182 + t5657*t6165 + t5668*t6181) - 1.*t3658*(t3090 + t3092 + t3776 + t5081 + t5082 + t6169 + t6183) - 1.*t2869*t3626*t6232 + t6259)*var2[6] + (0.03315*(-1.*t3966*t5003*t6147 - 1.*t3966*t4994*t6160) - 0.19074*(t3966*t4994*t6147 - 1.*t3966*t5003*t6160) - 1.*t3803*(t4010 + t4011 + t5020 + t3658*t4994*t6165 - 1.*t3658*t5003*t6181) - 1.*t3658*(t3980 + t3993 + t5030 - 1.*t3803*t4994*t6165 + t3803*t5003*t6181) - 1.*t4041*t6232 - 1.*t4032*t6255)*var2[7] + (-1.*t3803*(t5427 + t5428 + t5792*t6165 + t5783*t6181) - 1.*t3658*(t5379 + t5389 - 1.*t6077*t6165 - 1.*t6065*t6181) - 0.19074*(t5457*t6160 + t6496) + 0.03315*(t5457*t6147 + t6502))*var2[8] + (0.03315*(-1.*t5831*t6147 + t6502) - 1.*t3803*(t6251*t6521 + t5792*t6529) - 1.*t3658*(-1.*t6224*t6521 - 1.*t6077*t6529) - 0.19074*t6560)*var2[9];
  p_output1[61]=t4126 + t4134 + (-0.19074*(t5831*t6147 + t5475*t6160) - 1.*t3803*(t3263 + t3265 + t3755 + t4451 + t5810 + t5811 - 1.*t5324*t6165 - 1.*t5356*t6181) + 0.03315*t6560 - 1.*t4435*t6694)*var2[3] + (0.03315*(t5712*t6147 - 1.*t5699*t6160) - 0.19074*(t5699*t6147 + t5712*t6160) - 1.*t3803*(t3183 + t3185 + t4307 + t4314 + t5677 + t5678 - 1.*t5277*t6165 - 1.*t5295*t6181) - 1.*t3966*(t3237 + t3238 + t4287 + t4290 + t5684 + t5685 + t6124*t6165 + t6132*t6181) - 1.*t4330*t6694 - 1.*t3870*t6714)*var2[4] + (0.03315*(t5623*t6147 - 1.*t5616*t6160) - 0.19074*(t5616*t6147 + t5623*t6160) - 1.*t3803*(t3297 + t3299 + t4204 + t5599 + t5601 - 1.*t5123*t6165 - 1.*t5135*t6181) - 1.*t3966*(t3331 + t3335 + t4193 + t5582 + t5584 + t6654 + t6655) - 1.*t2836*t3626*t6694 + t6715)*var2[5] + (0.03315*(t5668*t6147 - 1.*t5657*t6160) - 0.19074*(t5657*t6147 + t5668*t6160) - 1.*t3803*(t3364 + t3367 + t4245 + t5645 + t5651 - 1.*t5208*t6165 - 1.*t5224*t6181) - 1.*t3966*(t3379 + t3387 + t4193 + t5582 + t5584 + t6654 + t6655) - 1.*t2730*t3626*t6694 + t6715)*var2[6] + (0.03315*(-1.*t3658*t5003*t6147 - 1.*t3658*t4994*t6160) - 0.19074*(t3658*t4994*t6147 - 1.*t3658*t5003*t6160) - 1.*t3966*(t4356 + t4359 + t5513 + t3803*t4994*t6165 - 1.*t3803*t5003*t6181) - 1.*t3803*(t4377 + t4379 + t5501 - 1.*t3966*t4994*t6165 + t3966*t5003*t6181) - 1.*t4419*t6694 - 1.*t4032*t6714)*var2[7] + (-1.*t3803*(t5754 + t5755 - 1.*t5475*t6165 - 1.*t5457*t6181) - 1.*t3966*(t5732 + t5741 + t6077*t6165 + t6065*t6181) - 0.19074*(t5783*t6160 + t6601) + 0.03315*(t5783*t6147 + t6610))*var2[8] + (-1.*t3803*(-1.*t5831*t6521 - 1.*t5475*t6529) - 1.*t3966*(t6224*t6521 + t6077*t6529) - 0.19074*(-1.*t6160*t6251 + t6601) + 0.03315*(-1.*t6147*t6251 + t6610))*var2[9];
  p_output1[62]=t4476 + t4498 + (-1.*t3658*(t3516 + t3519 + t4510 + t4651 + t5854 + t5858 + t5324*t6165 + t5356*t6181) - 1.*t3966*(t3222 + t3228 + t4148 + t4154 + t5548 + t5553 + t6710 + t6712) - 1.*t4435*t7045 - 1.*t3966*t7049)*var2[3] + (0.03315*(t6132*t6147 - 1.*t6124*t6160) - 0.19074*(t6124*t6147 + t6132*t6160) - 1.*t3658*(t3459 + t3460 + t4692 + t4695 + t6086 + t6087 + t5277*t6165 + t5295*t6181) - 1.*t3966*(t3449 + t3456 + t4675 + t4679 + t6092 + t6097 - 1.*t5699*t6165 - 1.*t5712*t6181) - 1.*t4330*t7045 - 1.*t3905*t7049)*var2[4] + (-1.*t3658*(t3489 + t3490 + t4535 + t5936 + t5937 + t5123*t6165 + t5135*t6181) - 1.*t3966*(t3481 + t3482 + t4531 + t5916 + t5917 - 1.*t5616*t6165 - 1.*t5623*t6181) + t6998 + t7009 - 1.*t2836*t3626*t7045 - 1.*t3343*t3626*t7049)*var2[5] + (-1.*t3658*(t3562 + t3569 + t4603 + t6007 + t6008 + t5208*t6165 + t5224*t6181) - 1.*t3966*(t3545 + t3546 + t4582 + t5985 + t5986 - 1.*t5657*t6165 - 1.*t5668*t6181) + t6998 + t7009 - 1.*t2730*t3626*t7045 - 1.*t2869*t3626*t7049)*var2[6] + (0.03315*(-1.*t3803*t5003*t6147 - 1.*t3803*t4994*t6160) - 0.19074*(t3803*t4994*t6147 - 1.*t3803*t5003*t6160) - 1.*t3966*(t4747 + t4758 + t5892 - 1.*t3658*t4994*t6165 + t3658*t5003*t6181) - 1.*t3658*(t4764 + t4780 + t5889 + t3966*t4994*t6165 - 1.*t3966*t5003*t6181) - 1.*t4419*t7045 - 1.*t4041*t7049)*var2[7] + (-1.*t3658*(t6026 + t6028 + t5475*t6165 + t5457*t6181) - 1.*t3966*(t6048 + t6049 - 1.*t5792*t6165 - 1.*t5783*t6181) - 0.19074*(t6065*t6160 + t6911) + 0.03315*(t6065*t6147 + t6918))*var2[8] + (-1.*t3658*(t5831*t6521 + t5475*t6529) - 1.*t3966*(-1.*t6251*t6521 - 1.*t5792*t6529) - 0.19074*(-1.*t6160*t6224 + t6911) + 0.03315*(-1.*t6147*t6224 + t6918))*var2[9];
  p_output1[63]=t4857;
  p_output1[64]=t4949;
  p_output1[65]=t4991;
  p_output1[66]=0;
  p_output1[67]=0;
  p_output1[68]=0;
  p_output1[69]=0;
  p_output1[70]=0;
  p_output1[71]=0;
  p_output1[72]=0;
  p_output1[73]=0;
  p_output1[74]=0;
  p_output1[75]=0;
  p_output1[76]=0;
  p_output1[77]=0;
  p_output1[78]=0;
  p_output1[79]=0;
  p_output1[80]=0;
  p_output1[81]=0;
  p_output1[82]=0;
  p_output1[83]=0;
  p_output1[84]=0;
  p_output1[85]=0;
  p_output1[86]=0;
  p_output1[87]=0;
  p_output1[88]=0;
  p_output1[89]=0;
  p_output1[90]=0;
  p_output1[91]=0;
  p_output1[92]=0;
  p_output1[93]=0;
  p_output1[94]=0;
  p_output1[95]=0;
  p_output1[96]=0;
  p_output1[97]=0;
  p_output1[98]=0;
  p_output1[99]=0;
  p_output1[100]=0;
  p_output1[101]=0;
  p_output1[102]=0;
  p_output1[103]=0;
  p_output1[104]=0;
  p_output1[105]=0;
  p_output1[106]=0;
  p_output1[107]=0;
  p_output1[108]=0;
  p_output1[109]=0;
  p_output1[110]=0;
  p_output1[111]=0;
  p_output1[112]=0;
  p_output1[113]=0;
  p_output1[114]=0;
  p_output1[115]=0;
  p_output1[116]=0;
  p_output1[117]=0;
  p_output1[118]=0;
  p_output1[119]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 20 && ncols == 1) && 
      !(mrows == 1 && ncols == 20))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 20 && ncols == 1) && 
      !(mrows == 1 && ncols == 20))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 6, (mwSize) 20, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "dJs_LeftShin_mex.hh"

namespace SymExpression
{

void dJs_LeftShin_mex_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
